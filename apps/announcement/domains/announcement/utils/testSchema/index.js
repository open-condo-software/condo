/**
 * Generated by `createschema announcement.AnnouncementTemplate 'name:Text;image?:File;title:Text;body?:Text;fields:Json'`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */
const { faker } = require('@faker-js/faker')

const { generateServerUtils, execGqlWithoutAccess } = require('@open-condo/codegen/generate.server.utils')

const { generateGQLTestUtils, throwIfError } = require('@open-condo/codegen/generate.test.utils')

const { AnnouncementTemplate: AnnouncementTemplateGQL } = require('@announcement/domains/announcement/gql')
/* AUTOGENERATE MARKER <IMPORT> */

const AnnouncementTemplate = generateGQLTestUtils(AnnouncementTemplateGQL)
/* AUTOGENERATE MARKER <CONST> */

async function createTestAnnouncementTemplate (client, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    // TODO(codegen): write createTestAnnouncementTemplate logic for generate fields

    const attrs = {
        dv: 1,
        sender,
        ...extraAttrs,
    }
    const obj = await AnnouncementTemplate.create(client, attrs)
    return [obj, attrs]
}

async function updateTestAnnouncementTemplate (client, id, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    if (!id) throw new Error('no id')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    // TODO(codegen): check the updateTestAnnouncementTemplate logic for generate fields

    const attrs = {
        dv: 1,
        sender,
        ...extraAttrs,
    }
    const obj = await AnnouncementTemplate.update(client, id, attrs)
    return [obj, attrs]
}

/* AUTOGENERATE MARKER <FACTORY> */

module.exports = {
    AnnouncementTemplate, createTestAnnouncementTemplate, updateTestAnnouncementTemplate,
/* AUTOGENERATE MARKER <EXPORTS> */
}
