query allApps($creator: UserWhereInput!, $first: Int!) {
    b2c: allB2CApps(sortBy: createdAt_DESC, where: { createdBy: $creator }, first: $first) {
        id
        name
        createdAt
        logo {
            publicUrl
        }
    }
}

query getB2CApp($id: ID!) {
    app: B2CApp(where: { id: $id }) {
        id
        name
        developer
        logo {
            publicUrl
        }
        developmentExportId
        productionExportId
    }
}

query allB2CAppBuilds($where: B2CAppBuildWhereInput!, $first: Int!, $skip: Int!) {
    builds: allB2CAppBuilds(where: $where, first: $first, skip: $skip, sortBy: createdAt_DESC) {
        id
        version
        createdAt
    }
    meta: _allB2CAppBuildsMeta(where: $where) {
        count
    }
}

query allB2CAppPublishRequests($appId: ID!) {
    requests: allB2CAppPublishRequests(where: { app: { id: $appId } }, first: 1) {
        isAppTested
        isInfoApproved
        isContractSigned
        status
    }
}

mutation createB2CApp($data: B2CAppCreateInput!) {
    app: createB2CApp(data: $data) {
        id
        name
    }
}

mutation updateB2CApp($id: ID!, $data: B2CAppUpdateInput!) {
    app: updateB2CApp(id: $id, data: $data) {
        id
    }
}

mutation createB2CAppBuild($data: B2CAppBuildCreateInput!) {
    build: createB2CAppBuild(data: $data) {
        id
        version
    }
}

mutation publishB2CApp($data: PublishB2CAppInput!) {
    publishB2CApp(data: $data) {
        success
    }
}

mutation createB2CAppPublishRequest($data: B2CAppPublishRequestCreateInput!) {
    request: createB2CAppPublishRequest(data: $data) {
        id
    }
}

query allB2CAppProperties($data: AllB2CAppPropertiesInput!) {
    properties: allB2CAppProperties(data: $data) {
        objs { id address }
        meta { count }
    }
}

mutation createB2CAppProperty($data: CreateB2CAppPropertyInput!) {
    property: createB2CAppProperty(data: $data) {
        id
    }
}

mutation deleteB2CAppProperty($data: DeleteB2CAppPropertyInput!) {
    property: deleteB2CAppProperty(data: $data) {
        id
        address
    }
}

query allB2CAppAccessRights($appId: ID!, $environment: AppEnvironment!) {
    rights: allB2CAppAccessRights(where: { app: { id: $appId }, environment: $environment }, first: 1) {
        condoUserEmail
    }
}
