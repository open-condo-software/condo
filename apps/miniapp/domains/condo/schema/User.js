/**
 * Generated by `createschema user.User name:Text; v:Integer; isAdmin?:Checkbox;`
 */

const { Text, Integer, Checkbox } = require('@keystonejs/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const access = require('@miniapp/domains/condo/access/User')

const User = new GQLListSchema('User', {
    schemaDoc: 'condo.User (exported from condo API)',
    fields: {
        v: {
            schemaDoc: 'condo.User.v',
            type: Integer,
            isRequired: true,
        },
        name: {
            schemaDoc: 'condo.User.name',
            type: Text,
        },
        type: {
            schemaDoc: 'condo.User.type',
            type: Text,
            isRequired: true,
        },
        isAdmin: {
            schemaDoc: 'condo.User.isAdmin',
            type: Checkbox,
            defaultValue: false,
        },
        isSupport: {
            schemaDoc: 'condo.User.isSupport',
            type: Checkbox,
            defaultValue: false,
        },
    },
    plugins: [uuided(), tracked(), softDeleted()],
    access: {
        read: access.canReadUsers,
        create: access.canManageUsers,
        update: access.canManageUsers,
        delete: false,
        auth: true,
    },
})

module.exports = {
    User,
}
