// This file is autogenerated by @graphql-codegen/cli
// Do not edit / add anything manually, since it will be overridden by codegen

import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
  /** The `Upload` scalar type represents a file upload. */
  Upload: { input: any; output: any; }
};

export type AllB2CAppPropertiesInput = {
  app: B2CAppWhereUniqueInput;
  environment: AppEnvironment;
  first: Scalars['Int']['input'];
  skip: Scalars['Int']['input'];
};

export enum AppEnvironment {
  Development = 'development',
  Production = 'production'
}

export enum AppType {
  B2B = 'B2B',
  B2C = 'B2C'
}

export type AppWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AuthenticateUserWithPhoneAndPasswordInput = {
  password: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

export type B2BAppCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  detailedDescription?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developerUrl?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  logo?: InputMaybe<Scalars['Upload']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2BAppHistoryRecordCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  detailedDescription?: InputMaybe<Scalars['JSON']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developerUrl?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2BAppHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum B2BAppHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type B2BAppHistoryRecordUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  detailedDescription?: InputMaybe<Scalars['JSON']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developerUrl?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2BAppHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2BAppHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2BAppHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2BAppHistoryRecordWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  detailedDescription?: InputMaybe<Scalars['JSON']['input']>;
  detailedDescription_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  detailedDescription_not?: InputMaybe<Scalars['JSON']['input']>;
  detailedDescription_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developerUrl?: InputMaybe<Scalars['String']['input']>;
  developerUrl_contains?: InputMaybe<Scalars['String']['input']>;
  developerUrl_contains_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_ends_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developerUrl_not?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_contains?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developerUrl_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_starts_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_contains?: InputMaybe<Scalars['String']['input']>;
  developer_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_i?: InputMaybe<Scalars['String']['input']>;
  developer_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  history_action?: InputMaybe<B2BAppHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<B2BAppHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<B2BAppHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<B2BAppHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  logo?: InputMaybe<Scalars['JSON']['input']>;
  logo_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  logo_not?: InputMaybe<Scalars['JSON']['input']>;
  logo_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  shortDescription_contains?: InputMaybe<Scalars['String']['input']>;
  shortDescription_contains_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_ends_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  shortDescription_not?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_contains?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  shortDescription_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_starts_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2BAppHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2BAppHistoryRecordsCreateInput = {
  data?: InputMaybe<B2BAppHistoryRecordCreateInput>;
};

export type B2BAppHistoryRecordsUpdateInput = {
  data?: InputMaybe<B2BAppHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2BAppUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  detailedDescription?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developerUrl?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  logo?: InputMaybe<Scalars['Upload']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2BAppWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2BAppWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2BAppWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  detailedDescription?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_contains?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_contains_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_ends_with?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  detailedDescription_not?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_contains?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  detailedDescription_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_starts_with?: InputMaybe<Scalars['String']['input']>;
  detailedDescription_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developerUrl?: InputMaybe<Scalars['String']['input']>;
  developerUrl_contains?: InputMaybe<Scalars['String']['input']>;
  developerUrl_contains_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_ends_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developerUrl_not?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_contains?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developerUrl_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developerUrl_starts_with?: InputMaybe<Scalars['String']['input']>;
  developerUrl_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_contains?: InputMaybe<Scalars['String']['input']>;
  developer_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_i?: InputMaybe<Scalars['String']['input']>;
  developer_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  logo?: InputMaybe<Scalars['String']['input']>;
  logo_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  logo_not?: InputMaybe<Scalars['String']['input']>;
  logo_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  shortDescription_contains?: InputMaybe<Scalars['String']['input']>;
  shortDescription_contains_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_ends_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  shortDescription_not?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_contains?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  shortDescription_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  shortDescription_starts_with?: InputMaybe<Scalars['String']['input']>;
  shortDescription_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2BAppWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2BAppsCreateInput = {
  data?: InputMaybe<B2BAppCreateInput>;
};

export type B2BAppsUpdateInput = {
  data?: InputMaybe<B2BAppUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppAccessRightCreateInput = {
  app?: InputMaybe<B2CAppRelateToOneInput>;
  condoUserId?: InputMaybe<Scalars['ID']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  environment?: InputMaybe<AppEnvironment>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppAccessRightHistoryRecordCreateInput = {
  app?: InputMaybe<Scalars['String']['input']>;
  condoUserId?: InputMaybe<Scalars['ID']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  environment?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<B2CAppAccessRightHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum B2CAppAccessRightHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type B2CAppAccessRightHistoryRecordUpdateInput = {
  app?: InputMaybe<Scalars['String']['input']>;
  condoUserId?: InputMaybe<Scalars['ID']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  environment?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<B2CAppAccessRightHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppAccessRightHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppAccessRightHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppAccessRightHistoryRecordWhereInput>>>;
  app?: InputMaybe<Scalars['String']['input']>;
  app_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  app_not?: InputMaybe<Scalars['String']['input']>;
  app_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  condoUserId?: InputMaybe<Scalars['ID']['input']>;
  condoUserId_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  condoUserId_not?: InputMaybe<Scalars['ID']['input']>;
  condoUserId_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  environment?: InputMaybe<Scalars['String']['input']>;
  environment_contains?: InputMaybe<Scalars['String']['input']>;
  environment_contains_i?: InputMaybe<Scalars['String']['input']>;
  environment_ends_with?: InputMaybe<Scalars['String']['input']>;
  environment_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  environment_i?: InputMaybe<Scalars['String']['input']>;
  environment_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  environment_not?: InputMaybe<Scalars['String']['input']>;
  environment_not_contains?: InputMaybe<Scalars['String']['input']>;
  environment_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  environment_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  environment_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  environment_not_i?: InputMaybe<Scalars['String']['input']>;
  environment_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  environment_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  environment_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  environment_starts_with?: InputMaybe<Scalars['String']['input']>;
  environment_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<B2CAppAccessRightHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<B2CAppAccessRightHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<B2CAppAccessRightHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<B2CAppAccessRightHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2CAppAccessRightHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppAccessRightHistoryRecordsCreateInput = {
  data?: InputMaybe<B2CAppAccessRightHistoryRecordCreateInput>;
};

export type B2CAppAccessRightHistoryRecordsUpdateInput = {
  data?: InputMaybe<B2CAppAccessRightHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppAccessRightUpdateInput = {
  app?: InputMaybe<B2CAppRelateToOneInput>;
  condoUserId?: InputMaybe<Scalars['ID']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  environment?: InputMaybe<AppEnvironment>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppAccessRightWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppAccessRightWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppAccessRightWhereInput>>>;
  app?: InputMaybe<B2CAppWhereInput>;
  app_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  condoUserId?: InputMaybe<Scalars['ID']['input']>;
  condoUserId_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  condoUserId_not?: InputMaybe<Scalars['ID']['input']>;
  condoUserId_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  environment?: InputMaybe<AppEnvironment>;
  environment_in?: InputMaybe<Array<InputMaybe<AppEnvironment>>>;
  environment_not?: InputMaybe<AppEnvironment>;
  environment_not_in?: InputMaybe<Array<InputMaybe<AppEnvironment>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2CAppAccessRightWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppAccessRightsCreateInput = {
  data?: InputMaybe<B2CAppAccessRightCreateInput>;
};

export type B2CAppAccessRightsUpdateInput = {
  data?: InputMaybe<B2CAppAccessRightUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppBuildCreateInput = {
  app?: InputMaybe<B2CAppRelateToOneInput>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  data?: InputMaybe<Scalars['Upload']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type B2CAppBuildHistoryRecordCreateInput = {
  app?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  data?: InputMaybe<Scalars['JSON']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2CAppBuildHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export enum B2CAppBuildHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type B2CAppBuildHistoryRecordUpdateInput = {
  app?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  data?: InputMaybe<Scalars['JSON']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2CAppBuildHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type B2CAppBuildHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppBuildHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppBuildHistoryRecordWhereInput>>>;
  app?: InputMaybe<Scalars['String']['input']>;
  app_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  app_not?: InputMaybe<Scalars['String']['input']>;
  app_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  data?: InputMaybe<Scalars['JSON']['input']>;
  data_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  data_not?: InputMaybe<Scalars['JSON']['input']>;
  data_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  history_action?: InputMaybe<B2CAppBuildHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<B2CAppBuildHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<B2CAppBuildHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<B2CAppBuildHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  version?: InputMaybe<Scalars['String']['input']>;
  version_contains?: InputMaybe<Scalars['String']['input']>;
  version_contains_i?: InputMaybe<Scalars['String']['input']>;
  version_ends_with?: InputMaybe<Scalars['String']['input']>;
  version_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  version_i?: InputMaybe<Scalars['String']['input']>;
  version_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  version_not?: InputMaybe<Scalars['String']['input']>;
  version_not_contains?: InputMaybe<Scalars['String']['input']>;
  version_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  version_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  version_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  version_not_i?: InputMaybe<Scalars['String']['input']>;
  version_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  version_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  version_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  version_starts_with?: InputMaybe<Scalars['String']['input']>;
  version_starts_with_i?: InputMaybe<Scalars['String']['input']>;
};

export type B2CAppBuildHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppBuildHistoryRecordsCreateInput = {
  data?: InputMaybe<B2CAppBuildHistoryRecordCreateInput>;
};

export type B2CAppBuildHistoryRecordsUpdateInput = {
  data?: InputMaybe<B2CAppBuildHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppBuildUpdateInput = {
  app?: InputMaybe<B2CAppRelateToOneInput>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  data?: InputMaybe<Scalars['Upload']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type B2CAppBuildWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppBuildWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppBuildWhereInput>>>;
  app?: InputMaybe<B2CAppWhereInput>;
  app_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  data?: InputMaybe<Scalars['String']['input']>;
  data_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  data_not?: InputMaybe<Scalars['String']['input']>;
  data_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  version?: InputMaybe<Scalars['String']['input']>;
  version_contains?: InputMaybe<Scalars['String']['input']>;
  version_contains_i?: InputMaybe<Scalars['String']['input']>;
  version_ends_with?: InputMaybe<Scalars['String']['input']>;
  version_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  version_i?: InputMaybe<Scalars['String']['input']>;
  version_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  version_not?: InputMaybe<Scalars['String']['input']>;
  version_not_contains?: InputMaybe<Scalars['String']['input']>;
  version_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  version_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  version_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  version_not_i?: InputMaybe<Scalars['String']['input']>;
  version_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  version_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  version_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  version_starts_with?: InputMaybe<Scalars['String']['input']>;
  version_starts_with_i?: InputMaybe<Scalars['String']['input']>;
};

export type B2CAppBuildWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppBuildsCreateInput = {
  data?: InputMaybe<B2CAppBuildCreateInput>;
};

export type B2CAppBuildsUpdateInput = {
  data?: InputMaybe<B2CAppBuildUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  logo?: InputMaybe<Scalars['Upload']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppHistoryRecordCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2CAppHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum B2CAppHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type B2CAppHistoryRecordUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2CAppHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  logo?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppHistoryRecordWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developer_contains?: InputMaybe<Scalars['String']['input']>;
  developer_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_i?: InputMaybe<Scalars['String']['input']>;
  developer_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  history_action?: InputMaybe<B2CAppHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<B2CAppHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<B2CAppHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<B2CAppHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  logo?: InputMaybe<Scalars['JSON']['input']>;
  logo_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  logo_not?: InputMaybe<Scalars['JSON']['input']>;
  logo_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2CAppHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppHistoryRecordsCreateInput = {
  data?: InputMaybe<B2CAppHistoryRecordCreateInput>;
};

export type B2CAppHistoryRecordsUpdateInput = {
  data?: InputMaybe<B2CAppHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppPublishOptions = {
  build?: InputMaybe<B2CAppBuildWhereUniqueInput>;
  info?: InputMaybe<Scalars['Boolean']['input']>;
};

export type B2CAppPublishRequestCreateInput = {
  app?: InputMaybe<B2CAppRelateToOneInput>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  isAppTested?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  status?: InputMaybe<B2CAppPublishRequestStatusType>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppPublishRequestHistoryRecordCreateInput = {
  app?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2CAppPublishRequestHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isAppTested?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum B2CAppPublishRequestHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type B2CAppPublishRequestHistoryRecordUpdateInput = {
  app?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<B2CAppPublishRequestHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isAppTested?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppPublishRequestHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestHistoryRecordWhereInput>>>;
  app?: InputMaybe<Scalars['String']['input']>;
  app_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  app_not?: InputMaybe<Scalars['String']['input']>;
  app_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  history_action?: InputMaybe<B2CAppPublishRequestHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<B2CAppPublishRequestHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isAppTested?: InputMaybe<Scalars['Boolean']['input']>;
  isAppTested_not?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned_not?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved_not?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  status?: InputMaybe<Scalars['String']['input']>;
  status_contains?: InputMaybe<Scalars['String']['input']>;
  status_contains_i?: InputMaybe<Scalars['String']['input']>;
  status_ends_with?: InputMaybe<Scalars['String']['input']>;
  status_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  status_i?: InputMaybe<Scalars['String']['input']>;
  status_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status_not?: InputMaybe<Scalars['String']['input']>;
  status_not_contains?: InputMaybe<Scalars['String']['input']>;
  status_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  status_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  status_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  status_not_i?: InputMaybe<Scalars['String']['input']>;
  status_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  status_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  status_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  status_starts_with?: InputMaybe<Scalars['String']['input']>;
  status_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2CAppPublishRequestHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppPublishRequestHistoryRecordsCreateInput = {
  data?: InputMaybe<B2CAppPublishRequestHistoryRecordCreateInput>;
};

export type B2CAppPublishRequestHistoryRecordsUpdateInput = {
  data?: InputMaybe<B2CAppPublishRequestHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export enum B2CAppPublishRequestStatusType {
  Approved = 'approved',
  Pending = 'pending'
}

export type B2CAppPublishRequestUpdateInput = {
  app?: InputMaybe<B2CAppRelateToOneInput>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  isAppTested?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  status?: InputMaybe<B2CAppPublishRequestStatusType>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppPublishRequestWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestWhereInput>>>;
  app?: InputMaybe<B2CAppWhereInput>;
  app_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isAppTested?: InputMaybe<Scalars['Boolean']['input']>;
  isAppTested_not?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned?: InputMaybe<Scalars['Boolean']['input']>;
  isContractSigned_not?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved?: InputMaybe<Scalars['Boolean']['input']>;
  isInfoApproved_not?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  status?: InputMaybe<B2CAppPublishRequestStatusType>;
  status_in?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestStatusType>>>;
  status_not?: InputMaybe<B2CAppPublishRequestStatusType>;
  status_not_in?: InputMaybe<Array<InputMaybe<B2CAppPublishRequestStatusType>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2CAppPublishRequestWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppPublishRequestsCreateInput = {
  data?: InputMaybe<B2CAppPublishRequestCreateInput>;
};

export type B2CAppPublishRequestsUpdateInput = {
  data?: InputMaybe<B2CAppPublishRequestUpdateInput>;
  id: Scalars['ID']['input'];
};

export type B2CAppRelateToOneInput = {
  connect?: InputMaybe<B2CAppWhereUniqueInput>;
  create?: InputMaybe<B2CAppCreateInput>;
  disconnect?: InputMaybe<B2CAppWhereUniqueInput>;
  disconnectAll?: InputMaybe<Scalars['Boolean']['input']>;
};

export type B2CAppUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  logo?: InputMaybe<Scalars['Upload']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type B2CAppWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<B2CAppWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<B2CAppWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer?: InputMaybe<Scalars['String']['input']>;
  developer_contains?: InputMaybe<Scalars['String']['input']>;
  developer_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_i?: InputMaybe<Scalars['String']['input']>;
  developer_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains?: InputMaybe<Scalars['String']['input']>;
  developer_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_i?: InputMaybe<Scalars['String']['input']>;
  developer_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developer_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with?: InputMaybe<Scalars['String']['input']>;
  developer_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  developmentExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  developmentExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  logo?: InputMaybe<Scalars['String']['input']>;
  logo_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  logo_not?: InputMaybe<Scalars['String']['input']>;
  logo_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  productionExportId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with?: InputMaybe<Scalars['String']['input']>;
  productionExportId_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type B2CAppWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type B2CAppsCreateInput = {
  data?: InputMaybe<B2CAppCreateInput>;
};

export type B2CAppsUpdateInput = {
  data?: InputMaybe<B2CAppUpdateInput>;
  id: Scalars['ID']['input'];
};

export type CompleteConfirmEmailActionInput = {
  actionId: Scalars['String']['input'];
  code: Scalars['String']['input'];
  dv: Scalars['Int']['input'];
  sender: SenderFieldInput;
};

export type CompleteConfirmPhoneActionInput = {
  actionId: Scalars['String']['input'];
  code: Scalars['String']['input'];
  dv: Scalars['Int']['input'];
  sender: SenderFieldInput;
};

export type ConfirmEmailActionCreateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type ConfirmEmailActionHistoryRecordCreateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<ConfirmEmailActionHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum ConfirmEmailActionHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type ConfirmEmailActionHistoryRecordUpdateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<ConfirmEmailActionHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type ConfirmEmailActionHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ConfirmEmailActionHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ConfirmEmailActionHistoryRecordWhereInput>>>;
  attempts?: InputMaybe<Scalars['Int']['input']>;
  attempts_gt?: InputMaybe<Scalars['Int']['input']>;
  attempts_gte?: InputMaybe<Scalars['Int']['input']>;
  attempts_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  attempts_lt?: InputMaybe<Scalars['Int']['input']>;
  attempts_lte?: InputMaybe<Scalars['Int']['input']>;
  attempts_not?: InputMaybe<Scalars['Int']['input']>;
  attempts_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  code?: InputMaybe<Scalars['String']['input']>;
  code_contains?: InputMaybe<Scalars['String']['input']>;
  code_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_i?: InputMaybe<Scalars['String']['input']>;
  code_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not?: InputMaybe<Scalars['String']['input']>;
  code_not_contains?: InputMaybe<Scalars['String']['input']>;
  code_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_not_i?: InputMaybe<Scalars['String']['input']>;
  code_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  code_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  email?: InputMaybe<Scalars['String']['input']>;
  email_contains?: InputMaybe<Scalars['String']['input']>;
  email_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_i?: InputMaybe<Scalars['String']['input']>;
  email_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not?: InputMaybe<Scalars['String']['input']>;
  email_not_contains?: InputMaybe<Scalars['String']['input']>;
  email_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_not_i?: InputMaybe<Scalars['String']['input']>;
  email_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  email_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  expiresAt_lt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_lte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_action?: InputMaybe<ConfirmEmailActionHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<ConfirmEmailActionHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<ConfirmEmailActionHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<ConfirmEmailActionHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified_not?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type ConfirmEmailActionHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ConfirmEmailActionHistoryRecordsCreateInput = {
  data?: InputMaybe<ConfirmEmailActionHistoryRecordCreateInput>;
};

export type ConfirmEmailActionHistoryRecordsUpdateInput = {
  data?: InputMaybe<ConfirmEmailActionHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type ConfirmEmailActionUpdateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type ConfirmEmailActionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ConfirmEmailActionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ConfirmEmailActionWhereInput>>>;
  attempts?: InputMaybe<Scalars['Int']['input']>;
  attempts_gt?: InputMaybe<Scalars['Int']['input']>;
  attempts_gte?: InputMaybe<Scalars['Int']['input']>;
  attempts_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  attempts_lt?: InputMaybe<Scalars['Int']['input']>;
  attempts_lte?: InputMaybe<Scalars['Int']['input']>;
  attempts_not?: InputMaybe<Scalars['Int']['input']>;
  attempts_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  code?: InputMaybe<Scalars['String']['input']>;
  code_contains?: InputMaybe<Scalars['String']['input']>;
  code_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_i?: InputMaybe<Scalars['String']['input']>;
  code_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not?: InputMaybe<Scalars['String']['input']>;
  code_not_contains?: InputMaybe<Scalars['String']['input']>;
  code_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_not_i?: InputMaybe<Scalars['String']['input']>;
  code_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  code_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  email?: InputMaybe<Scalars['String']['input']>;
  email_contains?: InputMaybe<Scalars['String']['input']>;
  email_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_i?: InputMaybe<Scalars['String']['input']>;
  email_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not?: InputMaybe<Scalars['String']['input']>;
  email_not_contains?: InputMaybe<Scalars['String']['input']>;
  email_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_not_i?: InputMaybe<Scalars['String']['input']>;
  email_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  email_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  expiresAt_lt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_lte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified_not?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type ConfirmEmailActionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ConfirmEmailActionsCreateInput = {
  data?: InputMaybe<ConfirmEmailActionCreateInput>;
};

export type ConfirmEmailActionsUpdateInput = {
  data?: InputMaybe<ConfirmEmailActionUpdateInput>;
  id: Scalars['ID']['input'];
};

export type ConfirmPhoneActionCreateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type ConfirmPhoneActionHistoryRecordCreateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<ConfirmPhoneActionHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum ConfirmPhoneActionHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type ConfirmPhoneActionHistoryRecordUpdateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<ConfirmPhoneActionHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type ConfirmPhoneActionHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ConfirmPhoneActionHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ConfirmPhoneActionHistoryRecordWhereInput>>>;
  attempts?: InputMaybe<Scalars['Int']['input']>;
  attempts_gt?: InputMaybe<Scalars['Int']['input']>;
  attempts_gte?: InputMaybe<Scalars['Int']['input']>;
  attempts_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  attempts_lt?: InputMaybe<Scalars['Int']['input']>;
  attempts_lte?: InputMaybe<Scalars['Int']['input']>;
  attempts_not?: InputMaybe<Scalars['Int']['input']>;
  attempts_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  code?: InputMaybe<Scalars['String']['input']>;
  code_contains?: InputMaybe<Scalars['String']['input']>;
  code_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_i?: InputMaybe<Scalars['String']['input']>;
  code_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not?: InputMaybe<Scalars['String']['input']>;
  code_not_contains?: InputMaybe<Scalars['String']['input']>;
  code_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_not_i?: InputMaybe<Scalars['String']['input']>;
  code_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  code_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  expiresAt_lt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_lte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_action?: InputMaybe<ConfirmPhoneActionHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<ConfirmPhoneActionHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<ConfirmPhoneActionHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<ConfirmPhoneActionHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified_not?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  phone?: InputMaybe<Scalars['String']['input']>;
  phone_contains?: InputMaybe<Scalars['String']['input']>;
  phone_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_i?: InputMaybe<Scalars['String']['input']>;
  phone_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type ConfirmPhoneActionHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ConfirmPhoneActionHistoryRecordsCreateInput = {
  data?: InputMaybe<ConfirmPhoneActionHistoryRecordCreateInput>;
};

export type ConfirmPhoneActionHistoryRecordsUpdateInput = {
  data?: InputMaybe<ConfirmPhoneActionHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type ConfirmPhoneActionUpdateInput = {
  attempts?: InputMaybe<Scalars['Int']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type ConfirmPhoneActionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ConfirmPhoneActionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ConfirmPhoneActionWhereInput>>>;
  attempts?: InputMaybe<Scalars['Int']['input']>;
  attempts_gt?: InputMaybe<Scalars['Int']['input']>;
  attempts_gte?: InputMaybe<Scalars['Int']['input']>;
  attempts_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  attempts_lt?: InputMaybe<Scalars['Int']['input']>;
  attempts_lte?: InputMaybe<Scalars['Int']['input']>;
  attempts_not?: InputMaybe<Scalars['Int']['input']>;
  attempts_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  code?: InputMaybe<Scalars['String']['input']>;
  code_contains?: InputMaybe<Scalars['String']['input']>;
  code_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_i?: InputMaybe<Scalars['String']['input']>;
  code_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not?: InputMaybe<Scalars['String']['input']>;
  code_not_contains?: InputMaybe<Scalars['String']['input']>;
  code_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  code_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  code_not_i?: InputMaybe<Scalars['String']['input']>;
  code_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  code_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  code_starts_with?: InputMaybe<Scalars['String']['input']>;
  code_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  expiresAt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_gte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  expiresAt_lt?: InputMaybe<Scalars['String']['input']>;
  expiresAt_lte?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not?: InputMaybe<Scalars['String']['input']>;
  expiresAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified_not?: InputMaybe<Scalars['Boolean']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone?: InputMaybe<Scalars['String']['input']>;
  phone_contains?: InputMaybe<Scalars['String']['input']>;
  phone_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_i?: InputMaybe<Scalars['String']['input']>;
  phone_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type ConfirmPhoneActionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ConfirmPhoneActionsCreateInput = {
  data?: InputMaybe<ConfirmPhoneActionCreateInput>;
};

export type ConfirmPhoneActionsUpdateInput = {
  data?: InputMaybe<ConfirmPhoneActionUpdateInput>;
  id: Scalars['ID']['input'];
};

export type CreateB2CAppPropertyInput = {
  address: Scalars['String']['input'];
  app: B2CAppWhereUniqueInput;
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  sender: SenderFieldInput;
};

export type CreateOidcClientInput = {
  app: AppWhereUniqueInput;
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  redirectUri: Scalars['String']['input'];
  sender: SenderFieldInput;
};

export type DeleteB2CAppPropertyInput = {
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  id: Scalars['ID']['input'];
  sender: SenderFieldInput;
};

export type GenerateOidcClientSecretInput = {
  app: AppWhereUniqueInput;
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  sender: SenderFieldInput;
};

export type GetB2CAppInfoInput = {
  app: B2CAppWhereUniqueInput;
  environment: AppEnvironment;
};

export type GetOidcClientInput = {
  app: AppWhereUniqueInput;
  environment: AppEnvironment;
};

export type ImportB2CAppFromInput = {
  developmentApp?: InputMaybe<B2CAppWhereUniqueInput>;
  productionApp?: InputMaybe<B2CAppWhereUniqueInput>;
};

export type ImportB2CAppInput = {
  dv: Scalars['Int']['input'];
  from: ImportB2CAppFromInput;
  options: ImportB2CAppOptionsInput;
  sender: SenderFieldInput;
  to: ImportB2CAppToInput;
};

export type ImportB2CAppOptionsInput = {
  accessRight: Scalars['Boolean']['input'];
  builds: Scalars['Boolean']['input'];
  info: Scalars['Boolean']['input'];
  publish: Scalars['Boolean']['input'];
};

export type ImportB2CAppToInput = {
  app: B2CAppWhereUniqueInput;
};

export type PublishB2CAppInput = {
  app: B2CAppWhereUniqueInput;
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  options: B2CAppPublishOptions;
  sender: SenderFieldInput;
};

export type RegisterAppUserServiceInput = {
  app: AppWhereUniqueInput;
  confirmEmailAction: ConfirmEmailActionWhereUniqueInput;
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  sender: SenderFieldInput;
};

export type RegisterNewUserInput = {
  confirmPhoneAction: ConfirmPhoneActionWhereUniqueInput;
  dv: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  password: Scalars['String']['input'];
  sender: SenderFieldInput;
};

export type SenderFieldInput = {
  dv: Scalars['Int']['input'];
  fingerprint: Scalars['String']['input'];
};

export enum SortB2BAppHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DeveloperUrlAsc = 'developerUrl_ASC',
  DeveloperUrlDesc = 'developerUrl_DESC',
  DeveloperAsc = 'developer_ASC',
  DeveloperDesc = 'developer_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  ShortDescriptionAsc = 'shortDescription_ASC',
  ShortDescriptionDesc = 'shortDescription_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2BAppsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DetailedDescriptionAsc = 'detailedDescription_ASC',
  DetailedDescriptionDesc = 'detailedDescription_DESC',
  DeveloperUrlAsc = 'developerUrl_ASC',
  DeveloperUrlDesc = 'developerUrl_DESC',
  DeveloperAsc = 'developer_ASC',
  DeveloperDesc = 'developer_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  ShortDescriptionAsc = 'shortDescription_ASC',
  ShortDescriptionDesc = 'shortDescription_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2CAppAccessRightHistoryRecordsBy {
  CondoUserIdAsc = 'condoUserId_ASC',
  CondoUserIdDesc = 'condoUserId_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  EnvironmentAsc = 'environment_ASC',
  EnvironmentDesc = 'environment_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2CAppAccessRightsBy {
  AppAsc = 'app_ASC',
  AppDesc = 'app_DESC',
  CondoUserIdAsc = 'condoUserId_ASC',
  CondoUserIdDesc = 'condoUserId_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  EnvironmentAsc = 'environment_ASC',
  EnvironmentDesc = 'environment_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2CAppBuildHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC',
  VersionAsc = 'version_ASC',
  VersionDesc = 'version_DESC'
}

export enum SortB2CAppBuildsBy {
  AppAsc = 'app_ASC',
  AppDesc = 'app_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC',
  VersionAsc = 'version_ASC',
  VersionDesc = 'version_DESC'
}

export enum SortB2CAppHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DeveloperAsc = 'developer_ASC',
  DeveloperDesc = 'developer_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2CAppPublishRequestHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsAppTestedAsc = 'isAppTested_ASC',
  IsAppTestedDesc = 'isAppTested_DESC',
  IsContractSignedAsc = 'isContractSigned_ASC',
  IsContractSignedDesc = 'isContractSigned_DESC',
  IsInfoApprovedAsc = 'isInfoApproved_ASC',
  IsInfoApprovedDesc = 'isInfoApproved_DESC',
  StatusAsc = 'status_ASC',
  StatusDesc = 'status_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2CAppPublishRequestsBy {
  AppAsc = 'app_ASC',
  AppDesc = 'app_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsAppTestedAsc = 'isAppTested_ASC',
  IsAppTestedDesc = 'isAppTested_DESC',
  IsContractSignedAsc = 'isContractSigned_ASC',
  IsContractSignedDesc = 'isContractSigned_DESC',
  IsInfoApprovedAsc = 'isInfoApproved_ASC',
  IsInfoApprovedDesc = 'isInfoApproved_DESC',
  StatusAsc = 'status_ASC',
  StatusDesc = 'status_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortB2CAppsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DeveloperAsc = 'developer_ASC',
  DeveloperDesc = 'developer_DESC',
  DevelopmentExportIdAsc = 'developmentExportId_ASC',
  DevelopmentExportIdDesc = 'developmentExportId_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  ProductionExportIdAsc = 'productionExportId_ASC',
  ProductionExportIdDesc = 'productionExportId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortConfirmEmailActionHistoryRecordsBy {
  AttemptsAsc = 'attempts_ASC',
  AttemptsDesc = 'attempts_DESC',
  CodeAsc = 'code_ASC',
  CodeDesc = 'code_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  EmailAsc = 'email_ASC',
  EmailDesc = 'email_DESC',
  ExpiresAtAsc = 'expiresAt_ASC',
  ExpiresAtDesc = 'expiresAt_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsVerifiedAsc = 'isVerified_ASC',
  IsVerifiedDesc = 'isVerified_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortConfirmEmailActionsBy {
  AttemptsAsc = 'attempts_ASC',
  AttemptsDesc = 'attempts_DESC',
  CodeAsc = 'code_ASC',
  CodeDesc = 'code_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  EmailAsc = 'email_ASC',
  EmailDesc = 'email_DESC',
  ExpiresAtAsc = 'expiresAt_ASC',
  ExpiresAtDesc = 'expiresAt_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsVerifiedAsc = 'isVerified_ASC',
  IsVerifiedDesc = 'isVerified_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortConfirmPhoneActionHistoryRecordsBy {
  AttemptsAsc = 'attempts_ASC',
  AttemptsDesc = 'attempts_DESC',
  CodeAsc = 'code_ASC',
  CodeDesc = 'code_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  ExpiresAtAsc = 'expiresAt_ASC',
  ExpiresAtDesc = 'expiresAt_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsVerifiedAsc = 'isVerified_ASC',
  IsVerifiedDesc = 'isVerified_DESC',
  PhoneAsc = 'phone_ASC',
  PhoneDesc = 'phone_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortConfirmPhoneActionsBy {
  AttemptsAsc = 'attempts_ASC',
  AttemptsDesc = 'attempts_DESC',
  CodeAsc = 'code_ASC',
  CodeDesc = 'code_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  ExpiresAtAsc = 'expiresAt_ASC',
  ExpiresAtDesc = 'expiresAt_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsVerifiedAsc = 'isVerified_ASC',
  IsVerifiedDesc = 'isVerified_DESC',
  PhoneAsc = 'phone_ASC',
  PhoneDesc = 'phone_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortUserHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  EmailAsc = 'email_ASC',
  EmailDesc = 'email_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsAdminAsc = 'isAdmin_ASC',
  IsAdminDesc = 'isAdmin_DESC',
  IsSupportAsc = 'isSupport_ASC',
  IsSupportDesc = 'isSupport_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  PasswordAsc = 'password_ASC',
  PasswordDesc = 'password_DESC',
  PhoneAsc = 'phone_ASC',
  PhoneDesc = 'phone_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortUsersBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  EmailAsc = 'email_ASC',
  EmailDesc = 'email_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  IsAdminAsc = 'isAdmin_ASC',
  IsAdminDesc = 'isAdmin_DESC',
  IsSupportAsc = 'isSupport_ASC',
  IsSupportDesc = 'isSupport_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  PhoneAsc = 'phone_ASC',
  PhoneDesc = 'phone_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortWebhookHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UrlAsc = 'url_ASC',
  UrlDesc = 'url_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortWebhookSubscriptionHistoryRecordsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  FailuresCountAsc = 'failuresCount_ASC',
  FailuresCountDesc = 'failuresCount_DESC',
  FieldsAsc = 'fields_ASC',
  FieldsDesc = 'fields_DESC',
  HistoryActionAsc = 'history_action_ASC',
  HistoryActionDesc = 'history_action_DESC',
  HistoryDateAsc = 'history_date_ASC',
  HistoryDateDesc = 'history_date_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  MaxPackSizeAsc = 'maxPackSize_ASC',
  MaxPackSizeDesc = 'maxPackSize_DESC',
  ModelAsc = 'model_ASC',
  ModelDesc = 'model_DESC',
  SyncedAmountAsc = 'syncedAmount_ASC',
  SyncedAmountDesc = 'syncedAmount_DESC',
  SyncedAtAsc = 'syncedAt_ASC',
  SyncedAtDesc = 'syncedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UrlAsc = 'url_ASC',
  UrlDesc = 'url_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export enum SortWebhookSubscriptionsBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  FailuresCountAsc = 'failuresCount_ASC',
  FailuresCountDesc = 'failuresCount_DESC',
  FieldsAsc = 'fields_ASC',
  FieldsDesc = 'fields_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  MaxPackSizeAsc = 'maxPackSize_ASC',
  MaxPackSizeDesc = 'maxPackSize_DESC',
  ModelAsc = 'model_ASC',
  ModelDesc = 'model_DESC',
  SyncedAmountAsc = 'syncedAmount_ASC',
  SyncedAmountDesc = 'syncedAmount_DESC',
  SyncedAtAsc = 'syncedAt_ASC',
  SyncedAtDesc = 'syncedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  UrlAsc = 'url_ASC',
  UrlDesc = 'url_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC',
  WebhookAsc = 'webhook_ASC',
  WebhookDesc = 'webhook_DESC'
}

export enum SortWebhooksBy {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedByAsc = 'createdBy_ASC',
  CreatedByDesc = 'createdBy_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  DvAsc = 'dv_ASC',
  DvDesc = 'dv_DESC',
  IdAsc = 'id_ASC',
  IdDesc = 'id_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UpdatedByAsc = 'updatedBy_ASC',
  UpdatedByDesc = 'updatedBy_DESC',
  UrlAsc = 'url_ASC',
  UrlDesc = 'url_DESC',
  UserAsc = 'user_ASC',
  UserDesc = 'user_DESC',
  VAsc = 'v_ASC',
  VDesc = 'v_DESC'
}

export type StartConfirmEmailActionInput = {
  dv: Scalars['Int']['input'];
  email: Scalars['String']['input'];
  sender: SenderFieldInput;
};

export type StartConfirmPhoneActionInput = {
  dv: Scalars['Int']['input'];
  phone: Scalars['String']['input'];
  sender: SenderFieldInput;
};

export type UpdateOidcClientUrlInput = {
  app: AppWhereUniqueInput;
  dv: Scalars['Int']['input'];
  environment: AppEnvironment;
  redirectUri: Scalars['String']['input'];
  sender: SenderFieldInput;
};

export type UserCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type UserHistoryRecordCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<UserHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum UserHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type UserHistoryRecordUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<UserHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type UserHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<UserHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<UserHistoryRecordWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  email?: InputMaybe<Scalars['String']['input']>;
  email_contains?: InputMaybe<Scalars['String']['input']>;
  email_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_i?: InputMaybe<Scalars['String']['input']>;
  email_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not?: InputMaybe<Scalars['String']['input']>;
  email_not_contains?: InputMaybe<Scalars['String']['input']>;
  email_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_not_i?: InputMaybe<Scalars['String']['input']>;
  email_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  email_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  history_action?: InputMaybe<UserHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<UserHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<UserHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<UserHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  isAdmin_not?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport_not?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  password?: InputMaybe<Scalars['String']['input']>;
  password_contains?: InputMaybe<Scalars['String']['input']>;
  password_contains_i?: InputMaybe<Scalars['String']['input']>;
  password_ends_with?: InputMaybe<Scalars['String']['input']>;
  password_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  password_i?: InputMaybe<Scalars['String']['input']>;
  password_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  password_not?: InputMaybe<Scalars['String']['input']>;
  password_not_contains?: InputMaybe<Scalars['String']['input']>;
  password_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  password_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  password_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  password_not_i?: InputMaybe<Scalars['String']['input']>;
  password_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  password_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  password_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  password_starts_with?: InputMaybe<Scalars['String']['input']>;
  password_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  phone_contains?: InputMaybe<Scalars['String']['input']>;
  phone_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_i?: InputMaybe<Scalars['String']['input']>;
  phone_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type UserHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type UserHistoryRecordsCreateInput = {
  data?: InputMaybe<UserHistoryRecordCreateInput>;
};

export type UserHistoryRecordsUpdateInput = {
  data?: InputMaybe<UserHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type UserRelateToOneInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  create?: InputMaybe<UserCreateInput>;
  disconnect?: InputMaybe<UserWhereUniqueInput>;
  disconnectAll?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type UserWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  email?: InputMaybe<Scalars['String']['input']>;
  email_contains?: InputMaybe<Scalars['String']['input']>;
  email_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_i?: InputMaybe<Scalars['String']['input']>;
  email_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not?: InputMaybe<Scalars['String']['input']>;
  email_not_contains?: InputMaybe<Scalars['String']['input']>;
  email_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  email_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  email_not_i?: InputMaybe<Scalars['String']['input']>;
  email_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  email_starts_with?: InputMaybe<Scalars['String']['input']>;
  email_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  isAdmin_not?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport?: InputMaybe<Scalars['Boolean']['input']>;
  isSupport_not?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  password_is_set?: InputMaybe<Scalars['Boolean']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  phone_contains?: InputMaybe<Scalars['String']['input']>;
  phone_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_i?: InputMaybe<Scalars['String']['input']>;
  phone_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains?: InputMaybe<Scalars['String']['input']>;
  phone_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_i?: InputMaybe<Scalars['String']['input']>;
  phone_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  phone_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with?: InputMaybe<Scalars['String']['input']>;
  phone_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type UserWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type UsersCreateInput = {
  data?: InputMaybe<UserCreateInput>;
};

export type UsersUpdateInput = {
  data?: InputMaybe<UserUpdateInput>;
  id: Scalars['ID']['input'];
};

export type WebhookCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  url?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type WebhookHistoryRecordCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<WebhookHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export enum WebhookHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type WebhookHistoryRecordUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  history_action?: InputMaybe<WebhookHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type WebhookHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebhookHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebhookHistoryRecordWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_contains_i?: InputMaybe<Scalars['String']['input']>;
  description_ends_with?: InputMaybe<Scalars['String']['input']>;
  description_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  description_i?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_not?: InputMaybe<Scalars['String']['input']>;
  description_not_contains?: InputMaybe<Scalars['String']['input']>;
  description_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  description_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  description_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  description_not_i?: InputMaybe<Scalars['String']['input']>;
  description_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  description_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  description_starts_with?: InputMaybe<Scalars['String']['input']>;
  description_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  history_action?: InputMaybe<WebhookHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<WebhookHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<WebhookHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<WebhookHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_contains?: InputMaybe<Scalars['String']['input']>;
  url_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_i?: InputMaybe<Scalars['String']['input']>;
  url_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not?: InputMaybe<Scalars['String']['input']>;
  url_not_contains?: InputMaybe<Scalars['String']['input']>;
  url_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_not_i?: InputMaybe<Scalars['String']['input']>;
  url_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  url_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
  user_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  user_not?: InputMaybe<Scalars['String']['input']>;
  user_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type WebhookHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WebhookHistoryRecordsCreateInput = {
  data?: InputMaybe<WebhookHistoryRecordCreateInput>;
};

export type WebhookHistoryRecordsUpdateInput = {
  data?: InputMaybe<WebhookHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export type WebhookRelateToOneInput = {
  connect?: InputMaybe<WebhookWhereUniqueInput>;
  create?: InputMaybe<WebhookCreateInput>;
  disconnect?: InputMaybe<WebhookWhereUniqueInput>;
  disconnectAll?: InputMaybe<Scalars['Boolean']['input']>;
};

export type WebhookSubscriptionCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  failuresCount?: InputMaybe<Scalars['Int']['input']>;
  fields?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Scalars['JSON']['input']>;
  maxPackSize?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<WebhookSubscriptionModelType>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  syncedAmount?: InputMaybe<Scalars['Int']['input']>;
  syncedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  url?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  webhook?: InputMaybe<WebhookRelateToOneInput>;
};

export type WebhookSubscriptionHistoryRecordCreateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  failuresCount?: InputMaybe<Scalars['Int']['input']>;
  fields?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Scalars['JSON']['input']>;
  history_action?: InputMaybe<WebhookSubscriptionHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  maxPackSize?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  syncedAmount?: InputMaybe<Scalars['Int']['input']>;
  syncedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  webhook?: InputMaybe<Scalars['String']['input']>;
};

export enum WebhookSubscriptionHistoryRecordHistoryActionType {
  C = 'c',
  D = 'd',
  U = 'u'
}

export type WebhookSubscriptionHistoryRecordUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  failuresCount?: InputMaybe<Scalars['Int']['input']>;
  fields?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Scalars['JSON']['input']>;
  history_action?: InputMaybe<WebhookSubscriptionHistoryRecordHistoryActionType>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  maxPackSize?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  syncedAmount?: InputMaybe<Scalars['Int']['input']>;
  syncedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  webhook?: InputMaybe<Scalars['String']['input']>;
};

export type WebhookSubscriptionHistoryRecordWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebhookSubscriptionHistoryRecordWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebhookSubscriptionHistoryRecordWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  createdBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy_not?: InputMaybe<Scalars['String']['input']>;
  createdBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  failuresCount?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_gt?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_gte?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  failuresCount_lt?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_lte?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_not?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  fields?: InputMaybe<Scalars['String']['input']>;
  fields_contains?: InputMaybe<Scalars['String']['input']>;
  fields_contains_i?: InputMaybe<Scalars['String']['input']>;
  fields_ends_with?: InputMaybe<Scalars['String']['input']>;
  fields_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  fields_i?: InputMaybe<Scalars['String']['input']>;
  fields_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fields_not?: InputMaybe<Scalars['String']['input']>;
  fields_not_contains?: InputMaybe<Scalars['String']['input']>;
  fields_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  fields_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  fields_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  fields_not_i?: InputMaybe<Scalars['String']['input']>;
  fields_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fields_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  fields_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  fields_starts_with?: InputMaybe<Scalars['String']['input']>;
  fields_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Scalars['JSON']['input']>;
  filters_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  filters_not?: InputMaybe<Scalars['JSON']['input']>;
  filters_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  history_action?: InputMaybe<WebhookSubscriptionHistoryRecordHistoryActionType>;
  history_action_in?: InputMaybe<Array<InputMaybe<WebhookSubscriptionHistoryRecordHistoryActionType>>>;
  history_action_not?: InputMaybe<WebhookSubscriptionHistoryRecordHistoryActionType>;
  history_action_not_in?: InputMaybe<Array<InputMaybe<WebhookSubscriptionHistoryRecordHistoryActionType>>>;
  history_date?: InputMaybe<Scalars['String']['input']>;
  history_date_gt?: InputMaybe<Scalars['String']['input']>;
  history_date_gte?: InputMaybe<Scalars['String']['input']>;
  history_date_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_date_lt?: InputMaybe<Scalars['String']['input']>;
  history_date_lte?: InputMaybe<Scalars['String']['input']>;
  history_date_not?: InputMaybe<Scalars['String']['input']>;
  history_date_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id?: InputMaybe<Scalars['String']['input']>;
  history_id_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  history_id_not?: InputMaybe<Scalars['String']['input']>;
  history_id_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  maxPackSize?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_gt?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_gte?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  maxPackSize_lt?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_lte?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_not?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  model?: InputMaybe<Scalars['String']['input']>;
  model_contains?: InputMaybe<Scalars['String']['input']>;
  model_contains_i?: InputMaybe<Scalars['String']['input']>;
  model_ends_with?: InputMaybe<Scalars['String']['input']>;
  model_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  model_i?: InputMaybe<Scalars['String']['input']>;
  model_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  model_not?: InputMaybe<Scalars['String']['input']>;
  model_not_contains?: InputMaybe<Scalars['String']['input']>;
  model_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  model_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  model_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  model_not_i?: InputMaybe<Scalars['String']['input']>;
  model_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  model_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  model_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  model_starts_with?: InputMaybe<Scalars['String']['input']>;
  model_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['JSON']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  newId_not?: InputMaybe<Scalars['JSON']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender?: InputMaybe<Scalars['JSON']['input']>;
  sender_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  sender_not?: InputMaybe<Scalars['JSON']['input']>;
  sender_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  syncedAmount?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_gt?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_gte?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  syncedAmount_lt?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_lte?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_not?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  syncedAt?: InputMaybe<Scalars['String']['input']>;
  syncedAt_gt?: InputMaybe<Scalars['String']['input']>;
  syncedAt_gte?: InputMaybe<Scalars['String']['input']>;
  syncedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  syncedAt_lt?: InputMaybe<Scalars['String']['input']>;
  syncedAt_lte?: InputMaybe<Scalars['String']['input']>;
  syncedAt_not?: InputMaybe<Scalars['String']['input']>;
  syncedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  updatedBy_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy_not?: InputMaybe<Scalars['String']['input']>;
  updatedBy_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_contains?: InputMaybe<Scalars['String']['input']>;
  url_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_i?: InputMaybe<Scalars['String']['input']>;
  url_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not?: InputMaybe<Scalars['String']['input']>;
  url_not_contains?: InputMaybe<Scalars['String']['input']>;
  url_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_not_i?: InputMaybe<Scalars['String']['input']>;
  url_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  url_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  webhook?: InputMaybe<Scalars['String']['input']>;
  webhook_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  webhook_not?: InputMaybe<Scalars['String']['input']>;
  webhook_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WebhookSubscriptionHistoryRecordWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WebhookSubscriptionHistoryRecordsCreateInput = {
  data?: InputMaybe<WebhookSubscriptionHistoryRecordCreateInput>;
};

export type WebhookSubscriptionHistoryRecordsUpdateInput = {
  data?: InputMaybe<WebhookSubscriptionHistoryRecordUpdateInput>;
  id: Scalars['ID']['input'];
};

export enum WebhookSubscriptionModelType {
  B2CAppPublishRequest = 'B2CAppPublishRequest'
}

export type WebhookSubscriptionUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  failuresCount?: InputMaybe<Scalars['Int']['input']>;
  fields?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Scalars['JSON']['input']>;
  maxPackSize?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<WebhookSubscriptionModelType>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  syncedAmount?: InputMaybe<Scalars['Int']['input']>;
  syncedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  url?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  webhook?: InputMaybe<WebhookRelateToOneInput>;
};

export type WebhookSubscriptionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebhookSubscriptionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebhookSubscriptionWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  failuresCount?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_gt?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_gte?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  failuresCount_lt?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_lte?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_not?: InputMaybe<Scalars['Int']['input']>;
  failuresCount_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  fields?: InputMaybe<Scalars['String']['input']>;
  fields_contains?: InputMaybe<Scalars['String']['input']>;
  fields_contains_i?: InputMaybe<Scalars['String']['input']>;
  fields_ends_with?: InputMaybe<Scalars['String']['input']>;
  fields_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  fields_i?: InputMaybe<Scalars['String']['input']>;
  fields_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fields_not?: InputMaybe<Scalars['String']['input']>;
  fields_not_contains?: InputMaybe<Scalars['String']['input']>;
  fields_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  fields_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  fields_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  fields_not_i?: InputMaybe<Scalars['String']['input']>;
  fields_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fields_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  fields_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  fields_starts_with?: InputMaybe<Scalars['String']['input']>;
  fields_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Scalars['JSON']['input']>;
  filters_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  filters_not?: InputMaybe<Scalars['JSON']['input']>;
  filters_not_in?: InputMaybe<Array<InputMaybe<Scalars['JSON']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  maxPackSize?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_gt?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_gte?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  maxPackSize_lt?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_lte?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_not?: InputMaybe<Scalars['Int']['input']>;
  maxPackSize_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  model?: InputMaybe<WebhookSubscriptionModelType>;
  model_in?: InputMaybe<Array<InputMaybe<WebhookSubscriptionModelType>>>;
  model_not?: InputMaybe<WebhookSubscriptionModelType>;
  model_not_in?: InputMaybe<Array<InputMaybe<WebhookSubscriptionModelType>>>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  syncedAmount?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_gt?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_gte?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  syncedAmount_lt?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_lte?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_not?: InputMaybe<Scalars['Int']['input']>;
  syncedAmount_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  syncedAt?: InputMaybe<Scalars['String']['input']>;
  syncedAt_gt?: InputMaybe<Scalars['String']['input']>;
  syncedAt_gte?: InputMaybe<Scalars['String']['input']>;
  syncedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  syncedAt_lt?: InputMaybe<Scalars['String']['input']>;
  syncedAt_lte?: InputMaybe<Scalars['String']['input']>;
  syncedAt_not?: InputMaybe<Scalars['String']['input']>;
  syncedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_contains?: InputMaybe<Scalars['String']['input']>;
  url_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_i?: InputMaybe<Scalars['String']['input']>;
  url_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not?: InputMaybe<Scalars['String']['input']>;
  url_not_contains?: InputMaybe<Scalars['String']['input']>;
  url_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_not_i?: InputMaybe<Scalars['String']['input']>;
  url_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  url_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  webhook?: InputMaybe<WebhookWhereInput>;
  webhook_is_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type WebhookSubscriptionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WebhookSubscriptionsCreateInput = {
  data?: InputMaybe<WebhookSubscriptionCreateInput>;
};

export type WebhookSubscriptionsUpdateInput = {
  data?: InputMaybe<WebhookSubscriptionUpdateInput>;
  id: Scalars['ID']['input'];
};

export type WebhookUpdateInput = {
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdBy?: InputMaybe<UserRelateToOneInput>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  sender?: InputMaybe<SenderFieldInput>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedBy?: InputMaybe<UserRelateToOneInput>;
  url?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserRelateToOneInput>;
  v?: InputMaybe<Scalars['Int']['input']>;
};

export type WebhookWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<WebhookWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebhookWhereInput>>>;
  createdAt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdAt_not?: InputMaybe<Scalars['String']['input']>;
  createdAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  createdBy?: InputMaybe<UserWhereInput>;
  createdBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not?: InputMaybe<Scalars['String']['input']>;
  deletedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description?: InputMaybe<Scalars['String']['input']>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_contains_i?: InputMaybe<Scalars['String']['input']>;
  description_ends_with?: InputMaybe<Scalars['String']['input']>;
  description_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  description_i?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_not?: InputMaybe<Scalars['String']['input']>;
  description_not_contains?: InputMaybe<Scalars['String']['input']>;
  description_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  description_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  description_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  description_not_i?: InputMaybe<Scalars['String']['input']>;
  description_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  description_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  description_starts_with?: InputMaybe<Scalars['String']['input']>;
  description_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  dv?: InputMaybe<Scalars['Int']['input']>;
  dv_gt?: InputMaybe<Scalars['Int']['input']>;
  dv_gte?: InputMaybe<Scalars['Int']['input']>;
  dv_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  dv_lt?: InputMaybe<Scalars['Int']['input']>;
  dv_lte?: InputMaybe<Scalars['Int']['input']>;
  dv_not?: InputMaybe<Scalars['Int']['input']>;
  dv_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  id_not?: InputMaybe<Scalars['ID']['input']>;
  id_not_in?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_i?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not?: InputMaybe<Scalars['String']['input']>;
  name_not_contains?: InputMaybe<Scalars['String']['input']>;
  name_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  name_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  name_not_i?: InputMaybe<Scalars['String']['input']>;
  name_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  name_starts_with?: InputMaybe<Scalars['String']['input']>;
  name_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  newId?: InputMaybe<Scalars['String']['input']>;
  newId_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  newId_not?: InputMaybe<Scalars['String']['input']>;
  newId_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sender?: InputMaybe<SenderFieldInput>;
  sender_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  sender_not?: InputMaybe<SenderFieldInput>;
  sender_not_in?: InputMaybe<Array<InputMaybe<SenderFieldInput>>>;
  updatedAt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not?: InputMaybe<Scalars['String']['input']>;
  updatedAt_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  updatedBy?: InputMaybe<UserWhereInput>;
  updatedBy_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  url_contains?: InputMaybe<Scalars['String']['input']>;
  url_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_i?: InputMaybe<Scalars['String']['input']>;
  url_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not?: InputMaybe<Scalars['String']['input']>;
  url_not_contains?: InputMaybe<Scalars['String']['input']>;
  url_not_contains_i?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  url_not_ends_with_i?: InputMaybe<Scalars['String']['input']>;
  url_not_i?: InputMaybe<Scalars['String']['input']>;
  url_not_in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  url_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_not_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  url_starts_with?: InputMaybe<Scalars['String']['input']>;
  url_starts_with_i?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<UserWhereInput>;
  user_is_null?: InputMaybe<Scalars['Boolean']['input']>;
  v?: InputMaybe<Scalars['Int']['input']>;
  v_gt?: InputMaybe<Scalars['Int']['input']>;
  v_gte?: InputMaybe<Scalars['Int']['input']>;
  v_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  v_lt?: InputMaybe<Scalars['Int']['input']>;
  v_lte?: InputMaybe<Scalars['Int']['input']>;
  v_not?: InputMaybe<Scalars['Int']['input']>;
  v_not_in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type WebhookWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WebhooksCreateInput = {
  data?: InputMaybe<WebhookCreateInput>;
};

export type WebhooksUpdateInput = {
  data?: InputMaybe<WebhookUpdateInput>;
  id: Scalars['ID']['input'];
};

export type _ListSchemaFieldsInput = {
  type?: InputMaybe<Scalars['String']['input']>;
};

export type _KsListsMetaInput = {
  /** Whether this is an auxiliary helper list */
  auxiliary?: InputMaybe<Scalars['Boolean']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
};

export type AllB2BAppsQueryVariables = Exact<{
  creator: UserWhereInput;
  first: Scalars['Int']['input'];
  skip?: Scalars['Int']['input'];
}>;


export type AllB2BAppsQuery = { __typename?: 'Query', b2b?: Array<{ __typename?: 'B2BApp', id: string, name?: string | null, createdAt?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null } | null> | null, b2bMeta?: { __typename?: '_QueryMeta', count?: number | null } | null };

export type AllB2CAppsQueryVariables = Exact<{
  creator: UserWhereInput;
  first: Scalars['Int']['input'];
  skip?: Scalars['Int']['input'];
}>;


export type AllB2CAppsQuery = { __typename?: 'Query', b2c?: Array<{ __typename?: 'B2CApp', id: string, name?: string | null, createdAt?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null } | null> | null, b2cMeta?: { __typename?: '_QueryMeta', count?: number | null } | null };

export type B2BAppFragmentFragment = { __typename: 'B2BApp', id: string, name?: string | null, developer?: string | null, developerUrl?: string | null, developmentExportId?: string | null, productionExportId?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null };

export type GetB2BAppQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetB2BAppQuery = { __typename?: 'Query', app?: { __typename: 'B2BApp', id: string, name?: string | null, developer?: string | null, developerUrl?: string | null, developmentExportId?: string | null, productionExportId?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null } | null };

export type CreateB2BAppMutationVariables = Exact<{
  data: B2BAppCreateInput;
}>;


export type CreateB2BAppMutation = { __typename?: 'Mutation', app?: { __typename: 'B2BApp', id: string, name?: string | null, developer?: string | null, developerUrl?: string | null, developmentExportId?: string | null, productionExportId?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null } | null };

export type UpdateB2BAppMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  data: B2BAppUpdateInput;
}>;


export type UpdateB2BAppMutation = { __typename?: 'Mutation', app?: { __typename: 'B2BApp', id: string, name?: string | null, developer?: string | null, developerUrl?: string | null, developmentExportId?: string | null, productionExportId?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null } | null };

export type GetB2CAppQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetB2CAppQuery = { __typename?: 'Query', app?: { __typename?: 'B2CApp', id: string, name?: string | null, developer?: string | null, developmentExportId?: string | null, productionExportId?: string | null, logo?: { __typename?: 'File', publicUrl?: string | null } | null } | null };

export type CreateB2CAppMutationVariables = Exact<{
  data: B2CAppCreateInput;
}>;


export type CreateB2CAppMutation = { __typename?: 'Mutation', app?: { __typename: 'B2CApp', id: string, name?: string | null } | null };

export type UpdateB2CAppMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  data: B2CAppUpdateInput;
}>;


export type UpdateB2CAppMutation = { __typename?: 'Mutation', app?: { __typename?: 'B2CApp', id: string } | null };

export type AllB2CAppAccessRightsQueryVariables = Exact<{
  appId: Scalars['ID']['input'];
  environment: AppEnvironment;
}>;


export type AllB2CAppAccessRightsQuery = { __typename?: 'Query', rights?: Array<{ __typename?: 'B2CAppAccessRight', condoUserEmail?: string | null } | null> | null };

export type AllB2CAppBuildsQueryVariables = Exact<{
  where: B2CAppBuildWhereInput;
  first: Scalars['Int']['input'];
  skip: Scalars['Int']['input'];
}>;


export type AllB2CAppBuildsQuery = { __typename?: 'Query', builds?: Array<{ __typename?: 'B2CAppBuild', id: string, version?: string | null, createdAt?: string | null } | null> | null, meta?: { __typename?: '_QueryMeta', count?: number | null } | null };

export type CreateB2CAppBuildMutationVariables = Exact<{
  data: B2CAppBuildCreateInput;
}>;


export type CreateB2CAppBuildMutation = { __typename?: 'Mutation', build?: { __typename?: 'B2CAppBuild', id: string, version?: string | null } | null };

export type AllB2CAppPropertiesQueryVariables = Exact<{
  data: AllB2CAppPropertiesInput;
}>;


export type AllB2CAppPropertiesQuery = { __typename?: 'Query', properties?: { __typename?: 'AllB2CAppPropertiesOutput', objs: Array<{ __typename?: 'B2CAppProperty', id: string, address: string }>, meta: { __typename?: 'B2CAppPropertyMeta', count: number } } | null };

export type CreateB2CAppPropertyMutationVariables = Exact<{
  data: CreateB2CAppPropertyInput;
}>;


export type CreateB2CAppPropertyMutation = { __typename?: 'Mutation', property?: { __typename?: 'CreateB2CAppPropertyOutput', id: string } | null };

export type DeleteB2CAppPropertyMutationVariables = Exact<{
  data: DeleteB2CAppPropertyInput;
}>;


export type DeleteB2CAppPropertyMutation = { __typename?: 'Mutation', property?: { __typename?: 'DeleteB2CAppPropertyOutput', id: string, address: string } | null };

export type AllB2CAppPublishRequestsQueryVariables = Exact<{
  appId: Scalars['ID']['input'];
}>;


export type AllB2CAppPublishRequestsQuery = { __typename?: 'Query', requests?: Array<{ __typename?: 'B2CAppPublishRequest', isAppTested?: boolean | null, isInfoApproved?: boolean | null, isContractSigned?: boolean | null, status?: B2CAppPublishRequestStatusType | null } | null> | null };

export type CreateB2CAppPublishRequestMutationVariables = Exact<{
  data: B2CAppPublishRequestCreateInput;
}>;


export type CreateB2CAppPublishRequestMutation = { __typename?: 'Mutation', request?: { __typename?: 'B2CAppPublishRequest', id: string } | null };

export type GetB2CAppInfoQueryVariables = Exact<{
  data: GetB2CAppInfoInput;
}>;


export type GetB2CAppInfoQuery = { __typename?: 'Query', info?: { __typename?: 'GetB2CAppInfoOutput', id: string, environment: AppEnvironment, currentBuild?: { __typename?: 'B2CAppCurrentBuild', id: string, version: string } | null } | null };

export type GetOidcClientQueryVariables = Exact<{
  data: GetOidcClientInput;
}>;


export type GetOidcClientQuery = { __typename?: 'Query', client?: { __typename?: 'OIDCClient', id: string, clientId: string, redirectUri: string, isEnabled: boolean } | null };

export type CreateOidcClientMutationVariables = Exact<{
  data: CreateOidcClientInput;
}>;


export type CreateOidcClientMutation = { __typename?: 'Mutation', client?: { __typename?: 'OIDCClientWithSecret', clientSecret: string } | null };

export type UpdateOidcClientUrlMutationVariables = Exact<{
  data: UpdateOidcClientUrlInput;
}>;


export type UpdateOidcClientUrlMutation = { __typename?: 'Mutation', client?: { __typename?: 'OIDCClient', redirectUri: string } | null };

export type GenerateOidcClientSecretMutationVariables = Exact<{
  data: GenerateOidcClientSecretInput;
}>;


export type GenerateOidcClientSecretMutation = { __typename?: 'Mutation', client?: { __typename?: 'OIDCClientWithSecret', clientSecret: string } | null };

export type PublishB2CAppMutationVariables = Exact<{
  data: PublishB2CAppInput;
}>;


export type PublishB2CAppMutation = { __typename?: 'Mutation', publishB2CApp?: { __typename?: 'PublishB2CAppOutput', success: boolean } | null };

export type RegisterAppUserServiceMutationVariables = Exact<{
  data: RegisterAppUserServiceInput;
}>;


export type RegisterAppUserServiceMutation = { __typename?: 'Mutation', condoUser?: { __typename?: 'RegisterAppUserServiceOutput', id: string } | null };

export type SignInMutationVariables = Exact<{
  phone: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type SignInMutation = { __typename?: 'Mutation', authenticateUserWithPhoneAndPassword?: { __typename?: 'AuthenticateUserWithPhoneAndPasswordOutput', item: { __typename?: 'User', id: string } } | null };

export type AuthenticatedUserQueryVariables = Exact<{ [key: string]: never; }>;


export type AuthenticatedUserQuery = { __typename?: 'Query', authenticatedUser?: { __typename?: 'User', id: string, name?: string | null, phone?: string | null, isAdmin?: boolean | null, isSupport?: boolean | null } | null };

export type StartConfirmEmailActionMutationVariables = Exact<{
  data: StartConfirmEmailActionInput;
}>;


export type StartConfirmEmailActionMutation = { __typename?: 'Mutation', startConfirmEmailAction?: { __typename?: 'StartConfirmEmailActionOutput', actionId: string, email: string } | null };

export type CompleteConfirmEmailActionMutationVariables = Exact<{
  data: CompleteConfirmEmailActionInput;
}>;


export type CompleteConfirmEmailActionMutation = { __typename?: 'Mutation', completeConfirmEmailAction?: { __typename?: 'CompleteConfirmEmailActionOutput', status: string } | null };

export type StartConfirmPhoneActionMutationVariables = Exact<{
  data: StartConfirmPhoneActionInput;
}>;


export type StartConfirmPhoneActionMutation = { __typename?: 'Mutation', startConfirmPhoneAction?: { __typename?: 'StartConfirmPhoneActionOutput', actionId: string, phone: string } | null };

export type CompleteConfirmPhoneActionMutationVariables = Exact<{
  data: CompleteConfirmPhoneActionInput;
}>;


export type CompleteConfirmPhoneActionMutation = { __typename?: 'Mutation', completeConfirmPhoneAction?: { __typename?: 'CompleteConfirmPhoneActionOutput', status: string } | null };

export type RegisterNewUserMutationVariables = Exact<{
  data: RegisterNewUserInput;
}>;


export type RegisterNewUserMutation = { __typename?: 'Mutation', registerNewUser?: { __typename?: 'User', id: string } | null };

export type SignOutMutationVariables = Exact<{ [key: string]: never; }>;


export type SignOutMutation = { __typename?: 'Mutation', unauthenticateUser?: { __typename?: 'unauthenticateUserOutput', success?: boolean | null } | null };

export const B2BAppFragmentFragmentDoc = gql`
    fragment B2BAppFragment on B2BApp {
  __typename
  id
  name
  developer
  developerUrl
  logo {
    publicUrl
  }
  developmentExportId
  productionExportId
}
    `;
export const AllB2BAppsDocument = gql`
    query allB2BApps($creator: UserWhereInput!, $first: Int!, $skip: Int! = 0) {
  b2b: allB2BApps(
    sortBy: createdAt_DESC
    where: {createdBy: $creator}
    first: $first
    skip: $skip
  ) {
    id
    name
    createdAt
    logo {
      publicUrl
    }
  }
  b2bMeta: _allB2BAppsMeta(where: {createdBy: $creator}) {
    count
  }
}
    `;

/**
 * __useAllB2BAppsQuery__
 *
 * To run a query within a React component, call `useAllB2BAppsQuery` and pass it any options that fit your needs.
 * When your component renders, `useAllB2BAppsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAllB2BAppsQuery({
 *   variables: {
 *      creator: // value for 'creator'
 *      first: // value for 'first'
 *      skip: // value for 'skip'
 *   },
 * });
 */
export function useAllB2BAppsQuery(baseOptions: Apollo.QueryHookOptions<AllB2BAppsQuery, AllB2BAppsQueryVariables> & ({ variables: AllB2BAppsQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AllB2BAppsQuery, AllB2BAppsQueryVariables>(AllB2BAppsDocument, options);
      }
export function useAllB2BAppsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllB2BAppsQuery, AllB2BAppsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AllB2BAppsQuery, AllB2BAppsQueryVariables>(AllB2BAppsDocument, options);
        }
export function useAllB2BAppsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AllB2BAppsQuery, AllB2BAppsQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AllB2BAppsQuery, AllB2BAppsQueryVariables>(AllB2BAppsDocument, options);
        }
export type AllB2BAppsQueryHookResult = ReturnType<typeof useAllB2BAppsQuery>;
export type AllB2BAppsLazyQueryHookResult = ReturnType<typeof useAllB2BAppsLazyQuery>;
export type AllB2BAppsSuspenseQueryHookResult = ReturnType<typeof useAllB2BAppsSuspenseQuery>;
export type AllB2BAppsQueryResult = Apollo.QueryResult<AllB2BAppsQuery, AllB2BAppsQueryVariables>;
export const AllB2CAppsDocument = gql`
    query allB2CApps($creator: UserWhereInput!, $first: Int!, $skip: Int! = 0) {
  b2c: allB2CApps(
    sortBy: createdAt_DESC
    where: {createdBy: $creator}
    first: $first
    skip: $skip
  ) {
    id
    name
    createdAt
    logo {
      publicUrl
    }
  }
  b2cMeta: _allB2CAppsMeta(where: {createdBy: $creator}) {
    count
  }
}
    `;

/**
 * __useAllB2CAppsQuery__
 *
 * To run a query within a React component, call `useAllB2CAppsQuery` and pass it any options that fit your needs.
 * When your component renders, `useAllB2CAppsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAllB2CAppsQuery({
 *   variables: {
 *      creator: // value for 'creator'
 *      first: // value for 'first'
 *      skip: // value for 'skip'
 *   },
 * });
 */
export function useAllB2CAppsQuery(baseOptions: Apollo.QueryHookOptions<AllB2CAppsQuery, AllB2CAppsQueryVariables> & ({ variables: AllB2CAppsQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AllB2CAppsQuery, AllB2CAppsQueryVariables>(AllB2CAppsDocument, options);
      }
export function useAllB2CAppsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllB2CAppsQuery, AllB2CAppsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AllB2CAppsQuery, AllB2CAppsQueryVariables>(AllB2CAppsDocument, options);
        }
export function useAllB2CAppsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AllB2CAppsQuery, AllB2CAppsQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AllB2CAppsQuery, AllB2CAppsQueryVariables>(AllB2CAppsDocument, options);
        }
export type AllB2CAppsQueryHookResult = ReturnType<typeof useAllB2CAppsQuery>;
export type AllB2CAppsLazyQueryHookResult = ReturnType<typeof useAllB2CAppsLazyQuery>;
export type AllB2CAppsSuspenseQueryHookResult = ReturnType<typeof useAllB2CAppsSuspenseQuery>;
export type AllB2CAppsQueryResult = Apollo.QueryResult<AllB2CAppsQuery, AllB2CAppsQueryVariables>;
export const GetB2BAppDocument = gql`
    query getB2BApp($id: ID!) {
  app: B2BApp(where: {id: $id}) {
    ...B2BAppFragment
  }
}
    ${B2BAppFragmentFragmentDoc}`;

/**
 * __useGetB2BAppQuery__
 *
 * To run a query within a React component, call `useGetB2BAppQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetB2BAppQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetB2BAppQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetB2BAppQuery(baseOptions: Apollo.QueryHookOptions<GetB2BAppQuery, GetB2BAppQueryVariables> & ({ variables: GetB2BAppQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetB2BAppQuery, GetB2BAppQueryVariables>(GetB2BAppDocument, options);
      }
export function useGetB2BAppLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetB2BAppQuery, GetB2BAppQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetB2BAppQuery, GetB2BAppQueryVariables>(GetB2BAppDocument, options);
        }
export function useGetB2BAppSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetB2BAppQuery, GetB2BAppQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<GetB2BAppQuery, GetB2BAppQueryVariables>(GetB2BAppDocument, options);
        }
export type GetB2BAppQueryHookResult = ReturnType<typeof useGetB2BAppQuery>;
export type GetB2BAppLazyQueryHookResult = ReturnType<typeof useGetB2BAppLazyQuery>;
export type GetB2BAppSuspenseQueryHookResult = ReturnType<typeof useGetB2BAppSuspenseQuery>;
export type GetB2BAppQueryResult = Apollo.QueryResult<GetB2BAppQuery, GetB2BAppQueryVariables>;
export const CreateB2BAppDocument = gql`
    mutation createB2BApp($data: B2BAppCreateInput!) {
  app: createB2BApp(data: $data) {
    ...B2BAppFragment
  }
}
    ${B2BAppFragmentFragmentDoc}`;
export type CreateB2BAppMutationFn = Apollo.MutationFunction<CreateB2BAppMutation, CreateB2BAppMutationVariables>;

/**
 * __useCreateB2BAppMutation__
 *
 * To run a mutation, you first call `useCreateB2BAppMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateB2BAppMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createB2BAppMutation, { data, loading, error }] = useCreateB2BAppMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateB2BAppMutation(baseOptions?: Apollo.MutationHookOptions<CreateB2BAppMutation, CreateB2BAppMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateB2BAppMutation, CreateB2BAppMutationVariables>(CreateB2BAppDocument, options);
      }
export type CreateB2BAppMutationHookResult = ReturnType<typeof useCreateB2BAppMutation>;
export type CreateB2BAppMutationResult = Apollo.MutationResult<CreateB2BAppMutation>;
export type CreateB2BAppMutationOptions = Apollo.BaseMutationOptions<CreateB2BAppMutation, CreateB2BAppMutationVariables>;
export const UpdateB2BAppDocument = gql`
    mutation updateB2BApp($id: ID!, $data: B2BAppUpdateInput!) {
  app: updateB2BApp(id: $id, data: $data) {
    ...B2BAppFragment
  }
}
    ${B2BAppFragmentFragmentDoc}`;
export type UpdateB2BAppMutationFn = Apollo.MutationFunction<UpdateB2BAppMutation, UpdateB2BAppMutationVariables>;

/**
 * __useUpdateB2BAppMutation__
 *
 * To run a mutation, you first call `useUpdateB2BAppMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateB2BAppMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateB2BAppMutation, { data, loading, error }] = useUpdateB2BAppMutation({
 *   variables: {
 *      id: // value for 'id'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateB2BAppMutation(baseOptions?: Apollo.MutationHookOptions<UpdateB2BAppMutation, UpdateB2BAppMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateB2BAppMutation, UpdateB2BAppMutationVariables>(UpdateB2BAppDocument, options);
      }
export type UpdateB2BAppMutationHookResult = ReturnType<typeof useUpdateB2BAppMutation>;
export type UpdateB2BAppMutationResult = Apollo.MutationResult<UpdateB2BAppMutation>;
export type UpdateB2BAppMutationOptions = Apollo.BaseMutationOptions<UpdateB2BAppMutation, UpdateB2BAppMutationVariables>;
export const GetB2CAppDocument = gql`
    query getB2CApp($id: ID!) {
  app: B2CApp(where: {id: $id}) {
    id
    name
    developer
    logo {
      publicUrl
    }
    developmentExportId
    productionExportId
  }
}
    `;

/**
 * __useGetB2CAppQuery__
 *
 * To run a query within a React component, call `useGetB2CAppQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetB2CAppQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetB2CAppQuery({
 *   variables: {
 *      id: // value for 'id'
 *   },
 * });
 */
export function useGetB2CAppQuery(baseOptions: Apollo.QueryHookOptions<GetB2CAppQuery, GetB2CAppQueryVariables> & ({ variables: GetB2CAppQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetB2CAppQuery, GetB2CAppQueryVariables>(GetB2CAppDocument, options);
      }
export function useGetB2CAppLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetB2CAppQuery, GetB2CAppQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetB2CAppQuery, GetB2CAppQueryVariables>(GetB2CAppDocument, options);
        }
export function useGetB2CAppSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetB2CAppQuery, GetB2CAppQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<GetB2CAppQuery, GetB2CAppQueryVariables>(GetB2CAppDocument, options);
        }
export type GetB2CAppQueryHookResult = ReturnType<typeof useGetB2CAppQuery>;
export type GetB2CAppLazyQueryHookResult = ReturnType<typeof useGetB2CAppLazyQuery>;
export type GetB2CAppSuspenseQueryHookResult = ReturnType<typeof useGetB2CAppSuspenseQuery>;
export type GetB2CAppQueryResult = Apollo.QueryResult<GetB2CAppQuery, GetB2CAppQueryVariables>;
export const CreateB2CAppDocument = gql`
    mutation createB2CApp($data: B2CAppCreateInput!) {
  app: createB2CApp(data: $data) {
    id
    name
    __typename
  }
}
    `;
export type CreateB2CAppMutationFn = Apollo.MutationFunction<CreateB2CAppMutation, CreateB2CAppMutationVariables>;

/**
 * __useCreateB2CAppMutation__
 *
 * To run a mutation, you first call `useCreateB2CAppMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateB2CAppMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createB2CAppMutation, { data, loading, error }] = useCreateB2CAppMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateB2CAppMutation(baseOptions?: Apollo.MutationHookOptions<CreateB2CAppMutation, CreateB2CAppMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateB2CAppMutation, CreateB2CAppMutationVariables>(CreateB2CAppDocument, options);
      }
export type CreateB2CAppMutationHookResult = ReturnType<typeof useCreateB2CAppMutation>;
export type CreateB2CAppMutationResult = Apollo.MutationResult<CreateB2CAppMutation>;
export type CreateB2CAppMutationOptions = Apollo.BaseMutationOptions<CreateB2CAppMutation, CreateB2CAppMutationVariables>;
export const UpdateB2CAppDocument = gql`
    mutation updateB2CApp($id: ID!, $data: B2CAppUpdateInput!) {
  app: updateB2CApp(id: $id, data: $data) {
    id
  }
}
    `;
export type UpdateB2CAppMutationFn = Apollo.MutationFunction<UpdateB2CAppMutation, UpdateB2CAppMutationVariables>;

/**
 * __useUpdateB2CAppMutation__
 *
 * To run a mutation, you first call `useUpdateB2CAppMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateB2CAppMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateB2CAppMutation, { data, loading, error }] = useUpdateB2CAppMutation({
 *   variables: {
 *      id: // value for 'id'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateB2CAppMutation(baseOptions?: Apollo.MutationHookOptions<UpdateB2CAppMutation, UpdateB2CAppMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateB2CAppMutation, UpdateB2CAppMutationVariables>(UpdateB2CAppDocument, options);
      }
export type UpdateB2CAppMutationHookResult = ReturnType<typeof useUpdateB2CAppMutation>;
export type UpdateB2CAppMutationResult = Apollo.MutationResult<UpdateB2CAppMutation>;
export type UpdateB2CAppMutationOptions = Apollo.BaseMutationOptions<UpdateB2CAppMutation, UpdateB2CAppMutationVariables>;
export const AllB2CAppAccessRightsDocument = gql`
    query allB2CAppAccessRights($appId: ID!, $environment: AppEnvironment!) {
  rights: allB2CAppAccessRights(
    where: {app: {id: $appId}, environment: $environment}
    first: 1
    skip: 0
  ) {
    condoUserEmail
  }
}
    `;

/**
 * __useAllB2CAppAccessRightsQuery__
 *
 * To run a query within a React component, call `useAllB2CAppAccessRightsQuery` and pass it any options that fit your needs.
 * When your component renders, `useAllB2CAppAccessRightsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAllB2CAppAccessRightsQuery({
 *   variables: {
 *      appId: // value for 'appId'
 *      environment: // value for 'environment'
 *   },
 * });
 */
export function useAllB2CAppAccessRightsQuery(baseOptions: Apollo.QueryHookOptions<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables> & ({ variables: AllB2CAppAccessRightsQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables>(AllB2CAppAccessRightsDocument, options);
      }
export function useAllB2CAppAccessRightsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables>(AllB2CAppAccessRightsDocument, options);
        }
export function useAllB2CAppAccessRightsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables>(AllB2CAppAccessRightsDocument, options);
        }
export type AllB2CAppAccessRightsQueryHookResult = ReturnType<typeof useAllB2CAppAccessRightsQuery>;
export type AllB2CAppAccessRightsLazyQueryHookResult = ReturnType<typeof useAllB2CAppAccessRightsLazyQuery>;
export type AllB2CAppAccessRightsSuspenseQueryHookResult = ReturnType<typeof useAllB2CAppAccessRightsSuspenseQuery>;
export type AllB2CAppAccessRightsQueryResult = Apollo.QueryResult<AllB2CAppAccessRightsQuery, AllB2CAppAccessRightsQueryVariables>;
export const AllB2CAppBuildsDocument = gql`
    query allB2CAppBuilds($where: B2CAppBuildWhereInput!, $first: Int!, $skip: Int!) {
  builds: allB2CAppBuilds(
    where: $where
    first: $first
    skip: $skip
    sortBy: createdAt_DESC
  ) {
    id
    version
    createdAt
  }
  meta: _allB2CAppBuildsMeta(where: $where) {
    count
  }
}
    `;

/**
 * __useAllB2CAppBuildsQuery__
 *
 * To run a query within a React component, call `useAllB2CAppBuildsQuery` and pass it any options that fit your needs.
 * When your component renders, `useAllB2CAppBuildsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAllB2CAppBuildsQuery({
 *   variables: {
 *      where: // value for 'where'
 *      first: // value for 'first'
 *      skip: // value for 'skip'
 *   },
 * });
 */
export function useAllB2CAppBuildsQuery(baseOptions: Apollo.QueryHookOptions<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables> & ({ variables: AllB2CAppBuildsQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables>(AllB2CAppBuildsDocument, options);
      }
export function useAllB2CAppBuildsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables>(AllB2CAppBuildsDocument, options);
        }
export function useAllB2CAppBuildsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables>(AllB2CAppBuildsDocument, options);
        }
export type AllB2CAppBuildsQueryHookResult = ReturnType<typeof useAllB2CAppBuildsQuery>;
export type AllB2CAppBuildsLazyQueryHookResult = ReturnType<typeof useAllB2CAppBuildsLazyQuery>;
export type AllB2CAppBuildsSuspenseQueryHookResult = ReturnType<typeof useAllB2CAppBuildsSuspenseQuery>;
export type AllB2CAppBuildsQueryResult = Apollo.QueryResult<AllB2CAppBuildsQuery, AllB2CAppBuildsQueryVariables>;
export const CreateB2CAppBuildDocument = gql`
    mutation createB2CAppBuild($data: B2CAppBuildCreateInput!) {
  build: createB2CAppBuild(data: $data) {
    id
    version
  }
}
    `;
export type CreateB2CAppBuildMutationFn = Apollo.MutationFunction<CreateB2CAppBuildMutation, CreateB2CAppBuildMutationVariables>;

/**
 * __useCreateB2CAppBuildMutation__
 *
 * To run a mutation, you first call `useCreateB2CAppBuildMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateB2CAppBuildMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createB2CAppBuildMutation, { data, loading, error }] = useCreateB2CAppBuildMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateB2CAppBuildMutation(baseOptions?: Apollo.MutationHookOptions<CreateB2CAppBuildMutation, CreateB2CAppBuildMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateB2CAppBuildMutation, CreateB2CAppBuildMutationVariables>(CreateB2CAppBuildDocument, options);
      }
export type CreateB2CAppBuildMutationHookResult = ReturnType<typeof useCreateB2CAppBuildMutation>;
export type CreateB2CAppBuildMutationResult = Apollo.MutationResult<CreateB2CAppBuildMutation>;
export type CreateB2CAppBuildMutationOptions = Apollo.BaseMutationOptions<CreateB2CAppBuildMutation, CreateB2CAppBuildMutationVariables>;
export const AllB2CAppPropertiesDocument = gql`
    query allB2CAppProperties($data: AllB2CAppPropertiesInput!) {
  properties: allB2CAppProperties(data: $data) {
    objs {
      id
      address
    }
    meta {
      count
    }
  }
}
    `;

/**
 * __useAllB2CAppPropertiesQuery__
 *
 * To run a query within a React component, call `useAllB2CAppPropertiesQuery` and pass it any options that fit your needs.
 * When your component renders, `useAllB2CAppPropertiesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAllB2CAppPropertiesQuery({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useAllB2CAppPropertiesQuery(baseOptions: Apollo.QueryHookOptions<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables> & ({ variables: AllB2CAppPropertiesQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables>(AllB2CAppPropertiesDocument, options);
      }
export function useAllB2CAppPropertiesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables>(AllB2CAppPropertiesDocument, options);
        }
export function useAllB2CAppPropertiesSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables>(AllB2CAppPropertiesDocument, options);
        }
export type AllB2CAppPropertiesQueryHookResult = ReturnType<typeof useAllB2CAppPropertiesQuery>;
export type AllB2CAppPropertiesLazyQueryHookResult = ReturnType<typeof useAllB2CAppPropertiesLazyQuery>;
export type AllB2CAppPropertiesSuspenseQueryHookResult = ReturnType<typeof useAllB2CAppPropertiesSuspenseQuery>;
export type AllB2CAppPropertiesQueryResult = Apollo.QueryResult<AllB2CAppPropertiesQuery, AllB2CAppPropertiesQueryVariables>;
export const CreateB2CAppPropertyDocument = gql`
    mutation createB2CAppProperty($data: CreateB2CAppPropertyInput!) {
  property: createB2CAppProperty(data: $data) {
    id
  }
}
    `;
export type CreateB2CAppPropertyMutationFn = Apollo.MutationFunction<CreateB2CAppPropertyMutation, CreateB2CAppPropertyMutationVariables>;

/**
 * __useCreateB2CAppPropertyMutation__
 *
 * To run a mutation, you first call `useCreateB2CAppPropertyMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateB2CAppPropertyMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createB2CAppPropertyMutation, { data, loading, error }] = useCreateB2CAppPropertyMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateB2CAppPropertyMutation(baseOptions?: Apollo.MutationHookOptions<CreateB2CAppPropertyMutation, CreateB2CAppPropertyMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateB2CAppPropertyMutation, CreateB2CAppPropertyMutationVariables>(CreateB2CAppPropertyDocument, options);
      }
export type CreateB2CAppPropertyMutationHookResult = ReturnType<typeof useCreateB2CAppPropertyMutation>;
export type CreateB2CAppPropertyMutationResult = Apollo.MutationResult<CreateB2CAppPropertyMutation>;
export type CreateB2CAppPropertyMutationOptions = Apollo.BaseMutationOptions<CreateB2CAppPropertyMutation, CreateB2CAppPropertyMutationVariables>;
export const DeleteB2CAppPropertyDocument = gql`
    mutation deleteB2CAppProperty($data: DeleteB2CAppPropertyInput!) {
  property: deleteB2CAppProperty(data: $data) {
    id
    address
  }
}
    `;
export type DeleteB2CAppPropertyMutationFn = Apollo.MutationFunction<DeleteB2CAppPropertyMutation, DeleteB2CAppPropertyMutationVariables>;

/**
 * __useDeleteB2CAppPropertyMutation__
 *
 * To run a mutation, you first call `useDeleteB2CAppPropertyMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteB2CAppPropertyMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteB2CAppPropertyMutation, { data, loading, error }] = useDeleteB2CAppPropertyMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useDeleteB2CAppPropertyMutation(baseOptions?: Apollo.MutationHookOptions<DeleteB2CAppPropertyMutation, DeleteB2CAppPropertyMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteB2CAppPropertyMutation, DeleteB2CAppPropertyMutationVariables>(DeleteB2CAppPropertyDocument, options);
      }
export type DeleteB2CAppPropertyMutationHookResult = ReturnType<typeof useDeleteB2CAppPropertyMutation>;
export type DeleteB2CAppPropertyMutationResult = Apollo.MutationResult<DeleteB2CAppPropertyMutation>;
export type DeleteB2CAppPropertyMutationOptions = Apollo.BaseMutationOptions<DeleteB2CAppPropertyMutation, DeleteB2CAppPropertyMutationVariables>;
export const AllB2CAppPublishRequestsDocument = gql`
    query allB2CAppPublishRequests($appId: ID!) {
  requests: allB2CAppPublishRequests(
    where: {app: {id: $appId}}
    first: 1
    skip: 0
  ) {
    isAppTested
    isInfoApproved
    isContractSigned
    status
  }
}
    `;

/**
 * __useAllB2CAppPublishRequestsQuery__
 *
 * To run a query within a React component, call `useAllB2CAppPublishRequestsQuery` and pass it any options that fit your needs.
 * When your component renders, `useAllB2CAppPublishRequestsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAllB2CAppPublishRequestsQuery({
 *   variables: {
 *      appId: // value for 'appId'
 *   },
 * });
 */
export function useAllB2CAppPublishRequestsQuery(baseOptions: Apollo.QueryHookOptions<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables> & ({ variables: AllB2CAppPublishRequestsQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables>(AllB2CAppPublishRequestsDocument, options);
      }
export function useAllB2CAppPublishRequestsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables>(AllB2CAppPublishRequestsDocument, options);
        }
export function useAllB2CAppPublishRequestsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables>(AllB2CAppPublishRequestsDocument, options);
        }
export type AllB2CAppPublishRequestsQueryHookResult = ReturnType<typeof useAllB2CAppPublishRequestsQuery>;
export type AllB2CAppPublishRequestsLazyQueryHookResult = ReturnType<typeof useAllB2CAppPublishRequestsLazyQuery>;
export type AllB2CAppPublishRequestsSuspenseQueryHookResult = ReturnType<typeof useAllB2CAppPublishRequestsSuspenseQuery>;
export type AllB2CAppPublishRequestsQueryResult = Apollo.QueryResult<AllB2CAppPublishRequestsQuery, AllB2CAppPublishRequestsQueryVariables>;
export const CreateB2CAppPublishRequestDocument = gql`
    mutation createB2CAppPublishRequest($data: B2CAppPublishRequestCreateInput!) {
  request: createB2CAppPublishRequest(data: $data) {
    id
  }
}
    `;
export type CreateB2CAppPublishRequestMutationFn = Apollo.MutationFunction<CreateB2CAppPublishRequestMutation, CreateB2CAppPublishRequestMutationVariables>;

/**
 * __useCreateB2CAppPublishRequestMutation__
 *
 * To run a mutation, you first call `useCreateB2CAppPublishRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateB2CAppPublishRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createB2CAppPublishRequestMutation, { data, loading, error }] = useCreateB2CAppPublishRequestMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateB2CAppPublishRequestMutation(baseOptions?: Apollo.MutationHookOptions<CreateB2CAppPublishRequestMutation, CreateB2CAppPublishRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateB2CAppPublishRequestMutation, CreateB2CAppPublishRequestMutationVariables>(CreateB2CAppPublishRequestDocument, options);
      }
export type CreateB2CAppPublishRequestMutationHookResult = ReturnType<typeof useCreateB2CAppPublishRequestMutation>;
export type CreateB2CAppPublishRequestMutationResult = Apollo.MutationResult<CreateB2CAppPublishRequestMutation>;
export type CreateB2CAppPublishRequestMutationOptions = Apollo.BaseMutationOptions<CreateB2CAppPublishRequestMutation, CreateB2CAppPublishRequestMutationVariables>;
export const GetB2CAppInfoDocument = gql`
    query getB2CAppInfo($data: GetB2CAppInfoInput!) {
  info: getB2CAppInfo(data: $data) {
    id
    environment
    currentBuild {
      id
      version
    }
  }
}
    `;

/**
 * __useGetB2CAppInfoQuery__
 *
 * To run a query within a React component, call `useGetB2CAppInfoQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetB2CAppInfoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetB2CAppInfoQuery({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useGetB2CAppInfoQuery(baseOptions: Apollo.QueryHookOptions<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables> & ({ variables: GetB2CAppInfoQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables>(GetB2CAppInfoDocument, options);
      }
export function useGetB2CAppInfoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables>(GetB2CAppInfoDocument, options);
        }
export function useGetB2CAppInfoSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables>(GetB2CAppInfoDocument, options);
        }
export type GetB2CAppInfoQueryHookResult = ReturnType<typeof useGetB2CAppInfoQuery>;
export type GetB2CAppInfoLazyQueryHookResult = ReturnType<typeof useGetB2CAppInfoLazyQuery>;
export type GetB2CAppInfoSuspenseQueryHookResult = ReturnType<typeof useGetB2CAppInfoSuspenseQuery>;
export type GetB2CAppInfoQueryResult = Apollo.QueryResult<GetB2CAppInfoQuery, GetB2CAppInfoQueryVariables>;
export const GetOidcClientDocument = gql`
    query getOIDCClient($data: GetOIDCClientInput!) {
  client: OIDCClient(data: $data) {
    id
    clientId
    redirectUri
    isEnabled
  }
}
    `;

/**
 * __useGetOidcClientQuery__
 *
 * To run a query within a React component, call `useGetOidcClientQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetOidcClientQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetOidcClientQuery({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useGetOidcClientQuery(baseOptions: Apollo.QueryHookOptions<GetOidcClientQuery, GetOidcClientQueryVariables> & ({ variables: GetOidcClientQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetOidcClientQuery, GetOidcClientQueryVariables>(GetOidcClientDocument, options);
      }
export function useGetOidcClientLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetOidcClientQuery, GetOidcClientQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetOidcClientQuery, GetOidcClientQueryVariables>(GetOidcClientDocument, options);
        }
export function useGetOidcClientSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetOidcClientQuery, GetOidcClientQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<GetOidcClientQuery, GetOidcClientQueryVariables>(GetOidcClientDocument, options);
        }
export type GetOidcClientQueryHookResult = ReturnType<typeof useGetOidcClientQuery>;
export type GetOidcClientLazyQueryHookResult = ReturnType<typeof useGetOidcClientLazyQuery>;
export type GetOidcClientSuspenseQueryHookResult = ReturnType<typeof useGetOidcClientSuspenseQuery>;
export type GetOidcClientQueryResult = Apollo.QueryResult<GetOidcClientQuery, GetOidcClientQueryVariables>;
export const CreateOidcClientDocument = gql`
    mutation createOIDCClient($data: CreateOIDCClientInput!) {
  client: createOIDCClient(data: $data) {
    clientSecret
  }
}
    `;
export type CreateOidcClientMutationFn = Apollo.MutationFunction<CreateOidcClientMutation, CreateOidcClientMutationVariables>;

/**
 * __useCreateOidcClientMutation__
 *
 * To run a mutation, you first call `useCreateOidcClientMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOidcClientMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOidcClientMutation, { data, loading, error }] = useCreateOidcClientMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOidcClientMutation(baseOptions?: Apollo.MutationHookOptions<CreateOidcClientMutation, CreateOidcClientMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOidcClientMutation, CreateOidcClientMutationVariables>(CreateOidcClientDocument, options);
      }
export type CreateOidcClientMutationHookResult = ReturnType<typeof useCreateOidcClientMutation>;
export type CreateOidcClientMutationResult = Apollo.MutationResult<CreateOidcClientMutation>;
export type CreateOidcClientMutationOptions = Apollo.BaseMutationOptions<CreateOidcClientMutation, CreateOidcClientMutationVariables>;
export const UpdateOidcClientUrlDocument = gql`
    mutation updateOIDCClientUrl($data: UpdateOIDCClientUrlInput!) {
  client: updateOIDCClientUrl(data: $data) {
    redirectUri
  }
}
    `;
export type UpdateOidcClientUrlMutationFn = Apollo.MutationFunction<UpdateOidcClientUrlMutation, UpdateOidcClientUrlMutationVariables>;

/**
 * __useUpdateOidcClientUrlMutation__
 *
 * To run a mutation, you first call `useUpdateOidcClientUrlMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOidcClientUrlMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOidcClientUrlMutation, { data, loading, error }] = useUpdateOidcClientUrlMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOidcClientUrlMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOidcClientUrlMutation, UpdateOidcClientUrlMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOidcClientUrlMutation, UpdateOidcClientUrlMutationVariables>(UpdateOidcClientUrlDocument, options);
      }
export type UpdateOidcClientUrlMutationHookResult = ReturnType<typeof useUpdateOidcClientUrlMutation>;
export type UpdateOidcClientUrlMutationResult = Apollo.MutationResult<UpdateOidcClientUrlMutation>;
export type UpdateOidcClientUrlMutationOptions = Apollo.BaseMutationOptions<UpdateOidcClientUrlMutation, UpdateOidcClientUrlMutationVariables>;
export const GenerateOidcClientSecretDocument = gql`
    mutation generateOIDCClientSecret($data: GenerateOIDCClientSecretInput!) {
  client: generateOIDCClientSecret(data: $data) {
    clientSecret
  }
}
    `;
export type GenerateOidcClientSecretMutationFn = Apollo.MutationFunction<GenerateOidcClientSecretMutation, GenerateOidcClientSecretMutationVariables>;

/**
 * __useGenerateOidcClientSecretMutation__
 *
 * To run a mutation, you first call `useGenerateOidcClientSecretMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useGenerateOidcClientSecretMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [generateOidcClientSecretMutation, { data, loading, error }] = useGenerateOidcClientSecretMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useGenerateOidcClientSecretMutation(baseOptions?: Apollo.MutationHookOptions<GenerateOidcClientSecretMutation, GenerateOidcClientSecretMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<GenerateOidcClientSecretMutation, GenerateOidcClientSecretMutationVariables>(GenerateOidcClientSecretDocument, options);
      }
export type GenerateOidcClientSecretMutationHookResult = ReturnType<typeof useGenerateOidcClientSecretMutation>;
export type GenerateOidcClientSecretMutationResult = Apollo.MutationResult<GenerateOidcClientSecretMutation>;
export type GenerateOidcClientSecretMutationOptions = Apollo.BaseMutationOptions<GenerateOidcClientSecretMutation, GenerateOidcClientSecretMutationVariables>;
export const PublishB2CAppDocument = gql`
    mutation publishB2CApp($data: PublishB2CAppInput!) {
  publishB2CApp(data: $data) {
    success
  }
}
    `;
export type PublishB2CAppMutationFn = Apollo.MutationFunction<PublishB2CAppMutation, PublishB2CAppMutationVariables>;

/**
 * __usePublishB2CAppMutation__
 *
 * To run a mutation, you first call `usePublishB2CAppMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePublishB2CAppMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [publishB2CAppMutation, { data, loading, error }] = usePublishB2CAppMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function usePublishB2CAppMutation(baseOptions?: Apollo.MutationHookOptions<PublishB2CAppMutation, PublishB2CAppMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PublishB2CAppMutation, PublishB2CAppMutationVariables>(PublishB2CAppDocument, options);
      }
export type PublishB2CAppMutationHookResult = ReturnType<typeof usePublishB2CAppMutation>;
export type PublishB2CAppMutationResult = Apollo.MutationResult<PublishB2CAppMutation>;
export type PublishB2CAppMutationOptions = Apollo.BaseMutationOptions<PublishB2CAppMutation, PublishB2CAppMutationVariables>;
export const RegisterAppUserServiceDocument = gql`
    mutation registerAppUserService($data: RegisterAppUserServiceInput!) {
  condoUser: registerAppUserService(data: $data) {
    id
  }
}
    `;
export type RegisterAppUserServiceMutationFn = Apollo.MutationFunction<RegisterAppUserServiceMutation, RegisterAppUserServiceMutationVariables>;

/**
 * __useRegisterAppUserServiceMutation__
 *
 * To run a mutation, you first call `useRegisterAppUserServiceMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useRegisterAppUserServiceMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [registerAppUserServiceMutation, { data, loading, error }] = useRegisterAppUserServiceMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useRegisterAppUserServiceMutation(baseOptions?: Apollo.MutationHookOptions<RegisterAppUserServiceMutation, RegisterAppUserServiceMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<RegisterAppUserServiceMutation, RegisterAppUserServiceMutationVariables>(RegisterAppUserServiceDocument, options);
      }
export type RegisterAppUserServiceMutationHookResult = ReturnType<typeof useRegisterAppUserServiceMutation>;
export type RegisterAppUserServiceMutationResult = Apollo.MutationResult<RegisterAppUserServiceMutation>;
export type RegisterAppUserServiceMutationOptions = Apollo.BaseMutationOptions<RegisterAppUserServiceMutation, RegisterAppUserServiceMutationVariables>;
export const SignInDocument = gql`
    mutation signIn($phone: String!, $password: String!) {
  authenticateUserWithPhoneAndPassword(data: {phone: $phone, password: $password}) {
    item {
      id
    }
  }
}
    `;
export type SignInMutationFn = Apollo.MutationFunction<SignInMutation, SignInMutationVariables>;

/**
 * __useSignInMutation__
 *
 * To run a mutation, you first call `useSignInMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useSignInMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [signInMutation, { data, loading, error }] = useSignInMutation({
 *   variables: {
 *      phone: // value for 'phone'
 *      password: // value for 'password'
 *   },
 * });
 */
export function useSignInMutation(baseOptions?: Apollo.MutationHookOptions<SignInMutation, SignInMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<SignInMutation, SignInMutationVariables>(SignInDocument, options);
      }
export type SignInMutationHookResult = ReturnType<typeof useSignInMutation>;
export type SignInMutationResult = Apollo.MutationResult<SignInMutation>;
export type SignInMutationOptions = Apollo.BaseMutationOptions<SignInMutation, SignInMutationVariables>;
export const AuthenticatedUserDocument = gql`
    query authenticatedUser {
  authenticatedUser {
    id
    name
    phone
    isAdmin
    isSupport
  }
}
    `;

/**
 * __useAuthenticatedUserQuery__
 *
 * To run a query within a React component, call `useAuthenticatedUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useAuthenticatedUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAuthenticatedUserQuery({
 *   variables: {
 *   },
 * });
 */
export function useAuthenticatedUserQuery(baseOptions?: Apollo.QueryHookOptions<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>(AuthenticatedUserDocument, options);
      }
export function useAuthenticatedUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>(AuthenticatedUserDocument, options);
        }
export function useAuthenticatedUserSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>) {
          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}
          return Apollo.useSuspenseQuery<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>(AuthenticatedUserDocument, options);
        }
export type AuthenticatedUserQueryHookResult = ReturnType<typeof useAuthenticatedUserQuery>;
export type AuthenticatedUserLazyQueryHookResult = ReturnType<typeof useAuthenticatedUserLazyQuery>;
export type AuthenticatedUserSuspenseQueryHookResult = ReturnType<typeof useAuthenticatedUserSuspenseQuery>;
export type AuthenticatedUserQueryResult = Apollo.QueryResult<AuthenticatedUserQuery, AuthenticatedUserQueryVariables>;
export const StartConfirmEmailActionDocument = gql`
    mutation startConfirmEmailAction($data: StartConfirmEmailActionInput!) {
  startConfirmEmailAction(data: $data) {
    actionId
    email
  }
}
    `;
export type StartConfirmEmailActionMutationFn = Apollo.MutationFunction<StartConfirmEmailActionMutation, StartConfirmEmailActionMutationVariables>;

/**
 * __useStartConfirmEmailActionMutation__
 *
 * To run a mutation, you first call `useStartConfirmEmailActionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useStartConfirmEmailActionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [startConfirmEmailActionMutation, { data, loading, error }] = useStartConfirmEmailActionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useStartConfirmEmailActionMutation(baseOptions?: Apollo.MutationHookOptions<StartConfirmEmailActionMutation, StartConfirmEmailActionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<StartConfirmEmailActionMutation, StartConfirmEmailActionMutationVariables>(StartConfirmEmailActionDocument, options);
      }
export type StartConfirmEmailActionMutationHookResult = ReturnType<typeof useStartConfirmEmailActionMutation>;
export type StartConfirmEmailActionMutationResult = Apollo.MutationResult<StartConfirmEmailActionMutation>;
export type StartConfirmEmailActionMutationOptions = Apollo.BaseMutationOptions<StartConfirmEmailActionMutation, StartConfirmEmailActionMutationVariables>;
export const CompleteConfirmEmailActionDocument = gql`
    mutation completeConfirmEmailAction($data: CompleteConfirmEmailActionInput!) {
  completeConfirmEmailAction(data: $data) {
    status
  }
}
    `;
export type CompleteConfirmEmailActionMutationFn = Apollo.MutationFunction<CompleteConfirmEmailActionMutation, CompleteConfirmEmailActionMutationVariables>;

/**
 * __useCompleteConfirmEmailActionMutation__
 *
 * To run a mutation, you first call `useCompleteConfirmEmailActionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCompleteConfirmEmailActionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [completeConfirmEmailActionMutation, { data, loading, error }] = useCompleteConfirmEmailActionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCompleteConfirmEmailActionMutation(baseOptions?: Apollo.MutationHookOptions<CompleteConfirmEmailActionMutation, CompleteConfirmEmailActionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CompleteConfirmEmailActionMutation, CompleteConfirmEmailActionMutationVariables>(CompleteConfirmEmailActionDocument, options);
      }
export type CompleteConfirmEmailActionMutationHookResult = ReturnType<typeof useCompleteConfirmEmailActionMutation>;
export type CompleteConfirmEmailActionMutationResult = Apollo.MutationResult<CompleteConfirmEmailActionMutation>;
export type CompleteConfirmEmailActionMutationOptions = Apollo.BaseMutationOptions<CompleteConfirmEmailActionMutation, CompleteConfirmEmailActionMutationVariables>;
export const StartConfirmPhoneActionDocument = gql`
    mutation startConfirmPhoneAction($data: StartConfirmPhoneActionInput!) {
  startConfirmPhoneAction(data: $data) {
    actionId
    phone
  }
}
    `;
export type StartConfirmPhoneActionMutationFn = Apollo.MutationFunction<StartConfirmPhoneActionMutation, StartConfirmPhoneActionMutationVariables>;

/**
 * __useStartConfirmPhoneActionMutation__
 *
 * To run a mutation, you first call `useStartConfirmPhoneActionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useStartConfirmPhoneActionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [startConfirmPhoneActionMutation, { data, loading, error }] = useStartConfirmPhoneActionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useStartConfirmPhoneActionMutation(baseOptions?: Apollo.MutationHookOptions<StartConfirmPhoneActionMutation, StartConfirmPhoneActionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<StartConfirmPhoneActionMutation, StartConfirmPhoneActionMutationVariables>(StartConfirmPhoneActionDocument, options);
      }
export type StartConfirmPhoneActionMutationHookResult = ReturnType<typeof useStartConfirmPhoneActionMutation>;
export type StartConfirmPhoneActionMutationResult = Apollo.MutationResult<StartConfirmPhoneActionMutation>;
export type StartConfirmPhoneActionMutationOptions = Apollo.BaseMutationOptions<StartConfirmPhoneActionMutation, StartConfirmPhoneActionMutationVariables>;
export const CompleteConfirmPhoneActionDocument = gql`
    mutation completeConfirmPhoneAction($data: CompleteConfirmPhoneActionInput!) {
  completeConfirmPhoneAction(data: $data) {
    status
  }
}
    `;
export type CompleteConfirmPhoneActionMutationFn = Apollo.MutationFunction<CompleteConfirmPhoneActionMutation, CompleteConfirmPhoneActionMutationVariables>;

/**
 * __useCompleteConfirmPhoneActionMutation__
 *
 * To run a mutation, you first call `useCompleteConfirmPhoneActionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCompleteConfirmPhoneActionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [completeConfirmPhoneActionMutation, { data, loading, error }] = useCompleteConfirmPhoneActionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCompleteConfirmPhoneActionMutation(baseOptions?: Apollo.MutationHookOptions<CompleteConfirmPhoneActionMutation, CompleteConfirmPhoneActionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CompleteConfirmPhoneActionMutation, CompleteConfirmPhoneActionMutationVariables>(CompleteConfirmPhoneActionDocument, options);
      }
export type CompleteConfirmPhoneActionMutationHookResult = ReturnType<typeof useCompleteConfirmPhoneActionMutation>;
export type CompleteConfirmPhoneActionMutationResult = Apollo.MutationResult<CompleteConfirmPhoneActionMutation>;
export type CompleteConfirmPhoneActionMutationOptions = Apollo.BaseMutationOptions<CompleteConfirmPhoneActionMutation, CompleteConfirmPhoneActionMutationVariables>;
export const RegisterNewUserDocument = gql`
    mutation registerNewUser($data: RegisterNewUserInput!) {
  registerNewUser(data: $data) {
    id
  }
}
    `;
export type RegisterNewUserMutationFn = Apollo.MutationFunction<RegisterNewUserMutation, RegisterNewUserMutationVariables>;

/**
 * __useRegisterNewUserMutation__
 *
 * To run a mutation, you first call `useRegisterNewUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useRegisterNewUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [registerNewUserMutation, { data, loading, error }] = useRegisterNewUserMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useRegisterNewUserMutation(baseOptions?: Apollo.MutationHookOptions<RegisterNewUserMutation, RegisterNewUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<RegisterNewUserMutation, RegisterNewUserMutationVariables>(RegisterNewUserDocument, options);
      }
export type RegisterNewUserMutationHookResult = ReturnType<typeof useRegisterNewUserMutation>;
export type RegisterNewUserMutationResult = Apollo.MutationResult<RegisterNewUserMutation>;
export type RegisterNewUserMutationOptions = Apollo.BaseMutationOptions<RegisterNewUserMutation, RegisterNewUserMutationVariables>;
export const SignOutDocument = gql`
    mutation signOut {
  unauthenticateUser {
    success
  }
}
    `;
export type SignOutMutationFn = Apollo.MutationFunction<SignOutMutation, SignOutMutationVariables>;

/**
 * __useSignOutMutation__
 *
 * To run a mutation, you first call `useSignOutMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useSignOutMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [signOutMutation, { data, loading, error }] = useSignOutMutation({
 *   variables: {
 *   },
 * });
 */
export function useSignOutMutation(baseOptions?: Apollo.MutationHookOptions<SignOutMutation, SignOutMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<SignOutMutation, SignOutMutationVariables>(SignOutDocument, options);
      }
export type SignOutMutationHookResult = ReturnType<typeof useSignOutMutation>;
export type SignOutMutationResult = Apollo.MutationResult<SignOutMutation>;
export type SignOutMutationOptions = Apollo.BaseMutationOptions<SignOutMutation, SignOutMutationVariables>;