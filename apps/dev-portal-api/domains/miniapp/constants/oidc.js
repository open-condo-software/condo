const { CONDO_SUPPORTED_RESPONSE_TYPES } = require('@condo/domains/user/constants/oidc')

const OIDC_SECRET_LENGTH = 32

const LOWER_CASE_SYMBOLS = 'abcdefghijklmnopqrstuvwxyz'
const UPPER_CASE_SYMBOLS = LOWER_CASE_SYMBOLS.toUpperCase()
const DIGITS_SYMBOLS = '1234567890'
const OIDC_SECRET_CHAR_POOL = `${LOWER_CASE_SYMBOLS}${UPPER_CASE_SYMBOLS}${DIGITS_SYMBOLS}`

const OIDC_IMPLICIT_GRANT_TYPE = 'implicit'
const OIDC_AUTH_CODE_GRANT_TYPE = 'authorization_code'
const OIDC_REFRESH_TOKEN_GRANT_TYPE = 'refresh_token'
const OIDC_GRANT_TYPES = [
    OIDC_IMPLICIT_GRANT_TYPE,
    OIDC_AUTH_CODE_GRANT_TYPE,
    OIDC_REFRESH_TOKEN_GRANT_TYPE,
]

const OIDC_TOKEN_AUTH_BASIC_METHOD = 'client_secret_basic'
const OIDC_TOKEN_AUTH_POST_METHOD = 'client_secret_post'
const OIDC_TOKEN_AUTH_METHODS = [
    OIDC_TOKEN_AUTH_BASIC_METHOD,
    OIDC_TOKEN_AUTH_POST_METHOD,
]

const OIDC_CLIENT_DEFAULT_PAYLOAD = {
    grant_types: OIDC_GRANT_TYPES,
    response_types: CONDO_SUPPORTED_RESPONSE_TYPES,
    token_endpoint_auth_method: OIDC_TOKEN_AUTH_BASIC_METHOD,
}

module.exports = {
    OIDC_SECRET_LENGTH,
    OIDC_SECRET_CHAR_POOL,
    OIDC_GRANT_TYPES,
    OIDC_TOKEN_AUTH_BASIC_METHOD,
    OIDC_TOKEN_AUTH_METHODS,
    OIDC_CLIENT_DEFAULT_PAYLOAD,
}