/**
 * Generated by `createschema miniapp.B2BApp 'name:Text'`
 */

const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const { getSharedConstraintsValidator } = require('@dev-portal-api/domains/common/serverSchema/constraints')
const { FileAdapter, getFileMetaAfterChange, getMimeTypesValidator } = require('@dev-portal-api/domains/common/utils/files')
const { AVAILABLE_ENVIRONMENTS } = require('@dev-portal-api/domains/miniapp/constants/publishing')
const { exportable } = require('@dev-portal-api/domains/miniapp/plugins/exportable')
const { canReadAppSchemas, canManageAppSchemas } = require('@dev-portal-api/domains/miniapp/utils/serverSchema/access')


const LOGO_FILE_ADAPTER = new FileAdapter('B2BApps/logos', true)
const LOGO_META_AFTER_CHANGE = getFileMetaAfterChange(LOGO_FILE_ADAPTER, 'logo')


const B2BApp = new GQLListSchema('B2BApp', {
    schemaDoc: 'B2B application',
    fields: {
        name: {
            schemaDoc: 'Name of application',
            type: 'Text',
            isRequired: true,
        },
        developer: {
            schemaDoc: 'Developer company name which will be exported. If not specified, creator name will be taken',
            type: 'Text',
            isRequired: false,
        },
        developerUrl: {
            schemaDoc: 'Developer company URL which will be shown on app page',
            type: 'Text',
            isRequired: false,
        },
        logo: {
            schemaDoc: 'Icon of application. Accepted mime types: ["image/png", "image/jpeg", "image/webp"]',
            type: 'File',
            isRequired: false,
            adapter: LOGO_FILE_ADAPTER,
            hooks: {
                validateInput: getMimeTypesValidator({ allowedTypes: ['image/png', 'image/jpeg', 'image/webp'] }),
            },
        },
        shortDescription: {
            shortDescription: 'Short text description of application shown on its card in apps catalog',
            type: 'Text',
            isRequired: false,
        },
        detailedDescription: {
            schemaDoc:
                'Detailed markdown description of application shown on its page. ' +
                'Used to describe apps functionality, pricing, etc',
            type: 'Markdown',
            isRequired: false,
        },
        ...Object.fromEntries(AVAILABLE_ENVIRONMENTS.map(environment => [
            `${environment}AppUrl`, {
                schemaDoc: `Web app entrypoint URL for ${environment} environment, which is used to open app in WebView or IFrame`,
                type: 'Text',
                isRequired: false,
            },
        ])),
    },
    hooks: {
        afterChange: LOGO_META_AFTER_CHANGE,
        validateInput: getSharedConstraintsValidator(['B2CApp']),
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), exportable(), historical()],
    access: {
        read: canReadAppSchemas,
        create: canManageAppSchemas,
        update: canManageAppSchemas,
        delete: false,
        auth: true,
    },
})

module.exports = {
    B2BApp,
}
