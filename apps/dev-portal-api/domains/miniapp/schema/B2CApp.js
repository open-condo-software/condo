/**
 * Generated by `createschema miniapp.B2CApp 'name:Text'`
 */

const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const { getSharedConstraintsValidator } = require('@dev-portal-api/domains/common/serverSchema/constraints')
const {
    getFileMetaAfterChange,
    FileAdapter,
    getMimeTypesValidator,
} = require('@dev-portal-api/domains/common/utils/files')
const { exportable } = require('@dev-portal-api/domains/miniapp/plugins/exportable')
const { canReadAppSchemas, canManageAppSchemas } = require('@dev-portal-api/domains/miniapp/utils/serverSchema/access')

const LOGO_FILE_ADAPTER = new FileAdapter('B2CApps/logos', true)
const LOGO_META_AFTER_CHANGE = getFileMetaAfterChange(LOGO_FILE_ADAPTER, 'logo')

const B2CApp = new GQLListSchema('B2CApp', {
    schemaDoc: 'B2C application',
    fields: {
        name: {
            schemaDoc: 'Name of application',
            type: 'Text',
            isRequired: true,
        },
        logo: {
            schemaDoc: 'Icon of application',
            type: 'File',
            isRequired: false,
            adapter: LOGO_FILE_ADAPTER,
            hooks: {
                validateInput: getMimeTypesValidator({ allowedTypes: ['image/png'] }),
            },
        },
        developer: {
            schemaDoc: 'Developer company name which will be exported. If not specified, creator name will be taken',
            type: 'Text',
            isRequired: false,
        },
    },
    hooks: {
        validateInput: getSharedConstraintsValidator(['B2BApp']),
        afterChange: LOGO_META_AFTER_CHANGE,
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), exportable(), historical()],
    access: {
        read: canReadAppSchemas,
        create: canManageAppSchemas,
        update: canManageAppSchemas,
        delete: false,
        auth: true,
    },
})

module.exports = {
    B2CApp,
}
