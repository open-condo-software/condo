/**
 * Generated by `createschema miniapp.B2CApp 'name:Text'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { find } = require('@open-condo/keystone/schema')

async function canReadB2CApps ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return {}

    return { createdBy: { id: user.id } }
}

async function canManageB2CApps ({ authentication: { item: user }, operation, itemId, itemIds }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return true

    if (operation === 'create') {
        return true
    } else if (operation === 'update') {
        const ids = itemIds || [itemId]
        const apps = await find('B2CApp', {
            id_in: ids,
            deletedAt: null,
        })
        if (apps.length !== (new Set(ids)).size) {
            return false
        }

        return apps.every(app => app.createdBy === user.id)
    }

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadB2CApps,
    canManageB2CApps,
}
