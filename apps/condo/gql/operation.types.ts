// This file is autogenerated by @graphql-codegen/cli
// Do not edit / add anything manually, since it will be overridden by codegen

import * as Types from '@app/condo/schema'

export type GetBankAccountReportTasksQueryVariables = Types.Exact<{
    where: Types.BankAccountReportTaskWhereInput
}>


export type GetBankAccountReportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'BankAccountReportTask', id: string, progress?: number | null, status?: Types.BankAccountReportTaskStatusType | null } | null> | null }

export type CreateBankAccountReportTaskMutationVariables = Types.Exact<{
    data: Types.BankAccountReportTaskCreateInput
}>


export type CreateBankAccountReportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'BankAccountReportTask', id: string, progress?: number | null, status?: Types.BankAccountReportTaskStatusType | null } | null }

export type UpdateBankAccountReportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.BankAccountReportTaskUpdateInput
}>


export type UpdateBankAccountReportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'BankAccountReportTask', id: string, progress?: number | null, status?: Types.BankAccountReportTaskStatusType | null } | null }

export type GetBankSyncTasksQueryVariables = Types.Exact<{
    where: Types.BankSyncTaskWhereInput
}>


export type GetBankSyncTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'BankSyncTask', id: string, status?: Types.BankSyncTaskStatusType | null, processedCount?: number | null, totalCount?: number | null, meta?: any | null, property?: { __typename?: 'Property', id: string } | null, options?: { __typename?: 'BankSyncTaskOptions', type?: string | null } | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateBankSyncTaskMutationVariables = Types.Exact<{
    data: Types.BankSyncTaskCreateInput
}>


export type CreateBankSyncTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'BankSyncTask', id: string, status?: Types.BankSyncTaskStatusType | null, processedCount?: number | null, totalCount?: number | null, meta?: any | null, property?: { __typename?: 'Property', id: string } | null, options?: { __typename?: 'BankSyncTaskOptions', type?: string | null } | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateBankSyncTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.BankSyncTaskUpdateInput
}>


export type UpdateBankSyncTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'BankSyncTask', id: string, status?: Types.BankSyncTaskStatusType | null, processedCount?: number | null, totalCount?: number | null, meta?: any | null, property?: { __typename?: 'Property', id: string } | null, options?: { __typename?: 'BankSyncTaskOptions', type?: string | null } | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetProcessingTasksQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
    createdAtGte: Types.Scalars['String']['input']
}>


export type GetProcessingTasksQuery = { __typename?: 'Query', allTicketDocumentGenerationTasks?: Array<{ __typename: 'TicketDocumentGenerationTask', id: string, progress?: number | null, status?: Types.TicketDocumentGenerationTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null, allTicketExportTasks?: Array<{ __typename: 'TicketExportTask', id: string, status?: Types.TicketExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null, allIncidentExportTasks?: Array<{ __typename: 'IncidentExportTask', id: string, status?: Types.IncidentExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null, allContactExportTasks?: Array<{ __typename: 'ContactExportTask', id: string, status?: Types.ContactExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null, allBankSyncTasks?: Array<{ __typename: 'BankSyncTask', id: string, status?: Types.BankSyncTaskStatusType | null, processedCount?: number | null, totalCount?: number | null, meta?: any | null, property?: { __typename?: 'Property', id: string } | null, options?: { __typename?: 'BankSyncTaskOptions', type?: string | null } | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null, allBankAccountReportTasks?: Array<{ __typename: 'BankAccountReportTask', id: string, progress?: number | null, status?: Types.BankAccountReportTaskStatusType | null } | null> | null, allNewsItemRecipientsExportTasks?: Array<{ __typename: 'NewsItemRecipientsExportTask', id: string, status?: Types.NewsItemRecipientsExportTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null, allMeterReadingsImportTasks?: Array<{ __typename: 'MeterReadingsImportTask', id: string, status?: Types.MeterReadingsImportTaskStatusType | null, errorMessage?: string | null, totalRecordsCount?: number | null, processedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null, errorFile?: { __typename?: 'File', publicUrl?: string | null } | null } | null> | null, allMeterReadingExportTasks?: Array<{ __typename: 'MeterReadingExportTask', id: string, status?: Types.MeterReadingExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type GetContactByIdQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
}>


export type GetContactByIdQuery = { __typename?: 'Query', contacts?: Array<{ __typename?: 'Contact', id: string, name?: string | null, email?: string | null, phone?: string | null, unitName?: string | null, unitType?: Types.ContactUnitTypeType | null, isVerified?: boolean | null, organization?: { __typename?: 'Organization', id: string } | null, property?: { __typename?: 'Property', id: string, address?: string | null } | null, role?: { __typename?: 'ContactRole', id: string, name?: string | null } | null } | null> | null }

export type GetContactsExistenceQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.ContactWhereInput>
}>


export type GetContactsExistenceQuery = { __typename?: 'Query', contacts?: Array<{ __typename?: 'Contact', id: string } | null> | null }

export type GetContactsForTableQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.ContactWhereInput>
    first?: Types.InputMaybe<Types.Scalars['Int']['input']>
    skip?: Types.InputMaybe<Types.Scalars['Int']['input']>
    sortBy?: Types.InputMaybe<Array<Types.SortContactsBy> | Types.SortContactsBy>
}>


export type GetContactsForTableQuery = { __typename?: 'Query', contacts?: Array<{ __typename?: 'Contact', id: string, name?: string | null, unitName?: string | null, unitType?: Types.ContactUnitTypeType | null, phone?: string | null, email?: string | null, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, property?: { __typename?: 'Property', id: string, deletedAt?: string | null, address?: string | null, addressMeta?: { __typename?: 'AddressMetaField', data: { __typename?: 'AddressMetaDataField', street_with_type?: string | null, house_type?: string | null, house?: string | null, block_type?: string | null, block?: string | null, flat_type?: string | null, flat?: string | null, region_type_full?: string | null, region: string, region_with_type?: string | null, city_with_type?: string | null, city?: string | null, settlement_with_type?: string | null, area_with_type?: string | null } } | null } | null, role?: { __typename?: 'ContactRole', id: string, name?: string | null } | null } | null> | null, meta?: { __typename?: '_QueryMeta', count?: number | null } | null }

export type GetContactEditorContactsQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.ContactWhereInput>
}>


export type GetContactEditorContactsQuery = { __typename?: 'Query', contacts?: Array<{ __typename?: 'Contact', id: string, phone?: string | null, name?: string | null } | null> | null }

export type CreateContactMutationVariables = Types.Exact<{
    data: Types.ContactCreateInput
}>


export type CreateContactMutation = { __typename?: 'Mutation', contact?: { __typename?: 'Contact', id: string, phone?: string | null, unitName?: string | null, unitType?: Types.ContactUnitTypeType | null, property?: { __typename?: 'Property', id: string } | null } | null }

export type UpdateContactMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.ContactUpdateInput
}>


export type UpdateContactMutation = { __typename?: 'Mutation', contact?: { __typename?: 'Contact', id: string, phone?: string | null, unitName?: string | null, unitType?: Types.ContactUnitTypeType | null, property?: { __typename?: 'Property', id: string } | null } | null }

export type GetContactExportTasksQueryVariables = Types.Exact<{
    where: Types.ContactExportTaskWhereInput
}>


export type GetContactExportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'ContactExportTask', id: string, status?: Types.ContactExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateContactExportTaskMutationVariables = Types.Exact<{
    data: Types.ContactExportTaskCreateInput
}>


export type CreateContactExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'ContactExportTask', id: string, status?: Types.ContactExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateContactExportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.ContactExportTaskUpdateInput
}>


export type UpdateContactExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'ContactExportTask', id: string, status?: Types.ContactExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetCommonOrOrganizationContactRolesQueryVariables = Types.Exact<{
    organizationId: Types.Scalars['ID']['input']
}>


export type GetCommonOrOrganizationContactRolesQuery = { __typename?: 'Query', roles?: Array<{ __typename?: 'ContactRole', id: string, name?: string | null } | null> | null }

export type GetTicketInvoicesQueryVariables = Types.Exact<{
    ticketId: Types.Scalars['ID']['input']
}>


export type GetTicketInvoicesQuery = { __typename?: 'Query', invoices?: Array<{ __typename?: 'Invoice', id: string, status?: Types.InvoiceStatusType | null, number?: number | null, paymentType?: Types.InvoicePaymentTypeType | null, currencyCode?: string | null, rows: Array<{ __typename?: 'InvoiceRowSchemaField', name: string, toPay: string, isMin: boolean, count: number, sku?: string | null }>, organization?: { __typename?: 'Organization', id: string } | null, createdBy?: { __typename?: 'User', id: string, name?: string | null, type?: Types.UserTypeType | null } | null, ticket?: { __typename?: 'Ticket', id: string } | null } | null> | null }

export type GetInvoicesByIdsQueryVariables = Types.Exact<{
    ids: Array<Types.Scalars['ID']['input']> | Types.Scalars['ID']['input']
}>


export type GetInvoicesByIdsQuery = { __typename?: 'Query', invoices?: Array<{ __typename?: 'Invoice', id: string, status?: Types.InvoiceStatusType | null, number?: number | null, paymentType?: Types.InvoicePaymentTypeType | null, currencyCode?: string | null, rows: Array<{ __typename?: 'InvoiceRowSchemaField', name: string, toPay: string, isMin: boolean, count: number, sku?: string | null }>, organization?: { __typename?: 'Organization', id: string } | null, createdBy?: { __typename?: 'User', id: string, name?: string | null, type?: Types.UserTypeType | null } | null, ticket?: { __typename?: 'Ticket', id: string } | null } | null> | null }

export type GetMeterReadingExportTasksQueryVariables = Types.Exact<{
    where: Types.MeterReadingExportTaskWhereInput
}>


export type GetMeterReadingExportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'MeterReadingExportTask', id: string, status?: Types.MeterReadingExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateMeterReadingExportTaskMutationVariables = Types.Exact<{
    data: Types.MeterReadingExportTaskCreateInput
}>


export type CreateMeterReadingExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'MeterReadingExportTask', id: string, status?: Types.MeterReadingExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateMeterReadingExportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.MeterReadingExportTaskUpdateInput
}>


export type UpdateMeterReadingExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'MeterReadingExportTask', id: string, status?: Types.MeterReadingExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetMeterReadingsImportTasksQueryVariables = Types.Exact<{
    where: Types.MeterReadingsImportTaskWhereInput
}>


export type GetMeterReadingsImportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'MeterReadingsImportTask', id: string, status?: Types.MeterReadingsImportTaskStatusType | null, errorMessage?: string | null, totalRecordsCount?: number | null, processedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null, errorFile?: { __typename?: 'File', publicUrl?: string | null } | null } | null> | null }

export type CreateMeterReadingsImportTaskMutationVariables = Types.Exact<{
    data: Types.MeterReadingsImportTaskCreateInput
}>


export type CreateMeterReadingsImportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'MeterReadingsImportTask', id: string, status?: Types.MeterReadingsImportTaskStatusType | null, errorMessage?: string | null, totalRecordsCount?: number | null, processedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null, errorFile?: { __typename?: 'File', publicUrl?: string | null } | null } | null }

export type UpdateMeterReadingsImportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.MeterReadingsImportTaskUpdateInput
}>


export type UpdateMeterReadingsImportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'MeterReadingsImportTask', id: string, status?: Types.MeterReadingsImportTaskStatusType | null, errorMessage?: string | null, totalRecordsCount?: number | null, processedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null, errorFile?: { __typename?: 'File', publicUrl?: string | null } | null } | null }

export type GetNewsItemRecipientsExportTasksQueryVariables = Types.Exact<{
    where: Types.NewsItemRecipientsExportTaskWhereInput
}>


export type GetNewsItemRecipientsExportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'NewsItemRecipientsExportTask', id: string, status?: Types.NewsItemRecipientsExportTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateNewsItemRecipientsExportTaskMutationVariables = Types.Exact<{
    data: Types.NewsItemRecipientsExportTaskCreateInput
}>


export type CreateNewsItemRecipientsExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'NewsItemRecipientsExportTask', id: string, status?: Types.NewsItemRecipientsExportTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateNewsItemRecipientsExportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.NewsItemRecipientsExportTaskUpdateInput
}>


export type UpdateNewsItemRecipientsExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'NewsItemRecipientsExportTask', id: string, status?: Types.NewsItemRecipientsExportTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetActiveOrganizationEmployeeQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
    employeeId?: Types.InputMaybe<Types.Scalars['ID']['input']>
}>


export type GetActiveOrganizationEmployeeQuery = { __typename?: 'Query', employees?: Array<{ __typename?: 'OrganizationEmployee', id: string, name?: string | null, email?: string | null, phone?: string | null, hasAllSpecializations?: boolean | null, isRejected?: boolean | null, isAccepted?: boolean | null, isBlocked?: boolean | null, position?: string | null, organization?: { __typename?: 'Organization', id: string, country?: Types.OrganizationCountryType | null, name?: string | null, type?: Types.OrganizationTypeType | null, tin?: string | null, features: Array<Types.OrganizationFeature>, statusTransitions?: any | null, importId?: string | null, importRemoteSystem?: string | null } | null, role?: { __typename?: 'OrganizationEmployeeRole', id: string, isEditable?: boolean | null, isDefault?: boolean | null, statusTransitions?: any | null, ticketVisibilityType?: Types.OrganizationEmployeeRoleTicketVisibilityTypeType | null, canReadAnalytics?: boolean | null, canManageOrganization?: boolean | null, canManageCallRecords?: boolean | null, canDownloadCallRecords?: boolean | null, canReadEmployees?: boolean | null, canManageEmployees?: boolean | null, canInviteNewOrganizationEmployees?: boolean | null, canManageRoles?: boolean | null, canManageTicketPropertyHints?: boolean | null, canManageIntegrations?: boolean | null, canImportBillingReceipts?: boolean | null, canReadBillingReceipts?: boolean | null, canReadPayments?: boolean | null, canManageProperties?: boolean | null, canReadProperties?: boolean | null, canReadDocuments?: boolean | null, canManageDocuments?: boolean | null, canReadTickets?: boolean | null, canManageTickets?: boolean | null, canReadContacts?: boolean | null, canManageContacts?: boolean | null, canManageContactRoles?: boolean | null, canManageTicketComments?: boolean | null, canManagePropertyScopes?: boolean | null, canShareTickets?: boolean | null, canBeAssignedAsResponsible?: boolean | null, canBeAssignedAsExecutor?: boolean | null, canManageMeters?: boolean | null, canManageMeterReadings?: boolean | null, canManageBankAccounts?: boolean | null, canManageBankContractorAccounts?: boolean | null, canManageBankIntegrationAccountContexts?: boolean | null, canManageBankIntegrationOrganizationContexts?: boolean | null, canManageBankTransactions?: boolean | null, canManageBankAccountReports?: boolean | null, canManageBankAccountReportTasks?: boolean | null, canReadIncidents?: boolean | null, canManageIncidents?: boolean | null, canReadNewsItems?: boolean | null, canManageNewsItems?: boolean | null, canManageNewsItemTemplates?: boolean | null, canManageMobileFeatureConfigs?: boolean | null, canManageB2BApps?: boolean | null, canReadMeters?: boolean | null, canReadSettings?: boolean | null, canReadExternalReports?: boolean | null, canReadServices?: boolean | null, canReadCallRecords?: boolean | null, canReadInvoices?: boolean | null, canManageInvoices?: boolean | null, canReadMarketItems?: boolean | null, canManageMarketItems?: boolean | null, canManageMarketItemPrices?: boolean | null, canReadMarketItemPrices?: boolean | null, canReadMarketPriceScopes?: boolean | null, canManageMarketPriceScopes?: boolean | null, canReadMarketplace?: boolean | null, canManageMarketplace?: boolean | null, canReadPaymentsWithInvoices?: boolean | null, canReadTour?: boolean | null, canManageTour?: boolean | null, canReadMarketSetting?: boolean | null, canManageMarketSetting?: boolean | null, canManageTicketAutoAssignments?: boolean | null } | null } | null> | null }

export type GetActualOrganizationEmployeesQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
}>


export type GetActualOrganizationEmployeesQuery = { __typename?: 'Query', actualEmployees?: Array<{ __typename?: 'OrganizationEmployee', id: string, organization?: { __typename?: 'Organization', id: string, name?: string | null, importId?: string | null, importRemoteSystem?: string | null } | null } | null> | null }

export type GetEmployeeInvitesCountQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
}>


export type GetEmployeeInvitesCountQuery = { __typename?: 'Query', meta?: { __typename?: '_QueryMeta', count?: number | null } | null }

export type GetContactEditorOrganizationEmployeesQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.OrganizationEmployeeWhereInput>
}>


export type GetContactEditorOrganizationEmployeesQuery = { __typename?: 'Query', employees?: Array<{ __typename?: 'OrganizationEmployee', id: string, name?: string | null, phone?: string | null } | null> | null }

export type GetOrganizationEmployeeWithTicketOrganizationQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
    organizationId: Types.Scalars['ID']['input']
}>


export type GetOrganizationEmployeeWithTicketOrganizationQuery = { __typename?: 'Query', employees?: Array<{ __typename?: 'OrganizationEmployee', id: string } | null> | null }

export type FloorInfoFragment = { __typename?: 'BuildingFloor', id: string, type: Types.BuildingFloorType, index: number, name: string, units: Array<{ __typename?: 'BuildingUnit', id: string, type: Types.BuildingUnitType, unitType?: Types.BuildingUnitSubType | null, name?: string | null, label: string, preview?: boolean | null } | null> }

export type SectionOrParkingInfoFragment = { __typename?: 'BuildingSection', id: string, type: Types.BuildingSectionType, index: number, name: string, preview?: boolean | null, floors: Array<{ __typename?: 'BuildingFloor', id: string, type: Types.BuildingFloorType, index: number, name: string, units: Array<{ __typename?: 'BuildingUnit', id: string, type: Types.BuildingUnitType, unitType?: Types.BuildingUnitSubType | null, name?: string | null, label: string, preview?: boolean | null } | null> } | null> }

export type AddressMetaForTableAddressFragment = { __typename?: 'AddressMetaField', data: { __typename?: 'AddressMetaDataField', street_with_type?: string | null, house_type?: string | null, house?: string | null, block_type?: string | null, block?: string | null, flat_type?: string | null, flat?: string | null, region_type_full?: string | null, region: string, region_with_type?: string | null, city_with_type?: string | null, city?: string | null, settlement_with_type?: string | null, area_with_type?: string | null } }

export type GetPropertyWithMapByIdQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
}>


export type GetPropertyWithMapByIdQuery = { __typename?: 'Query', property?: Array<{ __typename?: 'Property', id: string, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, map?: { __typename?: 'BuildingMap', dv: number, sections?: Array<{ __typename?: 'BuildingSection', id: string, type: Types.BuildingSectionType, index: number, name: string, preview?: boolean | null, floors: Array<{ __typename?: 'BuildingFloor', id: string, type: Types.BuildingFloorType, index: number, name: string, units: Array<{ __typename?: 'BuildingUnit', id: string, type: Types.BuildingUnitType, unitType?: Types.BuildingUnitSubType | null, name?: string | null, label: string, preview?: boolean | null } | null> } | null> } | null> | null, parking?: Array<{ __typename?: 'BuildingSection', id: string, type: Types.BuildingSectionType, index: number, name: string, preview?: boolean | null, floors: Array<{ __typename?: 'BuildingFloor', id: string, type: Types.BuildingFloorType, index: number, name: string, units: Array<{ __typename?: 'BuildingUnit', id: string, type: Types.BuildingUnitType, unitType?: Types.BuildingUnitSubType | null, name?: string | null, label: string, preview?: boolean | null } | null> } | null> } | null> | null } | null } | null> | null }

export type GetPropertyByIdQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
}>


export type GetPropertyByIdQuery = { __typename?: 'Query', properties?: Array<{ __typename?: 'Property', id: string, address?: string | null, organization?: { __typename?: 'Organization', id: string } | null, map?: { __typename?: 'BuildingMap', sections?: Array<{ __typename?: 'BuildingSection', id: string, type: Types.BuildingSectionType, index: number, name: string, preview?: boolean | null, floors: Array<{ __typename?: 'BuildingFloor', id: string, type: Types.BuildingFloorType, index: number, name: string, units: Array<{ __typename?: 'BuildingUnit', id: string, type: Types.BuildingUnitType, unitType?: Types.BuildingUnitSubType | null, name?: string | null, label: string, preview?: boolean | null } | null> } | null> } | null> | null, parking?: Array<{ __typename?: 'BuildingSection', id: string, type: Types.BuildingSectionType, index: number, name: string, preview?: boolean | null, floors: Array<{ __typename?: 'BuildingFloor', id: string, type: Types.BuildingFloorType, index: number, name: string, units: Array<{ __typename?: 'BuildingUnit', id: string, type: Types.BuildingUnitType, unitType?: Types.BuildingUnitSubType | null, name?: string | null, label: string, preview?: boolean | null } | null> } | null> } | null> | null } | null } | null> | null }

export type GetServiceSubscriptionQueryVariables = Types.Exact<{
    organizationId: Types.Scalars['ID']['input']
}>


export type GetServiceSubscriptionQuery = { __typename?: 'Query', subscriptions?: Array<{ __typename?: 'ServiceSubscription', id: string, isTrial?: boolean | null, finishAt?: string | null, type?: Types.ServiceSubscriptionTypeType | null } | null> | null }

export type GetTrialServiceSubscriptionQueryVariables = Types.Exact<{
    organizationId: Types.Scalars['ID']['input']
    finishAtLte?: Types.InputMaybe<Types.Scalars['String']['input']>
    finishAtGte?: Types.InputMaybe<Types.Scalars['String']['input']>
}>


export type GetTrialServiceSubscriptionQuery = { __typename?: 'Query', subscriptions?: Array<{ __typename?: 'ServiceSubscription', id: string, finishAt?: string | null } | null> | null }

export type GetCallRecordFragmentExistenceQueryVariables = Types.Exact<{
    organizationId: Types.Scalars['ID']['input']
}>


export type GetCallRecordFragmentExistenceQuery = { __typename?: 'Query', callRecordFragments?: Array<{ __typename?: 'CallRecordFragment', id: string } | null> | null }

export type GetTicketCallRecordsFragmentsQueryVariables = Types.Exact<{
    ticketId: Types.Scalars['ID']['input']
}>


export type GetTicketCallRecordsFragmentsQuery = { __typename?: 'Query', callRecordFragments?: Array<{ __typename?: 'CallRecordFragment', id: string, callRecord?: { __typename?: 'CallRecord', id: string, isIncomingCall?: boolean | null, callerPhone?: string | null, destCallerPhone?: string | null, startedAt?: string | null, file?: { __typename?: 'File', publicUrl?: string | null, id?: string | null } | null } | null } | null> | null }

export type GetIncidentsQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.IncidentWhereInput>
    sortBy?: Types.InputMaybe<Array<Types.SortIncidentsBy> | Types.SortIncidentsBy>
}>


export type GetIncidentsQuery = { __typename?: 'Query', incidents?: Array<{ __typename?: 'Incident', id: string, details?: string | null, workStart?: string | null, workFinish?: string | null, status?: Types.IncidentStatusType | null } | null> | null }

export type GetIncidentClassifierIncidentQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.IncidentClassifierIncidentWhereInput>
}>


export type GetIncidentClassifierIncidentQuery = { __typename?: 'Query', incidentClassifierIncident?: Array<{ __typename?: 'IncidentClassifierIncident', id: string, incident?: { __typename?: 'Incident', id: string } | null } | null> | null }

export type GetIncidentExportTasksQueryVariables = Types.Exact<{
    where: Types.IncidentExportTaskWhereInput
}>


export type GetIncidentExportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'IncidentExportTask', id: string, status?: Types.IncidentExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateIncidentExportTaskMutationVariables = Types.Exact<{
    data: Types.IncidentExportTaskCreateInput
}>


export type CreateIncidentExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'IncidentExportTask', id: string, status?: Types.IncidentExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateIncidentExportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.IncidentExportTaskUpdateInput
}>


export type UpdateIncidentExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'IncidentExportTask', id: string, status?: Types.IncidentExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetIncidentPropertiesQueryVariables = Types.Exact<{
    where?: Types.InputMaybe<Types.IncidentPropertyWhereInput>
}>


export type GetIncidentPropertiesQuery = { __typename?: 'Query', incidentProperties?: Array<{ __typename?: 'IncidentProperty', id: string, incident?: { __typename?: 'Incident', id: string } | null } | null> | null }

export type GetTicketsQueryVariables = Types.Exact<{
    where: Types.TicketWhereInput
    sortBy?: Types.InputMaybe<Array<Types.SortTicketsBy> | Types.SortTicketsBy>
    first?: Types.InputMaybe<Types.Scalars['Int']['input']>
    skip?: Types.InputMaybe<Types.Scalars['Int']['input']>
}>


export type GetTicketsQuery = { __typename?: 'Query', tickets?: Array<{ __typename?: 'Ticket', id: string, number?: number | null, createdAt?: string | null, isEmergency?: boolean | null, isPayable?: boolean | null, isWarranty?: boolean | null, statusReopenedCounter?: number | null, statusUpdatedAt?: string | null, completedAt?: string | null, deadline?: string | null, lastResidentCommentAt?: string | null, lastCommentWithResidentTypeAt?: string | null, propertyAddress?: string | null, sectionType?: Types.TicketSectionTypeType | null, sectionName?: string | null, floorName?: string | null, unitType?: Types.TicketUnitTypeType | null, unitName?: string | null, details?: string | null, clientName?: string | null, clientPhone?: string | null, propertyAddressMeta?: { __typename?: 'AddressMetaField', data: { __typename?: 'AddressMetaDataField', street_with_type?: string | null, house_type?: string | null, house?: string | null, block_type?: string | null, block?: string | null, flat_type?: string | null, flat?: string | null, region_type_full?: string | null, region: string, region_with_type?: string | null, city_with_type?: string | null, city?: string | null, settlement_with_type?: string | null, area_with_type?: string | null } } | null, classifier?: { __typename?: 'TicketClassifier', id: string, category?: { __typename?: 'TicketCategoryClassifier', id: string, name?: string | null } | null, place?: { __typename?: 'TicketPlaceClassifier', id: string, name?: string | null } | null } | null, contact?: { __typename?: 'Contact', id: string, name?: string | null } | null, executor?: { __typename?: 'User', id: string, name?: string | null } | null, assignee?: { __typename?: 'User', id: string, name?: string | null } | null, organization?: { __typename?: 'Organization', id: string, name?: string | null } | null, property?: { __typename?: 'Property', id: string, deletedAt?: string | null, address?: string | null, addressMeta?: { __typename?: 'AddressMetaField', data: { __typename?: 'AddressMetaDataField', street_with_type?: string | null, house_type?: string | null, house?: string | null, block_type?: string | null, block?: string | null, flat_type?: string | null, flat?: string | null, region_type_full?: string | null, region: string, region_with_type?: string | null, city_with_type?: string | null, city?: string | null, settlement_with_type?: string | null, area_with_type?: string | null } } | null } | null, status?: { __typename?: 'TicketStatus', id: string, type?: Types.TicketStatusTypeType | null, name?: string | null, colors?: { __typename?: 'TicketStatusColorsField', primary?: string | null, secondary?: string | null } | null } | null, createdBy?: { __typename?: 'User', id: string, name?: string | null } | null, source?: { __typename?: 'TicketSource', id: string, name?: string | null } | null } | null> | null, meta?: { __typename?: '_QueryMeta', count?: number | null } | null }

export type GetTicketExistenceQueryVariables = Types.Exact<{
    where: Types.TicketWhereInput
}>


export type GetTicketExistenceQuery = { __typename?: 'Query', tickets?: Array<{ __typename?: 'Ticket', id: string } | null> | null }

export type GetTicketsCountQueryVariables = Types.Exact<{
    where: Types.TicketWhereInput
}>


export type GetTicketsCountQuery = { __typename?: 'Query', meta?: { __typename?: '_QueryMeta', count?: number | null } | null }

export type GetTicketsCountersByStatusQueryVariables = Types.Exact<{
    whereWithoutStatuses: Types.TicketWhereInput
}>


export type GetTicketsCountersByStatusQuery = { __typename?: 'Query', new_or_reopened?: { __typename?: '_QueryMeta', count?: number | null } | null, processing?: { __typename?: '_QueryMeta', count?: number | null } | null, deferred?: { __typename?: '_QueryMeta', count?: number | null } | null, canceled?: { __typename?: '_QueryMeta', count?: number | null } | null, completed?: { __typename?: '_QueryMeta', count?: number | null } | null, closed?: { __typename?: '_QueryMeta', count?: number | null } | null }

export type GetTicketByIdQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
}>


export type GetTicketByIdQuery = { __typename?: 'Query', tickets?: Array<{ __typename?: 'Ticket', id: string, number?: number | null, propertyAddress?: string | null, createdAt?: string | null, isEmergency?: boolean | null, isPayable?: boolean | null, isWarranty?: boolean | null, statusReopenedCounter?: number | null, statusUpdatedAt?: string | null, canReadByResident?: boolean | null, qualityControlValue?: Types.TicketQualityControlValueType | null, qualityControlAdditionalOptions?: Array<Types.QualityControlAdditionalOptionsType | null> | null, qualityControlComment?: string | null, feedbackValue?: Types.TicketFeedbackValueType | null, feedbackAdditionalOptions?: Array<Types.FeedbackAdditionalOptionsType | null> | null, feedbackComment?: string | null, deadline?: string | null, completedAt?: string | null, unitType?: Types.TicketUnitTypeType | null, unitName?: string | null, sectionName?: string | null, sectionType?: Types.TicketSectionTypeType | null, floorName?: string | null, isResidentTicket?: boolean | null, clientName?: string | null, clientPhone?: string | null, details?: string | null, propertyAddressMeta?: { __typename?: 'AddressMetaField', data: { __typename?: 'AddressMetaDataField', street_with_type?: string | null, house_type?: string | null, house?: string | null, block_type?: string | null, block?: string | null, flat_type?: string | null, flat?: string | null, region_type_full?: string | null, region: string, region_with_type?: string | null, city_with_type?: string | null, city?: string | null, settlement_with_type?: string | null, area_with_type?: string | null } } | null, organization?: { __typename?: 'Organization', id: string, type?: Types.OrganizationTypeType | null, name?: string | null, statusTransitions?: any | null, country?: Types.OrganizationCountryType | null } | null, assignee?: { __typename?: 'User', id: string } | null, executor?: { __typename?: 'User', id: string } | null, property?: { __typename?: 'Property', id: string, deletedAt?: string | null, address?: string | null, addressMeta?: { __typename?: 'AddressMetaField', data: { __typename?: 'AddressMetaDataField', street_with_type?: string | null, house_type?: string | null, house?: string | null, block_type?: string | null, block?: string | null, flat_type?: string | null, flat?: string | null, region_type_full?: string | null, region: string, region_with_type?: string | null, city_with_type?: string | null, city?: string | null, settlement_with_type?: string | null, area_with_type?: string | null } } | null } | null, classifier?: { __typename?: 'TicketClassifier', id: string, place?: { __typename?: 'TicketPlaceClassifier', id: string, name?: string | null } | null, category?: { __typename?: 'TicketCategoryClassifier', id: string, name?: string | null } | null, problem?: { __typename?: 'TicketProblemClassifier', id: string, name?: string | null } | null } | null, createdBy?: { __typename?: 'User', id: string, name?: string | null, type?: Types.UserTypeType | null } | null, source?: { __typename?: 'TicketSource', id: string, name?: string | null } | null, status?: { __typename?: 'TicketStatus', id: string, type?: Types.TicketStatusTypeType | null, name?: string | null, colors?: { __typename?: 'TicketStatusColorsField', primary?: string | null, secondary?: string | null } | null } | null, client?: { __typename?: 'User', id: string } | null, contact?: { __typename?: 'Contact', id: string, name?: string | null, phone?: string | null } | null } | null> | null }

export type GetTicketByCreatedByQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
}>


export type GetTicketByCreatedByQuery = { __typename?: 'Query', tickets?: Array<{ __typename?: 'Ticket', id: string } | null> | null }

export type GetTicketLastCommentsTimeQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
}>


export type GetTicketLastCommentsTimeQuery = { __typename?: 'Query', ticketCommentTimes?: Array<{ __typename?: 'Ticket', id: string, lastResidentCommentAt?: string | null, lastCommentWithResidentTypeAt?: string | null } | null> | null }

export type GetContactTicketsQueryVariables = Types.Exact<{
    contactId: Types.Scalars['ID']['input']
}>


export type GetContactTicketsQuery = { __typename?: 'Query', tickets?: Array<{ __typename?: 'Ticket', id: string, details?: string | null, createdAt?: string | null, number?: number | null, status?: { __typename?: 'TicketStatus', id: string, name?: string | null } | null, property?: { __typename?: 'Property', id: string, address?: string | null } | null } | null> | null }

export type UpdateTicketMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.TicketUpdateInput
}>


export type UpdateTicketMutation = { __typename?: 'Mutation', ticket?: { __typename?: 'Ticket', id: string } | null }

export type GetTicketChangesQueryVariables = Types.Exact<{
    ticketId: Types.Scalars['ID']['input']
}>


export type GetTicketChangesQuery = { __typename?: 'Query', ticketChanges?: Array<{ __typename?: 'TicketChange', id: string, actualCreationDate?: string | null, createdAt?: string | null, changedByRole?: string | null, canReadByResidentFrom?: boolean | null, canReadByResidentTo?: boolean | null, deadlineFrom?: string | null, deadlineTo?: string | null, deferredUntilFrom?: string | null, deferredUntilTo?: string | null, statusReopenedCounterFrom?: number | null, statusReopenedCounterTo?: number | null, statusReasonFrom?: string | null, statusReasonTo?: string | null, clientNameFrom?: string | null, clientNameTo?: string | null, clientEmailFrom?: string | null, clientEmailTo?: string | null, clientPhoneFrom?: string | null, clientPhoneTo?: string | null, detailsFrom?: string | null, detailsTo?: string | null, isPaidFrom?: boolean | null, isPaidTo?: boolean | null, isPayableFrom?: boolean | null, isPayableTo?: boolean | null, isEmergencyFrom?: boolean | null, isEmergencyTo?: boolean | null, isWarrantyFrom?: boolean | null, isWarrantyTo?: boolean | null, metaFrom?: any | null, metaTo?: any | null, sectionNameFrom?: string | null, sectionNameTo?: string | null, sectionTypeFrom?: Types.TicketChangeSectionTypeFromType | null, sectionTypeTo?: Types.TicketChangeSectionTypeToType | null, floorNameFrom?: string | null, floorNameTo?: string | null, unitNameFrom?: string | null, unitNameTo?: string | null, unitTypeFrom?: Types.TicketChangeUnitTypeFromType | null, unitTypeTo?: Types.TicketChangeUnitTypeToType | null, sourceMetaFrom?: any | null, sourceMetaTo?: any | null, organizationIdFrom?: string | null, organizationIdTo?: string | null, organizationDisplayNameFrom?: string | null, organizationDisplayNameTo?: string | null, statusIdFrom?: string | null, statusIdTo?: string | null, statusDisplayNameFrom?: string | null, statusDisplayNameTo?: string | null, clientIdFrom?: string | null, clientIdTo?: string | null, clientDisplayNameFrom?: string | null, clientDisplayNameTo?: string | null, classifierIdFrom?: string | null, classifierIdTo?: string | null, classifierDisplayNameFrom?: string | null, classifierDisplayNameTo?: string | null, contactIdFrom?: string | null, contactIdTo?: string | null, contactDisplayNameFrom?: string | null, contactDisplayNameTo?: string | null, assigneeIdFrom?: string | null, assigneeIdTo?: string | null, assigneeDisplayNameFrom?: string | null, assigneeDisplayNameTo?: string | null, executorIdFrom?: string | null, executorIdTo?: string | null, executorDisplayNameFrom?: string | null, executorDisplayNameTo?: string | null, relatedIdFrom?: string | null, relatedIdTo?: string | null, relatedDisplayNameFrom?: string | null, relatedDisplayNameTo?: string | null, propertyIdFrom?: string | null, propertyIdTo?: string | null, propertyDisplayNameFrom?: string | null, propertyDisplayNameTo?: string | null, sourceIdFrom?: string | null, sourceIdTo?: string | null, sourceDisplayNameFrom?: string | null, sourceDisplayNameTo?: string | null, feedbackValueFrom?: Types.TicketChangeFeedbackValueFromType | null, feedbackValueTo?: Types.TicketChangeFeedbackValueToType | null, feedbackCommentFrom?: string | null, feedbackCommentTo?: string | null, feedbackAdditionalOptionsFrom?: any | null, feedbackAdditionalOptionsTo?: any | null, qualityControlValueFrom?: Types.TicketChangeQualityControlValueFromType | null, qualityControlValueTo?: Types.TicketChangeQualityControlValueToType | null, qualityControlCommentFrom?: string | null, qualityControlCommentTo?: string | null, qualityControlAdditionalOptionsFrom?: any | null, qualityControlAdditionalOptionsTo?: any | null, createdBy?: { __typename?: 'User', id: string, name?: string | null } | null } | null> | null }

export type GetTicketCommentsQueryVariables = Types.Exact<{
    ticketId: Types.Scalars['ID']['input']
}>


export type GetTicketCommentsQuery = { __typename?: 'Query', ticketComments?: Array<{ __typename?: 'TicketComment', id: string, type?: Types.TicketCommentTypeType | null, createdAt?: string | null, updatedAt?: string | null, deletedAt?: string | null, content?: string | null, user?: { __typename?: 'User', id: string, type?: Types.UserTypeType | null, name?: string | null } | null } | null> | null }

export type GetPollTicketCommentsQueryVariables = Types.Exact<{
    where: Types.TicketCommentWhereInput
}>


export type GetPollTicketCommentsQuery = { __typename?: 'Query', ticketComments?: Array<{ __typename?: 'TicketComment', id: string, updatedAt?: string | null, ticket?: { __typename?: 'Ticket', id: string } | null } | null> | null }

export type UpdateTicketCommentMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.TicketCommentUpdateInput
}>


export type UpdateTicketCommentMutation = { __typename?: 'Mutation', ticketComment?: { __typename?: 'TicketComment', id: string } | null }

export type CreateTicketCommentMutationVariables = Types.Exact<{
    data: Types.TicketCommentCreateInput
}>


export type CreateTicketCommentMutation = { __typename?: 'Mutation', ticketComment?: { __typename?: 'TicketComment', id: string } | null }

export type GetTicketCommentsFilesQueryVariables = Types.Exact<{
    ticketCommentsIds: Array<Types.Scalars['ID']['input']> | Types.Scalars['ID']['input']
}>


export type GetTicketCommentsFilesQuery = { __typename?: 'Query', files?: Array<{ __typename?: 'TicketCommentFile', id: string, file?: { __typename?: 'File', originalFilename?: string | null, mimetype?: string | null, publicUrl?: string | null } | null, ticketComment?: { __typename?: 'TicketComment', id: string } | null } | null> | null }

export type GetTicketDocumentGenerationTasksQueryVariables = Types.Exact<{
    where: Types.TicketDocumentGenerationTaskWhereInput
}>


export type GetTicketDocumentGenerationTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'TicketDocumentGenerationTask', id: string, progress?: number | null, status?: Types.TicketDocumentGenerationTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateTicketDocumentGenerationTaskMutationVariables = Types.Exact<{
    data: Types.TicketDocumentGenerationTaskCreateInput
}>


export type CreateTicketDocumentGenerationTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'TicketDocumentGenerationTask', id: string, progress?: number | null, status?: Types.TicketDocumentGenerationTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateTicketDocumentGenerationTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.TicketDocumentGenerationTaskUpdateInput
}>


export type UpdateTicketDocumentGenerationTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'TicketDocumentGenerationTask', id: string, progress?: number | null, status?: Types.TicketDocumentGenerationTaskStatusType | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetTicketExportTasksQueryVariables = Types.Exact<{
    where: Types.TicketExportTaskWhereInput
}>


export type GetTicketExportTasksQuery = { __typename?: 'Query', tasks?: Array<{ __typename: 'TicketExportTask', id: string, status?: Types.TicketExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null> | null }

export type CreateTicketExportTaskMutationVariables = Types.Exact<{
    data: Types.TicketExportTaskCreateInput
}>


export type CreateTicketExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'TicketExportTask', id: string, status?: Types.TicketExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type UpdateTicketExportTaskMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data: Types.TicketExportTaskUpdateInput
}>


export type UpdateTicketExportTaskMutation = { __typename?: 'Mutation', task?: { __typename: 'TicketExportTask', id: string, status?: Types.TicketExportTaskStatusType | null, totalRecordsCount?: number | null, exportedRecordsCount?: number | null, file?: { __typename?: 'File', publicUrl?: string | null, originalFilename?: string | null } | null } | null }

export type GetTicketPropertyHintByIdQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
}>


export type GetTicketPropertyHintByIdQuery = { __typename?: 'Query', ticketPropertyHints?: Array<{ __typename?: 'TicketPropertyHint', id: string, name?: string | null, content?: string | null, organization?: { __typename?: 'Organization', id: string } | null } | null> | null }

export type GetTicketPropertyHintPropertyByPropertyQueryVariables = Types.Exact<{
    propertyId: Types.Scalars['ID']['input']
}>


export type GetTicketPropertyHintPropertyByPropertyQuery = { __typename?: 'Query', ticketPropertyHintProperty?: Array<{ __typename?: 'TicketPropertyHintProperty', id: string, ticketPropertyHint?: { __typename?: 'TicketPropertyHint', id: string } | null } | null> | null }

export type GetTicketSourcesQueryVariables = Types.Exact<{
    types?: Types.InputMaybe<Array<Types.TicketSourceTypeType> | Types.TicketSourceTypeType>
}>


export type GetTicketSourcesQuery = { __typename?: 'Query', sources?: Array<{ __typename?: 'TicketSource', id: string, name?: string | null } | null> | null }

export type GetTicketStatusesQueryVariables = Types.Exact<{ [key: string]: never }>


export type GetTicketStatusesQuery = { __typename?: 'Query', statuses?: Array<{ __typename?: 'TicketStatus', id: string, name?: string | null, type?: Types.TicketStatusTypeType | null, colors?: { __typename?: 'TicketStatusColorsField', primary?: string | null, secondary?: string | null } | null } | null> | null }

export type GetUserFavoriteTicketsQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
    ticketWhere?: Types.InputMaybe<Types.TicketWhereInput>
}>


export type GetUserFavoriteTicketsQuery = { __typename?: 'Query', userFavoriteTickets?: Array<{ __typename?: 'UserFavoriteTicket', id: string, ticket?: { __typename?: 'Ticket', id: string } | null } | null> | null, meta?: { __typename?: '_QueryMeta', count?: number | null } | null }

export type GetUserTicketCommentsReadTimeQueryVariables = Types.Exact<{
    userId: Types.Scalars['ID']['input']
    ticketIds?: Types.InputMaybe<Array<Types.Scalars['ID']['input']> | Types.Scalars['ID']['input']>
}>


export type GetUserTicketCommentsReadTimeQuery = { __typename?: 'Query', objs?: Array<{ __typename?: 'UserTicketCommentReadTime', id: string, readResidentCommentAt?: string | null } | null> | null }

export type CreateUserTicketCommentReadTimeMutationVariables = Types.Exact<{
    data?: Types.InputMaybe<Types.UserTicketCommentReadTimeCreateInput>
}>


export type CreateUserTicketCommentReadTimeMutation = { __typename?: 'Mutation', obj?: { __typename?: 'UserTicketCommentReadTime', id: string } | null }

export type UpdateUserTicketCommentReadTimeMutationVariables = Types.Exact<{
    id: Types.Scalars['ID']['input']
    data?: Types.InputMaybe<Types.UserTicketCommentReadTimeUpdateInput>
}>


export type UpdateUserTicketCommentReadTimeMutation = { __typename?: 'Mutation', obj?: { __typename?: 'UserTicketCommentReadTime', id: string } | null }

export type AuthenticatedUserQueryVariables = Types.Exact<{ [key: string]: never }>


export type AuthenticatedUserQuery = { __typename?: 'Query', authenticatedUser?: { __typename?: 'User', id: string, name?: string | null, phone?: string | null, email?: string | null, isAdmin?: boolean | null, isSupport?: boolean | null, locale?: Types.UserLocaleType | null, showGlobalHints?: boolean | null, avatar?: { __typename?: 'File', publicUrl?: string | null } | null, rightsSet?: { __typename?: 'UserRightsSet', id: string } | null } | null }

export type SignOutMutationVariables = Types.Exact<{ [key: string]: never }>


export type SignOutMutation = { __typename?: 'Mutation', unauthenticateUser?: { __typename?: 'unauthenticateUserOutput', success?: boolean | null } | null }
