/**
 * Generated by `createschema ticket.TicketClassifierRule 'organization?:Relationship:Organization:CASCADE;place?:Relationship:TicketPlaceClassifier:PROTECT;category?:Relationship:TicketCategoryClassifier:PROTECT;problem?:Relationship:TicketProblemClassifier:PROTECT;'`
 */

import {
    TicketClassifierRule,
    TicketClassifierRuleCreateInput,
    TicketClassifierRuleUpdateInput,
    QueryAllTicketClassifierRulesArgs,
    TicketClassifierRuleWhereInput,
} from '@app/condo/schema'
import { generateReactHooks } from '@condo/domains/common/utils/codegeneration/generate.hooks'
import { TicketClassifierRule as TicketClassifierRuleGQL } from '@condo/domains/ticket/gql'

export type ITicketClassifierRuleWhereInput = Pick<TicketClassifierRuleWhereInput, 'organization' | 'organization_is_null' | 'id' | 'place' | 'category' | 'problem'>

const {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
} = generateReactHooks<TicketClassifierRule, TicketClassifierRuleCreateInput, TicketClassifierRuleUpdateInput, QueryAllTicketClassifierRulesArgs>(TicketClassifierRuleGQL)

export {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
}
