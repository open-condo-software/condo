/**
 * Generated by `createschema ticket.TicketPropertyHintProperty 'organization:Relationship:Organization:CASCADE;ticketPropertyHint:Relationship:TicketPropertyHint:CASCADE; property:Relationship:Property:SET_NULL;'`
 */

const { Relationship } = require('@keystonejs/fields')

const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')

const { dvAndSender } = require('@condo/domains/common/schema/plugins/dvAndSender')
const access = require('@condo/domains/ticket/access/TicketPropertyHintProperty')
const { ORGANIZATION_OWNED_FIELD } = require('@condo/domains/organization/schema/fields')

const TicketPropertyHintProperty = new GQLListSchema('TicketPropertyHintProperty', {
    schemaDoc: 'Sets to which property the ticketPropertyHint belongs',
    fields: {

        organization: ORGANIZATION_OWNED_FIELD,

        ticketPropertyHint: {
            schemaDoc: 'TicketPropertyHint which belongs to property',
            type: Relationship,
            ref: 'TicketPropertyHint',
            isRequired: true,
            knexOptions: { isNotNullable: true },
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

        property: {
            schemaDoc: 'Property for which ticketPropertyHint exists',
            type: Relationship,
            ref: 'Property',
            isRequired: true,
            knexOptions: { isNotNullable: false },
            kmigratorOptions: { null: true, on_delete: 'models.SET_NULL' },
        },

    },
    kmigratorOptions: {
        constraints: [
            {
                type: 'models.UniqueConstraint',
                fields: ['ticketPropertyHint', 'property'],
                condition: 'Q(deletedAt__isnull=True)',
                name: 'unique_ticketPropertyHint_and_property',
            },
        ],
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadTicketPropertyHintProperties,
        create: access.canManageTicketPropertyHintProperties,
        update: access.canManageTicketPropertyHintProperties,
        delete: false,
        auth: true,
    },
})

module.exports = {
    TicketPropertyHintProperty,
}
