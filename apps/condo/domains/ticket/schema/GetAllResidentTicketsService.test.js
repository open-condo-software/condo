/**
 * Generated by `createservice ticket.GetAllResidentTicketsService --type queries`
 */
const { makeClientWithProperty } =  require('@condo/domains/property/utils/testSchema')
const { createResidentTicketByTestClient } = require('@condo/domains/ticket/utils/testSchema')
const { createTestProperty } = require('@condo/domains/property/utils/testSchema')
const { createTestTicketClassifier } = require('@condo/domains/ticket/utils/testSchema')
const { createTestOrganization } = require('@condo/domains/organization/utils/testSchema')
const { makeLoggedInAdminClient, makeClient } = require('@core/keystone/test.utils')
const { getAllResidentTicketsByTestClient } = require('@condo/domains/ticket/utils/testSchema')
 
describe('GetAllResidentTicketsService', () => {
    test('user: get resident ticket', async () => {
        const client = await makeClientWithProperty()
        const admin = await makeLoggedInAdminClient()
        const [classifier] = await createTestTicketClassifier(admin)
        await createResidentTicketByTestClient(client, classifier, client.property)

        const [data] = await getAllResidentTicketsByTestClient(client, {}, 1, 0)
        expect(data.length).toBeGreaterThan(0)
    })
 
    test('anonymous: didn\'t get resident ticket', async () => {
        const client = await makeClient()
        try {
            await getAllResidentTicketsByTestClient(client, {}, 1, 0)
        } catch (error) {
            expect(error.errors).toHaveLength(1)
            expect(error.errors[0].name).toEqual('AuthenticationError')
        }
    })
 
    test('admin: get resident tickets', async () => {
        const admin = await makeLoggedInAdminClient()
        const [organization] = await createTestOrganization(admin)
        const [property] = await createTestProperty(admin, organization)
        const [classifier] = await createTestTicketClassifier(admin)
        await createResidentTicketByTestClient(admin, classifier, property)

        const [data] = await getAllResidentTicketsByTestClient(admin, {}, 1, 0)
        expect(data.length).toBeGreaterThan(0)
    })
})