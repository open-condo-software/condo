/**
 * Generated by `createschema ticket.TicketStatus 'organization?:Relationship:Organization:CASCADE; type:Select:neworreopened,processing,canceled,completed,deferred,closed; name:Text;' --force`
 */

const { Text, Select } = require('@keystonejs/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/ticket/access/TicketStatus')
const { TICKET_STATUS_TYPES } = require('../constants')
const { COMMON_AND_ORGANIZATION_OWNED_FIELD } = require('@condo/domains/organization/schema/fields')

const TicketStatus = new GQLListSchema('TicketStatus', {
    schemaDoc: 'Ticket status. We have a organization specific statuses',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        organization: COMMON_AND_ORGANIZATION_OWNED_FIELD,

        type: {
            schemaDoc: 'Ticket status. You should also increase `statusReopenedCounter` if you want to reopen ticket',
            type: Select,
            options: TICKET_STATUS_TYPES.join(','),
            isRequired: true,
        },

        name: {
            schemaDoc: 'Status name',
            type: Text,
            isRequired: true,
        },
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadTicketStatuses,
        create: access.canManageTicketStatuses,
        update: access.canManageTicketStatuses,
        delete: false,
        auth: true,
    },
})

module.exports = {
    TicketStatus,
}
