/**
 * Generated by `createschema ticket.TicketClassifierLink 'location?:Relationship:TicketClassifier:PROTECT;category?:Relationship:TicketClassifier:PROTECT;subject?:Relationship:TicketClassifier:PROTECT;'`
 */

const { Text, Relationship, Integer, Select, Checkbox, DateTimeUtc, CalendarDay, Decimal, Password, File } = require('@keystonejs/fields')
const { Json } = require('@core/keystone/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/ticket/access/TicketClassifierLink')


const TicketClassifierLink = new GQLListSchema('TicketClassifierLink', {
    schemaDoc: 'The way to group 3 different classifiers together',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        location: {
            schemaDoc: 'where incedent heppens',
            type: Relationship,
            ref: 'TicketClassifier',
            kmigratorOptions: { null: true, on_delete: 'models.PROTECT' },
        },

        category: {
            schemaDoc: 'what type of work needed',
            type: Relationship,
            ref: 'TicketClassifier',
            kmigratorOptions: { null: true, on_delete: 'models.PROTECT' },
        },

        subject: {
            schemaDoc: 'work describtion',
            type: Relationship,
            ref: 'TicketClassifier',
            kmigratorOptions: { null: true, on_delete: 'models.PROTECT' },
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadTicketClassifierLinks,
        create: access.canManageTicketClassifierLinks,
        update: access.canManageTicketClassifierLinks,
        delete: false,
        auth: true,
    },
})

module.exports = {
    TicketClassifierLink,
}
