/**
 * Generated by `createservice ticket.TicketAnalyticsReportService`
 */
const get = require('lodash/get')
const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')
const { USER_SCHEMA_NAME } = require('@condo/domains/common/constants/utils')
const { checkUserBelongsToOrganization } = require('@condo/domains/organization/utils/accessSchema')

async function canReadTicketAnalyticsReport ({ authentication: { item, listKey }, args: { data: { where } } }) {
    if (!listKey || !item) return throwAuthenticationError()
    if (item.deletedAt) return false
    if (listKey === USER_SCHEMA_NAME) {
        if (item.isAdmin) return true
        const organizationId = get(where, ['organization', 'id'], false)
        if (!organizationId) return false
        return await checkUserBelongsToOrganization(item.id, organizationId)
    }
    return false
}

async function canReadExportTicketAnalyticsToExcel ({ authentication: { item, listKey }, args: { data: { where } } }) {
    if (!listKey || !item) return throwAuthenticationError()
    if (item.deletedAt) return false
    if (listKey === USER_SCHEMA_NAME) {
        if (item.isAdmin) return true
        const organizationId = get(where, ['organization', 'id'], false)
        if (!organizationId) return false
        return await checkUserBelongsToOrganization(item.id, organizationId)
    }
    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadTicketAnalyticsReport,
    canReadExportTicketAnalyticsToExcel,
}
