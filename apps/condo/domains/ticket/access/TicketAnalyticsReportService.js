/**
 * Generated by `createservice ticket.TicketAnalyticsReportService`
 */
const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')
const { checkUserBelongsToOrganization } = require('@condo/domains/organization/utils/accessSchema')

async function canReadTicketAnalyticsReport ({ authentication: { item: user }, args }) {
    if (!user) return throwAuthenticationError()
    if (user.isAdmin) return true
    const { data: { where: { AND } } } = args
    const organizationObject = AND.find(filters => Object.keys(filters).includes('organization'))

    if (!organizationObject) {
        return false
    }
    const hasAccess = await checkUserBelongsToOrganization(user.id, organizationObject.organization.id)
    return hasAccess
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadTicketAnalyticsReport,
}
