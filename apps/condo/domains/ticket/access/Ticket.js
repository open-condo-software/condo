/**
 * Generated by `createschema ticket.Ticket organization:Text; statusReopenedCounter:Integer; statusReason?:Text; status:Relationship:TicketStatus:PROTECT; number?:Integer; client?:Relationship:User:SET_NULL; clientName:Text; clientEmail:Text; clientPhone:Text; operator:Relationship:User:SET_NULL; assignee?:Relationship:User:SET_NULL; classifier:Relationship:TicketClassifier:PROTECT; details:Text; meta?:Json;`
 */

async function canReadTickets ({ authentication: { item: user } }) {
    if (!user) return false

    if (user.isAdmin) {
        return {}
    }

    return {
        OR: [
            { organization: { employees_some: { user: { id: user.id } } } },
        ],
    }
}

async function canManageTickets ({ authentication: { item: user }, operation }) {
    if (!user) return false
    if (user.isAdmin) return true

    if (operation === 'create') {
        if (user.isPhoneVerified) {
            return true
        }
    } else if (operation === 'update') {
        if (user.isPhoneVerified) {
            return true
        }
    }
    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadTickets,
    canManageTickets,
}
