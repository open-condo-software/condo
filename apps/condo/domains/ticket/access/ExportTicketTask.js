// @ts-nocheck
/**
 * Generated by `createschema ticket.ExportTicketTask 'status:Select:processing,completed,error; format:Select:excel; exportedRecordsCount:Integer; totalRecordsCount:Integer; file?:File; meta?:Json'`
 */

const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')

async function canReadExportTicketTasks ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin) return {}

    // TODO(codegen): write canReadExportTicketTasks logic for user!
    return false
}

async function canManageExportTicketTasks ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    if (operation === 'create') {
        // TODO(codegen): write canManageExportTicketTasks create logic!
        return false
    } else if (operation === 'update') {
        // TODO(codegen): write canManageExportTicketTasks update logic!
        return false
    }

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadExportTicketTasks,
    canManageExportTicketTasks,
}
