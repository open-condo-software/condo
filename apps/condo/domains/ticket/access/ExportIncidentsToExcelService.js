/**
 * Generated by `createservice ticket.ExportIncidentsToExcelService`
 */
const get = require('lodash/get')

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { find } = require('@open-condo/keystone/schema')

const { checkRelatedOrganizationPermission } = require('@condo/domains/organization/utils/accessSchema')


async function canExportIncidentsToExcel ({ args: { data: { where } }, authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    const organizationId = get(where, ['organization', 'id'])
    if (organizationId) {
        // return await checkOrganizationPermission(user.id, organizationId, 'canManageProperties')
        const [employee] = await find('OrganizationEmployee', {
            organization: { id: organizationId },
            user: { id: user.id },
            deletedAt: null,
            isBlocked: false,
        })
        return Boolean(employee)
    }

    const organizationWhere = get(where, 'organization')
    if (!organizationWhere) {
        return false
    }

    const [organization] = await find('Organization', organizationWhere)
    if (!organization) {
        return false
    }

    return await checkRelatedOrganizationPermission(user.id, organization.id, 'canManageProperties')
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canExportIncidentsToExcel,
}
