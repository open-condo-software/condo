/**
 * Generated by `createschema subscription.ServiceSubscriptionPayment 'type:Select:default,sbbol; status:Select:processing,done,error,stopped,cancelled; externalId:Text; amount:Decimal; currency:Select:rub; organization:Relationship:Organization:CASCADE; subscription:Relationship:ServiceSubscription:CASCADE; meta:Json;'`
 */

import {
    ServiceSubscriptionPayment,
    ServiceSubscriptionPaymentCreateInput,
    ServiceSubscriptionPaymentUpdateInput,
    QueryAllServiceSubscriptionPaymentsArgs,
} from '@app/condo/schema'
import { generateReactHooks } from '@condo/codegen/generate.hooks'
import { ServiceSubscriptionPayment as ServiceSubscriptionPaymentGQL } from '@condo/domains/subscription/gql'

const {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
} = generateReactHooks<ServiceSubscriptionPayment, ServiceSubscriptionPaymentCreateInput, ServiceSubscriptionPaymentUpdateInput, QueryAllServiceSubscriptionPaymentsArgs>(ServiceSubscriptionPaymentGQL)

export {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
}
