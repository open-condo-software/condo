/**
 * Generated by `createschema subscription.ServiceSubscriptionPayment 'type:Select:default,sbbol; status:Select:processing,done,error,stopped,cancelled; externalId:Text; amount:Decimal; currency:Select:rub; organization:Relationship:Organization:CASCADE; subscription:Relationship:ServiceSubscription:CASCADE; meta:Json;'`
 */

import {
    ServiceSubscriptionPayment,
    ServiceSubscriptionPaymentCreateInput,
    ServiceSubscriptionPaymentUpdateInput,
    QueryAllServiceSubscriptionPaymentsArgs,
} from '@app/condo/schema'
import { generateNewReactHooks } from '@condo/domains/common/utils/codegeneration/new.generate.hooks'
import { ServiceSubscriptionPayment as ServiceSubscriptionPaymentGQL } from '@condo/domains/subscription/gql'

const {
    useNewObject,
    useNewObjects,
    useNewCreate,
    useNewUpdate,
    useNewSoftDelete,
} = generateNewReactHooks<ServiceSubscriptionPayment, ServiceSubscriptionPaymentCreateInput, ServiceSubscriptionPaymentUpdateInput, QueryAllServiceSubscriptionPaymentsArgs>(ServiceSubscriptionPaymentGQL)

export {
    useNewObject,
    useNewObjects,
    useNewCreate,
    useNewUpdate,
    useNewSoftDelete,
}
