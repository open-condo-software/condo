/**
 * Generated by `createschema property.PropertyFileCategory 'name:Text; order:Integer;'`
 */
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/property/access/PropertyFileCategory')


const PropertyFileCategory = new GQLListSchema('PropertyFileCategory', {
    schemaDoc: 'Property file category, for example, cleaning acts, works performed, design or technical documentation and other categories',
    fields: {
        name: {
            schemaDoc: 'Name of the category',
            type: 'Text',
            isRequired: true,
        },
        order: {
            schemaDoc: 'The number used for sorting at the client. It\'s possible to sort categories any manner. For example, set some category to the bottom by setting order=100 and sorting asc.',
            type: 'Integer',
            isRequired: true,
            defaultValue: 0,
        },
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadPropertyFileCategories,
        create: access.canManagePropertyFileCategories,
        update: access.canManagePropertyFileCategories,
        delete: false,
        auth: true,
    },
})

module.exports = {
    PropertyFileCategory,
}
