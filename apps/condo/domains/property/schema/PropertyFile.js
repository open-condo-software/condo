/**
 * Generated by `createschema property.PropertyFile 'property:Relationship:Property:CASCADE; category:Relationship:PropertyFileCategory:CASCADE; file:File;'`
 */
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const FileAdapter = require('@condo/domains/common/utils/fileAdapter')
const { getFileMetaAfterChange } = require('@condo/domains/common/utils/fileAdapter')
const access = require('@condo/domains/property/access/PropertyFile')


const PROPERTY_FILE_FOLDER_NAME = 'propertyfile'
const Adapter = new FileAdapter(PROPERTY_FILE_FOLDER_NAME)
const fileMetaAfterChange = getFileMetaAfterChange(Adapter)

const PropertyFile = new GQLListSchema('PropertyFile', {
    schemaDoc: 'File attached to property. It could be some kind of property documentation, inspection reports or other documents',
    fields: {
        property: {
            schemaDoc: 'Property to which the file is attached',
            type: 'Relationship',
            ref: 'Property',
            isRequired: true,
            knexOptions: { isNotNullable: true },
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },
        category: {
            schemaDoc: 'Which file category for property is this file',
            type: 'Relationship',
            ref: 'PropertyFileCategory',
            isRequired: true,
            knexOptions: { isNotNullable: true },
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },
        file: {
            schemaDoc: 'File attached to property',
            type: 'File',
            adapter: Adapter,
            isRequired: true,
        },
    },
    hooks: {
        afterChange: fileMetaAfterChange,
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadPropertyFiles,
        create: access.canManagePropertyFiles,
        update: access.canManagePropertyFiles,
        delete: false,
        auth: true,
    },
})

module.exports = {
    PropertyFile,
}
