/**
 * Generated by `createschema property.Property 'organization:Text; name:Text; address:Text; addressMeta:Json; type:Select:building,village; map?:Json'`
 */

import {
    Property,
    PropertyCreateInput,
    PropertyUpdateInput,
    QueryAllPropertiesArgs,
    BuildingMap,
} from '@app/condo/schema'
import dayjs from 'dayjs'
import { get } from 'lodash'

import { generateReactHooks } from '@open-condo/codegen/generate.hooks'

import { Property as PropertyGQL } from '@condo/domains/property/gql'

export interface IPropertyFormState {
    id?: undefined
    type?: string
    organization?: string
    name?: string
    address?: string
    map?: BuildingMap
    area?: number
    yearOfConstruction?: string
    // address: string,
    // TODO(codegen): write IPropertyUIFormState or extends it from
}

function convertToFormState (property: Property): IPropertyFormState | undefined {
    if (!property) return
    const result: IPropertyFormState = {}
    for (const key of Object.keys(property)) {
        const relationId = get(property[key], 'id')
        result[key] = relationId || property[key]

        if (key === 'yearOfConstruction' && property[key] !== null) {
            result[key] = dayjs(property[key]).format('YYYY')
        }
    }

    return result
}

const {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
    useAllObjects,
} = generateReactHooks<Property, PropertyCreateInput, PropertyUpdateInput, QueryAllPropertiesArgs>(PropertyGQL)

export {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
    convertToFormState,
    useAllObjects,
}
