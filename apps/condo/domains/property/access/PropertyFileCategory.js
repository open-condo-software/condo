/**
 * Generated by `createschema property.PropertyFileCategory 'name:Text; order:Integer;'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

async function canReadPropertyFileCategories ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin) return {}

    return {}
}

async function canManagePropertyFileCategories ({ authentication: { item: user }, operation }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    if (user.isSupport && (operation === 'create' || operation === 'update')) {
        return true
    }

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadPropertyFileCategories,
    canManagePropertyFileCategories,
}
