/**
 * Generated by `createschema banking.BankIntegrationAccessRight 'integration:Relationship:BankIntegration:PROTECT; user:Relationship:User:CASCADE;'`
 */

const { userIsOwner } = require('@open-condo/keystone/access')
const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

const { BankIntegrationAccessRight } = require('@condo/domains/banking/utils/serverSchema')

async function canReadBankIntegrationAccessRights (args) {
    const { authentication: { item: user } } = args
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return {}
    if (userIsOwner(args)) return {}

    return false
}

async function canManageBankIntegrationAccessRights ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    return !!(user.isSupport || user.isAdmin)
}

module.exports = {
    canReadBankIntegrationAccessRights,
    canManageBankIntegrationAccessRights,
}
