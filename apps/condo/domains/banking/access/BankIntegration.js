/**
 * Generated by `createschema banking.BankIntegration 'name:Text'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

const { checkBankIntegrationsAccessRights } = require('./BankIntegrationAccessRight')

const { BANK_INTEGRATION_IDS } = require('../constants')

async function canReadBankIntegrations ({ authentication: { item: user }, context }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin) return {}

    if (await checkBankIntegrationsAccessRights(context, user.id, [BANK_INTEGRATION_IDS.SBBOL])) return true

    return true
}

const canManageBankIntegrations = false

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadBankIntegrations,
    canManageBankIntegrations,
}
