/**
 * Generated by `createschema banking.BankIntegration 'name:Text'`
 */

const { LocalizedText } = require('@open-condo/keystone/fields')
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/banking/access/BankIntegration')


const BankIntegration = new GQLListSchema('BankIntegration', {
    schemaDoc: 'Determines way of obtaining banking data',
    fields: {

        name: {
            schemaDoc: 'Name of integration',
            type: LocalizedText,
            isRequired: true,
            template: 'banking.integration.*.name',
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadBankIntegrations,
        create: access.canManageBankIntegrations,
        update: access.canManageBankIntegrations,
        delete: false,
        auth: true,
    },
})

module.exports = {
    BankIntegration,
}
