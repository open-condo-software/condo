/**
 * Generated by `createschema onboarding.OnBoarding 'completed:Checkbox; stepsTransitions:Json;'`
 */

const { Relationship, Checkbox, } = require('@keystonejs/fields')
const { Json } = require('@core/keystone/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/onboarding/access/OnBoarding')


const OnBoarding = new GQLListSchema('OnBoarding', {
    // TODO(codegen): write doc for the OnBoarding domain model!
    schemaDoc: 'TODO DOC!',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        completed: {
            // TODO(codegen): write doc for OnBoarding.completed field!
            schemaDoc: 'TODO DOC!',
            type: Checkbox,
            isRequired: true,
        },

        stepsTransitions: {
            // TODO(codegen): write doc for OnBoarding.stepsTransitions field!
            schemaDoc: 'TODO DOC!',
            type: Json,
            isRequired: true,
        },

        user: {
            // TODO(codegen): write doc for OnBoardingStep.onBoarding field!
            schemaDoc: 'TODO DOC!',
            type: Relationship,
            ref: 'User',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.SET_NULL' },
        },
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadOnBoardings,
        create: access.canManageOnBoardings,
        update: access.canManageOnBoardings,
        delete: false,
        auth: true,
    },
})

module.exports = {
    OnBoarding,
}
