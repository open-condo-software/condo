/**
 * Generated by `createschema onboarding.UserHelpRequestFile 'userHelpRequest?:Relationship:UserHelpRequest:CASCADE;file:File'`
 */

const { get } = require('lodash')
const isEmpty = require('lodash/isEmpty')
const omit = require('lodash/omit')

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { getById } = require('@open-condo/keystone/schema')

const { checkUserBelongsToOrganization } = require('@condo/domains/organization/utils/accessSchema')
const { STAFF } = require('@condo/domains/user/constants/common')


const AVAILABLE_TO_UPDATE_USER_HELP_REQUEST_FILE_FIELDS = ['dv', 'sender', 'userHelpRequest', 'deletedAt']

async function canReadUserHelpRequestFiles ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return {}

    return { createdBy: { id: user.id } }
}

async function canManageUserHelpRequestFiles ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    if (user.type !== STAFF) return false

    if (operation === 'create') {
        const userHelpRequestId = get(originalInput, ['userHelpRequest', 'connect', 'id'], null)
        // all staff users can create temp file without help request connection
        if (!userHelpRequestId) return true

        const userHelpRequest = await getById('UserHelpRequest', userHelpRequestId)
        if (!userHelpRequest) return false

        return await checkUserBelongsToOrganization(user.id, userHelpRequest.organization)
    } else if (operation === 'update') {
        const inaccessibleUpdatedFields = omit(originalInput, AVAILABLE_TO_UPDATE_USER_HELP_REQUEST_FILE_FIELDS)
        if (!isEmpty(inaccessibleUpdatedFields)) return false

        const userHelpRequestFile = await getById('UserHelpRequestFile', itemId)
        if (userHelpRequestFile.userHelpRequest || userHelpRequestFile.createdBy !== user.id) return false

        const userHelpRequestId = get(originalInput, ['userHelpRequest', 'connect', 'id'], null)
        if (!userHelpRequestId) return true

        const userHelpRequest = await getById('UserHelpRequest', userHelpRequestId)
        if (!userHelpRequest || userHelpRequest.createdBy !== user.id) return false

        return true
    }

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadUserHelpRequestFiles,
    canManageUserHelpRequestFiles,
}
