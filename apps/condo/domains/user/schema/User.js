/**
 * Generated by `createschema user.User name:Text; password?:Password; isAdmin?:Checkbox; email?:Text; isEmailVerified?:Checkbox; phone?:Text; isPhoneVerified?:Checkbox; avatar?:File; meta:Json; importId:Text;`
 */

const { Text, Relationship, Integer, Select, Checkbox, DateTimeUtc, Decimal, Password, File } = require('@keystonejs/fields')
const { Json } = require('@core/keystone/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/user/access/User')


const User = new GQLListSchema('User', {
    // TODO(codegen): write doc for the User domain model!
    schemaDoc: 'TODO DOC!',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        name: {
            // TODO(codegen): write doc for User.name field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

        password: {
            // TODO(codegen): write doc for User.password field!
            schemaDoc: 'TODO DOC!',
            type: Password,
        },

        isAdmin: {
            // TODO(codegen): write doc for User.isAdmin field!
            schemaDoc: 'TODO DOC!',
            type: Checkbox,
        },

        email: {
            // TODO(codegen): write doc for User.email field!
            schemaDoc: 'TODO DOC!',
            type: Text,
        },

        isEmailVerified: {
            // TODO(codegen): write doc for User.isEmailVerified field!
            schemaDoc: 'TODO DOC!',
            type: Checkbox,
        },

        phone: {
            // TODO(codegen): write doc for User.phone field!
            schemaDoc: 'TODO DOC!',
            type: Text,
        },

        isPhoneVerified: {
            // TODO(codegen): write doc for User.isPhoneVerified field!
            schemaDoc: 'TODO DOC!',
            type: Checkbox,
        },

        avatar: {
            // TODO(codegen): write doc for User.avatar field!
            schemaDoc: 'TODO DOC!',
            type: File,
        },

        meta: {
            // TODO(codegen): write doc for User.meta field!
            schemaDoc: 'TODO DOC!',
            type: Json,
            isRequired: true,
        },

        importId: {
            // TODO(codegen): write doc for User.importId field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadUsers,
        create: access.canManageUsers,
        update: access.canManageUsers,
        delete: false,
        auth: true,
    },
})

module.exports = {
    User,
}
