/**
 * Generated by `createservice user.LinkUserToExternalIdentityService`
 */
const access = require('@open-condo/keystone/access')
const { RESIDENT } = require('@condo/domains/user/constants/common')

async function canLinkUserToExternalIdentity (args) {
    const { authentication: { item: user } } = args

    if (!access.userIsAuthenticated(args)) {
        return false
    }

    if (user.type === RESIDENT) {
        // own identities read
        return { user: { id: user.id } }
    } else {
        return false
    }
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canLinkUserToExternalIdentity,
}