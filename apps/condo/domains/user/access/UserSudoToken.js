/**
 * Generated by `createschema user.UserSudoToken 'token:Text; expiresAt:DateTimeUtc; user:Relationship:User:CASCADE; remainingUses:Integer'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')


/**
 * Requests can be read by:
 * 1) Admin
 */
async function canReadUserSudoTokens ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return {}

    return false
}

/**
 * Requests can be manage by:
 * 1) Admin
 */
async function canManageUserSudoTokens ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin) return true

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadUserSudoTokens,
    canManageUserSudoTokens,
}
