/**
 * Generated by `createservice user.RegisterUserExternalIdentityService`
 */
const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { RESIDENT } = require('@condo/domains/user/constants/common')

async function canRegister ({ args: { data: { user: { id: userId } } }, authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.type === RESIDENT && user.id === userId) {
        return {
            user: { id: user.id },
        }
    } else {
        return false
    }
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canRegister,
}
