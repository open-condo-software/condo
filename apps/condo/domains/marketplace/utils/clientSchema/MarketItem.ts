/**
 * Generated by `createschema marketplace.MarketItem 'name:Text; marketCategory:Relationship:MarketCategory:SET_NULL; sku:Text; description:Text; organization:Relationship:Organization:CASCADE;'`
 */

import {
    Invoice, InvoiceContext, InvoiceCreateInput, InvoiceUpdateInput,
    MarketItem,
    MarketItemCreateInput,
    MarketItemUpdateInput,
    QueryAllMarketItemsArgs,
} from '@app/condo/schema'
import { get, isNull, isUndefined, pickBy } from 'lodash'
import isEmpty from 'lodash/isEmpty'

import { generateReactHooks } from '@open-condo/codegen/generate.hooks'

import { MarketItem as MarketItemGQL } from '@condo/domains/marketplace/gql'


type PriceFormValuesType = {
    properties?: string[]
    priceType?: string
    price?: string
}

export type MarketItemFormValuesType = {
    name?: string
    sku?: string
    parentCategory?: string
    category?: string
    description?: string
    files?: string[]
    prices?: PriceFormValuesType[]
}

export function convertToFormState (marketItem: MarketItem): MarketItemFormValuesType | undefined {
    return {}
}

type MarketItemMutationType = MarketItemUpdateInput | MarketItemCreateInput

export function formValuesProcessor (formValues: MarketItemFormValuesType): MarketItemMutationType {
    const result: MarketItemMutationType = {}

    return result
}

const {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
    useCount,
} = generateReactHooks<MarketItem, MarketItemCreateInput, MarketItemUpdateInput, QueryAllMarketItemsArgs>(MarketItemGQL)

export {
    useObject,
    useObjects,
    useCreate,
    useUpdate,
    useSoftDelete,
    useCount,
}
