/**
 * Generated by `createschema marketplace.MarketSettings 'organization:Relationship:Organization:CASCADE; residentAllowedPaymentTypes:Select:cash, online;'`
 */

const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/marketplace/access/MarketSetting')
const { ORGANIZATION_OWNED_FIELD } = require('@condo/domains/organization/schema/fields')


const MarketSetting = new GQLListSchema('MarketSetting', {
    schemaDoc: 'Setting up special rules for the marketplace',
    fields: {

        organization: ORGANIZATION_OWNED_FIELD,

        residentAllowedPaymentTypes: {
            schemaDoc: 'Types of payments are allowed for selection on the residentâ€™s side',
            type: 'Json',
            graphQLInputType: '[InvoicePaymentTypeType]',
            graphQLReturnType: '[InvoicePaymentTypeType]',
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadMarketSettings,
        create: access.canManageMarketSettings,
        update: access.canManageMarketSettings,
        delete: false,
        auth: true,
    },
})

module.exports = {
    MarketSetting,
}
