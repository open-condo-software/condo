/**
 * Generated by `createschema marketplace.MarketItem 'name:Text; marketCategory:Relationship:MarketCategory:SET_NULL; sku:Text; description:Text; organization:Relationship:Organization:CASCADE;'`
 */
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/marketplace/access/MarketItem')


const MarketItem = new GQLListSchema('MarketItem', {
    schemaDoc: 'Information about the market product',
    fields: {

        name: {
            schemaDoc: 'Name of market item',
            type: 'Text',
            isRequired: true,
        },

        marketCategory: {
            schemaDoc: 'Category to which the item belongs',
            type: 'Relationship',
            ref: 'MarketCategory',
            isRequired: true,
            kmigratorOptions: { null: true, on_delete: 'models.SET_NULL' },
        },

        sku: {
            schemaDoc: 'Stock keeping unit',
            type: 'Text',
            isRequired: true,
        },

        description: {
            schemaDoc: 'Description of market item',
            type: 'Text',
        },

        organization: {
            schemaDoc: 'Organization to which the item belongs',
            type: 'Relationship',
            ref: 'Organization',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

    },
    kmigratorOptions: {
        constraints: [
            {
                type: 'models.UniqueConstraint',
                fields: ['organization', 'sku'],
                condition: 'Q(deletedAt__isnull=True)',
                name: 'MarketItem_unique_organization_sku',
            },
        ],
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadMarketItems,
        create: access.canManageMarketItems,
        update: access.canManageMarketItems,
        delete: false,
        auth: true,
    },
})

module.exports = {
    MarketItem,
}
