/**
 * Generated by `createschema meter.MeterResource 'name:Text;'`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */
const { gql } = require('graphql-tag')

const { ADDRESS_META_SUBFIELDS_QUERY_LIST } = require('@condo/domains/property/schema/fields/AddressMetaField')
const { generateGqlQueries } = require('@open-condo/codegen/generate.gql')

const COMMON_FIELDS = 'id dv sender { dv fingerprint } v deletedAt newId createdBy { id name } updatedBy { id name } createdAt updatedAt'

const METER_RESOURCE_FIELDS = 'id name nameNonLocalized measure measureNonLocalized'
const METER_RESOURCE_FIELDS_ALL = `{ ${METER_RESOURCE_FIELDS} ${COMMON_FIELDS} }`
const MeterResource = generateGqlQueries('MeterResource', METER_RESOURCE_FIELDS_ALL)

const METER_READING_SOURCE_FIELDS = `{ type name nameNonLocalized ${COMMON_FIELDS} }`
const MeterReadingSource = generateGqlQueries('MeterReadingSource', METER_READING_SOURCE_FIELDS)

const METER_FIELDS = `{ number numberOfTariffs installationDate commissioningDate verificationDate nextVerificationDate controlReadingsDate sealingDate accountNumber organization { id } property { id address addressMeta { ${ADDRESS_META_SUBFIELDS_QUERY_LIST} } } unitName unitType place resource { ${METER_RESOURCE_FIELDS} } isAutomatic b2bApp { id name } b2cApp { id name } ${COMMON_FIELDS} }`
const Meter = generateGqlQueries('Meter', METER_FIELDS)

const METER_READING_FIELDS = `{ value1 value2 value3 value4 date meter ${METER_FIELDS} organization { id name } client { id } clientName clientEmail clientPhone contact { id name } source { id name type } ${COMMON_FIELDS} }`
const MeterReading = generateGqlQueries('MeterReading', METER_READING_FIELDS)

const EXPORT_METER_READINGS_QUERY = gql`
    query exportMeterReadings ($data: ExportMeterReadingsInput!) {
        result: exportMeterReadings (data: $data) { status, linkToFile }
    }
`

const METER_READING_FILTERS_FIELDS = '{ organization address accountNumber place number unitName resource clientName createdAt date verificationDate installationDate commissioningDate sealingDate controlReadingDate }'
const METER_READING_FILTER_TEMPLATE_FIELDS = `{ name employee { id } fields ${METER_READING_FILTERS_FIELDS} ${COMMON_FIELDS} }`
const MeterReadingFilterTemplate = generateGqlQueries('MeterReadingFilterTemplate', METER_READING_FILTER_TEMPLATE_FIELDS)

/* AUTOGENERATE MARKER <CONST> */

module.exports = {
    MeterResource,
    MeterReadingSource,
    Meter,
    MeterReading,
    EXPORT_METER_READINGS_QUERY,
    MeterReadingFilterTemplate,
/* AUTOGENERATE MARKER <EXPORTS> */
}

