/**
 * Generated by `createschema meter.MeterReadingSource 'organization:Relationship:Organization:CASCADE; type:Select:call,mobile_app,billing; name:Text;'`
 */

const { makeClientWithNewRegisteredAndLoggedInUser } = require('@condo/domains/user/utils/testSchema')
const { makeLoggedInAdminClient, makeClient } = require('@core/keystone/test.utils')
const { createTestMeterReadingSource } = require('@condo/domains/meter/utils/testSchema')
const { expectToThrowAccessDeniedErrorToObj } = require('@condo/domains/common/utils/testSchema')

describe('MeterReadingSource', () => {
    describe('Create', () => {
        test('user: cannot create MeterReadingSource', async () => {
            const client = await makeClientWithNewRegisteredAndLoggedInUser()

            await expectToThrowAccessDeniedErrorToObj(async () => {
                await createTestMeterReadingSource(client)
            })
        })

        test('anonymous: cannot create Meter', async () => {
            const client = await makeClient()

            await expectToThrowAccessDeniedErrorToObj(async () => {
                await createTestMeterReadingSource(client)
            })
        })

        test('admin: cannot create Meter', async () => {
            const admin = await makeLoggedInAdminClient()

            await expectToThrowAccessDeniedErrorToObj(async () => {
                await createTestMeterReadingSource(admin)
            })
        })
    })
})
