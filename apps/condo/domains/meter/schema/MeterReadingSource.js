/**
 * Generated by `createschema meter.MeterReadingSource 'type:Select:call,mobile_app,billing; name:Text;'`
 */

const { LocalizedText } = require('@condo/keystone/fields')
const { Select } = require('@keystonejs/fields')
const { GQLListSchema } = require('@condo/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@condo/keystone/plugins')
const access = require('@condo/domains/meter/access/MeterReadingSource')
const { METER_READING_SOURCE_TYPES } = require('@condo/domains/meter/constants/constants')
const { dvAndSender } = require('@condo/domains/common/schema/plugins/dvAndSender')



const MeterReadingSource = new GQLListSchema('MeterReadingSource', {
    schemaDoc: 'Ticket source. Income call, mobile_app, ...',
    fields: {

        type: {
            type: Select,
            options: METER_READING_SOURCE_TYPES,
            isRequired: true,
        },

        name: {
            type: LocalizedText,
            isRequired: true,
            template: 'meterReadingSource.*.name',
        },
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadMeterReadingSources,
        create: access.canManageMeterReadingSources,
        update: access.canManageMeterReadingSources,
        delete: false,
        auth: false,
    },
    escapeSearch: true,
})

module.exports = {
    MeterReadingSource,
}
