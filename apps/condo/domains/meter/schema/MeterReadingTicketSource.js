/**
 * Generated by `createschema meter.MeterReadingTicketSource 'organization:Relationship:Organization:CASCADE; type:Select:call,mobile_app,billing; name:Text;'`
 */

const { Text, Relationship, Integer, Select, Checkbox, DateTimeUtc, CalendarDay, Decimal, Password, File } = require('@keystonejs/fields')
const { Json } = require('@core/keystone/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/meter/access/MeterReadingTicketSource')
const { COMMON_AND_ORGANIZATION_OWNED_FIELD } = require('../../../schema/_common')


const MeterReadingTicketSource = new GQLListSchema('MeterReadingTicketSource', {
    schemaDoc: 'Ticket source. Income call, mobile_app, billing, ...',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        organization: COMMON_AND_ORGANIZATION_OWNED_FIELD,

        type: {
            type: Select,
            options: 'call, mobile_app, billing',
            isRequired: true,
        },

        name: {
            type: Text,
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadMeterReadingTicketSources,
        create: access.canManageMeterReadingTicketSources,
        update: access.canManageMeterReadingTicketSources,
        delete: false,
        auth: true,
    },
})

module.exports = {
    MeterReadingTicketSource,
}
