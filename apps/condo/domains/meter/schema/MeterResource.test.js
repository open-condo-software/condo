/**
 * Generated by `createschema meter.MeterResource 'name:Text;'`
 */
const { MeterResource } = require('../utils/testSchema')
const { expectToThrowAccessDeniedErrorToObj } = require('@condo/domains/common/utils/testSchema')
const { makeClientWithNewRegisteredAndLoggedInUser } = require('@condo/domains/user/utils/testSchema')
const { makeLoggedInAdminClient, makeClient } = require('@core/keystone/test.utils')
const { createTestMeterResource } = require('@condo/domains/meter/utils/testSchema')

describe('MeterResource', () => {
    describe('Create', () => {
        test('user: cannot create MeterReadingSource', async () => {
            const client = await makeClientWithNewRegisteredAndLoggedInUser()

            await expectToThrowAccessDeniedErrorToObj(async () => {
                await createTestMeterResource(client)
            })
        })

        test('anonymous: cannot create Meter', async () => {
            const client = await makeClient()

            await expectToThrowAccessDeniedErrorToObj(async () => {
                await createTestMeterResource(client)
            })
        })

        test('admin: cannot create Meter', async () => {
            const admin = await makeLoggedInAdminClient()

            await expectToThrowAccessDeniedErrorToObj(async () => {
                await createTestMeterResource(admin)
            })
        })
    })
    describe('Read', () => {
        test('user: can read MeterReadingSources', async () => {
            const client = await makeClientWithNewRegisteredAndLoggedInUser()
            const sources = await MeterResource.getAll(client, {})

            expect(sources.length).toBeGreaterThan(0)
        })

        test('anonymous: cannot read MeterReadingSources', async () => {
            const client = await makeClient()
            const sources = await MeterResource.getAll(client, {})

            expect(sources.length).toBeGreaterThan(0)
        })

        test('admin: can read MeterReadingSources', async () => {
            const admin = await makeLoggedInAdminClient()
            const sources = await MeterResource.getAll(admin, {})

            expect(sources.length).toBeGreaterThan(0)
        })
    })
})
