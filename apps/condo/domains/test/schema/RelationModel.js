/**
 * Generated by `createschema test.RelationModel 'name:Text;'`
 */

const { GQLListSchema } = require('@open-condo/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const access = require('@condo/domains/test/access/RelationModel')


const RelationModel = new GQLListSchema('RelationModel', {
    // TODO(codegen): write doc for the RelationModel domain model!
    schemaDoc: 'TODO DOC!',
    fields: {

        name: {
            // TODO(codegen): write doc for RelationModel.name field!
            schemaDoc: 'TODO DOC!',
            type: 'Text',
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadRelationModels,
        create: access.canManageRelationModels,
        update: access.canManageRelationModels,
        delete: access.canManageRelationModels,
        auth: true,
    },
})

module.exports = {
    RelationModel,
}
