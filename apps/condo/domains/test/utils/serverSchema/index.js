/**
 * Generated by `createschema test.RelationModel 'name:Text;'`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */

const { generateServerUtils, execGqlWithoutAccess } = require('@open-condo/codegen/generate.server.utils')

const { RelationModel: RelationModelGQL } = require('@condo/domains/test/gql')
const { Model: ModelGQL } = require('@condo/domains/test/gql')
const { TEST_MUTATION } = require('@condo/domains/test/gql')
/* AUTOGENERATE MARKER <IMPORT> */

const RelationModel = generateServerUtils(RelationModelGQL)
const Model = generateServerUtils(ModelGQL)
async function test (context, data) {
    if (!context) throw new Error('no context')
    if (!data) throw new Error('no data')
    if (!data.sender) throw new Error('no data.sender')
    // TODO(codegen): write test serverSchema guards

    return await execGqlWithoutAccess(context, {
        query: TEST_MUTATION,
        variables: { data: { dv: 1, ...data } },
        errorMessage: '[error] Unable to test',
        dataPath: 'obj',
    })
}

/* AUTOGENERATE MARKER <CONST> */

module.exports = {
    RelationModel,
    Model,
    test,
/* AUTOGENERATE MARKER <EXPORTS> */
}
