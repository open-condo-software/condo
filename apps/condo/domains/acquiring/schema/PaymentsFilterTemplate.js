/**
 * Generated by `createschema acquiring.PaymentsFilterTemplate 'name:Text; employee:Relationship:OrganizationEmployee:CASCADE'`
 */

const { Text, Relationship } = require('@keystonejs/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/acquiring/access/PaymentsFilterTemplate')
const { PAYMENTS_FILTER_FIELD } = require('@condo/domains/acquiring/schema/fields/PaymentsFilter')

const PaymentsFilterTemplate = new GQLListSchema('PaymentsFilterTemplate', {
    schemaDoc: 'The payments filter preset',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        name: {
            schemaDoc: 'Preset name',
            type: Text,
            isRequired: true,
        },

        employee: {
            schemaDoc: 'Preset owner',
            type: Relationship,
            ref: 'OrganizationEmployee',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

        fields: PAYMENTS_FILTER_FIELD,
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadPaymentsFilterTemplates,
        create: access.canManagePaymentsFilterTemplates,
        update: access.canManagePaymentsFilterTemplates,
        delete: false,
        auth: true,
    },
})

module.exports = {
    PaymentsFilterTemplate,
}
