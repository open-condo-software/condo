/**
 * Generated by `createservice acquiring.SetPaymentPosReceiptUrlService --type mutations 'payment:PaymentWhereUniqueInput!, posReceiptUrl:String!'`
 */

const { GQLCustomSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/acquiring/access/SetPaymentPosReceiptUrlService')
const { Payment } = require('@condo/domains/acquiring/utils/serverSchema')


const SetPaymentPosReceiptUrlService = new GQLCustomSchema('SetPaymentPosReceiptUrlService', {
    types: [
        {
            access: true,
            type: 'input SetPaymentPosReceiptUrlInput { dv: Int!, sender: JSON!, payment: PaymentWhereUniqueInput!, posReceiptUrl: String! }',
        },
        {
            access: true,
            type: 'type SetPaymentPosReceiptUrlOutput { success: Boolean! }',
        },
    ],

    mutations: [
        {
            access: access.canSetPaymentPosReceiptUrl,
            schema: 'setPaymentPosReceiptUrl(data: SetPaymentPosReceiptUrlInput!): SetPaymentPosReceiptUrlOutput',
            resolver: async (parent, args, context, info, extra = {}) => {
                const { data } = args
                const { dv, sender, payment, posReceiptUrl } = data

                await Payment.update(context, payment.id, { dv, sender, posReceiptUrl })

                return {
                    success: true,
                }
            },
        },
    ],

})

module.exports = {
    SetPaymentPosReceiptUrlService,
}
