/**
 * Generated by `createservice acquiring.RegisterMultiPaymentService`
 */

const { GQLCustomSchema } = require('@core/keystone/schema')
const access = require('@condo/domains/acquiring/access/RegisterMultiPaymentService')


const RegisterMultiPaymentService = new GQLCustomSchema('RegisterMultiPaymentService', {
    types: [
        {
            access: true,
            type: 'input RegisterMultiPaymentServiceConsumerInput { serviceConsumerId: String!, receiptsIds: [String!]! }',
        },
        {
            access: true,
            type: 'input RegisterMultiPaymentInput { dv: Int!, sender: JSON!, data: [RegisterMultiPaymentServiceConsumerInput!]! }',
        },
        {
            access: true,
            type: 'type RegisterMultiPaymentOutput { id: String! }',
        },
    ],
    
    mutations: [
        {
            access: access.canRegisterMultiPayment,
            schema: 'registerMultiPayment(data: RegisterMultiPaymentInput!): RegisterMultiPaymentOutput',
            resolver: async (parent, args, context, info, extra = {}) => {
                // TODO(codegen): write RegisterMultiPaymentService logic!
                const { data } = args
                return {
                    id: null,
                }
            },
        },
    ],
    
})

module.exports = {
    RegisterMultiPaymentService,
}
