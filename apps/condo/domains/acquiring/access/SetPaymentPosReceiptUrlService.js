/**
 * Generated by `createservice acquiring.SetPaymentPosReceiptUrlService --type mutations 'payment:PaymentWhereUniqueInput!, posReceiptUrl:String!'`
 */
const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { getById } = require('@open-condo/keystone/schema')

const { canExecuteServiceAsB2BAppServiceUser } = require('@condo/domains/miniapp/utils/b2bAppServiceUserAccess')

async function canSetPaymentPosReceiptUrl (args) {
    const { authentication: { item: user }, args: { data } } = args

    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return true

    const payment = await getById('Payment', data.payment.id)

    return await canExecuteServiceAsB2BAppServiceUser(args, payment.organization)
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canSetPaymentPosReceiptUrl,
}
