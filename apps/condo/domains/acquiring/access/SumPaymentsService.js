/**
 * Generated by `createservice acquiring.SumPaymentsService`
 */
const get = require('lodash/get')
const { throwAuthenticationError } = require('@condo/keystone/apolloErrorFormatter')
const { checkOrganizationPermission } = require('@condo/domains/organization/utils/accessSchema')

async function canSumPayments ({ args: { where }, authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return {}

    return await checkOrganizationPermission(user.id, get(where, ['organization', 'id'], null), 'canReadPayments',)
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canSumPayments,
}