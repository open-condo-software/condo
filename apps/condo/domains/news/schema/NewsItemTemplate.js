/**
 * Generated by `createschema news.NewsItemTemplate 'organization?:Relationship:Organization:CASCADE; title:Text; body:Text;'`
 */

const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/news/access/NewsItemTemplate')


const NewsItemTemplate = new GQLListSchema('NewsItemTemplate', {
    schemaDoc: 'The news item template for quick composing a news item',
    fields: {

        organization: {
            schemaDoc: 'Organization who creates the template. A common template if there is no organization',
            type: 'Relationship',
            ref: 'Organization',
            kmigratorOptions: { null: true, on_delete: 'models.CASCADE' },
        },

        title: {
            schemaDoc: 'The title of a future news item',
            type: 'Text',
            isRequired: true,
        },

        body: {
            schemaDoc: 'A future news item\'s body',
            type: 'Text',
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadNewsItemTemplates,
        create: access.canManageNewsItemTemplates,
        update: access.canManageNewsItemTemplates,
        delete: false,
        auth: true,
    },
})

module.exports = {
    NewsItemTemplate,
}
