/**
 * Generated by `createschema news.OrganizationNewsItem 'organization:Relationship:Organization:CASCADE; title:Text; body:Text; type:Select:common,emergency'`
 */

const { Text, Relationship, Select } = require('@keystonejs/fields')

const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/news/access/NewsItem')
const { NEWS_TYPES } = require('@condo/domains/news/constants')

const NewsItem = new GQLListSchema('NewsItem', {
    schemaDoc: 'The news item created by the organization to show on resident\'s mobile devices',
    fields: {

        organization: {
            schemaDoc: 'The organization the news item created by',
            type: Relationship,
            ref: 'Organization',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

        title: {
            schemaDoc: 'The news item title',
            type: Text,
            isRequired: true,
        },

        body: {
            schemaDoc: 'The news item main body',
            type: Text,
            isRequired: true,
        },

        type: {
            schemaDoc: 'The news item type',
            type: Select,
            options: NEWS_TYPES,
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadNewsItems,
        create: access.canManageNewsItems,
        update: access.canManageNewsItems,
        delete: false,
        auth: true,
    },
})

module.exports = {
    NewsItem,
}
