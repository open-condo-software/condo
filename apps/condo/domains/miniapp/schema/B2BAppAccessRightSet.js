/**
 * Generated by `createschema miniapp.B2BAppAccessRightSet 'app:Relationship:B2BApp:CASCADE;'`
 */

const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/miniapp/access/B2BAppAccessRightSet')


const B2BAppAccessRightSet = new GQLListSchema('B2BAppAccessRightSet', {
    schemaDoc: 'A set of access rights for a service user integrated with B2BApp.',
    fields: {

        app: {
            schemaDoc: 'Link to B2BApp',
            type: 'Relationship',
            ref: 'B2BApp',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
            access: {
                update: false,
            },
        },

    },
    kmigratorOptions: {
        constraints: [
            {
                type: 'models.UniqueConstraint',
                fields: ['app'],
                condition: 'Q(deletedAt__isnull=True)',
                name: 'b2b_app_access_right_set_unique_app',
            },
        ],
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadB2BAppAccessRightSets,
        create: access.canManageB2BAppAccessRightSets,
        update: access.canManageB2BAppAccessRightSets,
        delete: false,
        auth: true,
    },
})

module.exports = {
    B2BAppAccessRightSet,
}
