/**
 * Generated by `createschema miniapp.B2BAppNewsSharingConfig 'publishUrl:Text; previewUrl:Text; getRecipientsUrl:Text;'`
 */

const { Text, Relationship, Integer, Select, Checkbox, DateTimeUtc, CalendarDay, Decimal, Password, File, Url } = require('@keystonejs/fields')
const { Json } = require('@open-condo/keystone/fields')
const { GQLListSchema } = require('@open-condo/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const access = require('@condo/domains/miniapp/access/B2BAppNewsSharingConfig')


const B2BAppNewsSharingConfig = new GQLListSchema('B2BAppNewsSharingConfig', {
    // TODO(codegen): write doc for the B2BAppNewsSharingConfig domain model!
    schemaDoc: 'TODO DOC!',
    fields: {

        publishUrl: {
            // TODO(codegen): write doc for B2BAppNewsSharingConfig.publishUrl field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

        previewUrl: {
            // TODO(codegen): write doc for B2BAppNewsSharingConfig.previewUrl field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

        getRecipientsUrl: {
            // TODO(codegen): write doc for B2BAppNewsSharingConfig.getRecipientsUrl field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadB2BAppNewsSharingConfigs,
        create: access.canManageB2BAppNewsSharingConfigs,
        update: access.canManageB2BAppNewsSharingConfigs,
        delete: false,
        auth: true,
    },
})

module.exports = {
    B2BAppNewsSharingConfig,
}
