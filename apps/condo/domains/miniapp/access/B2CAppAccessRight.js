/**
 * Generated by `createschema miniapp.B2CAppAccessRight 'user:Relationship:User:PROTECT; app:Relationship:B2CApp:PROTECT;'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

const { canDirectlyManageSchemaObjects, canDirectlyReadSchemaObjects } = require('@condo/domains/user/utils/directAccess')

/**
 * B2CAppAccessRights can be read by:
 * 1. Admin / support
 * 2. Users with direct access
 */
async function canReadB2CAppAccessRights ({ authentication: { item: user }, listKey }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return {}

    return await canDirectlyReadSchemaObjects(user, listKey)
}

/**
 * B2CAppAccessRights can be managed by:
 * 1. Admin / support
 * 2. Users with direct access
 */
async function canManageB2CAppAccessRights ({ authentication: { item: user }, listKey, originalInput, operation }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isSupport || user.isAdmin) return true

    return await canDirectlyManageSchemaObjects(user, listKey, originalInput, operation)
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadB2CAppAccessRights,
    canManageB2CAppAccessRights,
}
