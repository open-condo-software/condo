/**
 * Generated by `createservice miniapp.AllOrganizationAppsService --type queries`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */
const faker = require('faker')
const { throwIfError } = require('@condo/domains/common/utils/codegeneration/generate.test.utils')

const { ALL_ORGANIZATION_APPS_QUERY } = require('@condo/domains/miniapp/gql')
/* AUTOGENERATE MARKER <IMPORT> */

const DOCUMENT_BLOCK_SINGLE_EXAMPLE = [
    {
        type: 'component-block',
        component: 'aboutAppBlock',
        props: {
            sections: [
                { title: 'Text', description: 'Longer text', imageSrc: faker.image.imageUrl() }
            ]
        }
    }
]

const DOCUMENT_BLOCK_MULTIPLE_EXAMPLE = [
    {
        type: 'component-block',
        component: 'aboutAppBlock',
        props: {
            sections: [
                { title: 'First card', description: 'Longer text', imageSrc: faker.image.imageUrl() },
                { title: 'Second card', description: 'Longer text', imageSrc: faker.image.imageUrl() },
                { title: 'Third card', description: 'Longer text', imageSrc: faker.image.imageUrl() },
            ]
        }
    }
]

/* AUTOGENERATE MARKER <CONST> */


async function allOrganizationAppsByTestClient(client, organizationId, extraAttrs) {
    if (!client) throw new Error('no client')
    if (!organizationId) throw new Error('no organization id')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    const attrs = {
        dv: 1,
        sender,
        organization: { id: organizationId },
        ...extraAttrs,
    }
    const { data, errors } = await client.query(ALL_ORGANIZATION_APPS_QUERY, { data: attrs })
    throwIfError(data, errors)
    return [data.objs, attrs]
}

/* AUTOGENERATE MARKER <FACTORY> */

module.exports = {
    allOrganizationAppsByTestClient,
    DOCUMENT_BLOCK_SINGLE_EXAMPLE,
    DOCUMENT_BLOCK_MULTIPLE_EXAMPLE,
/* AUTOGENERATE MARKER <EXPORTS> */
}
