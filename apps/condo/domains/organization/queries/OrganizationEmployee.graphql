query getActiveOrganizationEmployee($userId: ID!, $employeeId: ID) {
    employees: allOrganizationEmployees(where: {
        id: $employeeId,
        organization: { type_in: [MANAGING_COMPANY, SERVICE_PROVIDER] },
        user: { id: $userId, type: staff },
        isAccepted: true,
        isBlocked: false,
        isRejected: false,
    }, first: 1, skip: 0, sortBy: [createdAt_DESC]) {
        id
        name
        email
        phone
        hasAllSpecializations
        isRejected
        isAccepted
        isBlocked
        position
        organization {
            id
            country
            name
            type
            tin
            features
            statusTransitions
            importId
            importRemoteSystem
        }
        role {
            id
            isEditable
            isDefault
            statusTransitions
            ticketVisibilityType
            canReadAnalytics
            canManageOrganization
            canManageCallRecords
            canDownloadCallRecords
            canReadEmployees
            canManageEmployees
            canInviteNewOrganizationEmployees
            canManageRoles
            canManageTicketPropertyHints
            canManageIntegrations
            canImportBillingReceipts
            canReadBillingReceipts
            canReadPayments
            canManageProperties
            canReadProperties
            canReadDocuments
            canManageDocuments
            canReadTickets
            canManageTickets
            canReadContacts
            canManageContacts
            canManageContactRoles
            canManageTicketComments
            canManagePropertyScopes
            canShareTickets
            canBeAssignedAsResponsible
            canBeAssignedAsExecutor
            canManageMeters
            canManageMeterReadings
            canManageBankAccounts
            canManageBankContractorAccounts
            canManageBankIntegrationAccountContexts
            canManageBankIntegrationOrganizationContexts
            canManageBankTransactions
            canManageBankAccountReports
            canManageBankAccountReportTasks
            canManageBankAccountReports
            canReadIncidents
            canManageIncidents
            canReadNewsItems
            canManageNewsItems
            canManageNewsItemTemplates
            canManageMobileFeatureConfigs
            canManageB2BApps
            canReadMeters
            canReadSettings
            canReadExternalReports
            canReadServices
            canReadCallRecords
            canReadInvoices
            canManageInvoices
            canReadMarketItems
            canManageMarketItems
            canManageMarketItemPrices
            canReadMarketItemPrices
            canReadMarketPriceScopes
            canManageMarketPriceScopes
            canReadMarketplace
            canManageMarketplace
            canReadPaymentsWithInvoices
            canReadTour
            canManageTour
            canReadMarketSetting
            canManageMarketSetting
            canManageTicketAutoAssignments
        }
    }
}

query getActualOrganizationEmployees($userId: ID!) {
    actualEmployees: allOrganizationEmployees(
        where: {
            user: { id: $userId },
            isAccepted: true,
            isRejected: false,
            isBlocked: false,
            organization: { type_in: [MANAGING_COMPANY, SERVICE_PROVIDER] },
        },
        # Note: we have limit 1000 obj per query.
        # 1000 limit / 2 schema = 500 objects per query
        first: 500,
    ) {
        id
        organization {
            id
            name
            importId
            importRemoteSystem
        }
    }
}

query getEmployeeInvitesCount($userId: ID!) {
    meta: _allOrganizationEmployeesMeta(
        where: {
            user: { id: $userId },
            isAccepted: false,
            isRejected: false,
            isBlocked: false,
            organization: { type_in: [MANAGING_COMPANY, SERVICE_PROVIDER] },
        }
    ) {
        count
    }
}

query getContactEditorOrganizationEmployees ($where: OrganizationEmployeeWhereInput) {
    employees: allOrganizationEmployees (
        where: $where,
        first: 100
    ) {
        id
        name
        phone
    }
}

query getOrganizationEmployeeWithTicketOrganization ($userId: ID!, $organizationId: ID!) {
    employees: allOrganizationEmployees (
        where: {
            user: { id: $userId },
            organization: { id: $organizationId },
        }
        first: 1
    ) {
        id
    }
}