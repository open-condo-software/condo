/**
 * Generated by `createservice organization.ReplaceOrganizationEmployeeRoleService --type mutations`
 */
const get = require('lodash/get')

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

const { checkPermissionsInEmployedOrganizations } = require('../utils/accessSchema')


/**
 * Roles can only be deleted by:
 * 1. Admin
 * 2. Supports
 * 3. Employee with "canManageRoles" and "canManageEmployees" permissions
 */
async function canReplaceOrganizationEmployeeRole ({ authentication: { item: user }, args: { data }, context }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return true

    const organizationId = get(data, 'organization.id', null)
    if (!organizationId) return false
    return checkPermissionsInEmployedOrganizations(context, user, organizationId, ['canManageRoles', 'canManageEmployees'])
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReplaceOrganizationEmployeeRole,
}
