/**
 * Generated by `createschema organization.OrganizationNewsItem 'title:Text; body:Text; type:Select:common,emergency; receiversCriteria?:Json; meta?:Json;'`
 */

const { Relationship, Select, Text } = require('@keystonejs/fields')

const { Json } = require('@open-condo/keystone/fields')
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/organization/access/OrganizationNewsItem')
const { NEWS_TYPES } = require('@condo/domains/organization/constants')


const OrganizationNewsItem = new GQLListSchema('OrganizationNewsItem', {
    schemaDoc: 'The news item created by the organization to show on resident\'s mobile devices',
    fields: {

        organization: {
            schemaDoc: 'The organization the news item created by',
            type: Relationship,
            ref: 'Organization',
            isRequired: true,
            knexOptions: { isNotNullable: true },
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

        title: {
            schemaDoc: 'The news item title',
            type: Text,
            isRequired: true,
        },

        body: {
            schemaDoc: 'The news item main body',
            type: Text,
            isRequired: true,
        },

        type: {
            schemaDoc: 'The news item type',
            type: Select,
            options: NEWS_TYPES,
            isRequired: true,
        },

        receiversCriteria: {
            schemaDoc: 'The criteria to select users who will see this message (select by address, entrance number, account number, ...)',
            type: Json,
        },

        meta: {
            schemaDoc: 'Internal info for the news item',
            type: Json,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadOrganizationNewsItems,
        create: access.canManageOrganizationNewsItems,
        update: access.canManageOrganizationNewsItems,
        delete: false,
        auth: true,
    },
})

module.exports = {
    OrganizationNewsItem,
}
