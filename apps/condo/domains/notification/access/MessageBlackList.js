/**
 * Generated by `createschema notification.MessageBlackList 'organization?:Relationship:Organization:SET_NULL; user?:Relationship:User:CASCADE; phone?:Text; email?:Text;'`
 */

const { throwAuthenticationError } = require('@condo/domains/common/utils/apolloErrorFormatter')

async function canReadMessageBlackLists ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return {}

    return false
}

async function canManageMessageBlackLists ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return true

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadMessageBlackLists,
    canManageMessageBlackLists,
}
