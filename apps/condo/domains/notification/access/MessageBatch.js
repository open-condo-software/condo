/**
 * Generated by `createschema notification.MessageBatch 'messageType:Text; title:Text; message:Text; deepLink?:Text; targets:Json; status:Select:created,processing,failed,done; processingMeta?:Json;'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

const { canDirectlyReadSchemaObjects, canDirectlyManageSchemaObjects } = require('@condo/domains/user/utils/directAccess')

/**
 * 1. Admin / support can read all
 * 2. User with direct access can read his own batches
 */
async function canReadMessageBatches ({ authentication: { item: user }, listKey }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return {}

    const directAccess = await canDirectlyReadSchemaObjects(user, listKey)
    if (directAccess) {
        return { createdBy: { id: user.id } }
    }

    return false
}

/**
 * Update / delete is banned
 * Create can be done by admin / support / direct-accessed users
 */
async function canManageMessageBatches ({ authentication: { item: user }, listKey, operation, originalInput }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (operation !== 'create') return false

    if (user.isAdmin || user.isSupport) return true

    return await canDirectlyManageSchemaObjects(user, listKey, originalInput, operation)
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadMessageBatches,
    canManageMessageBatches,
}
