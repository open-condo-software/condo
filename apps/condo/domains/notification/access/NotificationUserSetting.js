/**
 * Generated by `createschema notification.NotificationUserSetting 'user:Relationship:User:CASCADE; messageType:Text; messageTransport:Text; isEnabled:Checkbox'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { getById } = require('@open-condo/keystone/schema')

async function canReadNotificationUserSettings ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return {}

    return { user: { id: user.id } }
}

async function canManageNotificationUserSettings ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return true

    if (operation === 'create') {
        return true
    } else if (operation === 'update') {
        const settingsLine = await getById('NotificationUserSetting', itemId)
        if (!!settingsLine && settingsLine.user === user.id) return true
    }

    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadNotificationUserSettings,
    canManageNotificationUserSettings,
}
