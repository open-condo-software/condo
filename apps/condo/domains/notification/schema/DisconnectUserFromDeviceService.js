/**
 * Generated by `createservice notification.DisconnectUserFromDeviceService --type mutations`
 */
const { GQLCustomSchema, getByCondition } = require('@core/keystone/schema')

const access = require('@condo/domains/notification/access/DisconnectUserFromDeviceService')
const { Device: DeviceAPI } = require('@condo/domains/notification/utils/serverSchema')

const DisconnectUserFromDeviceService = new GQLCustomSchema('DisconnectUserFromDeviceService', {
    types: [
        {
            access: true,
            type: 'input DisconnectUserFromDeviceInput { dv: Int!, sender: SenderFieldInput!, deviceId: String!, pushTransport: PushTransportType }',
        },
        {
            access: true,
            type: 'type DisconnectUserFromDeviceOutput { status: String! }',
        },
    ],
    
    mutations: [
        {
            access: access.canDisconnectUserFromDevice,
            schema: 'disconnectUserFromDevice(data: DisconnectUserFromDeviceInput!): DisconnectUserFromDeviceOutput',
            resolver: async (parent, args, context) => {
                const { data: { dv, sender, deviceId } } = args
                const attrs = { dv, sender, owner: { disconnectAll: true } }
                const existingItem = await getByCondition('Device', { deviceId, deletedAt: null })

                if (existingItem) await DeviceAPI.update(context, existingItem.id, attrs)

                return { status: 'ok' }
            },
        },
    ],
    
})

module.exports = {
    DisconnectUserFromDeviceService,
}
