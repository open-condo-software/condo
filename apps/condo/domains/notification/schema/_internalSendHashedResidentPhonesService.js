/**
 * Generated by `createservice notification._internalSendHashedResidentPhonesService '--type=mutations'`
 */

const { get } = require('lodash')
const { v4: uuid } = require('uuid')

const { GQLCustomSchema } = require('@open-condo/keystone/schema')

const access = require('@condo/domains/notification/access/_internalSendHashedResidentPhonesService')
const { sendHashedResidentPhonesTask } = require('@condo/domains/notification/tasks')


const _internalSendHashedResidentPhonesService = new GQLCustomSchema('_internalSendHashedResidentPhonesService', {
    types: [
        {
            access: true,
            type: 'input _internalSendHashedResidentPhonesInput { dv: Int!, sender: SenderFieldInput! }',
        },
        {
            access: true,
            type: 'type _internalSendHashedResidentPhonesOutput { taskId: ID! }',
        },
    ],

    mutations: [
        {
            access: access.can_internalSendHashedResidentPhones,
            schema: '_internalSendHashedResidentPhones(data: _internalSendHashedResidentPhonesInput!): _internalSendHashedResidentPhonesOutput',
            resolver: async (parent, args, context) => {
                const userId = get(context, ['authedItem', 'id'])
                const taskId = uuid()

                await sendHashedResidentPhonesTask.delay(userId, taskId)

                return {
                    taskId,
                }
            },
        },
    ],

})

module.exports = {
    _internalSendHashedResidentPhonesService,
}
