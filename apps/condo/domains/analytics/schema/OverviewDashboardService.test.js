/**
 * Generated by `createservice analytics.OverviewDashboardService`
 */

const dayjs = require('dayjs')

const { makeLoggedInAdminClient, makeClient } = require('@open-condo/keystone/test.utils')
const { expectToThrowAccessDeniedErrorToObj, expectToThrowAuthenticationErrorToObjects } = require('@open-condo/keystone/test.utils')

const { PAYMENT_DONE_STATUS } = require('@condo/domains/acquiring/constants/payment')
const { makePayerAndPayments } = require('@condo/domains/acquiring/utils/testSchema')
const { updateTestPayment } = require('@condo/domains/acquiring/utils/testSchema')
const { overviewDashboardByTestClient } = require('@condo/domains/analytics/utils/testSchema')

describe('OverviewDashboardService', () => {
    test('user: execute', async () => {
        const { client, organization, admin, payments } = await makePayerAndPayments()

        await updateTestPayment(admin, payments[0].id, {
            status: PAYMENT_DONE_STATUS,
        })

        const payload = {
            where: {
                organization: organization.id,
                dateFrom: dayjs().startOf('month').toISOString(),
                dateTo: dayjs().toISOString(),
            },
            groupBy: { aggregatePeriod: 'month' },
        }
        const [data, attrs] = await overviewDashboardByTestClient(admin, payload)
        // TODO(codegen): write user expect logic
        console.log(data.overview.resident.residents)
    })

    test('anonymous: execute', async () => {
        const client = await makeClient()
        await expectToThrowAuthenticationErrorToObjects(async () => {
            await overviewDashboardByTestClient(client)
        })
    })

    test('admin: execute', async () => {
        const admin = await makeLoggedInAdminClient()
        const payload = {}  // TODO(codegen): change the 'user: update OverviewDashboardService' payload
        const [data, attrs] = await overviewDashboardByTestClient(admin, payload)
        // TODO(codegen): write admin expect logic
        throw new Error('Not implemented yet')
    })
})
