/**
 * Generated by `createschema analytics.ExternalReport 'type:Select:metabase; title:Text; description?:Text; meta?:Json'`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */
const { faker } = require('@faker-js/faker')

const { throwIfError } = require('@open-condo/codegen/generate.test.utils')

const { GET_TICKET_WIDGET_REPORT_DATA, TICKET_ANALYTICS_REPORT_QUERY, EXPORT_TICKET_ANALYTICS_TO_EXCEL } = require('@condo/domains/analytics/gql')
const { GET_OVERVIEW_DASHBOARD_MUTATION } = require('@condo/domains/analytics/gql')
/* AUTOGENERATE MARKER <IMPORT> */

/* AUTOGENERATE MARKER <CONST> */

async function getTicketReport(client, periodType = 'calendarWeek', extraAttrs = {}) {
    if (!client) throw new Error('no client')
    const attrs = {
        periodType,
        ...extraAttrs,
    }
    const { data, errors } = await client.query(GET_TICKET_WIDGET_REPORT_DATA, { data: attrs })
    throwIfError(data, errors)

    return [data.result.data, attrs]
}

async function getTicketAnalyticsReport(client, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    const { data, errors } = await client.query(TICKET_ANALYTICS_REPORT_QUERY, {
        dv: 1,
        sender,
        data: extraAttrs,
    })
    throwIfError(data, errors)

    return [data.result, extraAttrs]
}

async function getTicketAnalyticsExport(client, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    const { data, errors } = await client.query(EXPORT_TICKET_ANALYTICS_TO_EXCEL, {
        dv: 1,
        sender,
        data: extraAttrs
    })
    throwIfError(data, errors)

    return [data.result, extraAttrs]
}

async function getOverviewDashboardByTestClient(client, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    const attrs = {
        dv: 1,
        sender,
        ...extraAttrs,
    }
    const { data, errors } = await client.mutate(GET_OVERVIEW_DASHBOARD_MUTATION, { data: attrs })
    throwIfError(data, errors)
    return [data.result, attrs]
}
/* AUTOGENERATE MARKER <FACTORY> */

module.exports = {
    getTicketReport, getTicketAnalyticsReport, getTicketAnalyticsExport,
    getOverviewDashboardByTestClient,
/* AUTOGENERATE MARKER <EXPORTS> */
}
