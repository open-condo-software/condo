/**
 * Generated by `createservice analytics.GetExternalReportIframeUrlService`
 */
const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')
const { find } = require('@open-condo/keystone/schema')

const {
    checkUserEmploymentInOrganizations,
    getEmployedOrRelatedOrganizationsByPermissions,
} = require('@condo/domains/organization/utils/accessSchema')

async function canGetExternalReportIframeUrl ({ authentication: { item: user }, context, args: { data: { id, organizationId } } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false
    if (user.isAdmin || user.isSupport) return {}

    const userBelongsToOrganization = await checkUserEmploymentInOrganizations(context, user, organizationId)
    if (!userBelongsToOrganization) return false

    const permittedOrganizations = await getEmployedOrRelatedOrganizationsByPermissions(context, user, 'canReadExternalReports')

    const externalReports = await find('ExternalReport', {
        id,
        deletedAt: null,
    })

    if (!externalReports.length) {
        return false
    }

    const externalReport = externalReports[0]

    return Boolean(externalReport.organization === null || permittedOrganizations.includes(externalReport.organization))
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canGetExternalReportIframeUrl,
}
