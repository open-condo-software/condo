const AddressMetaDataFields = [
    'postal_code',
    'country',
    'country_iso_code',
    'federal_district',
    'region_fias_id',
    'region_kladr_id',
    'region_iso_code',
    'region_with_type',
    'region_type',
    'region_type_full',
    'region',
    'area_fias_id',
    'area_kladr_id',
    'area_with_type',
    'area_type',
    'area_type_full',
    'area',
    'city_fias_id',
    'city_kladr_id',
    'city_with_type',
    'city_type',
    'city_type_full',
    'city',
    'city_area',
    'city_district_fias_id',
    'city_district_kladr_id',
    'city_district_with_type',
    'city_district_type',
    'city_district_type_full',
    'city_district',
    'settlement_fias_id',
    'settlement_kladr_id',
    'settlement_with_type',
    'settlement_type',
    'settlement_type_full',
    'settlement',
    'street_fias_id',
    'street_kladr_id',
    'street_with_type',
    'street_type',
    'street_type_full',
    'street',
    'house_fias_id',
    'house_kladr_id',
    'house_cadnum',
    'house_type',
    'house_type_full',
    'house',
    'block_type',
    'block_type_full',
    'block',
    'entrance',
    'floor',
    'flat_fias_id',
    'flat_cadnum',
    'flat_type',
    'flat_type_full',
    'flat',
    'flat_area',
    'square_meter_price',
    'flat_price',
    'postal_box',
    'fias_id',
    'fias_code',
    'fias_level',
    'fias_actuality_state',
    'kladr_id',
    'geoname_id',
    'capital_marker',
    'okato',
    'oktmo',
    'tax_office',
    'tax_office_legal',
    'timezone',
    'geo_lat',
    'geo_lon',
    'beltway_hit',
    'beltway_distance',
    'metro',
    'qc_geo',
    'qc_complete',
    'qc_house',
    'history_values',
    'unparsed_parts',
    'source',
    'qc',
]

const AddressMetaJSONSchema = {
    'type': 'object',
    'properties': {
        'value': {
            'type': 'string',
        },
        'unrestricted_value': {
            'type': 'string',
        },
        'data': {
            'type': 'object',
            'properties': Object.assign({}, ...AddressMetaDataFields.map((x) => ({ [x]: { 'type': ['string', 'null'] } }))),
            'additionalProperties': true,
            'required': AddressMetaDataFields,
        },
    },
    'additionalProperties': true,
    'required': [
        'value',
        'unrestricted_value',
        'data',
    ],
}

module.exports = {
    AddressMetaJSONSchema,
    AddressMetaDataFields,
}