/**
 * Generated by `createservice common._internalScheduleTaskByNameService --type mutations`
 */

const { GQLCustomSchema } = require('@open-condo/keystone/schema')
const { scheduleTaskByNameWithArgsAndOpts } = require('@open-condo/keystone/tasks')

const access = require('@condo/domains/common/access/_internalScheduleTaskByNameService')

const _internalScheduleTaskByNameService = new GQLCustomSchema('_internalScheduleTaskByNameService', {
    types: [
        {
            access: true,
            type: 'input _internalScheduleTaskByNameInput { dv: Int!, sender: JSON!, taskName: String!, taskArgs: JSON, taskOpts: JSON }',
        },
        {
            access: true,
            type: 'type _internalScheduleTaskByNameOutput { id: String! }',
        },
    ],
    
    mutations: [
        {
            access: access.can_internalScheduleTaskByName,
            schema: '_internalScheduleTaskByName(data: _internalScheduleTaskByNameInput!): _internalScheduleTaskByNameOutput',
            schemaDoc: 'An internal module to schedule tasks. Should not be used by anyone except of system administrators / support',
            resolver: async (parent, args, context, info, extra = {}) => {
                const { taskName, taskArgs, taskOpts } = args.data

                try {
                    const task = await scheduleTaskByNameWithArgsAndOpts(taskName, taskArgs, taskOpts)
                    return {
                        id: task.id,
                    }
                } catch (err) {
                    throw new Error(`Something went wrong when calling scheduleTaskByNameWithArgsAndOpts. ${err}`)
                }
            },
        },
    ],
    
})

module.exports = {
    _internalScheduleTaskByNameService,
}
