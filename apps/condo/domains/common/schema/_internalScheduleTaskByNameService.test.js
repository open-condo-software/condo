/**
 * Generated by `createservice common._internalScheduleTaskByNameService --type mutations`
 */

const { makeLoggedInAdminClient, makeClient } = require('@open-condo/keystone/test.utils')
const { expectToThrowAccessDeniedErrorToResult, expectToThrowAuthenticationErrorToResult } = require('@open-condo/keystone/test.utils')

const { _internalScheduleTaskByNameByTestClient } = require('@condo/domains/common/utils/testSchema')
const { makeLoggedInClient, makeClientWithSupportUser } = require('@condo/domains/user/utils/testSchema')


describe('_internalScheduleTaskByNameService', () => {
    test('support can execute mutation', async () => {
        const support = await makeClientWithSupportUser()
        const payload = {
            taskName: 'commonSampleCronTask',
            taskArgs: [],
        }
        const [data] = await _internalScheduleTaskByNameByTestClient(support, payload)
        expect(data.id).toBeDefined()
    })

    test('user can not execute mutation', async () => {
        const client = await makeLoggedInClient()
        const payload = {
            taskName: '',
            taskArgs: [],
            taskOpts: {},
        }
        await expectToThrowAccessDeniedErrorToResult(async () => {
            await _internalScheduleTaskByNameByTestClient(client, payload)
        })
    })
 
    test('anonymous can not execute mutation', async () => {
        const client = await makeClient()
        const payload = {
            taskName: '',
            taskArgs: [],
            taskOpts: {},
        }
        await expectToThrowAuthenticationErrorToResult(async () => {
            await _internalScheduleTaskByNameByTestClient(client, payload)
        })
    })
})