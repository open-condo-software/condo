/**
 * Generated by `createservice resident.RegisterServiceConsumerService --type mutations`
 */

const { GQLCustomSchema } = require('@core/keystone/schema')
const access = require('@condo/domains/resident/access/RegisterServiceConsumerService')


const RegisterServiceConsumerService = new GQLCustomSchema('RegisterServiceConsumerService', {
    types: [
        {
            access: true,
            // TODO(codegen): write RegisterServiceConsumerService input !
            type: 'input RegisterConsumerServiceInput { dv: Int!, sender: JSON! }',
        },
        {
            access: true,
            // TODO(codegen): write RegisterServiceConsumerService output !
            type: 'type RegisterConsumerServiceOutput { id: String! }',
        },
    ],
    
    mutations: [
        {
            access: access.canRegisterConsumerService,
            schema: 'registerConsumerService(data: RegisterConsumerServiceInput!): RegisterConsumerServiceOutput',
            resolver: async (parent, args, context, info, extra = {}) => {
                // TODO(codegen): write RegisterServiceConsumerService logic!
                const { data } = args
                return {
                    id: null,
                }
            },
        },
    ],
    
})

module.exports = {
    RegisterServiceConsumerService,
}
