/**
 * Generated by `createschema resident.Resident 'user:Relationship:User:CASCADE; organization:Relationship:Organization:PROTECT; property:Relationship:Property:PROTECT; billingAccount?:Relationship:BillingAccount:SET_NULL; unitName:Text;'`
 */

const { RESIDENT } = require('@condo/domains/user/constants/common')

async function canReadResidents ({ authentication: { item: user } }) {
    if (!user) return false
    if (user.isAdmin) return {}
    if (user.type === RESIDENT) {
        return {
            user: { id: user.id },
        }
    }
    return false
}

async function canManageResidents ({ authentication: { item: user }, originalInput, operation, itemId, context }) {
    if (!user) return false
    if (user.isAdmin) return true
    if (operation === 'create' && user.type === RESIDENT) {
        return true
    }
    return false
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadResidents,
    canManageResidents,
}