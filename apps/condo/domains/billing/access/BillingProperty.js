/**
 * Generated by `createschema billing.BillingProperty 'context:Relationship:BillingIntegrationOrganizationContext:CASCADE; importId?:Text; bindingId:Text; address:Text; raw:Json; meta:Json'`
 */

const { canManageBillingEntity } = require('../utils/accessSchema')

async function canReadBillingProperties ({ authentication: { item: user } }) {
    if (!user) return false
    if (user.isAdmin) return true
    return {
        OR: [
            { context: { organization: { employees_some: { user: { id: user.id }, role: { canManageIntegrations: true } } } } },
            { context: { integration: { accessRights_some: { user: { id: user.id } } } } },
        ],
    }
}

async function canManageBillingProperties ({ authentication: { item: user }, operation, itemId }) {
    return await canManageBillingEntity(user, operation, itemId)
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadBillingProperties,
    canManageBillingProperties,
}
