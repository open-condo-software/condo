/**
 * Generated by `createschema billing.BillingReceipt 'context:Relationship:BillingIntegrationOrganizationContext:CASCADE; importId?:Text; property:Relationship:BillingProperty:CASCADE; account:Relationship:BillingAccount:CASCADE; period:CalendarDay; raw:Json; toPay:Text; services:Json; meta:Json'`
 */

const { ServiceConsumer } = require('../utils/serverSchema')

const { Resident } = require('@condo/domains/resident/utils/serverSchema')
const { canManageBillingEntityWithContext } = require('@condo/domains/billing/utils/accessSchema')

async function canReadBillingReceipts ({ context, authentication: { item: user } }) {

    async function _getBillingAccountByUser (user) {
        const [ resident ] = await Resident.getAll(context, { user: user.id })
        if (!resident) return null

        const [ serviceConsumer ] = await ServiceConsumer.getAll(context, { resident: resident.id })
        if ( !serviceConsumer ) return null

        return serviceConsumer.billingAccount
    }

    if (!user) return false
    if (user.isAdmin) return true

    let billingAccountId = await _getBillingAccountByUser(user)

    return {
        OR: [
            { context: { organization: { employees_some: { user: { id: user.id }, role: { canManageIntegrations: true }, deletedAt: null, isBlocked: false } } } },
            { context: { integration: { accessRights_some: { user: { id: user.id } } } } },
            { billingAccount: billingAccountId },
        ],
    }
}

async function canManageBillingReceipts ({ authentication: { item: user }, operation, originalInput, listKey, itemId, context }) {
    return await canManageBillingEntityWithContext({
        user,
        operation,
        itemId,
        originalInput,
        schemaWithContextName: listKey,
        context,
    })
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadBillingReceipts,
    canManageBillingReceipts,
}
