/**
 * Generated by `createschema billing.BillingAccount 'context:Relationship:BillingIntegrationOrganizationContext:CASCADE; importId?:Text; property:Relationship:BillingProperty:CASCADE; bindingId:Text; number:Text; unit:Text; raw:Json; meta:Json'`
 */

const { Text, Relationship, Integer, Select, Checkbox, DateTimeUtc, Decimal, Password, File } = require('@keystonejs/fields')
const { Json } = require('@core/keystone/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/billing/access/BillingAccount')


const BillingAccount = new GQLListSchema('BillingAccount', {
    // TODO(codegen): write doc for the BillingAccount domain model!
    schemaDoc: 'TODO DOC!',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        context: {
            // TODO(codegen): write doc for BillingAccount.context field!
            schemaDoc: 'TODO DOC!',
            type: Relationship,
            ref: 'BillingIntegrationOrganizationContext',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

        importId: {
            // TODO(codegen): write doc for BillingAccount.importId field!
            schemaDoc: 'TODO DOC!',
            type: Text,
        },

        property: {
            // TODO(codegen): write doc for BillingAccount.property field!
            schemaDoc: 'TODO DOC!',
            type: Relationship,
            ref: 'BillingProperty',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },

        bindingId: {
            // TODO(codegen): write doc for BillingAccount.bindingId field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

        number: {
            // TODO(codegen): write doc for BillingAccount.number field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

        unit: {
            // TODO(codegen): write doc for BillingAccount.unit field!
            schemaDoc: 'TODO DOC!',
            type: Text,
            isRequired: true,
        },

        raw: {
            // TODO(codegen): write doc for BillingAccount.raw field!
            schemaDoc: 'TODO DOC!',
            type: Json,
            isRequired: true,
        },

        meta: {
            // TODO(codegen): write doc for BillingAccount.meta field!
            schemaDoc: 'TODO DOC!',
            type: Json,
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), historical()],
    access: {
        read: access.canReadBillingAccounts,
        create: access.canManageBillingAccounts,
        update: access.canManageBillingAccounts,
        delete: false,
        auth: true,
    },
})

module.exports = {
    BillingAccount,
}
