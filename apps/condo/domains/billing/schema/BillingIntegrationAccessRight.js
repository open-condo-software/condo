/**
 * Generated by `createschema "billing.BillingIntegrationAccessRight integration:Relationship:BillingIntegration:PROTECT; user:Relationship:User:CASCADE;"`
 */

const { Relationship } = require('@keystonejs/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@core/keystone/plugins')
const { SENDER_FIELD, DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/billing/access/BillingIntegrationAccessRight')
const { SERVICE_USER_FIELD } = require('@condo/domains/miniapp/schema/fields/accessRight')


const BillingIntegrationAccessRight = new GQLListSchema('BillingIntegrationAccessRight', {
    schemaDoc: 'Link between billing integrations and users. The existence of the object means that there is user has access to integration',
    fields: {
        dv: DV_FIELD,
        sender: SENDER_FIELD,

        integration: {
            schemaDoc: 'Integration',
            type: Relationship,
            ref: 'BillingIntegration.accessRights',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.PROTECT' },
        },

        user: SERVICE_USER_FIELD,
    },
    plugins: [uuided(), tracked(), historical(), versioned(), softDeleted()],
    access: {
        read: access.canReadBillingIntegrationAccessRights,
        create: access.canManageBillingIntegrationAccessRights,
        update: access.canManageBillingIntegrationAccessRights,
        delete: false,
        auth: true,
    },
})

module.exports = {
    BillingIntegrationAccessRight,
}
