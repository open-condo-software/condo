/**
 * Generated by `createservice billing.BillingReceiptsService --type queries`
 */

const { ServiceConsumer, Resident } = require('@condo/domains/resident/utils/serverSchema')
const { BillingReceipt } = require('@condo/domains/billing/utils/serverSchema')
const { NOT_FOUND_ERROR } = require('@condo/domains/common/constants/errors')
const { GQLCustomSchema } = require('@core/keystone/schema')
const access = require('../access/GetAllBillingReceiptsForServiceConsumer')


const GetAllBillingReceiptsForServiceConsumerService = new GQLCustomSchema('GetAllBillingReceiptsForServiceConsumerService', {
    types: [
        {
            access: true,
            type: 'input BillingReceiptsForServiceConsumerInput { dv: Int!, sender: JSON! serviceConsumerId: ID! }',
        },
        {
            access: true,
            type: 'type BillingReceiptsForServiceConsumerOutput { dv: String!, recipient: JSON!, period: String!, toPay: String!, printableNumber: String, toPayDetails: JSON, services: JSON }',
        },
    ],
    
    queries: [
        {
            access: access.canGetBillingReceiptsForServiceConsumerService,
            schema: 'allBillingReceiptsForServiceConsumer (data: BillingReceiptsForServiceConsumerInput!): [BillingReceiptsForServiceConsumerOutput]',
            resolver: async (parent, args, context, info, extra = {}) => {
                const { serviceConsumerId } = args

                const [serviceConsumer] = await ServiceConsumer.getAll(context, { id: serviceConsumerId })
                const billingReceipts = await BillingReceipt.getAll(context, { account: { id: serviceConsumer.billingAccount.id } })

                return billingReceipts.map(receipt => {
                    return {
                        dv: receipt.dv,
                        recipient: receipt.recipient,
                        period: receipt.period,
                        toPay: receipt.toPay,
                        toPayDetails: receipt.toPayDetails,
                        services: receipt.services,
                        printableNumber: receipt.printableNumber,
                    }
                })
            },
        },
    ],
    
})

module.exports = {
    GetAllBillingReceiptsForServiceConsumerService,
}
