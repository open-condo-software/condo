directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE

enum UserHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type UserHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the UserHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the UserHistoryRecord List config, or
   3. As an alias to a 'name' field on the UserHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the UserHistoryRecord List.
  """
  _label_: String
  name: String
  hasEmail: JSON
  password: String
  type: String
  isAdmin: Boolean
  isSupport: Boolean
  email: String
  isEmailVerified: Boolean
  phone: String
  isPhoneVerified: Boolean
  avatar: JSON
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserHistoryRecordHistoryActionType
  history_id: String
}

input UserHistoryRecordWhereInput {
  AND: [UserHistoryRecordWhereInput]
  OR: [UserHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  hasEmail: JSON
  hasEmail_not: JSON
  hasEmail_in: [JSON]
  hasEmail_not_in: [JSON]
  password: String
  password_not: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  password_i: String
  password_not_i: String
  password_contains_i: String
  password_not_contains_i: String
  password_starts_with_i: String
  password_not_starts_with_i: String
  password_ends_with_i: String
  password_not_ends_with_i: String
  password_in: [String]
  password_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  isAdmin: Boolean
  isAdmin_not: Boolean
  isSupport: Boolean
  isSupport_not: Boolean
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  isEmailVerified: Boolean
  isEmailVerified_not: Boolean
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  isPhoneVerified: Boolean
  isPhoneVerified_not: Boolean
  avatar: JSON
  avatar_not: JSON
  avatar_in: [JSON]
  avatar_not_in: [JSON]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: UserHistoryRecordHistoryActionType
  history_action_not: UserHistoryRecordHistoryActionType
  history_action_in: [UserHistoryRecordHistoryActionType]
  history_action_not_in: [UserHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input UserHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortUserHistoryRecordsBy {
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  type_ASC
  type_DESC
  isAdmin_ASC
  isAdmin_DESC
  isSupport_ASC
  isSupport_DESC
  email_ASC
  email_DESC
  isEmailVerified_ASC
  isEmailVerified_DESC
  phone_ASC
  phone_DESC
  isPhoneVerified_ASC
  isPhoneVerified_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input UserHistoryRecordUpdateInput {
  name: String
  hasEmail: JSON
  password: String
  type: String
  isAdmin: Boolean
  isSupport: Boolean
  email: String
  isEmailVerified: Boolean
  phone: String
  isPhoneVerified: Boolean
  avatar: JSON
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserHistoryRecordHistoryActionType
  history_id: String
}

input UserHistoryRecordsUpdateInput {
  id: ID!
  data: UserHistoryRecordUpdateInput
}

input UserHistoryRecordCreateInput {
  name: String
  hasEmail: JSON
  password: String
  type: String
  isAdmin: Boolean
  isSupport: Boolean
  email: String
  isEmailVerified: Boolean
  phone: String
  isPhoneVerified: Boolean
  avatar: JSON
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserHistoryRecordHistoryActionType
  history_id: String
}

input UserHistoryRecordsCreateInput {
  data: UserHistoryRecordCreateInput
}

enum UserTypeType {
  staff
  resident
  service
}

type File {
  id: ID
  path: String
  filename: String
  originalFilename: String
  mimetype: String
  encoding: String
  publicUrl: String
}

input UserRelateToOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: UserWhereUniqueInput
  disconnectAll: Boolean
}

type SenderField {
  dv: Int!
  fingerprint: String!
}

input SenderFieldInput {
  dv: Int!
  fingerprint: String!
}

""" Individual / person / service account / impersonal company account. Used primarily for authorization purposes, optimized access control with checking of `type` field, tracking authority of performed CRUD operations. Think of `User` as a technical entity, not a business actor. Business actor entities are Resident, OrganizationEmployee etc., — they are participating in high-level business scenarios and have connected to `User`. Almost everyting, created in the system, ends up to `User` as a source of action. 
"""
type User {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the User List config, or
   2. As an alias to the field set on 'labelField' in the User List config, or
   3. As an alias to a 'name' field on the User List (if one exists), or
   4. As an alias to the 'id' field on the User List.
  """
  _label_: String

  """ Name. If impersonal account should be a company name """
  name: String
  hasEmail(formatAs: String): String

  """ Password. Update only """
  password_is_set: Boolean

  """ Field that allows you to distinguish CRM users from mobile app users """
  type: UserTypeType

  """ Superuser access to service data """
  isAdmin: Boolean

  """ Can access to "/admin/" panel. And do support tasks """
  isSupport: Boolean

  """ Email. Transformed to lower case """
  email: String

  """ Email verification flag. User verify email by access to secret link """
  isEmailVerified: Boolean

  """ Phone. In international E.164 format without spaces """
  phone: String

  """ Phone verification flag. User verify phone by access to secret sms message 
  """
  isPhoneVerified: Boolean

  """ User loaded avatar image """
  avatar: File

  """ User metadata. Example: `city`, `country`, ... """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input UserWhereInput {
  AND: [UserWhereInput]
  OR: [UserWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  password_is_set: Boolean
  type: UserTypeType
  type_not: UserTypeType
  type_in: [UserTypeType]
  type_not_in: [UserTypeType]
  isAdmin: Boolean
  isAdmin_not: Boolean
  isSupport: Boolean
  isSupport_not: Boolean
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  isEmailVerified: Boolean
  isEmailVerified_not: Boolean
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  isPhoneVerified: Boolean
  isPhoneVerified_not: Boolean
  avatar: String
  avatar_not: String
  avatar_in: [String]
  avatar_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input UserWhereUniqueInput {
  id: ID!
}

enum SortUsersBy {
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  isAdmin_ASC
  isAdmin_DESC
  isSupport_ASC
  isSupport_DESC
  email_ASC
  email_DESC
  isEmailVerified_ASC
  isEmailVerified_DESC
  phone_ASC
  phone_DESC
  isPhoneVerified_ASC
  isPhoneVerified_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input UserUpdateInput {
  name: String
  password: String
  type: UserTypeType
  isAdmin: Boolean
  isSupport: Boolean
  email: String
  isEmailVerified: Boolean
  phone: String
  isPhoneVerified: Boolean
  avatar: Upload
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input UsersUpdateInput {
  id: ID!
  data: UserUpdateInput
}

input UserCreateInput {
  name: String
  password: String
  type: UserTypeType
  isAdmin: Boolean
  isSupport: Boolean
  email: String
  isEmailVerified: Boolean
  phone: String
  isPhoneVerified: Boolean
  avatar: Upload
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input UsersCreateInput {
  data: UserCreateInput
}

enum ForgotPasswordActionHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ForgotPasswordActionHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ForgotPasswordActionHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ForgotPasswordActionHistoryRecord List config, or
   3. As an alias to a 'name' field on the ForgotPasswordActionHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ForgotPasswordActionHistoryRecord List.
  """
  _label_: String
  user: String
  token: String
  requestedAt: String
  expiresAt: String
  usedAt: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ForgotPasswordActionHistoryRecordHistoryActionType
  history_id: String
}

input ForgotPasswordActionHistoryRecordWhereInput {
  AND: [ForgotPasswordActionHistoryRecordWhereInput]
  OR: [ForgotPasswordActionHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  token: String
  token_not: String
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  token_i: String
  token_not_i: String
  token_contains_i: String
  token_not_contains_i: String
  token_starts_with_i: String
  token_not_starts_with_i: String
  token_ends_with_i: String
  token_not_ends_with_i: String
  token_in: [String]
  token_not_in: [String]
  requestedAt: String
  requestedAt_not: String
  requestedAt_lt: String
  requestedAt_lte: String
  requestedAt_gt: String
  requestedAt_gte: String
  requestedAt_in: [String]
  requestedAt_not_in: [String]
  expiresAt: String
  expiresAt_not: String
  expiresAt_lt: String
  expiresAt_lte: String
  expiresAt_gt: String
  expiresAt_gte: String
  expiresAt_in: [String]
  expiresAt_not_in: [String]
  usedAt: String
  usedAt_not: String
  usedAt_lt: String
  usedAt_lte: String
  usedAt_gt: String
  usedAt_gte: String
  usedAt_in: [String]
  usedAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ForgotPasswordActionHistoryRecordHistoryActionType
  history_action_not: ForgotPasswordActionHistoryRecordHistoryActionType
  history_action_in: [ForgotPasswordActionHistoryRecordHistoryActionType]
  history_action_not_in: [ForgotPasswordActionHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ForgotPasswordActionHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortForgotPasswordActionHistoryRecordsBy {
  token_ASC
  token_DESC
  requestedAt_ASC
  requestedAt_DESC
  expiresAt_ASC
  expiresAt_DESC
  usedAt_ASC
  usedAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ForgotPasswordActionHistoryRecordUpdateInput {
  user: String
  token: String
  requestedAt: String
  expiresAt: String
  usedAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ForgotPasswordActionHistoryRecordHistoryActionType
  history_id: String
}

input ForgotPasswordActionHistoryRecordsUpdateInput {
  id: ID!
  data: ForgotPasswordActionHistoryRecordUpdateInput
}

input ForgotPasswordActionHistoryRecordCreateInput {
  user: String
  token: String
  requestedAt: String
  expiresAt: String
  usedAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ForgotPasswordActionHistoryRecordHistoryActionType
  history_id: String
}

input ForgotPasswordActionHistoryRecordsCreateInput {
  data: ForgotPasswordActionHistoryRecordCreateInput
}

""" Forgot password actions is used for anonymous user password recovery procedure 
"""
type ForgotPasswordAction {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ForgotPasswordAction List config, or
   2. As an alias to the field set on 'labelField' in the ForgotPasswordAction List config, or
   3. As an alias to a 'name' field on the ForgotPasswordAction List (if one exists), or
   4. As an alias to the 'id' field on the ForgotPasswordAction List.
  """
  _label_: String

  """ Ref to the user. The object will be deleted if the user ceases to exist 
  """
  user: User

  """ Unique token to complete confirmation """
  token: String

  """ DateTime when confirm phone action was started """
  requestedAt: String

  """ When password recovery action becomes invalid """
  expiresAt: String

  """ When password recovery action was completed """
  usedAt: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ForgotPasswordActionWhereInput {
  AND: [ForgotPasswordActionWhereInput]
  OR: [ForgotPasswordActionWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  token: String
  token_not: String
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  token_i: String
  token_not_i: String
  token_contains_i: String
  token_not_contains_i: String
  token_starts_with_i: String
  token_not_starts_with_i: String
  token_ends_with_i: String
  token_not_ends_with_i: String
  token_in: [String]
  token_not_in: [String]
  requestedAt: String
  requestedAt_not: String
  requestedAt_lt: String
  requestedAt_lte: String
  requestedAt_gt: String
  requestedAt_gte: String
  requestedAt_in: [String]
  requestedAt_not_in: [String]
  expiresAt: String
  expiresAt_not: String
  expiresAt_lt: String
  expiresAt_lte: String
  expiresAt_gt: String
  expiresAt_gte: String
  expiresAt_in: [String]
  expiresAt_not_in: [String]
  usedAt: String
  usedAt_not: String
  usedAt_lt: String
  usedAt_lte: String
  usedAt_gt: String
  usedAt_gte: String
  usedAt_in: [String]
  usedAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ForgotPasswordActionWhereUniqueInput {
  id: ID!
}

enum SortForgotPasswordActionsBy {
  user_ASC
  user_DESC
  token_ASC
  token_DESC
  requestedAt_ASC
  requestedAt_DESC
  expiresAt_ASC
  expiresAt_DESC
  usedAt_ASC
  usedAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ForgotPasswordActionUpdateInput {
  user: UserRelateToOneInput
  token: String
  requestedAt: String
  expiresAt: String
  usedAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ForgotPasswordActionsUpdateInput {
  id: ID!
  data: ForgotPasswordActionUpdateInput
}

input ForgotPasswordActionCreateInput {
  user: UserRelateToOneInput
  token: String
  requestedAt: String
  expiresAt: String
  usedAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ForgotPasswordActionsCreateInput {
  data: ForgotPasswordActionCreateInput
}

enum ConfirmPhoneActionHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ConfirmPhoneActionHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ConfirmPhoneActionHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ConfirmPhoneActionHistoryRecord List config, or
   3. As an alias to a 'name' field on the ConfirmPhoneActionHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ConfirmPhoneActionHistoryRecord List.
  """
  _label_: String
  phone: String
  token: String
  smsCode: Int
  smsCodeRequestedAt: String
  smsCodeExpiresAt: String
  retries: Int
  isPhoneVerified: Boolean
  requestedAt: String
  expiresAt: String
  completedAt: String
  id: ID!
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ConfirmPhoneActionHistoryRecordHistoryActionType
  history_id: String
}

input ConfirmPhoneActionHistoryRecordWhereInput {
  AND: [ConfirmPhoneActionHistoryRecordWhereInput]
  OR: [ConfirmPhoneActionHistoryRecordWhereInput]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  token: String
  token_not: String
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  token_i: String
  token_not_i: String
  token_contains_i: String
  token_not_contains_i: String
  token_starts_with_i: String
  token_not_starts_with_i: String
  token_ends_with_i: String
  token_not_ends_with_i: String
  token_in: [String]
  token_not_in: [String]
  smsCode: Int
  smsCode_not: Int
  smsCode_lt: Int
  smsCode_lte: Int
  smsCode_gt: Int
  smsCode_gte: Int
  smsCode_in: [Int]
  smsCode_not_in: [Int]
  smsCodeRequestedAt: String
  smsCodeRequestedAt_not: String
  smsCodeRequestedAt_lt: String
  smsCodeRequestedAt_lte: String
  smsCodeRequestedAt_gt: String
  smsCodeRequestedAt_gte: String
  smsCodeRequestedAt_in: [String]
  smsCodeRequestedAt_not_in: [String]
  smsCodeExpiresAt: String
  smsCodeExpiresAt_not: String
  smsCodeExpiresAt_lt: String
  smsCodeExpiresAt_lte: String
  smsCodeExpiresAt_gt: String
  smsCodeExpiresAt_gte: String
  smsCodeExpiresAt_in: [String]
  smsCodeExpiresAt_not_in: [String]
  retries: Int
  retries_not: Int
  retries_lt: Int
  retries_lte: Int
  retries_gt: Int
  retries_gte: Int
  retries_in: [Int]
  retries_not_in: [Int]
  isPhoneVerified: Boolean
  isPhoneVerified_not: Boolean
  requestedAt: String
  requestedAt_not: String
  requestedAt_lt: String
  requestedAt_lte: String
  requestedAt_gt: String
  requestedAt_gte: String
  requestedAt_in: [String]
  requestedAt_not_in: [String]
  expiresAt: String
  expiresAt_not: String
  expiresAt_lt: String
  expiresAt_lte: String
  expiresAt_gt: String
  expiresAt_gte: String
  expiresAt_in: [String]
  expiresAt_not_in: [String]
  completedAt: String
  completedAt_not: String
  completedAt_lt: String
  completedAt_lte: String
  completedAt_gt: String
  completedAt_gte: String
  completedAt_in: [String]
  completedAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ConfirmPhoneActionHistoryRecordHistoryActionType
  history_action_not: ConfirmPhoneActionHistoryRecordHistoryActionType
  history_action_in: [ConfirmPhoneActionHistoryRecordHistoryActionType]
  history_action_not_in: [ConfirmPhoneActionHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ConfirmPhoneActionHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortConfirmPhoneActionHistoryRecordsBy {
  phone_ASC
  phone_DESC
  token_ASC
  token_DESC
  smsCode_ASC
  smsCode_DESC
  smsCodeRequestedAt_ASC
  smsCodeRequestedAt_DESC
  smsCodeExpiresAt_ASC
  smsCodeExpiresAt_DESC
  retries_ASC
  retries_DESC
  isPhoneVerified_ASC
  isPhoneVerified_DESC
  requestedAt_ASC
  requestedAt_DESC
  expiresAt_ASC
  expiresAt_DESC
  completedAt_ASC
  completedAt_DESC
  id_ASC
  id_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ConfirmPhoneActionHistoryRecordUpdateInput {
  phone: String
  token: String
  smsCode: Int
  smsCodeRequestedAt: String
  smsCodeExpiresAt: String
  retries: Int
  isPhoneVerified: Boolean
  requestedAt: String
  expiresAt: String
  completedAt: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ConfirmPhoneActionHistoryRecordHistoryActionType
  history_id: String
}

input ConfirmPhoneActionHistoryRecordsUpdateInput {
  id: ID!
  data: ConfirmPhoneActionHistoryRecordUpdateInput
}

input ConfirmPhoneActionHistoryRecordCreateInput {
  phone: String
  token: String
  smsCode: Int
  smsCodeRequestedAt: String
  smsCodeExpiresAt: String
  retries: Int
  isPhoneVerified: Boolean
  requestedAt: String
  expiresAt: String
  completedAt: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ConfirmPhoneActionHistoryRecordHistoryActionType
  history_id: String
}

input ConfirmPhoneActionHistoryRecordsCreateInput {
  data: ConfirmPhoneActionHistoryRecordCreateInput
}

""" User confirm phone actions is used before registration starts """
type ConfirmPhoneAction {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ConfirmPhoneAction List config, or
   2. As an alias to the field set on 'labelField' in the ConfirmPhoneAction List config, or
   3. As an alias to a 'name' field on the ConfirmPhoneAction List (if one exists), or
   4. As an alias to the 'id' field on the ConfirmPhoneAction List.
  """
  _label_: String

  """ Phone. In international E.164 format without spaces """
  phone: String

  """ Unique token to complete confirmation """
  token: String

  """ Last sms code sent to user """
  smsCode: Int

  """ Time when sms code was requested """
  smsCodeRequestedAt: String

  """ Time when sms code becomes not valid """
  smsCodeExpiresAt: String

  """ Number of times sms code input from user failed """
  retries: Int

  """ Phone verification flag. User verify phone by access to secret sms message 
  """
  isPhoneVerified: Boolean

  """ DateTime when confirm phone action was started """
  requestedAt: String

  """ When confirm phone action becomes invalid """
  expiresAt: String

  """ When confirm phone action was completed """
  completedAt: String
  id: ID!
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ConfirmPhoneActionWhereInput {
  AND: [ConfirmPhoneActionWhereInput]
  OR: [ConfirmPhoneActionWhereInput]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  token: String
  token_not: String
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  token_i: String
  token_not_i: String
  token_contains_i: String
  token_not_contains_i: String
  token_starts_with_i: String
  token_not_starts_with_i: String
  token_ends_with_i: String
  token_not_ends_with_i: String
  token_in: [String]
  token_not_in: [String]
  smsCode: Int
  smsCode_not: Int
  smsCode_lt: Int
  smsCode_lte: Int
  smsCode_gt: Int
  smsCode_gte: Int
  smsCode_in: [Int]
  smsCode_not_in: [Int]
  smsCodeRequestedAt: String
  smsCodeRequestedAt_not: String
  smsCodeRequestedAt_lt: String
  smsCodeRequestedAt_lte: String
  smsCodeRequestedAt_gt: String
  smsCodeRequestedAt_gte: String
  smsCodeRequestedAt_in: [String]
  smsCodeRequestedAt_not_in: [String]
  smsCodeExpiresAt: String
  smsCodeExpiresAt_not: String
  smsCodeExpiresAt_lt: String
  smsCodeExpiresAt_lte: String
  smsCodeExpiresAt_gt: String
  smsCodeExpiresAt_gte: String
  smsCodeExpiresAt_in: [String]
  smsCodeExpiresAt_not_in: [String]
  retries: Int
  retries_not: Int
  retries_lt: Int
  retries_lte: Int
  retries_gt: Int
  retries_gte: Int
  retries_in: [Int]
  retries_not_in: [Int]
  isPhoneVerified: Boolean
  isPhoneVerified_not: Boolean
  requestedAt: String
  requestedAt_not: String
  requestedAt_lt: String
  requestedAt_lte: String
  requestedAt_gt: String
  requestedAt_gte: String
  requestedAt_in: [String]
  requestedAt_not_in: [String]
  expiresAt: String
  expiresAt_not: String
  expiresAt_lt: String
  expiresAt_lte: String
  expiresAt_gt: String
  expiresAt_gte: String
  expiresAt_in: [String]
  expiresAt_not_in: [String]
  completedAt: String
  completedAt_not: String
  completedAt_lt: String
  completedAt_lte: String
  completedAt_gt: String
  completedAt_gte: String
  completedAt_in: [String]
  completedAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ConfirmPhoneActionWhereUniqueInput {
  id: ID!
}

enum SortConfirmPhoneActionsBy {
  phone_ASC
  phone_DESC
  token_ASC
  token_DESC
  smsCode_ASC
  smsCode_DESC
  smsCodeRequestedAt_ASC
  smsCodeRequestedAt_DESC
  smsCodeExpiresAt_ASC
  smsCodeExpiresAt_DESC
  retries_ASC
  retries_DESC
  isPhoneVerified_ASC
  isPhoneVerified_DESC
  requestedAt_ASC
  requestedAt_DESC
  expiresAt_ASC
  expiresAt_DESC
  completedAt_ASC
  completedAt_DESC
  id_ASC
  id_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ConfirmPhoneActionUpdateInput {
  phone: String
  token: String
  smsCode: Int
  smsCodeRequestedAt: String
  smsCodeExpiresAt: String
  retries: Int
  isPhoneVerified: Boolean
  requestedAt: String
  expiresAt: String
  completedAt: String
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ConfirmPhoneActionsUpdateInput {
  id: ID!
  data: ConfirmPhoneActionUpdateInput
}

input ConfirmPhoneActionCreateInput {
  phone: String
  token: String
  smsCode: Int
  smsCodeRequestedAt: String
  smsCodeExpiresAt: String
  retries: Int
  isPhoneVerified: Boolean
  requestedAt: String
  expiresAt: String
  completedAt: String
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ConfirmPhoneActionsCreateInput {
  data: ConfirmPhoneActionCreateInput
}

enum OidcClientHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OidcClientHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OidcClientHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OidcClientHistoryRecord List config, or
   3. As an alias to a 'name' field on the OidcClientHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OidcClientHistoryRecord List.
  """
  _label_: String
  clientId: String
  payload: JSON
  name: String
  meta: JSON
  expiresAt: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OidcClientHistoryRecordHistoryActionType
  history_id: String
}

input OidcClientHistoryRecordWhereInput {
  AND: [OidcClientHistoryRecordWhereInput]
  OR: [OidcClientHistoryRecordWhereInput]
  clientId: String
  clientId_not: String
  clientId_contains: String
  clientId_not_contains: String
  clientId_starts_with: String
  clientId_not_starts_with: String
  clientId_ends_with: String
  clientId_not_ends_with: String
  clientId_i: String
  clientId_not_i: String
  clientId_contains_i: String
  clientId_not_contains_i: String
  clientId_starts_with_i: String
  clientId_not_starts_with_i: String
  clientId_ends_with_i: String
  clientId_not_ends_with_i: String
  clientId_in: [String]
  clientId_not_in: [String]
  payload: JSON
  payload_not: JSON
  payload_in: [JSON]
  payload_not_in: [JSON]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  expiresAt: String
  expiresAt_not: String
  expiresAt_lt: String
  expiresAt_lte: String
  expiresAt_gt: String
  expiresAt_gte: String
  expiresAt_in: [String]
  expiresAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OidcClientHistoryRecordHistoryActionType
  history_action_not: OidcClientHistoryRecordHistoryActionType
  history_action_in: [OidcClientHistoryRecordHistoryActionType]
  history_action_not_in: [OidcClientHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OidcClientHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOidcClientHistoryRecordsBy {
  clientId_ASC
  clientId_DESC
  name_ASC
  name_DESC
  expiresAt_ASC
  expiresAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OidcClientHistoryRecordUpdateInput {
  clientId: String
  payload: JSON
  name: String
  meta: JSON
  expiresAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OidcClientHistoryRecordHistoryActionType
  history_id: String
}

input OidcClientHistoryRecordsUpdateInput {
  id: ID!
  data: OidcClientHistoryRecordUpdateInput
}

input OidcClientHistoryRecordCreateInput {
  clientId: String
  payload: JSON
  name: String
  meta: JSON
  expiresAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OidcClientHistoryRecordHistoryActionType
  history_id: String
}

input OidcClientHistoryRecordsCreateInput {
  data: OidcClientHistoryRecordCreateInput
}

""" The OIDC clients list """
type OidcClient {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OidcClient List config, or
   2. As an alias to the field set on 'labelField' in the OidcClient List config, or
   3. As an alias to a 'name' field on the OidcClient List (if one exists), or
   4. As an alias to the 'id' field on the OidcClient List.
  """
  _label_: String

  """ The clientId """
  clientId: String

  """ The payload of the client (clientId, clientSecret, callbackUrl, ...) """
  payload: JSON

  """ The human readable name for client """
  name: String

  """ The additional client data """
  meta: JSON

  """ The timestamp of the client expiration """
  expiresAt: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OidcClientWhereInput {
  AND: [OidcClientWhereInput]
  OR: [OidcClientWhereInput]
  clientId: String
  clientId_not: String
  clientId_contains: String
  clientId_not_contains: String
  clientId_starts_with: String
  clientId_not_starts_with: String
  clientId_ends_with: String
  clientId_not_ends_with: String
  clientId_i: String
  clientId_not_i: String
  clientId_contains_i: String
  clientId_not_contains_i: String
  clientId_starts_with_i: String
  clientId_not_starts_with_i: String
  clientId_ends_with_i: String
  clientId_not_ends_with_i: String
  clientId_in: [String]
  clientId_not_in: [String]
  payload: JSON
  payload_not: JSON
  payload_in: [JSON]
  payload_not_in: [JSON]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  expiresAt: String
  expiresAt_not: String
  expiresAt_lt: String
  expiresAt_lte: String
  expiresAt_gt: String
  expiresAt_gte: String
  expiresAt_in: [String]
  expiresAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OidcClientWhereUniqueInput {
  id: ID!
}

enum SortOidcClientsBy {
  clientId_ASC
  clientId_DESC
  name_ASC
  name_DESC
  expiresAt_ASC
  expiresAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OidcClientUpdateInput {
  clientId: String
  payload: JSON
  name: String
  meta: JSON
  expiresAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OidcClientsUpdateInput {
  id: ID!
  data: OidcClientUpdateInput
}

input OidcClientCreateInput {
  clientId: String
  payload: JSON
  name: String
  meta: JSON
  expiresAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OidcClientsCreateInput {
  data: OidcClientCreateInput
}

enum UserExternalIdentityHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type UserExternalIdentityHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the UserExternalIdentityHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the UserExternalIdentityHistoryRecord List config, or
   3. As an alias to a 'name' field on the UserExternalIdentityHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the UserExternalIdentityHistoryRecord List.
  """
  _label_: String
  user: String
  identityId: String
  identityType: String
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserExternalIdentityHistoryRecordHistoryActionType
  history_id: String
}

input UserExternalIdentityHistoryRecordWhereInput {
  AND: [UserExternalIdentityHistoryRecordWhereInput]
  OR: [UserExternalIdentityHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  identityId: String
  identityId_not: String
  identityId_contains: String
  identityId_not_contains: String
  identityId_starts_with: String
  identityId_not_starts_with: String
  identityId_ends_with: String
  identityId_not_ends_with: String
  identityId_i: String
  identityId_not_i: String
  identityId_contains_i: String
  identityId_not_contains_i: String
  identityId_starts_with_i: String
  identityId_not_starts_with_i: String
  identityId_ends_with_i: String
  identityId_not_ends_with_i: String
  identityId_in: [String]
  identityId_not_in: [String]
  identityType: String
  identityType_not: String
  identityType_contains: String
  identityType_not_contains: String
  identityType_starts_with: String
  identityType_not_starts_with: String
  identityType_ends_with: String
  identityType_not_ends_with: String
  identityType_i: String
  identityType_not_i: String
  identityType_contains_i: String
  identityType_not_contains_i: String
  identityType_starts_with_i: String
  identityType_not_starts_with_i: String
  identityType_ends_with_i: String
  identityType_not_ends_with_i: String
  identityType_in: [String]
  identityType_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: UserExternalIdentityHistoryRecordHistoryActionType
  history_action_not: UserExternalIdentityHistoryRecordHistoryActionType
  history_action_in: [UserExternalIdentityHistoryRecordHistoryActionType]
  history_action_not_in: [UserExternalIdentityHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input UserExternalIdentityHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortUserExternalIdentityHistoryRecordsBy {
  identityId_ASC
  identityId_DESC
  identityType_ASC
  identityType_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input UserExternalIdentityHistoryRecordUpdateInput {
  user: String
  identityId: String
  identityType: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserExternalIdentityHistoryRecordHistoryActionType
  history_id: String
}

input UserExternalIdentityHistoryRecordsUpdateInput {
  id: ID!
  data: UserExternalIdentityHistoryRecordUpdateInput
}

input UserExternalIdentityHistoryRecordCreateInput {
  user: String
  identityId: String
  identityType: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserExternalIdentityHistoryRecordHistoryActionType
  history_id: String
}

input UserExternalIdentityHistoryRecordsCreateInput {
  data: UserExternalIdentityHistoryRecordCreateInput
}

enum UserExternalIdentityIdentityTypeType {
  sber_id
  sbbol
}

""" Individual user external identity link. Used primarily for authorization and linking to external identity provider purposes. Think of `User` as a technical entity, not a business actor. 
"""
type UserExternalIdentity {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the UserExternalIdentity List config, or
   2. As an alias to the field set on 'labelField' in the UserExternalIdentity List config, or
   3. As an alias to a 'name' field on the UserExternalIdentity List (if one exists), or
   4. As an alias to the 'id' field on the UserExternalIdentity List.
  """
  _label_: String

  """ Link to user """
  user: User

  """ External identity id. The value of this field should be populated from an external identity provider 
  """
  identityId: String

  """ The type of external identity that was a source for this link """
  identityType: UserExternalIdentityIdentityTypeType

  """ External identity provider user metadata """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input UserExternalIdentityWhereInput {
  AND: [UserExternalIdentityWhereInput]
  OR: [UserExternalIdentityWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  identityId: String
  identityId_not: String
  identityId_contains: String
  identityId_not_contains: String
  identityId_starts_with: String
  identityId_not_starts_with: String
  identityId_ends_with: String
  identityId_not_ends_with: String
  identityId_i: String
  identityId_not_i: String
  identityId_contains_i: String
  identityId_not_contains_i: String
  identityId_starts_with_i: String
  identityId_not_starts_with_i: String
  identityId_ends_with_i: String
  identityId_not_ends_with_i: String
  identityId_in: [String]
  identityId_not_in: [String]
  identityType: UserExternalIdentityIdentityTypeType
  identityType_not: UserExternalIdentityIdentityTypeType
  identityType_in: [UserExternalIdentityIdentityTypeType]
  identityType_not_in: [UserExternalIdentityIdentityTypeType]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input UserExternalIdentityWhereUniqueInput {
  id: ID!
}

enum SortUserExternalIdentitiesBy {
  user_ASC
  user_DESC
  identityId_ASC
  identityId_DESC
  identityType_ASC
  identityType_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input UserExternalIdentityUpdateInput {
  user: UserRelateToOneInput
  identityId: String
  identityType: UserExternalIdentityIdentityTypeType
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input UserExternalIdentitiesUpdateInput {
  id: ID!
  data: UserExternalIdentityUpdateInput
}

input UserExternalIdentityCreateInput {
  user: UserRelateToOneInput
  identityId: String
  identityType: UserExternalIdentityIdentityTypeType
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input UserExternalIdentitiesCreateInput {
  data: UserExternalIdentityCreateInput
}

enum OrganizationHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OrganizationHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationHistoryRecord List config, or
   3. As an alias to a 'name' field on the OrganizationHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationHistoryRecord List.
  """
  _label_: String
  country: String
  name: String
  tin: String
  description: JSON
  avatar: JSON
  meta: JSON
  statusTransitions: JSON
  defaultEmployeeRoleStatusTransitions: JSON
  importRemoteSystem: String
  importId: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationHistoryRecordWhereInput {
  AND: [OrganizationHistoryRecordWhereInput]
  OR: [OrganizationHistoryRecordWhereInput]
  country: String
  country_not: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  country_i: String
  country_not_i: String
  country_contains_i: String
  country_not_contains_i: String
  country_starts_with_i: String
  country_not_starts_with_i: String
  country_ends_with_i: String
  country_not_ends_with_i: String
  country_in: [String]
  country_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  description: JSON
  description_not: JSON
  description_in: [JSON]
  description_not_in: [JSON]
  avatar: JSON
  avatar_not: JSON
  avatar_in: [JSON]
  avatar_not_in: [JSON]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  statusTransitions: JSON
  statusTransitions_not: JSON
  statusTransitions_in: [JSON]
  statusTransitions_not_in: [JSON]
  defaultEmployeeRoleStatusTransitions: JSON
  defaultEmployeeRoleStatusTransitions_not: JSON
  defaultEmployeeRoleStatusTransitions_in: [JSON]
  defaultEmployeeRoleStatusTransitions_not_in: [JSON]
  importRemoteSystem: String
  importRemoteSystem_not: String
  importRemoteSystem_contains: String
  importRemoteSystem_not_contains: String
  importRemoteSystem_starts_with: String
  importRemoteSystem_not_starts_with: String
  importRemoteSystem_ends_with: String
  importRemoteSystem_not_ends_with: String
  importRemoteSystem_i: String
  importRemoteSystem_not_i: String
  importRemoteSystem_contains_i: String
  importRemoteSystem_not_contains_i: String
  importRemoteSystem_starts_with_i: String
  importRemoteSystem_not_starts_with_i: String
  importRemoteSystem_ends_with_i: String
  importRemoteSystem_not_ends_with_i: String
  importRemoteSystem_in: [String]
  importRemoteSystem_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OrganizationHistoryRecordHistoryActionType
  history_action_not: OrganizationHistoryRecordHistoryActionType
  history_action_in: [OrganizationHistoryRecordHistoryActionType]
  history_action_not_in: [OrganizationHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OrganizationHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOrganizationHistoryRecordsBy {
  country_ASC
  country_DESC
  name_ASC
  name_DESC
  tin_ASC
  tin_DESC
  importRemoteSystem_ASC
  importRemoteSystem_DESC
  importId_ASC
  importId_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OrganizationHistoryRecordUpdateInput {
  country: String
  name: String
  tin: String
  description: JSON
  avatar: JSON
  meta: JSON
  statusTransitions: JSON
  defaultEmployeeRoleStatusTransitions: JSON
  importRemoteSystem: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationHistoryRecordsUpdateInput {
  id: ID!
  data: OrganizationHistoryRecordUpdateInput
}

input OrganizationHistoryRecordCreateInput {
  country: String
  name: String
  tin: String
  description: JSON
  avatar: JSON
  meta: JSON
  statusTransitions: JSON
  defaultEmployeeRoleStatusTransitions: JSON
  importRemoteSystem: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationHistoryRecordsCreateInput {
  data: OrganizationHistoryRecordCreateInput
}

enum OrganizationCountryType {
  en
  ru
}

input OrganizationEmployeeRelateToManyInput {
  create: [OrganizationEmployeeCreateInput]
  connect: [OrganizationEmployeeWhereUniqueInput]
  disconnect: [OrganizationEmployeeWhereUniqueInput]
  disconnectAll: Boolean
}

input OrganizationLinkRelateToManyInput {
  create: [OrganizationLinkCreateInput]
  connect: [OrganizationLinkWhereUniqueInput]
  disconnect: [OrganizationLinkWhereUniqueInput]
  disconnectAll: Boolean
}

""" B2B customer of the service, a legal entity or an association of legal entities (holding/group) 
"""
type Organization {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Organization List config, or
   2. As an alias to the field set on 'labelField' in the Organization List config, or
   3. As an alias to a 'name' field on the Organization List (if one exists), or
   4. As an alias to the 'id' field on the Organization List.
  """
  _label_: String

  """ Country level specific """
  country: OrganizationCountryType

  """ Customer-friendly name """
  name: String

  """ Taxpayer identification number. Every country has its own identification. Examples: INN for Russia, IIN for Kazakhstan and so on 
  """
  tin: String

  """ Customer-friendly description. Friendly text for employee and resident users 
  """
  description: String

  """ Customer-friendly avatar """
  avatar: File

  """ Organization metadata. Depends on country level specificExample of data key: `kpp` 
  """
  meta: JSON
  employees(where: OrganizationEmployeeWhereInput, search: String, sortBy: [SortOrganizationEmployeesBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployee!]!
  _employeesMeta(where: OrganizationEmployeeWhereInput, search: String, sortBy: [SortOrganizationEmployeesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta
  relatedOrganizations(where: OrganizationLinkWhereInput, search: String, sortBy: [SortOrganizationLinksBy!], orderBy: String, first: Int, skip: Int): [OrganizationLink!]!
  _relatedOrganizationsMeta(where: OrganizationLinkWhereInput, search: String, sortBy: [SortOrganizationLinksBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Graph of possible transitions for statuses. If there is no transition in this graph, it is impossible to change status if the user in the role has the right to do so. 
  """
  statusTransitions: JSON

  """ Default employee role status transitions map which will be used as fallback for status transition validationif user dont have OrganizationEmployeeRole 
  """
  defaultEmployeeRoleStatusTransitions: JSON

  """ External provider for organization """
  importRemoteSystem: String

  """ External system organization id. Used for integrations """
  importId: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OrganizationWhereInput {
  AND: [OrganizationWhereInput]
  OR: [OrganizationWhereInput]
  country: OrganizationCountryType
  country_not: OrganizationCountryType
  country_in: [OrganizationCountryType]
  country_not_in: [OrganizationCountryType]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  avatar: String
  avatar_not: String
  avatar_in: [String]
  avatar_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]

  """ condition must be true for all nodes """
  employees_every: OrganizationEmployeeWhereInput

  """ condition must be true for at least 1 node """
  employees_some: OrganizationEmployeeWhereInput

  """ condition must be false for all nodes """
  employees_none: OrganizationEmployeeWhereInput

  """ condition must be true for all nodes """
  relatedOrganizations_every: OrganizationLinkWhereInput

  """ condition must be true for at least 1 node """
  relatedOrganizations_some: OrganizationLinkWhereInput

  """ condition must be false for all nodes """
  relatedOrganizations_none: OrganizationLinkWhereInput
  importRemoteSystem: String
  importRemoteSystem_not: String
  importRemoteSystem_contains: String
  importRemoteSystem_not_contains: String
  importRemoteSystem_starts_with: String
  importRemoteSystem_not_starts_with: String
  importRemoteSystem_ends_with: String
  importRemoteSystem_not_ends_with: String
  importRemoteSystem_i: String
  importRemoteSystem_not_i: String
  importRemoteSystem_contains_i: String
  importRemoteSystem_not_contains_i: String
  importRemoteSystem_starts_with_i: String
  importRemoteSystem_not_starts_with_i: String
  importRemoteSystem_ends_with_i: String
  importRemoteSystem_not_ends_with_i: String
  importRemoteSystem_in: [String]
  importRemoteSystem_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OrganizationWhereUniqueInput {
  id: ID!
}

enum SortOrganizationsBy {
  country_ASC
  country_DESC
  name_ASC
  name_DESC
  tin_ASC
  tin_DESC
  description_ASC
  description_DESC
  employees_ASC
  employees_DESC
  relatedOrganizations_ASC
  relatedOrganizations_DESC
  importRemoteSystem_ASC
  importRemoteSystem_DESC
  importId_ASC
  importId_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OrganizationUpdateInput {
  country: OrganizationCountryType
  name: String
  tin: String
  description: String
  avatar: Upload
  meta: JSON
  employees: OrganizationEmployeeRelateToManyInput
  relatedOrganizations: OrganizationLinkRelateToManyInput
  importRemoteSystem: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationsUpdateInput {
  id: ID!
  data: OrganizationUpdateInput
}

input OrganizationCreateInput {
  country: OrganizationCountryType
  name: String
  tin: String
  description: String
  avatar: Upload
  meta: JSON
  employees: OrganizationEmployeeRelateToManyInput
  relatedOrganizations: OrganizationLinkRelateToManyInput
  importRemoteSystem: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationsCreateInput {
  data: OrganizationCreateInput
}

enum OrganizationEmployeeHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OrganizationEmployeeHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationEmployeeHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationEmployeeHistoryRecord List config, or
   3. As an alias to a 'name' field on the OrganizationEmployeeHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationEmployeeHistoryRecord List.
  """
  _label_: String
  organization: String
  user: String
  inviteCode: ID
  name: String
  email: String
  phone: String
  role: String
  position: String
  isAccepted: Boolean
  isRejected: Boolean
  isBlocked: Boolean
  hasAllSpecializations: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeHistoryRecordWhereInput {
  AND: [OrganizationEmployeeHistoryRecordWhereInput]
  OR: [OrganizationEmployeeHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  inviteCode: ID
  inviteCode_not: ID
  inviteCode_in: [ID]
  inviteCode_not_in: [ID]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  role: String
  role_not: String
  role_in: [String]
  role_not_in: [String]
  position: String
  position_not: String
  position_contains: String
  position_not_contains: String
  position_starts_with: String
  position_not_starts_with: String
  position_ends_with: String
  position_not_ends_with: String
  position_i: String
  position_not_i: String
  position_contains_i: String
  position_not_contains_i: String
  position_starts_with_i: String
  position_not_starts_with_i: String
  position_ends_with_i: String
  position_not_ends_with_i: String
  position_in: [String]
  position_not_in: [String]
  isAccepted: Boolean
  isAccepted_not: Boolean
  isRejected: Boolean
  isRejected_not: Boolean
  isBlocked: Boolean
  isBlocked_not: Boolean
  hasAllSpecializations: Boolean
  hasAllSpecializations_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OrganizationEmployeeHistoryRecordHistoryActionType
  history_action_not: OrganizationEmployeeHistoryRecordHistoryActionType
  history_action_in: [OrganizationEmployeeHistoryRecordHistoryActionType]
  history_action_not_in: [OrganizationEmployeeHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OrganizationEmployeeHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOrganizationEmployeeHistoryRecordsBy {
  inviteCode_ASC
  inviteCode_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  position_ASC
  position_DESC
  isAccepted_ASC
  isAccepted_DESC
  isRejected_ASC
  isRejected_DESC
  isBlocked_ASC
  isBlocked_DESC
  hasAllSpecializations_ASC
  hasAllSpecializations_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OrganizationEmployeeHistoryRecordUpdateInput {
  organization: String
  user: String
  inviteCode: ID
  name: String
  email: String
  phone: String
  role: String
  position: String
  isAccepted: Boolean
  isRejected: Boolean
  isBlocked: Boolean
  hasAllSpecializations: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeHistoryRecordsUpdateInput {
  id: ID!
  data: OrganizationEmployeeHistoryRecordUpdateInput
}

input OrganizationEmployeeHistoryRecordCreateInput {
  organization: String
  user: String
  inviteCode: ID
  name: String
  email: String
  phone: String
  role: String
  position: String
  isAccepted: Boolean
  isRejected: Boolean
  isBlocked: Boolean
  hasAllSpecializations: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeHistoryRecordsCreateInput {
  data: OrganizationEmployeeHistoryRecordCreateInput
}

input OrganizationRelateToOneInput {
  create: OrganizationCreateInput
  connect: OrganizationWhereUniqueInput
  disconnect: OrganizationWhereUniqueInput
  disconnectAll: Boolean
}

input OrganizationEmployeeRoleRelateToOneInput {
  create: OrganizationEmployeeRoleCreateInput
  connect: OrganizationEmployeeRoleWhereUniqueInput
  disconnect: OrganizationEmployeeRoleWhereUniqueInput
  disconnectAll: Boolean
}

""" B2B customer employees """
type OrganizationEmployee {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationEmployee List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationEmployee List config, or
   3. As an alias to a 'name' field on the OrganizationEmployee List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationEmployee List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ If user exists => invite is matched by email/phone (user can reject or accept it) 
  """
  user: User

  """ Secret invite code (used for accept invite verification) """
  inviteCode: ID
  name: String
  email: String
  phone: String
  role: OrganizationEmployeeRole

  """ Free-form description of the employee's position """
  position: String
  isAccepted: Boolean
  isRejected: Boolean

  """ Employee is blocked status, used in permissions functions, isBlocked has Free-form description of the employee's position over all permissions 
  """
  isBlocked: Boolean

  """ True if employee has all specializations """
  hasAllSpecializations: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OrganizationEmployeeWhereInput {
  AND: [OrganizationEmployeeWhereInput]
  OR: [OrganizationEmployeeWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  user: UserWhereInput
  user_is_null: Boolean
  inviteCode: ID
  inviteCode_not: ID
  inviteCode_in: [ID]
  inviteCode_not_in: [ID]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  role: OrganizationEmployeeRoleWhereInput
  role_is_null: Boolean
  position: String
  position_not: String
  position_contains: String
  position_not_contains: String
  position_starts_with: String
  position_not_starts_with: String
  position_ends_with: String
  position_not_ends_with: String
  position_i: String
  position_not_i: String
  position_contains_i: String
  position_not_contains_i: String
  position_starts_with_i: String
  position_not_starts_with_i: String
  position_ends_with_i: String
  position_not_ends_with_i: String
  position_in: [String]
  position_not_in: [String]
  isAccepted: Boolean
  isAccepted_not: Boolean
  isRejected: Boolean
  isRejected_not: Boolean
  isBlocked: Boolean
  isBlocked_not: Boolean
  hasAllSpecializations: Boolean
  hasAllSpecializations_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OrganizationEmployeeWhereUniqueInput {
  id: ID!
}

enum SortOrganizationEmployeesBy {
  organization_ASC
  organization_DESC
  user_ASC
  user_DESC
  inviteCode_ASC
  inviteCode_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  role_ASC
  role_DESC
  position_ASC
  position_DESC
  isAccepted_ASC
  isAccepted_DESC
  isRejected_ASC
  isRejected_DESC
  isBlocked_ASC
  isBlocked_DESC
  hasAllSpecializations_ASC
  hasAllSpecializations_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OrganizationEmployeeUpdateInput {
  organization: OrganizationRelateToOneInput
  user: UserRelateToOneInput
  inviteCode: ID
  name: String
  email: String
  phone: String
  role: OrganizationEmployeeRoleRelateToOneInput
  position: String
  isAccepted: Boolean
  isRejected: Boolean
  isBlocked: Boolean
  hasAllSpecializations: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationEmployeesUpdateInput {
  id: ID!
  data: OrganizationEmployeeUpdateInput
}

input OrganizationEmployeeCreateInput {
  organization: OrganizationRelateToOneInput
  user: UserRelateToOneInput
  inviteCode: ID
  name: String
  email: String
  phone: String
  role: OrganizationEmployeeRoleRelateToOneInput
  position: String
  isAccepted: Boolean
  isRejected: Boolean
  isBlocked: Boolean
  hasAllSpecializations: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationEmployeesCreateInput {
  data: OrganizationEmployeeCreateInput
}

enum OrganizationEmployeeRoleHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OrganizationEmployeeRoleHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationEmployeeRoleHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationEmployeeRoleHistoryRecord List config, or
   3. As an alias to a 'name' field on the OrganizationEmployeeRoleHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationEmployeeRoleHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  description: String
  statusTransitions: JSON
  canManageOrganization: Boolean
  canManageEmployees: Boolean
  canManageRoles: Boolean
  canManageIntegrations: Boolean
  canManageProperties: Boolean
  canManageTickets: Boolean
  canManageMeters: Boolean
  canManageMeterReadings: Boolean
  canManageContacts: Boolean
  canManageContactRoles: Boolean
  canManageTicketComments: Boolean
  canShareTickets: Boolean
  canReadBillingReceipts: Boolean
  canReadPayments: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsExecutor: Boolean
  canManageTicketPropertyHints: Boolean
  ticketVisibilityType: String
  canManagePropertyScopes: Boolean
  canManageBankAccounts: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankTransactions: Boolean
  canManageIncidents: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeRoleHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeRoleHistoryRecordWhereInput {
  AND: [OrganizationEmployeeRoleHistoryRecordWhereInput]
  OR: [OrganizationEmployeeRoleHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  statusTransitions: JSON
  statusTransitions_not: JSON
  statusTransitions_in: [JSON]
  statusTransitions_not_in: [JSON]
  canManageOrganization: Boolean
  canManageOrganization_not: Boolean
  canManageEmployees: Boolean
  canManageEmployees_not: Boolean
  canManageRoles: Boolean
  canManageRoles_not: Boolean
  canManageIntegrations: Boolean
  canManageIntegrations_not: Boolean
  canManageProperties: Boolean
  canManageProperties_not: Boolean
  canManageTickets: Boolean
  canManageTickets_not: Boolean
  canManageMeters: Boolean
  canManageMeters_not: Boolean
  canManageMeterReadings: Boolean
  canManageMeterReadings_not: Boolean
  canManageContacts: Boolean
  canManageContacts_not: Boolean
  canManageContactRoles: Boolean
  canManageContactRoles_not: Boolean
  canManageTicketComments: Boolean
  canManageTicketComments_not: Boolean
  canShareTickets: Boolean
  canShareTickets_not: Boolean
  canReadBillingReceipts: Boolean
  canReadBillingReceipts_not: Boolean
  canReadPayments: Boolean
  canReadPayments_not: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canInviteNewOrganizationEmployees_not: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsResponsible_not: Boolean
  canBeAssignedAsExecutor: Boolean
  canBeAssignedAsExecutor_not: Boolean
  canManageTicketPropertyHints: Boolean
  canManageTicketPropertyHints_not: Boolean
  ticketVisibilityType: String
  ticketVisibilityType_not: String
  ticketVisibilityType_contains: String
  ticketVisibilityType_not_contains: String
  ticketVisibilityType_starts_with: String
  ticketVisibilityType_not_starts_with: String
  ticketVisibilityType_ends_with: String
  ticketVisibilityType_not_ends_with: String
  ticketVisibilityType_i: String
  ticketVisibilityType_not_i: String
  ticketVisibilityType_contains_i: String
  ticketVisibilityType_not_contains_i: String
  ticketVisibilityType_starts_with_i: String
  ticketVisibilityType_not_starts_with_i: String
  ticketVisibilityType_ends_with_i: String
  ticketVisibilityType_not_ends_with_i: String
  ticketVisibilityType_in: [String]
  ticketVisibilityType_not_in: [String]
  canManagePropertyScopes: Boolean
  canManagePropertyScopes_not: Boolean
  canManageBankAccounts: Boolean
  canManageBankAccounts_not: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankIntegrationContexts_not: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankContractorAccounts_not: Boolean
  canManageBankTransactions: Boolean
  canManageBankTransactions_not: Boolean
  canManageIncidents: Boolean
  canManageIncidents_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OrganizationEmployeeRoleHistoryRecordHistoryActionType
  history_action_not: OrganizationEmployeeRoleHistoryRecordHistoryActionType
  history_action_in: [OrganizationEmployeeRoleHistoryRecordHistoryActionType]
  history_action_not_in: [OrganizationEmployeeRoleHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OrganizationEmployeeRoleHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOrganizationEmployeeRoleHistoryRecordsBy {
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  canManageOrganization_ASC
  canManageOrganization_DESC
  canManageEmployees_ASC
  canManageEmployees_DESC
  canManageRoles_ASC
  canManageRoles_DESC
  canManageIntegrations_ASC
  canManageIntegrations_DESC
  canManageProperties_ASC
  canManageProperties_DESC
  canManageTickets_ASC
  canManageTickets_DESC
  canManageMeters_ASC
  canManageMeters_DESC
  canManageMeterReadings_ASC
  canManageMeterReadings_DESC
  canManageContacts_ASC
  canManageContacts_DESC
  canManageContactRoles_ASC
  canManageContactRoles_DESC
  canManageTicketComments_ASC
  canManageTicketComments_DESC
  canShareTickets_ASC
  canShareTickets_DESC
  canReadBillingReceipts_ASC
  canReadBillingReceipts_DESC
  canReadPayments_ASC
  canReadPayments_DESC
  canInviteNewOrganizationEmployees_ASC
  canInviteNewOrganizationEmployees_DESC
  canBeAssignedAsResponsible_ASC
  canBeAssignedAsResponsible_DESC
  canBeAssignedAsExecutor_ASC
  canBeAssignedAsExecutor_DESC
  canManageTicketPropertyHints_ASC
  canManageTicketPropertyHints_DESC
  ticketVisibilityType_ASC
  ticketVisibilityType_DESC
  canManagePropertyScopes_ASC
  canManagePropertyScopes_DESC
  canManageBankAccounts_ASC
  canManageBankAccounts_DESC
  canManageBankIntegrationContexts_ASC
  canManageBankIntegrationContexts_DESC
  canManageBankContractorAccounts_ASC
  canManageBankContractorAccounts_DESC
  canManageBankTransactions_ASC
  canManageBankTransactions_DESC
  canManageIncidents_ASC
  canManageIncidents_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OrganizationEmployeeRoleHistoryRecordUpdateInput {
  organization: String
  name: String
  description: String
  statusTransitions: JSON
  canManageOrganization: Boolean
  canManageEmployees: Boolean
  canManageRoles: Boolean
  canManageIntegrations: Boolean
  canManageProperties: Boolean
  canManageTickets: Boolean
  canManageMeters: Boolean
  canManageMeterReadings: Boolean
  canManageContacts: Boolean
  canManageContactRoles: Boolean
  canManageTicketComments: Boolean
  canShareTickets: Boolean
  canReadBillingReceipts: Boolean
  canReadPayments: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsExecutor: Boolean
  canManageTicketPropertyHints: Boolean
  ticketVisibilityType: String
  canManagePropertyScopes: Boolean
  canManageBankAccounts: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankTransactions: Boolean
  canManageIncidents: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeRoleHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeRoleHistoryRecordsUpdateInput {
  id: ID!
  data: OrganizationEmployeeRoleHistoryRecordUpdateInput
}

input OrganizationEmployeeRoleHistoryRecordCreateInput {
  organization: String
  name: String
  description: String
  statusTransitions: JSON
  canManageOrganization: Boolean
  canManageEmployees: Boolean
  canManageRoles: Boolean
  canManageIntegrations: Boolean
  canManageProperties: Boolean
  canManageTickets: Boolean
  canManageMeters: Boolean
  canManageMeterReadings: Boolean
  canManageContacts: Boolean
  canManageContactRoles: Boolean
  canManageTicketComments: Boolean
  canShareTickets: Boolean
  canReadBillingReceipts: Boolean
  canReadPayments: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsExecutor: Boolean
  canManageTicketPropertyHints: Boolean
  ticketVisibilityType: String
  canManagePropertyScopes: Boolean
  canManageBankAccounts: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankTransactions: Boolean
  canManageIncidents: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeRoleHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeRoleHistoryRecordsCreateInput {
  data: OrganizationEmployeeRoleHistoryRecordCreateInput
}

""" Employee role name and access permissions """
type OrganizationEmployeeRole {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationEmployeeRole List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationEmployeeRole List config, or
   3. As an alias to a 'name' field on the OrganizationEmployeeRole List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationEmployeeRole List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization
  name: String
  nameNonLocalized: String
  description: String
  descriptionNonLocalized: String

  """ Employee status transitions map """
  statusTransitions: JSON
  canManageOrganization: Boolean
  canManageEmployees: Boolean
  canManageRoles: Boolean
  canManageIntegrations: Boolean
  canManageProperties: Boolean
  canManageTickets: Boolean
  canManageMeters: Boolean
  canManageMeterReadings: Boolean
  canManageContacts: Boolean
  canManageContactRoles: Boolean
  canManageTicketComments: Boolean
  canShareTickets: Boolean
  canReadBillingReceipts: Boolean
  canReadPayments: Boolean
  canInviteNewOrganizationEmployees: Boolean

  """ Allows employees with this role to be assigned to tickets as responsible 
  """
  canBeAssignedAsResponsible: Boolean

  """ Allows employees with this role to be assigned to tickets as executor 
  """
  canBeAssignedAsExecutor: Boolean
  canManageTicketPropertyHints: Boolean

  """
   Which tickets the employee sees:
  1) organization - sees all tickets in the organization.
  2) property - Sees tickets in PropertyScope that have this employee
  3) propertyAndSpecialization - Sees tickets by employee specialization + PropertyScope
  4) assigned - sees only those tickets in which he is the executor or responsible
  """
  ticketVisibilityType: String
  canManagePropertyScopes: Boolean
  canManageBankAccounts: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankTransactions: Boolean
  canManageIncidents: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OrganizationEmployeeRoleWhereInput {
  AND: [OrganizationEmployeeRoleWhereInput]
  OR: [OrganizationEmployeeRoleWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  canManageOrganization: Boolean
  canManageOrganization_not: Boolean
  canManageEmployees: Boolean
  canManageEmployees_not: Boolean
  canManageRoles: Boolean
  canManageRoles_not: Boolean
  canManageIntegrations: Boolean
  canManageIntegrations_not: Boolean
  canManageProperties: Boolean
  canManageProperties_not: Boolean
  canManageTickets: Boolean
  canManageTickets_not: Boolean
  canManageMeters: Boolean
  canManageMeters_not: Boolean
  canManageMeterReadings: Boolean
  canManageMeterReadings_not: Boolean
  canManageContacts: Boolean
  canManageContacts_not: Boolean
  canManageContactRoles: Boolean
  canManageContactRoles_not: Boolean
  canManageTicketComments: Boolean
  canManageTicketComments_not: Boolean
  canShareTickets: Boolean
  canShareTickets_not: Boolean
  canReadBillingReceipts: Boolean
  canReadBillingReceipts_not: Boolean
  canReadPayments: Boolean
  canReadPayments_not: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canInviteNewOrganizationEmployees_not: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsResponsible_not: Boolean
  canBeAssignedAsExecutor: Boolean
  canBeAssignedAsExecutor_not: Boolean
  canManageTicketPropertyHints: Boolean
  canManageTicketPropertyHints_not: Boolean
  ticketVisibilityType: String
  ticketVisibilityType_not: String
  ticketVisibilityType_in: [String]
  ticketVisibilityType_not_in: [String]
  canManagePropertyScopes: Boolean
  canManagePropertyScopes_not: Boolean
  canManageBankAccounts: Boolean
  canManageBankAccounts_not: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankIntegrationContexts_not: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankContractorAccounts_not: Boolean
  canManageBankTransactions: Boolean
  canManageBankTransactions_not: Boolean
  canManageIncidents: Boolean
  canManageIncidents_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OrganizationEmployeeRoleWhereUniqueInput {
  id: ID!
}

enum SortOrganizationEmployeeRolesBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  canManageOrganization_ASC
  canManageOrganization_DESC
  canManageEmployees_ASC
  canManageEmployees_DESC
  canManageRoles_ASC
  canManageRoles_DESC
  canManageIntegrations_ASC
  canManageIntegrations_DESC
  canManageProperties_ASC
  canManageProperties_DESC
  canManageTickets_ASC
  canManageTickets_DESC
  canManageMeters_ASC
  canManageMeters_DESC
  canManageMeterReadings_ASC
  canManageMeterReadings_DESC
  canManageContacts_ASC
  canManageContacts_DESC
  canManageContactRoles_ASC
  canManageContactRoles_DESC
  canManageTicketComments_ASC
  canManageTicketComments_DESC
  canShareTickets_ASC
  canShareTickets_DESC
  canReadBillingReceipts_ASC
  canReadBillingReceipts_DESC
  canReadPayments_ASC
  canReadPayments_DESC
  canInviteNewOrganizationEmployees_ASC
  canInviteNewOrganizationEmployees_DESC
  canBeAssignedAsResponsible_ASC
  canBeAssignedAsResponsible_DESC
  canBeAssignedAsExecutor_ASC
  canBeAssignedAsExecutor_DESC
  canManageTicketPropertyHints_ASC
  canManageTicketPropertyHints_DESC
  ticketVisibilityType_ASC
  ticketVisibilityType_DESC
  canManagePropertyScopes_ASC
  canManagePropertyScopes_DESC
  canManageBankAccounts_ASC
  canManageBankAccounts_DESC
  canManageBankIntegrationContexts_ASC
  canManageBankIntegrationContexts_DESC
  canManageBankContractorAccounts_ASC
  canManageBankContractorAccounts_DESC
  canManageBankTransactions_ASC
  canManageBankTransactions_DESC
  canManageIncidents_ASC
  canManageIncidents_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  dv_ASC
  dv_DESC
}

input OrganizationEmployeeRoleUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  description: String
  canManageOrganization: Boolean
  canManageEmployees: Boolean
  canManageRoles: Boolean
  canManageIntegrations: Boolean
  canManageProperties: Boolean
  canManageTickets: Boolean
  canManageMeters: Boolean
  canManageMeterReadings: Boolean
  canManageContacts: Boolean
  canManageContactRoles: Boolean
  canManageTicketComments: Boolean
  canShareTickets: Boolean
  canReadBillingReceipts: Boolean
  canReadPayments: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsExecutor: Boolean
  canManageTicketPropertyHints: Boolean
  ticketVisibilityType: String
  canManagePropertyScopes: Boolean
  canManageBankAccounts: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankTransactions: Boolean
  canManageIncidents: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
}

input OrganizationEmployeeRolesUpdateInput {
  id: ID!
  data: OrganizationEmployeeRoleUpdateInput
}

input OrganizationEmployeeRoleCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  description: String
  canManageOrganization: Boolean
  canManageEmployees: Boolean
  canManageRoles: Boolean
  canManageIntegrations: Boolean
  canManageProperties: Boolean
  canManageTickets: Boolean
  canManageMeters: Boolean
  canManageMeterReadings: Boolean
  canManageContacts: Boolean
  canManageContactRoles: Boolean
  canManageTicketComments: Boolean
  canShareTickets: Boolean
  canReadBillingReceipts: Boolean
  canReadPayments: Boolean
  canInviteNewOrganizationEmployees: Boolean
  canBeAssignedAsResponsible: Boolean
  canBeAssignedAsExecutor: Boolean
  canManageTicketPropertyHints: Boolean
  ticketVisibilityType: String
  canManagePropertyScopes: Boolean
  canManageBankAccounts: Boolean
  canManageBankIntegrationContexts: Boolean
  canManageBankContractorAccounts: Boolean
  canManageBankTransactions: Boolean
  canManageIncidents: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
}

input OrganizationEmployeeRolesCreateInput {
  data: OrganizationEmployeeRoleCreateInput
}

enum OrganizationLinkHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OrganizationLinkHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationLinkHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationLinkHistoryRecord List config, or
   3. As an alias to a 'name' field on the OrganizationLinkHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationLinkHistoryRecord List.
  """
  _label_: String
  from: String
  to: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationLinkHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationLinkHistoryRecordWhereInput {
  AND: [OrganizationLinkHistoryRecordWhereInput]
  OR: [OrganizationLinkHistoryRecordWhereInput]
  from: String
  from_not: String
  from_in: [String]
  from_not_in: [String]
  to: String
  to_not: String
  to_in: [String]
  to_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OrganizationLinkHistoryRecordHistoryActionType
  history_action_not: OrganizationLinkHistoryRecordHistoryActionType
  history_action_in: [OrganizationLinkHistoryRecordHistoryActionType]
  history_action_not_in: [OrganizationLinkHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OrganizationLinkHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOrganizationLinkHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OrganizationLinkHistoryRecordUpdateInput {
  from: String
  to: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationLinkHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationLinkHistoryRecordsUpdateInput {
  id: ID!
  data: OrganizationLinkHistoryRecordUpdateInput
}

input OrganizationLinkHistoryRecordCreateInput {
  from: String
  to: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationLinkHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationLinkHistoryRecordsCreateInput {
  data: OrganizationLinkHistoryRecordCreateInput
}

""" Relationship between Organization that allows an employee of a "parent" (or "holding", you name it) Organization to interact as an employee of another "child" Organizations. If the relationship is created via OrganizationLink between "parent" and "child" Organization, a user does not need to be employee in all "child" Organization to have the abilities, required to perform some actions there. It is enough to be an employee in just one "parent" Organization. "Child" and "parent" means logical connection, not a structural from real world. Example use case of OrganizationLink is to be able to read Ticket from many organization when current user is an employee of Organization that act as a supervisor, like call center, that servers many "client" Organizations. Similar use cases are implemented for abilities to read MeterReading, ExternalReport, Contact, Division, Property, Ticket, TicketComment and other entities. 
"""
type OrganizationLink {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationLink List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationLink List config, or
   3. As an alias to a 'name' field on the OrganizationLink List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationLink List.
  """
  _label_: String

  """ "Parent" Organization that gains its employee an access to all its "child" Organizations 
  """
  from: Organization

  """ "Child" Organization that is getting accessible by employee of "parent" Organization, also, some entities of "Child" Organization are becoming accessible for CRUD operations. 
  """
  to: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OrganizationLinkWhereInput {
  AND: [OrganizationLinkWhereInput]
  OR: [OrganizationLinkWhereInput]
  from: OrganizationWhereInput
  from_is_null: Boolean
  to: OrganizationWhereInput
  to_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OrganizationLinkWhereUniqueInput {
  id: ID!
}

enum SortOrganizationLinksBy {
  from_ASC
  from_DESC
  to_ASC
  to_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OrganizationLinkUpdateInput {
  from: OrganizationRelateToOneInput
  to: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationLinksUpdateInput {
  id: ID!
  data: OrganizationLinkUpdateInput
}

input OrganizationLinkCreateInput {
  from: OrganizationRelateToOneInput
  to: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationLinksCreateInput {
  data: OrganizationLinkCreateInput
}

enum OrganizationEmployeeSpecializationHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OrganizationEmployeeSpecializationHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationEmployeeSpecializationHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationEmployeeSpecializationHistoryRecord List config, or
   3. As an alias to a 'name' field on the OrganizationEmployeeSpecializationHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationEmployeeSpecializationHistoryRecord List.
  """
  _label_: String
  employee: String
  specialization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeSpecializationHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeSpecializationHistoryRecordWhereInput {
  AND: [OrganizationEmployeeSpecializationHistoryRecordWhereInput]
  OR: [OrganizationEmployeeSpecializationHistoryRecordWhereInput]
  employee: String
  employee_not: String
  employee_in: [String]
  employee_not_in: [String]
  specialization: String
  specialization_not: String
  specialization_in: [String]
  specialization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OrganizationEmployeeSpecializationHistoryRecordHistoryActionType
  history_action_not: OrganizationEmployeeSpecializationHistoryRecordHistoryActionType
  history_action_in: [OrganizationEmployeeSpecializationHistoryRecordHistoryActionType]
  history_action_not_in: [OrganizationEmployeeSpecializationHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OrganizationEmployeeSpecializationHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOrganizationEmployeeSpecializationHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OrganizationEmployeeSpecializationHistoryRecordUpdateInput {
  employee: String
  specialization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeSpecializationHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeSpecializationHistoryRecordsUpdateInput {
  id: ID!
  data: OrganizationEmployeeSpecializationHistoryRecordUpdateInput
}

input OrganizationEmployeeSpecializationHistoryRecordCreateInput {
  employee: String
  specialization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OrganizationEmployeeSpecializationHistoryRecordHistoryActionType
  history_id: String
}

input OrganizationEmployeeSpecializationHistoryRecordsCreateInput {
  data: OrganizationEmployeeSpecializationHistoryRecordCreateInput
}

input OrganizationEmployeeRelateToOneInput {
  create: OrganizationEmployeeCreateInput
  connect: OrganizationEmployeeWhereUniqueInput
  disconnect: OrganizationEmployeeWhereUniqueInput
  disconnectAll: Boolean
}

input TicketCategoryClassifierRelateToOneInput {
  create: TicketCategoryClassifierCreateInput
  connect: TicketCategoryClassifierWhereUniqueInput
  disconnect: TicketCategoryClassifierWhereUniqueInput
  disconnectAll: Boolean
}

""" A work category, that employee can perform. Used to limit the visibility of tickets for employees with "propertyAndSpecialization" ticketVisibilityType 
"""
type OrganizationEmployeeSpecialization {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OrganizationEmployeeSpecialization List config, or
   2. As an alias to the field set on 'labelField' in the OrganizationEmployeeSpecialization List config, or
   3. As an alias to a 'name' field on the OrganizationEmployeeSpecialization List (if one exists), or
   4. As an alias to the 'id' field on the OrganizationEmployeeSpecialization List.
  """
  _label_: String
  employee: OrganizationEmployee

  """ Specific work category, that this employee can perform """
  specialization: TicketCategoryClassifier
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OrganizationEmployeeSpecializationWhereInput {
  AND: [OrganizationEmployeeSpecializationWhereInput]
  OR: [OrganizationEmployeeSpecializationWhereInput]
  employee: OrganizationEmployeeWhereInput
  employee_is_null: Boolean
  specialization: TicketCategoryClassifierWhereInput
  specialization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OrganizationEmployeeSpecializationWhereUniqueInput {
  id: ID!
}

enum SortOrganizationEmployeeSpecializationsBy {
  employee_ASC
  employee_DESC
  specialization_ASC
  specialization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OrganizationEmployeeSpecializationUpdateInput {
  employee: OrganizationEmployeeRelateToOneInput
  specialization: TicketCategoryClassifierRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationEmployeeSpecializationsUpdateInput {
  id: ID!
  data: OrganizationEmployeeSpecializationUpdateInput
}

input OrganizationEmployeeSpecializationCreateInput {
  employee: OrganizationEmployeeRelateToOneInput
  specialization: TicketCategoryClassifierRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OrganizationEmployeeSpecializationsCreateInput {
  data: OrganizationEmployeeSpecializationCreateInput
}

enum PropertyHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type PropertyHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the PropertyHistoryRecord List config, or
   3. As an alias to a 'name' field on the PropertyHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the PropertyHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  type: String
  map: JSON
  unitsCount: Int
  uninhabitedUnitsCount: Int
  ticketsClosed: JSON
  ticketsDeferred: JSON
  ticketsInWork: JSON
  isApproved: Boolean
  yearOfConstruction: String
  area: String
  id: ID!
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyHistoryRecordHistoryActionType
  history_id: String
}

input PropertyHistoryRecordWhereInput {
  AND: [PropertyHistoryRecordWhereInput]
  OR: [PropertyHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  map: JSON
  map_not: JSON
  map_in: [JSON]
  map_not_in: [JSON]
  unitsCount: Int
  unitsCount_not: Int
  unitsCount_lt: Int
  unitsCount_lte: Int
  unitsCount_gt: Int
  unitsCount_gte: Int
  unitsCount_in: [Int]
  unitsCount_not_in: [Int]
  uninhabitedUnitsCount: Int
  uninhabitedUnitsCount_not: Int
  uninhabitedUnitsCount_lt: Int
  uninhabitedUnitsCount_lte: Int
  uninhabitedUnitsCount_gt: Int
  uninhabitedUnitsCount_gte: Int
  uninhabitedUnitsCount_in: [Int]
  uninhabitedUnitsCount_not_in: [Int]
  ticketsClosed: JSON
  ticketsClosed_not: JSON
  ticketsClosed_in: [JSON]
  ticketsClosed_not_in: [JSON]
  ticketsDeferred: JSON
  ticketsDeferred_not: JSON
  ticketsDeferred_in: [JSON]
  ticketsDeferred_not_in: [JSON]
  ticketsInWork: JSON
  ticketsInWork_not: JSON
  ticketsInWork_in: [JSON]
  ticketsInWork_not_in: [JSON]
  isApproved: Boolean
  isApproved_not: Boolean
  yearOfConstruction: String
  yearOfConstruction_not: String
  yearOfConstruction_lt: String
  yearOfConstruction_lte: String
  yearOfConstruction_gt: String
  yearOfConstruction_gte: String
  yearOfConstruction_in: [String]
  yearOfConstruction_not_in: [String]
  area: String
  area_not: String
  area_lt: String
  area_lte: String
  area_gt: String
  area_gte: String
  area_in: [String]
  area_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  addressKey: String
  addressKey_not: String
  addressKey_contains: String
  addressKey_not_contains: String
  addressKey_starts_with: String
  addressKey_not_starts_with: String
  addressKey_ends_with: String
  addressKey_not_ends_with: String
  addressKey_i: String
  addressKey_not_i: String
  addressKey_contains_i: String
  addressKey_not_contains_i: String
  addressKey_starts_with_i: String
  addressKey_not_starts_with_i: String
  addressKey_ends_with_i: String
  addressKey_not_ends_with_i: String
  addressKey_in: [String]
  addressKey_not_in: [String]
  addressMeta: JSON
  addressMeta_not: JSON
  addressMeta_in: [JSON]
  addressMeta_not_in: [JSON]
  addressSources: JSON
  addressSources_not: JSON
  addressSources_in: [JSON]
  addressSources_not_in: [JSON]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: PropertyHistoryRecordHistoryActionType
  history_action_not: PropertyHistoryRecordHistoryActionType
  history_action_in: [PropertyHistoryRecordHistoryActionType]
  history_action_not_in: [PropertyHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input PropertyHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortPropertyHistoryRecordsBy {
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  unitsCount_ASC
  unitsCount_DESC
  uninhabitedUnitsCount_ASC
  uninhabitedUnitsCount_DESC
  isApproved_ASC
  isApproved_DESC
  yearOfConstruction_ASC
  yearOfConstruction_DESC
  area_ASC
  area_DESC
  id_ASC
  id_DESC
  address_ASC
  address_DESC
  addressKey_ASC
  addressKey_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input PropertyHistoryRecordUpdateInput {
  organization: String
  name: String
  type: String
  map: JSON
  unitsCount: Int
  uninhabitedUnitsCount: Int
  ticketsClosed: JSON
  ticketsDeferred: JSON
  ticketsInWork: JSON
  isApproved: Boolean
  yearOfConstruction: String
  area: String
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyHistoryRecordHistoryActionType
  history_id: String
}

input PropertyHistoryRecordsUpdateInput {
  id: ID!
  data: PropertyHistoryRecordUpdateInput
}

input PropertyHistoryRecordCreateInput {
  organization: String
  name: String
  type: String
  map: JSON
  unitsCount: Int
  uninhabitedUnitsCount: Int
  ticketsClosed: JSON
  ticketsDeferred: JSON
  ticketsInWork: JSON
  isApproved: Boolean
  yearOfConstruction: String
  area: String
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyHistoryRecordHistoryActionType
  history_id: String
}

input PropertyHistoryRecordsCreateInput {
  data: PropertyHistoryRecordCreateInput
}

enum PropertyTypeType {
  building
  village
}

enum BuildingMapEntityType {
  building
  section
  floor
  unit
  village
}

enum BuildingMapType {
  building
}

enum BuildingSectionType {
  section
}

enum BuildingFloorType {
  floor
}

enum BuildingUnitType {
  unit
}

enum BuildingUnitSubType {
  parking
  flat
  apartment
  commercial
  warehouse
}

type BuildingUnit {
  id: String!
  type: BuildingUnitType!
  unitType: BuildingUnitSubType
  name: String
  label: String!
  preview: Boolean
}

type BuildingFloor {
  id: String!
  type: BuildingFloorType!
  index: Int!
  name: String!
  units: [BuildingUnit]!
}

type BuildingSection {
  id: String!
  type: BuildingSectionType!
  index: Int!
  name: String!
  floors: [BuildingFloor]!
  preview: Boolean
}

"""
Technical map of the 'building' type Property object. We assume that there will be different maps for different property types. 
"""
type BuildingMap {
  dv: Int!
  sections: [BuildingSection]
  parking: [BuildingSection]
  type: BuildingMapType
}

enum VillageMapType {
  village
}

"""
Technical map of the 'village' type Property object. We assume that there will be different maps for different property types. 
"""
type VillageMap {
  dv: Int!
  type: VillageMapType
}

union PropertyMap = BuildingMap | VillageMap

type AddressMetaDataMetroField {
  name: String
  line: String
  distance: String
}

input AddressMetaDataMetroFieldInput {
  name: String
  line: String
  distance: String
}

type AddressMetaDataField {
  postal_code: String
  country: String!
  country_iso_code: String
  federal_district: String
  region_fias_id: String
  region_kladr_id: String
  region_iso_code: String
  region_with_type: String
  region_type: String
  region_type_full: String
  region: String!
  area_fias_id: String
  area_kladr_id: String
  area_with_type: String
  area_type: String
  area_type_full: String
  area: String
  city_fias_id: String
  city_kladr_id: String
  city_with_type: String
  city_type: String
  city_type_full: String
  city: String
  city_area: String
  city_district_fias_id: String
  city_district_kladr_id: String
  city_district_with_type: String
  city_district_type: String
  city_district_type_full: String
  city_district: String
  settlement_fias_id: String
  settlement_kladr_id: String
  settlement_with_type: String
  settlement_type: String
  settlement_type_full: String
  settlement: String
  street_fias_id: String
  street_kladr_id: String
  street_with_type: String
  street_type: String
  street_type_full: String
  street: String
  house_fias_id: String
  house_kladr_id: String
  house_type: String
  house_type_full: String
  house: String
  block_type: String
  block_type_full: String
  block: String
  entrance: String
  floor: String
  flat_fias_id: String
  flat_type: String
  flat_type_full: String
  flat: String
  flat_area: String
  square_meter_price: String
  flat_price: String
  postal_box: String
  fias_id: String
  fias_code: String
  fias_level: String
  fias_actuality_state: String
  kladr_id: String
  geoname_id: String
  capital_marker: String
  okato: String
  oktmo: String
  tax_office: String
  tax_office_legal: String
  timezone: String
  geo_lat: String
  geo_lon: String
  beltway_hit: String
  beltway_distance: String
  metro: [AddressMetaDataMetroField]
  qc_geo: String
  qc_complete: String
  qc_house: String
  history_values: [String]
  unparsed_parts: String
  source: String
  qc: String
}

input AddressMetaDataFieldInput {
  postal_code: String
  country: String!
  country_iso_code: String
  federal_district: String
  region_fias_id: String
  region_kladr_id: String
  region_iso_code: String
  region_with_type: String
  region_type: String
  region_type_full: String
  region: String!
  area_fias_id: String
  area_kladr_id: String
  area_with_type: String
  area_type: String
  area_type_full: String
  area: String
  city_fias_id: String
  city_kladr_id: String
  city_with_type: String
  city_type: String
  city_type_full: String
  city: String
  city_area: String
  city_district_fias_id: String
  city_district_kladr_id: String
  city_district_with_type: String
  city_district_type: String
  city_district_type_full: String
  city_district: String
  settlement_fias_id: String
  settlement_kladr_id: String
  settlement_with_type: String
  settlement_type: String
  settlement_type_full: String
  settlement: String
  street_fias_id: String
  street_kladr_id: String
  street_with_type: String
  street_type: String
  street_type_full: String
  street: String
  house_fias_id: String
  house_kladr_id: String
  house_type: String
  house_type_full: String
  house: String
  block_type: String
  block_type_full: String
  block: String
  entrance: String
  floor: String
  flat_fias_id: String
  flat_type: String
  flat_type_full: String
  flat: String
  flat_area: String
  square_meter_price: String
  flat_price: String
  postal_box: String
  fias_id: String
  fias_code: String
  fias_level: String
  fias_actuality_state: String
  kladr_id: String
  geoname_id: String
  capital_marker: String
  okato: String
  oktmo: String
  tax_office: String
  tax_office_legal: String
  timezone: String
  geo_lat: String
  geo_lon: String
  beltway_hit: String
  beltway_distance: String
  metro: [AddressMetaDataMetroFieldInput]
  qc_geo: String
  qc_complete: String
  qc_house: String
  history_values: [String]
  unparsed_parts: String
  source: String
  qc: String
}

type AddressMetaField {
  dv: Int
  value: String!
  unrestricted_value: String!
  data: AddressMetaDataField!
}

input AddressMetaFieldInput {
  dv: Int!
  value: String!
  unrestricted_value: String!
  data: AddressMetaDataFieldInput!
}

""" Common property. The property is divided into separate `unit` parts, each of which can be owned by an independent owner. Community farm, residential buildings, or a cottage settlement 
"""
type Property {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Property List config, or
   2. As an alias to the field set on 'labelField' in the Property List config, or
   3. As an alias to a 'name' field on the Property List (if one exists), or
   4. As an alias to the 'id' field on the Property List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Client understandable Property name. A well-known property name for the client 
  """
  name: String

  """ Common property type """
  type: PropertyTypeType

  """ Property map/schema """
  map: BuildingMap

  """ A number of parts in the property. The number of flats for property.type = house. The number of garden houses for property.type = village. 
  """
  unitsCount: Int

  """ A number of non-residential units. Number of parking places for unit.unitType = parking, apartment, commercial & warehouse 
  """
  uninhabitedUnitsCount: Int

  """ Counter for closed tickets """
  ticketsClosed: String

  """ Counter for deferred tickets """
  ticketsDeferred: String

  """ Counter for not closed tickets """
  ticketsInWork: String

  """ Whether or not this organization can manage this property. Usually set by support. Defaults to False. Field is dropped to false if address is updated 
  """
  isApproved: Boolean

  """ Year of the property was built """
  yearOfConstruction: String

  """ Property area in square meters """
  area: String
  id: ID!

  """ Normalized address """
  address: String

  """ The unique key of the address """
  addressKey: String

  """ Property address components """
  addressMeta: AddressMetaField

  """ The origins of the address (some strings which may looks like real address or some id) 
  """
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input PropertyWhereInput {
  AND: [PropertyWhereInput]
  OR: [PropertyWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  type: PropertyTypeType
  type_not: PropertyTypeType
  type_in: [PropertyTypeType]
  type_not_in: [PropertyTypeType]
  map: JSON
  map_not: JSON
  map_in: [JSON]
  map_not_in: [JSON]
  unitsCount: Int
  unitsCount_not: Int
  unitsCount_lt: Int
  unitsCount_lte: Int
  unitsCount_gt: Int
  unitsCount_gte: Int
  unitsCount_in: [Int]
  unitsCount_not_in: [Int]
  uninhabitedUnitsCount: Int
  uninhabitedUnitsCount_not: Int
  uninhabitedUnitsCount_lt: Int
  uninhabitedUnitsCount_lte: Int
  uninhabitedUnitsCount_gt: Int
  uninhabitedUnitsCount_gte: Int
  uninhabitedUnitsCount_in: [Int]
  uninhabitedUnitsCount_not_in: [Int]
  isApproved: Boolean
  isApproved_not: Boolean
  yearOfConstruction: String
  yearOfConstruction_not: String
  yearOfConstruction_lt: String
  yearOfConstruction_lte: String
  yearOfConstruction_gt: String
  yearOfConstruction_gte: String
  yearOfConstruction_in: [String]
  yearOfConstruction_not_in: [String]
  area: String
  area_not: String
  area_lt: String
  area_lte: String
  area_gt: String
  area_gte: String
  area_in: [String]
  area_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  addressKey: String
  addressKey_not: String
  addressKey_contains: String
  addressKey_not_contains: String
  addressKey_starts_with: String
  addressKey_not_starts_with: String
  addressKey_ends_with: String
  addressKey_not_ends_with: String
  addressKey_i: String
  addressKey_not_i: String
  addressKey_contains_i: String
  addressKey_not_contains_i: String
  addressKey_starts_with_i: String
  addressKey_not_starts_with_i: String
  addressKey_ends_with_i: String
  addressKey_not_ends_with_i: String
  addressKey_in: [String]
  addressKey_not_in: [String]
  addressMeta: JSON
  addressMeta_not: JSON
  addressMeta_in: [JSON]
  addressMeta_not_in: [JSON]
  addressSources: JSON
  addressSources_not: JSON
  addressSources_in: [JSON]
  addressSources_not_in: [JSON]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input PropertyWhereUniqueInput {
  id: ID!
}

enum SortPropertiesBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  type_ASC
  type_DESC
  unitsCount_ASC
  unitsCount_DESC
  uninhabitedUnitsCount_ASC
  uninhabitedUnitsCount_DESC
  isApproved_ASC
  isApproved_DESC
  yearOfConstruction_ASC
  yearOfConstruction_DESC
  area_ASC
  area_DESC
  id_ASC
  id_DESC
  address_ASC
  address_DESC
  addressKey_ASC
  addressKey_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input PropertyUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  type: PropertyTypeType
  map: JSON
  unitsCount: Int
  uninhabitedUnitsCount: Int
  isApproved: Boolean
  yearOfConstruction: String
  area: String
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertiesUpdateInput {
  id: ID!
  data: PropertyUpdateInput
}

input PropertyCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  type: PropertyTypeType
  map: JSON
  unitsCount: Int
  uninhabitedUnitsCount: Int
  isApproved: Boolean
  yearOfConstruction: String
  area: String
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertiesCreateInput {
  data: PropertyCreateInput
}

enum BillingIntegrationHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingIntegrationHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegrationHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegrationHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingIntegrationHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegrationHistoryRecord List.
  """
  _label_: String
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  billingPageTitle: String
  group: String
  contextDefaultStatus: String
  dataFormat: JSON
  currencyCode: String
  isTrustedBankAccountSource: Boolean
  isHidden: Boolean
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationHistoryRecordWhereInput {
  AND: [BillingIntegrationHistoryRecordWhereInput]
  OR: [BillingIntegrationHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: JSON
  logo_not: JSON
  logo_in: [JSON]
  logo_not_in: [JSON]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  partnerUrl: String
  partnerUrl_not: String
  partnerUrl_contains: String
  partnerUrl_not_contains: String
  partnerUrl_starts_with: String
  partnerUrl_not_starts_with: String
  partnerUrl_ends_with: String
  partnerUrl_not_ends_with: String
  partnerUrl_i: String
  partnerUrl_not_i: String
  partnerUrl_contains_i: String
  partnerUrl_not_contains_i: String
  partnerUrl_starts_with_i: String
  partnerUrl_not_starts_with_i: String
  partnerUrl_ends_with_i: String
  partnerUrl_not_ends_with_i: String
  partnerUrl_in: [String]
  partnerUrl_not_in: [String]
  detailedDescription: JSON
  detailedDescription_not: JSON
  detailedDescription_in: [JSON]
  detailedDescription_not_in: [JSON]
  appUrl: String
  appUrl_not: String
  appUrl_contains: String
  appUrl_not_contains: String
  appUrl_starts_with: String
  appUrl_not_starts_with: String
  appUrl_ends_with: String
  appUrl_not_ends_with: String
  appUrl_i: String
  appUrl_not_i: String
  appUrl_contains_i: String
  appUrl_not_contains_i: String
  appUrl_starts_with_i: String
  appUrl_not_starts_with_i: String
  appUrl_ends_with_i: String
  appUrl_not_ends_with_i: String
  appUrl_in: [String]
  appUrl_not_in: [String]
  billingPageTitle: String
  billingPageTitle_not: String
  billingPageTitle_contains: String
  billingPageTitle_not_contains: String
  billingPageTitle_starts_with: String
  billingPageTitle_not_starts_with: String
  billingPageTitle_ends_with: String
  billingPageTitle_not_ends_with: String
  billingPageTitle_i: String
  billingPageTitle_not_i: String
  billingPageTitle_contains_i: String
  billingPageTitle_not_contains_i: String
  billingPageTitle_starts_with_i: String
  billingPageTitle_not_starts_with_i: String
  billingPageTitle_ends_with_i: String
  billingPageTitle_not_ends_with_i: String
  billingPageTitle_in: [String]
  billingPageTitle_not_in: [String]
  group: String
  group_not: String
  group_contains: String
  group_not_contains: String
  group_starts_with: String
  group_not_starts_with: String
  group_ends_with: String
  group_not_ends_with: String
  group_i: String
  group_not_i: String
  group_contains_i: String
  group_not_contains_i: String
  group_starts_with_i: String
  group_not_starts_with_i: String
  group_ends_with_i: String
  group_not_ends_with_i: String
  group_in: [String]
  group_not_in: [String]
  contextDefaultStatus: String
  contextDefaultStatus_not: String
  contextDefaultStatus_contains: String
  contextDefaultStatus_not_contains: String
  contextDefaultStatus_starts_with: String
  contextDefaultStatus_not_starts_with: String
  contextDefaultStatus_ends_with: String
  contextDefaultStatus_not_ends_with: String
  contextDefaultStatus_i: String
  contextDefaultStatus_not_i: String
  contextDefaultStatus_contains_i: String
  contextDefaultStatus_not_contains_i: String
  contextDefaultStatus_starts_with_i: String
  contextDefaultStatus_not_starts_with_i: String
  contextDefaultStatus_ends_with_i: String
  contextDefaultStatus_not_ends_with_i: String
  contextDefaultStatus_in: [String]
  contextDefaultStatus_not_in: [String]
  dataFormat: JSON
  dataFormat_not: JSON
  dataFormat_in: [JSON]
  dataFormat_not_in: [JSON]
  currencyCode: String
  currencyCode_not: String
  currencyCode_contains: String
  currencyCode_not_contains: String
  currencyCode_starts_with: String
  currencyCode_not_starts_with: String
  currencyCode_ends_with: String
  currencyCode_not_ends_with: String
  currencyCode_i: String
  currencyCode_not_i: String
  currencyCode_contains_i: String
  currencyCode_not_contains_i: String
  currencyCode_starts_with_i: String
  currencyCode_not_starts_with_i: String
  currencyCode_ends_with_i: String
  currencyCode_not_ends_with_i: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  isTrustedBankAccountSource: Boolean
  isTrustedBankAccountSource_not: Boolean
  isHidden: Boolean
  isHidden_not: Boolean
  displayPriority: Int
  displayPriority_not: Int
  displayPriority_lt: Int
  displayPriority_lte: Int
  displayPriority_gt: Int
  displayPriority_gte: Int
  displayPriority_in: [Int]
  displayPriority_not_in: [Int]
  label: String
  label_not: String
  label_contains: String
  label_not_contains: String
  label_starts_with: String
  label_not_starts_with: String
  label_ends_with: String
  label_not_ends_with: String
  label_i: String
  label_not_i: String
  label_contains_i: String
  label_not_contains_i: String
  label_starts_with_i: String
  label_not_starts_with_i: String
  label_ends_with_i: String
  label_not_ends_with_i: String
  label_in: [String]
  label_not_in: [String]
  gallery: JSON
  gallery_not: JSON
  gallery_in: [JSON]
  gallery_not_in: [JSON]
  price: String
  price_not: String
  price_contains: String
  price_not_contains: String
  price_starts_with: String
  price_not_starts_with: String
  price_ends_with: String
  price_not_ends_with: String
  price_i: String
  price_not_i: String
  price_contains_i: String
  price_not_contains_i: String
  price_starts_with_i: String
  price_not_starts_with_i: String
  price_ends_with_i: String
  price_not_ends_with_i: String
  price_in: [String]
  price_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingIntegrationHistoryRecordHistoryActionType
  history_action_not: BillingIntegrationHistoryRecordHistoryActionType
  history_action_in: [BillingIntegrationHistoryRecordHistoryActionType]
  history_action_not_in: [BillingIntegrationHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingIntegrationHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationHistoryRecordsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  partnerUrl_ASC
  partnerUrl_DESC
  appUrl_ASC
  appUrl_DESC
  billingPageTitle_ASC
  billingPageTitle_DESC
  group_ASC
  group_DESC
  contextDefaultStatus_ASC
  contextDefaultStatus_DESC
  currencyCode_ASC
  currencyCode_DESC
  isTrustedBankAccountSource_ASC
  isTrustedBankAccountSource_DESC
  isHidden_ASC
  isHidden_DESC
  displayPriority_ASC
  displayPriority_DESC
  label_ASC
  label_DESC
  price_ASC
  price_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingIntegrationHistoryRecordUpdateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  billingPageTitle: String
  group: String
  contextDefaultStatus: String
  dataFormat: JSON
  currencyCode: String
  isTrustedBankAccountSource: Boolean
  isHidden: Boolean
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationHistoryRecordsUpdateInput {
  id: ID!
  data: BillingIntegrationHistoryRecordUpdateInput
}

input BillingIntegrationHistoryRecordCreateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  billingPageTitle: String
  group: String
  contextDefaultStatus: String
  dataFormat: JSON
  currencyCode: String
  isTrustedBankAccountSource: Boolean
  isHidden: Boolean
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationHistoryRecordsCreateInput {
  data: BillingIntegrationHistoryRecordCreateInput
}

type BillingIntegrationDataFormatField {
  hasToPayDetails: Boolean!
  hasServices: Boolean!
  hasServicesDetails: Boolean!
}

input BillingIntegrationDataFormatFieldInput {
  hasToPayDetails: Boolean!
  hasServices: Boolean!
  hasServicesDetails: Boolean!
}

input BillingIntegrationAccessRightRelateToManyInput {
  create: [BillingIntegrationAccessRightCreateInput]
  connect: [BillingIntegrationAccessRightWhereUniqueInput]
  disconnect: [BillingIntegrationAccessRightWhereUniqueInput]
  disconnectAll: Boolean
}

""" Identification of the `integration component` which responsible for getting data from the `billing data source` and delivering the data to `this API`. Examples: tap-1c, ...  
"""
type BillingIntegration {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegration List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegration List config, or
   3. As an alias to a 'name' field on the BillingIntegration List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegration List.
  """
  _label_: String

  """ The name of the `integration component` that the developer remembers """
  name: String

  """ Logo of app's company or app itself """
  logo: File

  """ Short description / catch phrase providing information about integration functionality. Will be shown on App's card 
  """
  shortDescription: String

  """ Developer company name """
  developer: String

  """ Link to the website of the developer company, where the user can find out detailed information about the partner 
  """
  partnerUrl: String

  """ Text describing app functionality, connection process and pricing in full detail. Written in markdown without html tags. Will be shown on app's page 
  """
  detailedDescription: String

  """ Url to app page, which is the app starting point and will be opened in iframe 
  """
  appUrl: String

  """ This title is shown on /billing page, usually contains word "Billing" 
  """
  billingPageTitle: String

  """ Billing group which this billing is part of. Used to restrict certain billings from certain acquirings" 
  """
  group: String

  """ Status, which context will have by default after creation if no overwriting option provided 
  """
  contextDefaultStatus: String

  """ Format of the data, that is output of this integration. This field specifies the detail and size of columns. If not specified we can only show first level of detail (address, account, toPay) 
  """
  dataFormat: BillingIntegrationDataFormatField

  """ Currency which this billing uses """
  currencyCode: String
  accessRights(where: BillingIntegrationAccessRightWhereInput, search: String, sortBy: [SortBillingIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationAccessRight!]!
  _accessRightsMeta(where: BillingIntegrationAccessRightWhereInput, search: String, sortBy: [SortBillingIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ If checked, then bank account objects created by this billing are automatically approved. E.g government-controlled billing 
  """
  isTrustedBankAccountSource: Boolean

  """ Indicates whether the integration or app is hidden inside the CRM. Used if integration is active by default or not ready to appear inside CRM 
  """
  isHidden: Boolean

  """ The number used to determine the position of the app among the others. App with higher priority appear earlier in "All" category, as well as in it's own category. Apps with the same priority are sorted from newest to oldest. The default value is 1. 
  """
  displayPriority: Int

  """ App can be marked with one of the following labels in order to visually stand out from other applications: [FREE, DISCOUNT, POPULAR, NEW] 
  """
  label: String

  """ Array containing links to promotional images, which will be shown to user on app's page 
  """
  gallery: [String!]

  """ String representing a base price of app. Usually it's something like "Free", "Individual", "$50 / year" 
  """
  price: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingIntegrationWhereInput {
  AND: [BillingIntegrationWhereInput]
  OR: [BillingIntegrationWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: String
  logo_not: String
  logo_in: [String]
  logo_not_in: [String]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  partnerUrl: String
  partnerUrl_not: String
  partnerUrl_contains: String
  partnerUrl_not_contains: String
  partnerUrl_starts_with: String
  partnerUrl_not_starts_with: String
  partnerUrl_ends_with: String
  partnerUrl_not_ends_with: String
  partnerUrl_i: String
  partnerUrl_not_i: String
  partnerUrl_contains_i: String
  partnerUrl_not_contains_i: String
  partnerUrl_starts_with_i: String
  partnerUrl_not_starts_with_i: String
  partnerUrl_ends_with_i: String
  partnerUrl_not_ends_with_i: String
  partnerUrl_in: [String]
  partnerUrl_not_in: [String]
  detailedDescription: String
  detailedDescription_not: String
  detailedDescription_contains: String
  detailedDescription_not_contains: String
  detailedDescription_starts_with: String
  detailedDescription_not_starts_with: String
  detailedDescription_ends_with: String
  detailedDescription_not_ends_with: String
  detailedDescription_i: String
  detailedDescription_not_i: String
  detailedDescription_contains_i: String
  detailedDescription_not_contains_i: String
  detailedDescription_starts_with_i: String
  detailedDescription_not_starts_with_i: String
  detailedDescription_ends_with_i: String
  detailedDescription_not_ends_with_i: String
  detailedDescription_in: [String]
  detailedDescription_not_in: [String]
  appUrl: String
  appUrl_not: String
  appUrl_contains: String
  appUrl_not_contains: String
  appUrl_starts_with: String
  appUrl_not_starts_with: String
  appUrl_ends_with: String
  appUrl_not_ends_with: String
  appUrl_i: String
  appUrl_not_i: String
  appUrl_contains_i: String
  appUrl_not_contains_i: String
  appUrl_starts_with_i: String
  appUrl_not_starts_with_i: String
  appUrl_ends_with_i: String
  appUrl_not_ends_with_i: String
  appUrl_in: [String]
  appUrl_not_in: [String]
  billingPageTitle: String
  billingPageTitle_not: String
  billingPageTitle_contains: String
  billingPageTitle_not_contains: String
  billingPageTitle_starts_with: String
  billingPageTitle_not_starts_with: String
  billingPageTitle_ends_with: String
  billingPageTitle_not_ends_with: String
  billingPageTitle_i: String
  billingPageTitle_not_i: String
  billingPageTitle_contains_i: String
  billingPageTitle_not_contains_i: String
  billingPageTitle_starts_with_i: String
  billingPageTitle_not_starts_with_i: String
  billingPageTitle_ends_with_i: String
  billingPageTitle_not_ends_with_i: String
  billingPageTitle_in: [String]
  billingPageTitle_not_in: [String]
  group: String
  group_not: String
  group_contains: String
  group_not_contains: String
  group_starts_with: String
  group_not_starts_with: String
  group_ends_with: String
  group_not_ends_with: String
  group_i: String
  group_not_i: String
  group_contains_i: String
  group_not_contains_i: String
  group_starts_with_i: String
  group_not_starts_with_i: String
  group_ends_with_i: String
  group_not_ends_with_i: String
  group_in: [String]
  group_not_in: [String]
  contextDefaultStatus: String
  contextDefaultStatus_not: String
  contextDefaultStatus_in: [String]
  contextDefaultStatus_not_in: [String]
  dataFormat: BillingIntegrationDataFormatFieldInput
  dataFormat_not: BillingIntegrationDataFormatFieldInput
  dataFormat_in: [BillingIntegrationDataFormatFieldInput]
  dataFormat_not_in: [BillingIntegrationDataFormatFieldInput]
  currencyCode: String
  currencyCode_not: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]

  """ condition must be true for all nodes """
  accessRights_every: BillingIntegrationAccessRightWhereInput

  """ condition must be true for at least 1 node """
  accessRights_some: BillingIntegrationAccessRightWhereInput

  """ condition must be false for all nodes """
  accessRights_none: BillingIntegrationAccessRightWhereInput
  isTrustedBankAccountSource: Boolean
  isTrustedBankAccountSource_not: Boolean
  isHidden: Boolean
  isHidden_not: Boolean
  displayPriority: Int
  displayPriority_not: Int
  displayPriority_lt: Int
  displayPriority_lte: Int
  displayPriority_gt: Int
  displayPriority_gte: Int
  displayPriority_in: [Int]
  displayPriority_not_in: [Int]
  label: String
  label_not: String
  label_in: [String]
  label_not_in: [String]
  gallery: [String!]
  gallery_not: [String!]
  gallery_in: [[String!]]
  gallery_not_in: [[String!]]
  price: String
  price_not: String
  price_contains: String
  price_not_contains: String
  price_starts_with: String
  price_not_starts_with: String
  price_ends_with: String
  price_not_ends_with: String
  price_i: String
  price_not_i: String
  price_contains_i: String
  price_not_contains_i: String
  price_starts_with_i: String
  price_not_starts_with_i: String
  price_ends_with_i: String
  price_not_ends_with_i: String
  price_in: [String]
  price_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingIntegrationWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  partnerUrl_ASC
  partnerUrl_DESC
  detailedDescription_ASC
  detailedDescription_DESC
  appUrl_ASC
  appUrl_DESC
  billingPageTitle_ASC
  billingPageTitle_DESC
  group_ASC
  group_DESC
  contextDefaultStatus_ASC
  contextDefaultStatus_DESC
  currencyCode_ASC
  currencyCode_DESC
  accessRights_ASC
  accessRights_DESC
  isTrustedBankAccountSource_ASC
  isTrustedBankAccountSource_DESC
  isHidden_ASC
  isHidden_DESC
  displayPriority_ASC
  displayPriority_DESC
  label_ASC
  label_DESC
  price_ASC
  price_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingIntegrationUpdateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: String
  appUrl: String
  billingPageTitle: String
  group: String
  contextDefaultStatus: String
  dataFormat: BillingIntegrationDataFormatFieldInput
  currencyCode: String
  accessRights: BillingIntegrationAccessRightRelateToManyInput
  isTrustedBankAccountSource: Boolean
  isHidden: Boolean
  displayPriority: Int
  label: String
  gallery: [String!]
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingIntegrationsUpdateInput {
  id: ID!
  data: BillingIntegrationUpdateInput
}

input BillingIntegrationCreateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: String
  appUrl: String
  billingPageTitle: String
  group: String
  contextDefaultStatus: String
  dataFormat: BillingIntegrationDataFormatFieldInput
  currencyCode: String
  accessRights: BillingIntegrationAccessRightRelateToManyInput
  isTrustedBankAccountSource: Boolean
  isHidden: Boolean
  displayPriority: Int
  label: String
  gallery: [String!]
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingIntegrationsCreateInput {
  data: BillingIntegrationCreateInput
}

enum BillingIntegrationAccessRightHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingIntegrationAccessRightHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegrationAccessRightHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegrationAccessRightHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingIntegrationAccessRightHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegrationAccessRightHistoryRecord List.
  """
  _label_: String
  integration: String
  user: String
  id: ID!
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationAccessRightHistoryRecordWhereInput {
  AND: [BillingIntegrationAccessRightHistoryRecordWhereInput]
  OR: [BillingIntegrationAccessRightHistoryRecordWhereInput]
  integration: String
  integration_not: String
  integration_in: [String]
  integration_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingIntegrationAccessRightHistoryRecordHistoryActionType
  history_action_not: BillingIntegrationAccessRightHistoryRecordHistoryActionType
  history_action_in: [BillingIntegrationAccessRightHistoryRecordHistoryActionType]
  history_action_not_in: [BillingIntegrationAccessRightHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingIntegrationAccessRightHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationAccessRightHistoryRecordsBy {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingIntegrationAccessRightHistoryRecordUpdateInput {
  integration: String
  user: String
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationAccessRightHistoryRecordsUpdateInput {
  id: ID!
  data: BillingIntegrationAccessRightHistoryRecordUpdateInput
}

input BillingIntegrationAccessRightHistoryRecordCreateInput {
  integration: String
  user: String
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationAccessRightHistoryRecordsCreateInput {
  data: BillingIntegrationAccessRightHistoryRecordCreateInput
}

input BillingIntegrationRelateToOneInput {
  create: BillingIntegrationCreateInput
  connect: BillingIntegrationWhereUniqueInput
  disconnect: BillingIntegrationWhereUniqueInput
  disconnectAll: Boolean
}

""" Link between billing integrations and users. The existence of the object means that there is user has access to integration 
"""
type BillingIntegrationAccessRight {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegrationAccessRight List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegrationAccessRight List config, or
   3. As an alias to a 'name' field on the BillingIntegrationAccessRight List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegrationAccessRight List.
  """
  _label_: String

  """ Integration """
  integration: BillingIntegration

  """ Link to user. Note, that user must be of "service" type """
  user: User
  id: ID!
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
  v: Int
  deletedAt: String
  newId: String
}

input BillingIntegrationAccessRightWhereInput {
  AND: [BillingIntegrationAccessRightWhereInput]
  OR: [BillingIntegrationAccessRightWhereInput]
  integration: BillingIntegrationWhereInput
  integration_is_null: Boolean
  user: UserWhereInput
  user_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
}

input BillingIntegrationAccessRightWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationAccessRightsBy {
  integration_ASC
  integration_DESC
  user_ASC
  user_DESC
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  dv_ASC
  dv_DESC
  v_ASC
  v_DESC
  deletedAt_ASC
  deletedAt_DESC
}

input BillingIntegrationAccessRightUpdateInput {
  integration: BillingIntegrationRelateToOneInput
  user: UserRelateToOneInput
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
  v: Int
  deletedAt: String
  newId: String
}

input BillingIntegrationAccessRightsUpdateInput {
  id: ID!
  data: BillingIntegrationAccessRightUpdateInput
}

input BillingIntegrationAccessRightCreateInput {
  integration: BillingIntegrationRelateToOneInput
  user: UserRelateToOneInput
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
  v: Int
  deletedAt: String
  newId: String
}

input BillingIntegrationAccessRightsCreateInput {
  data: BillingIntegrationAccessRightCreateInput
}

enum BillingIntegrationOrganizationContextHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingIntegrationOrganizationContextHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegrationOrganizationContextHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegrationOrganizationContextHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingIntegrationOrganizationContextHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegrationOrganizationContextHistoryRecord List.
  """
  _label_: String
  integration: String
  organization: String
  settings: JSON
  status: String
  state: JSON
  lastReport: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationOrganizationContextHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationOrganizationContextHistoryRecordWhereInput {
  AND: [BillingIntegrationOrganizationContextHistoryRecordWhereInput]
  OR: [BillingIntegrationOrganizationContextHistoryRecordWhereInput]
  integration: String
  integration_not: String
  integration_in: [String]
  integration_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  lastReport: JSON
  lastReport_not: JSON
  lastReport_in: [JSON]
  lastReport_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingIntegrationOrganizationContextHistoryRecordHistoryActionType
  history_action_not: BillingIntegrationOrganizationContextHistoryRecordHistoryActionType
  history_action_in: [BillingIntegrationOrganizationContextHistoryRecordHistoryActionType]
  history_action_not_in: [BillingIntegrationOrganizationContextHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingIntegrationOrganizationContextHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationOrganizationContextHistoryRecordsBy {
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingIntegrationOrganizationContextHistoryRecordUpdateInput {
  integration: String
  organization: String
  settings: JSON
  status: String
  state: JSON
  lastReport: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationOrganizationContextHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationOrganizationContextHistoryRecordsUpdateInput {
  id: ID!
  data: BillingIntegrationOrganizationContextHistoryRecordUpdateInput
}

input BillingIntegrationOrganizationContextHistoryRecordCreateInput {
  integration: String
  organization: String
  settings: JSON
  status: String
  state: JSON
  lastReport: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingIntegrationOrganizationContextHistoryRecordHistoryActionType
  history_id: String
}

input BillingIntegrationOrganizationContextHistoryRecordsCreateInput {
  data: BillingIntegrationOrganizationContextHistoryRecordCreateInput
}

""" Integration state and settings for all organizations. The existence of this object means that there is a configured integration between the `billing data source` and `this API` 
"""
type BillingIntegrationOrganizationContext {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegrationOrganizationContext List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegrationOrganizationContext List config, or
   3. As an alias to a 'name' field on the BillingIntegrationOrganizationContext List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegrationOrganizationContext List.
  """
  _label_: String

  """ ID of the integration that is configured to receive data for the organization 
  """
  integration: BillingIntegration

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Settings that are required to get data from the `billing data source`. It can also contain fine-tuning optional integration settings. The data structure depends on the integration and defined there 
  """
  settings: JSON

  """ Status of BillingIntegration connection, Can be one of the following: ["InProgress", "Error", "Finished"]. If not specified explicitly on creation, uses default value from related BillingIntegration model 
  """
  status: String

  """ The current state of the integration process. Some integration need to store past state or data related to cache files/folders for past state. The data structure depends on the integration and defined there 
  """
  state: JSON

  """ Information about last report, such as time of report, period of report, amount of loaded data and etc 
  """
  lastReport: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingIntegrationOrganizationContextWhereInput {
  AND: [BillingIntegrationOrganizationContextWhereInput]
  OR: [BillingIntegrationOrganizationContextWhereInput]
  integration: BillingIntegrationWhereInput
  integration_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  status: String
  status_not: String
  status_in: [String]
  status_not_in: [String]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  lastReport: JSON
  lastReport_not: JSON
  lastReport_in: [JSON]
  lastReport_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingIntegrationOrganizationContextWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationOrganizationContextsBy {
  integration_ASC
  integration_DESC
  organization_ASC
  organization_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingIntegrationOrganizationContextUpdateInput {
  integration: BillingIntegrationRelateToOneInput
  organization: OrganizationRelateToOneInput
  settings: JSON
  status: String
  state: JSON
  lastReport: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingIntegrationOrganizationContextsUpdateInput {
  id: ID!
  data: BillingIntegrationOrganizationContextUpdateInput
}

input BillingIntegrationOrganizationContextCreateInput {
  integration: BillingIntegrationRelateToOneInput
  organization: OrganizationRelateToOneInput
  settings: JSON
  status: String
  state: JSON
  lastReport: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingIntegrationOrganizationContextsCreateInput {
  data: BillingIntegrationOrganizationContextCreateInput
}

input BillingIntegrationOrganizationContextRelateToOneInput {
  create: BillingIntegrationOrganizationContextCreateInput
  connect: BillingIntegrationOrganizationContextWhereUniqueInput
  disconnect: BillingIntegrationOrganizationContextWhereUniqueInput
  disconnectAll: Boolean
}

""" Important `integration component` log records. Sometimes you need to report some errors/problems related to the integration process. The target audience of these messages is the client of our API platform. You should avoid repeating the same messages. The existence of the message means that some problems were occurred during the integration process and the client should the user must take some actions to eliminate them 
"""
type BillingIntegrationLog {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingIntegrationLog List config, or
   2. As an alias to the field set on 'labelField' in the BillingIntegrationLog List config, or
   3. As an alias to a 'name' field on the BillingIntegrationLog List (if one exists), or
   4. As an alias to the 'id' field on the BillingIntegrationLog List.
  """
  _label_: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Message type. Our clients can use different languages. Sometimes we need to change the text message for the client. The settings for the message texts are in the integration. Ex: WRONG_AUTH_CREDENTIALS 
  """
  type: String

  """ Client understandable message. May be overridden by integration settings for some message types 
  """
  message: String

  """ The message metadata. Context variables for generating messages. Examples of data keys: `` 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingIntegrationLogWhereInput {
  AND: [BillingIntegrationLogWhereInput]
  OR: [BillingIntegrationLogWhereInput]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  message: String
  message_not: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  message_i: String
  message_not_i: String
  message_contains_i: String
  message_not_contains_i: String
  message_starts_with_i: String
  message_not_starts_with_i: String
  message_ends_with_i: String
  message_not_ends_with_i: String
  message_in: [String]
  message_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingIntegrationLogWhereUniqueInput {
  id: ID!
}

enum SortBillingIntegrationLogsBy {
  context_ASC
  context_DESC
  type_ASC
  type_DESC
  message_ASC
  message_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingIntegrationLogUpdateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  type: String
  message: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingIntegrationLogsUpdateInput {
  id: ID!
  data: BillingIntegrationLogUpdateInput
}

input BillingIntegrationLogCreateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  type: String
  message: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingIntegrationLogsCreateInput {
  data: BillingIntegrationLogCreateInput
}

enum BillingPropertyHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingPropertyHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingPropertyHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingPropertyHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingPropertyHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingPropertyHistoryRecord List.
  """
  _label_: String
  context: String
  importId: String
  raw: JSON
  globalId: String
  address: String
  normalizedAddress: String
  meta: JSON
  property: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingPropertyHistoryRecordHistoryActionType
  history_id: String
}

input BillingPropertyHistoryRecordWhereInput {
  AND: [BillingPropertyHistoryRecordWhereInput]
  OR: [BillingPropertyHistoryRecordWhereInput]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  globalId: String
  globalId_not: String
  globalId_contains: String
  globalId_not_contains: String
  globalId_starts_with: String
  globalId_not_starts_with: String
  globalId_ends_with: String
  globalId_not_ends_with: String
  globalId_i: String
  globalId_not_i: String
  globalId_contains_i: String
  globalId_not_contains_i: String
  globalId_starts_with_i: String
  globalId_not_starts_with_i: String
  globalId_ends_with_i: String
  globalId_not_ends_with_i: String
  globalId_in: [String]
  globalId_not_in: [String]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  normalizedAddress: String
  normalizedAddress_not: String
  normalizedAddress_contains: String
  normalizedAddress_not_contains: String
  normalizedAddress_starts_with: String
  normalizedAddress_not_starts_with: String
  normalizedAddress_ends_with: String
  normalizedAddress_not_ends_with: String
  normalizedAddress_i: String
  normalizedAddress_not_i: String
  normalizedAddress_contains_i: String
  normalizedAddress_not_contains_i: String
  normalizedAddress_starts_with_i: String
  normalizedAddress_not_starts_with_i: String
  normalizedAddress_ends_with_i: String
  normalizedAddress_not_ends_with_i: String
  normalizedAddress_in: [String]
  normalizedAddress_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  property: JSON
  property_not: JSON
  property_in: [JSON]
  property_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingPropertyHistoryRecordHistoryActionType
  history_action_not: BillingPropertyHistoryRecordHistoryActionType
  history_action_in: [BillingPropertyHistoryRecordHistoryActionType]
  history_action_not_in: [BillingPropertyHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingPropertyHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingPropertyHistoryRecordsBy {
  importId_ASC
  importId_DESC
  globalId_ASC
  globalId_DESC
  address_ASC
  address_DESC
  normalizedAddress_ASC
  normalizedAddress_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingPropertyHistoryRecordUpdateInput {
  context: String
  importId: String
  raw: JSON
  globalId: String
  address: String
  normalizedAddress: String
  meta: JSON
  property: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingPropertyHistoryRecordHistoryActionType
  history_id: String
}

input BillingPropertyHistoryRecordsUpdateInput {
  id: ID!
  data: BillingPropertyHistoryRecordUpdateInput
}

input BillingPropertyHistoryRecordCreateInput {
  context: String
  importId: String
  raw: JSON
  globalId: String
  address: String
  normalizedAddress: String
  meta: JSON
  property: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingPropertyHistoryRecordHistoryActionType
  history_id: String
}

input BillingPropertyHistoryRecordsCreateInput {
  data: BillingPropertyHistoryRecordCreateInput
}

""" All `property` objects from `billing data source` """
type BillingProperty {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingProperty List config, or
   2. As an alias to the field set on 'labelField' in the BillingProperty List config, or
   3. As an alias to a 'name' field on the BillingProperty List (if one exists), or
   4. As an alias to the 'id' field on the BillingProperty List.
  """
  _label_: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Raw non-structured data obtained from the `billing data source`. Used only for the internal needs of the `integration component`. 
  """
  raw: JSON

  """ A well-known universal identifier that allows you to identify the same objects in different systems. It may differ in different countries. Example: for Russia, the FIAS ID is used 
  """
  globalId: String

  """ The non-modified address from the `billing data source`. Used in `receipt template` 
  """
  address: String

  """ Normalized address from `billing data source`. Used to map Properties to BillingProperties 
  """
  normalizedAddress: String

  """ Structured metadata obtained from the `billing data source`. Some of this data is required for use in the `receipt template`. Examples of data keys: `total space of building`, `property beginning of exploitation year`, `has cultural heritage status`, `number of underground floors`, `number of above-ground floors` 
  """
  meta: JSON

  """ Link to the property model """
  property: Property
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingPropertyWhereInput {
  AND: [BillingPropertyWhereInput]
  OR: [BillingPropertyWhereInput]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  globalId: String
  globalId_not: String
  globalId_contains: String
  globalId_not_contains: String
  globalId_starts_with: String
  globalId_not_starts_with: String
  globalId_ends_with: String
  globalId_not_ends_with: String
  globalId_i: String
  globalId_not_i: String
  globalId_contains_i: String
  globalId_not_contains_i: String
  globalId_starts_with_i: String
  globalId_not_starts_with_i: String
  globalId_ends_with_i: String
  globalId_not_ends_with_i: String
  globalId_in: [String]
  globalId_not_in: [String]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  normalizedAddress: String
  normalizedAddress_not: String
  normalizedAddress_contains: String
  normalizedAddress_not_contains: String
  normalizedAddress_starts_with: String
  normalizedAddress_not_starts_with: String
  normalizedAddress_ends_with: String
  normalizedAddress_not_ends_with: String
  normalizedAddress_i: String
  normalizedAddress_not_i: String
  normalizedAddress_contains_i: String
  normalizedAddress_not_contains_i: String
  normalizedAddress_starts_with_i: String
  normalizedAddress_not_starts_with_i: String
  normalizedAddress_ends_with_i: String
  normalizedAddress_not_ends_with_i: String
  normalizedAddress_in: [String]
  normalizedAddress_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingPropertyWhereUniqueInput {
  id: ID!
}

enum SortBillingPropertiesBy {
  context_ASC
  context_DESC
  importId_ASC
  importId_DESC
  globalId_ASC
  globalId_DESC
  address_ASC
  address_DESC
  normalizedAddress_ASC
  normalizedAddress_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingPropertyUpdateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  globalId: String
  address: String
  normalizedAddress: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingPropertiesUpdateInput {
  id: ID!
  data: BillingPropertyUpdateInput
}

input BillingPropertyCreateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  globalId: String
  address: String
  normalizedAddress: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingPropertiesCreateInput {
  data: BillingPropertyCreateInput
}

enum BillingAccountHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingAccountHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingAccountHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingAccountHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingAccountHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingAccountHistoryRecord List.
  """
  _label_: String
  context: String
  importId: String
  raw: JSON
  property: String
  globalId: String
  number: String
  unitName: String
  unitType: String
  fullName: String
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountHistoryRecordWhereInput {
  AND: [BillingAccountHistoryRecordWhereInput]
  OR: [BillingAccountHistoryRecordWhereInput]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  globalId: String
  globalId_not: String
  globalId_contains: String
  globalId_not_contains: String
  globalId_starts_with: String
  globalId_not_starts_with: String
  globalId_ends_with: String
  globalId_not_ends_with: String
  globalId_i: String
  globalId_not_i: String
  globalId_contains_i: String
  globalId_not_contains_i: String
  globalId_starts_with_i: String
  globalId_not_starts_with_i: String
  globalId_ends_with_i: String
  globalId_not_ends_with_i: String
  globalId_in: [String]
  globalId_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_contains: String
  unitType_not_contains: String
  unitType_starts_with: String
  unitType_not_starts_with: String
  unitType_ends_with: String
  unitType_not_ends_with: String
  unitType_i: String
  unitType_not_i: String
  unitType_contains_i: String
  unitType_not_contains_i: String
  unitType_starts_with_i: String
  unitType_not_starts_with_i: String
  unitType_ends_with_i: String
  unitType_not_ends_with_i: String
  unitType_in: [String]
  unitType_not_in: [String]
  fullName: String
  fullName_not: String
  fullName_contains: String
  fullName_not_contains: String
  fullName_starts_with: String
  fullName_not_starts_with: String
  fullName_ends_with: String
  fullName_not_ends_with: String
  fullName_i: String
  fullName_not_i: String
  fullName_contains_i: String
  fullName_not_contains_i: String
  fullName_starts_with_i: String
  fullName_not_starts_with_i: String
  fullName_ends_with_i: String
  fullName_not_ends_with_i: String
  fullName_in: [String]
  fullName_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingAccountHistoryRecordHistoryActionType
  history_action_not: BillingAccountHistoryRecordHistoryActionType
  history_action_in: [BillingAccountHistoryRecordHistoryActionType]
  history_action_not_in: [BillingAccountHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingAccountHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingAccountHistoryRecordsBy {
  importId_ASC
  importId_DESC
  globalId_ASC
  globalId_DESC
  number_ASC
  number_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  fullName_ASC
  fullName_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingAccountHistoryRecordUpdateInput {
  context: String
  importId: String
  raw: JSON
  property: String
  globalId: String
  number: String
  unitName: String
  unitType: String
  fullName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountHistoryRecordsUpdateInput {
  id: ID!
  data: BillingAccountHistoryRecordUpdateInput
}

input BillingAccountHistoryRecordCreateInput {
  context: String
  importId: String
  raw: JSON
  property: String
  globalId: String
  number: String
  unitName: String
  unitType: String
  fullName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountHistoryRecordsCreateInput {
  data: BillingAccountHistoryRecordCreateInput
}

input BillingPropertyRelateToOneInput {
  create: BillingPropertyCreateInput
  connect: BillingPropertyWhereUniqueInput
  disconnect: BillingPropertyWhereUniqueInput
  disconnectAll: Boolean
}

""" All `account` objects from `billing data source`. In close account cases, these objects should be soft deleted 
"""
type BillingAccount {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingAccount List config, or
   2. As an alias to the field set on 'labelField' in the BillingAccount List config, or
   3. As an alias to a 'name' field on the BillingAccount List (if one exists), or
   4. As an alias to the 'id' field on the BillingAccount List.
  """
  _label_: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Raw non-structured data obtained from the `billing data source`. Used only for the internal needs of the `integration component`. 
  """
  raw: JSON

  """ Billing property """
  property: BillingProperty

  """ A well-known universal identifier that allows you to identify the same objects in different systems. It may differ in different countries. Example: for Russia, the dom.gosuslugi.ru account number is used 
  """
  globalId: String

  """ Account number """
  number: String

  """ Flat number / door number of an apartment building (property) """
  unitName: String

  """ Type of unit, such as parking lot or flat """
  unitType: String

  """ Full name of the account holder """
  fullName: String

  """ Structured metadata obtained from the `billing data source`. Some of this data is required for use in the `receipt template`. Examples of data keys: `property unit number`, `floor`, `entrance`, `is parking` 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingAccountWhereInput {
  AND: [BillingAccountWhereInput]
  OR: [BillingAccountWhereInput]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  property: BillingPropertyWhereInput
  property_is_null: Boolean
  globalId: String
  globalId_not: String
  globalId_contains: String
  globalId_not_contains: String
  globalId_starts_with: String
  globalId_not_starts_with: String
  globalId_ends_with: String
  globalId_not_ends_with: String
  globalId_i: String
  globalId_not_i: String
  globalId_contains_i: String
  globalId_not_contains_i: String
  globalId_starts_with_i: String
  globalId_not_starts_with_i: String
  globalId_ends_with_i: String
  globalId_not_ends_with_i: String
  globalId_in: [String]
  globalId_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_in: [String]
  unitType_not_in: [String]
  fullName: String
  fullName_not: String
  fullName_contains: String
  fullName_not_contains: String
  fullName_starts_with: String
  fullName_not_starts_with: String
  fullName_ends_with: String
  fullName_not_ends_with: String
  fullName_i: String
  fullName_not_i: String
  fullName_contains_i: String
  fullName_not_contains_i: String
  fullName_starts_with_i: String
  fullName_not_starts_with_i: String
  fullName_ends_with_i: String
  fullName_not_ends_with_i: String
  fullName_in: [String]
  fullName_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingAccountWhereUniqueInput {
  id: ID!
}

enum SortBillingAccountsBy {
  context_ASC
  context_DESC
  importId_ASC
  importId_DESC
  property_ASC
  property_DESC
  globalId_ASC
  globalId_DESC
  number_ASC
  number_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  fullName_ASC
  fullName_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingAccountUpdateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  property: BillingPropertyRelateToOneInput
  globalId: String
  number: String
  unitName: String
  unitType: String
  fullName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingAccountsUpdateInput {
  id: ID!
  data: BillingAccountUpdateInput
}

input BillingAccountCreateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  property: BillingPropertyRelateToOneInput
  globalId: String
  number: String
  unitName: String
  unitType: String
  fullName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingAccountsCreateInput {
  data: BillingAccountCreateInput
}

enum BillingMeterResourceHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingMeterResourceHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingMeterResourceHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingMeterResourceHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingMeterResourceHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingMeterResourceHistoryRecord List.
  """
  _label_: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingMeterResourceHistoryRecordHistoryActionType
  history_id: String
}

input BillingMeterResourceHistoryRecordWhereInput {
  AND: [BillingMeterResourceHistoryRecordWhereInput]
  OR: [BillingMeterResourceHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingMeterResourceHistoryRecordHistoryActionType
  history_action_not: BillingMeterResourceHistoryRecordHistoryActionType
  history_action_in: [BillingMeterResourceHistoryRecordHistoryActionType]
  history_action_not_in: [BillingMeterResourceHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingMeterResourceHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingMeterResourceHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingMeterResourceHistoryRecordUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingMeterResourceHistoryRecordHistoryActionType
  history_id: String
}

input BillingMeterResourceHistoryRecordsUpdateInput {
  id: ID!
  data: BillingMeterResourceHistoryRecordUpdateInput
}

input BillingMeterResourceHistoryRecordCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingMeterResourceHistoryRecordHistoryActionType
  history_id: String
}

input BillingMeterResourceHistoryRecordsCreateInput {
  data: BillingMeterResourceHistoryRecordCreateInput
}

""" Meter `resource types` """
type BillingMeterResource {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingMeterResource List config, or
   2. As an alias to the field set on 'labelField' in the BillingMeterResource List config, or
   3. As an alias to a 'name' field on the BillingMeterResource List (if one exists), or
   4. As an alias to the 'id' field on the BillingMeterResource List.
  """
  _label_: String

  """ The name of the `resource types` """
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingMeterResourceWhereInput {
  AND: [BillingMeterResourceWhereInput]
  OR: [BillingMeterResourceWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingMeterResourceWhereUniqueInput {
  id: ID!
}

enum SortBillingMeterResourcesBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingMeterResourceUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingMeterResourcesUpdateInput {
  id: ID!
  data: BillingMeterResourceUpdateInput
}

input BillingMeterResourceCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingMeterResourcesCreateInput {
  data: BillingMeterResourceCreateInput
}

enum BillingAccountMeterHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingAccountMeterHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingAccountMeterHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingAccountMeterHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingAccountMeterHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingAccountMeterHistoryRecord List.
  """
  _label_: String
  context: String
  importId: String
  raw: JSON
  property: String
  account: String
  number: String
  resource: String
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountMeterHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountMeterHistoryRecordWhereInput {
  AND: [BillingAccountMeterHistoryRecordWhereInput]
  OR: [BillingAccountMeterHistoryRecordWhereInput]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  account: String
  account_not: String
  account_in: [String]
  account_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  resource: String
  resource_not: String
  resource_in: [String]
  resource_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingAccountMeterHistoryRecordHistoryActionType
  history_action_not: BillingAccountMeterHistoryRecordHistoryActionType
  history_action_in: [BillingAccountMeterHistoryRecordHistoryActionType]
  history_action_not_in: [BillingAccountMeterHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingAccountMeterHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingAccountMeterHistoryRecordsBy {
  importId_ASC
  importId_DESC
  number_ASC
  number_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingAccountMeterHistoryRecordUpdateInput {
  context: String
  importId: String
  raw: JSON
  property: String
  account: String
  number: String
  resource: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountMeterHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountMeterHistoryRecordsUpdateInput {
  id: ID!
  data: BillingAccountMeterHistoryRecordUpdateInput
}

input BillingAccountMeterHistoryRecordCreateInput {
  context: String
  importId: String
  raw: JSON
  property: String
  account: String
  number: String
  resource: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountMeterHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountMeterHistoryRecordsCreateInput {
  data: BillingAccountMeterHistoryRecordCreateInput
}

input BillingAccountRelateToOneInput {
  create: BillingAccountCreateInput
  connect: BillingAccountWhereUniqueInput
  disconnect: BillingAccountWhereUniqueInput
  disconnectAll: Boolean
}

input BillingMeterResourceRelateToOneInput {
  create: BillingMeterResourceCreateInput
  connect: BillingMeterResourceWhereUniqueInput
  disconnect: BillingMeterResourceWhereUniqueInput
  disconnectAll: Boolean
}

""" All `personal meter` (non `whole-building meter`) objects from `billing data source`. In case of the meter can measure several resources we create a separate object for each resource 
"""
type BillingAccountMeter {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingAccountMeter List config, or
   2. As an alias to the field set on 'labelField' in the BillingAccountMeter List config, or
   3. As an alias to a 'name' field on the BillingAccountMeter List (if one exists), or
   4. As an alias to the 'id' field on the BillingAccountMeter List.
  """
  _label_: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Raw non-structured data obtained from the `billing data source`. Used only for the internal needs of the `integration component`. 
  """
  raw: JSON

  """ Billing property """
  property: BillingProperty

  """ Billing account """
  account: BillingAccount

  """ Number of resource meter, such as "А03 9908" """
  number: String

  """ Meter resource types """
  resource: BillingMeterResource

  """ Structured metadata obtained from the `billing data source`. Some of this data is required for use in the `receipt template`. Examples of data keys: `sealing date`, `install date`, `verification date`, `serial number`, `units of measurement` 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingAccountMeterWhereInput {
  AND: [BillingAccountMeterWhereInput]
  OR: [BillingAccountMeterWhereInput]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  property: BillingPropertyWhereInput
  property_is_null: Boolean
  account: BillingAccountWhereInput
  account_is_null: Boolean
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  resource: BillingMeterResourceWhereInput
  resource_is_null: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingAccountMeterWhereUniqueInput {
  id: ID!
}

enum SortBillingAccountMetersBy {
  context_ASC
  context_DESC
  importId_ASC
  importId_DESC
  property_ASC
  property_DESC
  account_ASC
  account_DESC
  number_ASC
  number_DESC
  resource_ASC
  resource_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingAccountMeterUpdateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  property: BillingPropertyRelateToOneInput
  account: BillingAccountRelateToOneInput
  number: String
  resource: BillingMeterResourceRelateToOneInput
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingAccountMetersUpdateInput {
  id: ID!
  data: BillingAccountMeterUpdateInput
}

input BillingAccountMeterCreateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  property: BillingPropertyRelateToOneInput
  account: BillingAccountRelateToOneInput
  number: String
  resource: BillingMeterResourceRelateToOneInput
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingAccountMetersCreateInput {
  data: BillingAccountMeterCreateInput
}

enum BillingAccountMeterReadingHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingAccountMeterReadingHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingAccountMeterReadingHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingAccountMeterReadingHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingAccountMeterReadingHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingAccountMeterReadingHistoryRecord List.
  """
  _label_: String
  context: String
  importId: String
  raw: JSON
  property: String
  account: String
  meter: String
  period: String
  value1: Int
  value2: Int
  value3: Int
  value4: Int
  date: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountMeterReadingHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountMeterReadingHistoryRecordWhereInput {
  AND: [BillingAccountMeterReadingHistoryRecordWhereInput]
  OR: [BillingAccountMeterReadingHistoryRecordWhereInput]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  account: String
  account_not: String
  account_in: [String]
  account_not_in: [String]
  meter: String
  meter_not: String
  meter_in: [String]
  meter_not_in: [String]
  period: String
  period_not: String
  period_lt: String
  period_lte: String
  period_gt: String
  period_gte: String
  period_in: [String]
  period_not_in: [String]
  value1: Int
  value1_not: Int
  value1_lt: Int
  value1_lte: Int
  value1_gt: Int
  value1_gte: Int
  value1_in: [Int]
  value1_not_in: [Int]
  value2: Int
  value2_not: Int
  value2_lt: Int
  value2_lte: Int
  value2_gt: Int
  value2_gte: Int
  value2_in: [Int]
  value2_not_in: [Int]
  value3: Int
  value3_not: Int
  value3_lt: Int
  value3_lte: Int
  value3_gt: Int
  value3_gte: Int
  value3_in: [Int]
  value3_not_in: [Int]
  value4: Int
  value4_not: Int
  value4_lt: Int
  value4_lte: Int
  value4_gt: Int
  value4_gte: Int
  value4_in: [Int]
  value4_not_in: [Int]
  date: String
  date_not: String
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_in: [String]
  date_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingAccountMeterReadingHistoryRecordHistoryActionType
  history_action_not: BillingAccountMeterReadingHistoryRecordHistoryActionType
  history_action_in: [BillingAccountMeterReadingHistoryRecordHistoryActionType]
  history_action_not_in: [BillingAccountMeterReadingHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingAccountMeterReadingHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingAccountMeterReadingHistoryRecordsBy {
  importId_ASC
  importId_DESC
  period_ASC
  period_DESC
  value1_ASC
  value1_DESC
  value2_ASC
  value2_DESC
  value3_ASC
  value3_DESC
  value4_ASC
  value4_DESC
  date_ASC
  date_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingAccountMeterReadingHistoryRecordUpdateInput {
  context: String
  importId: String
  raw: JSON
  property: String
  account: String
  meter: String
  period: String
  value1: Int
  value2: Int
  value3: Int
  value4: Int
  date: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountMeterReadingHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountMeterReadingHistoryRecordsUpdateInput {
  id: ID!
  data: BillingAccountMeterReadingHistoryRecordUpdateInput
}

input BillingAccountMeterReadingHistoryRecordCreateInput {
  context: String
  importId: String
  raw: JSON
  property: String
  account: String
  meter: String
  period: String
  value1: Int
  value2: Int
  value3: Int
  value4: Int
  date: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingAccountMeterReadingHistoryRecordHistoryActionType
  history_id: String
}

input BillingAccountMeterReadingHistoryRecordsCreateInput {
  data: BillingAccountMeterReadingHistoryRecordCreateInput
}

input BillingAccountMeterRelateToOneInput {
  create: BillingAccountMeterCreateInput
  connect: BillingAccountMeterWhereUniqueInput
  disconnect: BillingAccountMeterWhereUniqueInput
  disconnectAll: Boolean
}

""" Meter reading. In a multi-tariff meter case, we store all values in one object 
"""
type BillingAccountMeterReading {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingAccountMeterReading List config, or
   2. As an alias to the field set on 'labelField' in the BillingAccountMeterReading List config, or
   3. As an alias to a 'name' field on the BillingAccountMeterReading List (if one exists), or
   4. As an alias to the 'id' field on the BillingAccountMeterReading List.
  """
  _label_: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Raw non-structured data obtained from the `billing data source`. Used only for the internal needs of the `integration component`. 
  """
  raw: JSON

  """ Billing property """
  property: BillingProperty

  """ Billing account """
  account: BillingAccount

  """ Billing account meter """
  meter: BillingAccountMeter

  """ Period date: Generated on template <year>-<month>-01 """
  period: String

  """ Meter reading value of tariff 1 """
  value1: Int

  """ Meter reading value of tariff 2 """
  value2: Int

  """ Meter reading value of tariff 3 """
  value3: Int

  """ Meter reading value of tariff 4 """
  value4: Int

  """ Date of reading """
  date: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingAccountMeterReadingWhereInput {
  AND: [BillingAccountMeterReadingWhereInput]
  OR: [BillingAccountMeterReadingWhereInput]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  property: BillingPropertyWhereInput
  property_is_null: Boolean
  account: BillingAccountWhereInput
  account_is_null: Boolean
  meter: BillingAccountMeterWhereInput
  meter_is_null: Boolean
  period: String
  period_not: String
  period_lt: String
  period_lte: String
  period_gt: String
  period_gte: String
  period_in: [String]
  period_not_in: [String]
  value1: Int
  value1_not: Int
  value1_lt: Int
  value1_lte: Int
  value1_gt: Int
  value1_gte: Int
  value1_in: [Int]
  value1_not_in: [Int]
  value2: Int
  value2_not: Int
  value2_lt: Int
  value2_lte: Int
  value2_gt: Int
  value2_gte: Int
  value2_in: [Int]
  value2_not_in: [Int]
  value3: Int
  value3_not: Int
  value3_lt: Int
  value3_lte: Int
  value3_gt: Int
  value3_gte: Int
  value3_in: [Int]
  value3_not_in: [Int]
  value4: Int
  value4_not: Int
  value4_lt: Int
  value4_lte: Int
  value4_gt: Int
  value4_gte: Int
  value4_in: [Int]
  value4_not_in: [Int]
  date: String
  date_not: String
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_in: [String]
  date_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingAccountMeterReadingWhereUniqueInput {
  id: ID!
}

enum SortBillingAccountMeterReadingsBy {
  context_ASC
  context_DESC
  importId_ASC
  importId_DESC
  property_ASC
  property_DESC
  account_ASC
  account_DESC
  meter_ASC
  meter_DESC
  period_ASC
  period_DESC
  value1_ASC
  value1_DESC
  value2_ASC
  value2_DESC
  value3_ASC
  value3_DESC
  value4_ASC
  value4_DESC
  date_ASC
  date_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingAccountMeterReadingUpdateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  property: BillingPropertyRelateToOneInput
  account: BillingAccountRelateToOneInput
  meter: BillingAccountMeterRelateToOneInput
  period: String
  value1: Int
  value2: Int
  value3: Int
  value4: Int
  date: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingAccountMeterReadingsUpdateInput {
  id: ID!
  data: BillingAccountMeterReadingUpdateInput
}

input BillingAccountMeterReadingCreateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  importId: String
  raw: JSON
  property: BillingPropertyRelateToOneInput
  account: BillingAccountRelateToOneInput
  meter: BillingAccountMeterRelateToOneInput
  period: String
  value1: Int
  value2: Int
  value3: Int
  value4: Int
  date: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingAccountMeterReadingsCreateInput {
  data: BillingAccountMeterReadingCreateInput
}

enum BillingReceiptHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingReceiptHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingReceiptHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingReceiptHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingReceiptHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingReceiptHistoryRecord List.
  """
  _label_: String
  context: String
  property: String
  account: String
  period: String
  importId: String
  category: String
  printableNumber: String
  raw: JSON
  toPay: String
  toPayDetails: JSON
  services: JSON
  recipient: JSON
  receiver: String
  invalidServicesError: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingReceiptHistoryRecordHistoryActionType
  history_id: String
}

input BillingReceiptHistoryRecordWhereInput {
  AND: [BillingReceiptHistoryRecordWhereInput]
  OR: [BillingReceiptHistoryRecordWhereInput]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  account: String
  account_not: String
  account_in: [String]
  account_not_in: [String]
  period: String
  period_not: String
  period_lt: String
  period_lte: String
  period_gt: String
  period_gte: String
  period_in: [String]
  period_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  category: String
  category_not: String
  category_in: [String]
  category_not_in: [String]
  printableNumber: String
  printableNumber_not: String
  printableNumber_contains: String
  printableNumber_not_contains: String
  printableNumber_starts_with: String
  printableNumber_not_starts_with: String
  printableNumber_ends_with: String
  printableNumber_not_ends_with: String
  printableNumber_i: String
  printableNumber_not_i: String
  printableNumber_contains_i: String
  printableNumber_not_contains_i: String
  printableNumber_starts_with_i: String
  printableNumber_not_starts_with_i: String
  printableNumber_ends_with_i: String
  printableNumber_not_ends_with_i: String
  printableNumber_in: [String]
  printableNumber_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  toPay: String
  toPay_not: String
  toPay_lt: String
  toPay_lte: String
  toPay_gt: String
  toPay_gte: String
  toPay_in: [String]
  toPay_not_in: [String]
  toPayDetails: JSON
  toPayDetails_not: JSON
  toPayDetails_in: [JSON]
  toPayDetails_not_in: [JSON]
  services: JSON
  services_not: JSON
  services_in: [JSON]
  services_not_in: [JSON]
  recipient: JSON
  recipient_not: JSON
  recipient_in: [JSON]
  recipient_not_in: [JSON]
  receiver: String
  receiver_not: String
  receiver_in: [String]
  receiver_not_in: [String]
  invalidServicesError: JSON
  invalidServicesError_not: JSON
  invalidServicesError_in: [JSON]
  invalidServicesError_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingReceiptHistoryRecordHistoryActionType
  history_action_not: BillingReceiptHistoryRecordHistoryActionType
  history_action_in: [BillingReceiptHistoryRecordHistoryActionType]
  history_action_not_in: [BillingReceiptHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingReceiptHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingReceiptHistoryRecordsBy {
  period_ASC
  period_DESC
  importId_ASC
  importId_DESC
  printableNumber_ASC
  printableNumber_DESC
  toPay_ASC
  toPay_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingReceiptHistoryRecordUpdateInput {
  context: String
  property: String
  account: String
  period: String
  importId: String
  category: String
  printableNumber: String
  raw: JSON
  toPay: String
  toPayDetails: JSON
  services: JSON
  recipient: JSON
  receiver: String
  invalidServicesError: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingReceiptHistoryRecordHistoryActionType
  history_id: String
}

input BillingReceiptHistoryRecordsUpdateInput {
  id: ID!
  data: BillingReceiptHistoryRecordUpdateInput
}

input BillingReceiptHistoryRecordCreateInput {
  context: String
  property: String
  account: String
  period: String
  importId: String
  category: String
  printableNumber: String
  raw: JSON
  toPay: String
  toPayDetails: JSON
  services: JSON
  recipient: JSON
  receiver: String
  invalidServicesError: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingReceiptHistoryRecordHistoryActionType
  history_id: String
}

input BillingReceiptHistoryRecordsCreateInput {
  data: BillingReceiptHistoryRecordCreateInput
}

input BillingCategoryRelateToOneInput {
  create: BillingCategoryCreateInput
  connect: BillingCategoryWhereUniqueInput
  disconnect: BillingCategoryWhereUniqueInput
  disconnectAll: Boolean
}

type BillingReceiptToPayDetailsField {
  formula: String
  charge: String
  balance: String
  recalculation: String
  privilege: String
  penalty: String
  paid: String
}

input BillingReceiptToPayDetailsFieldInput {
  formula: String
  charge: String
  balance: String
  recalculation: String
  privilege: String
  penalty: String
  paid: String
}

type BillingReceiptServiceToPayDetailsField {
  formula: String
  charge: String
  balance: String
  recalculation: String
  privilege: String
  penalty: String
  paid: String
  volume: String
  tariff: String
  measure: String
}

input BillingReceiptServiceToPayDetailsFieldInput {
  formula: String
  charge: String
  balance: String
  recalculation: String
  privilege: String
  penalty: String
  paid: String
  volume: String
  tariff: String
  measure: String
}

type BillingReceiptServiceField {
  id: String
  name: String!
  toPay: String!
  toPayDetails: BillingReceiptServiceToPayDetailsField
}

input BillingReceiptServiceFieldInput {
  id: String
  name: String!
  toPay: String!
  toPayDetails: BillingReceiptServiceToPayDetailsFieldInput
}

type BillingReceiptsRecipientField {
  name: String
  bankName: String
  territoryCode: String
  offsettingAccount: String
  tin: String!
  iec: String
  bic: String!
  bankAccount: String!
}

input BillingReceiptsRecipientFieldInput {
  name: String
  bankName: String
  territoryCode: String
  offsettingAccount: String
  tin: String!
  iec: String
  bic: String!
  bankAccount: String!
}

input BillingRecipientRelateToOneInput {
  create: BillingRecipientCreateInput
  connect: BillingRecipientWhereUniqueInput
  disconnect: BillingRecipientWhereUniqueInput
  disconnectAll: Boolean
}

""" Account monthly invoice document """
type BillingReceipt {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingReceipt List config, or
   2. As an alias to the field set on 'labelField' in the BillingReceipt List config, or
   3. As an alias to a 'name' field on the BillingReceipt List (if one exists), or
   4. As an alias to the 'id' field on the BillingReceipt List.
  """
  _label_: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Billing property """
  property: BillingProperty

  """ Billing account """
  account: BillingAccount

  """ Period date: Generated on template <year>-<month>-01 """
  period: String

  """ `billing receipt` local object ID. Unique up to billing context. It is unique up to the context. The constrain is a combination of contextId and importId. 
  """
  importId: String

  """ A category to print on display on the payment document. """
  category: BillingCategory

  """ A number to print on the payment document. """
  printableNumber: String

  """ Raw non-structured data obtained from the `billing data source`. Used only for the internal needs of the `integration component`. 
  """
  raw: JSON

  """ Total sum to pay. Usually counts as the sum of all services. """
  toPay: String

  """ Sum to pay details. Detail level 2 """
  toPayDetails: BillingReceiptToPayDetailsField

  """ Services to pay for. Every service has id, name and toPay. Service may or may not have toPay detail. Detail level 3 and 4 
  """
  services: [BillingReceiptServiceField!]

  """ Recipient. Should contain all meta information to identify the organization 
  """
  recipient: BillingReceiptsRecipientField

  """ Relation to the BillingRecipient. Going to override recipient field, has the same meaning 
  """
  receiver: BillingRecipient

  """ Indicates if services are valid and add up to total sum toPay. """
  invalidServicesError: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingReceiptWhereInput {
  AND: [BillingReceiptWhereInput]
  OR: [BillingReceiptWhereInput]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  property: BillingPropertyWhereInput
  property_is_null: Boolean
  account: BillingAccountWhereInput
  account_is_null: Boolean
  period: String
  period_not: String
  period_lt: String
  period_lte: String
  period_gt: String
  period_gte: String
  period_in: [String]
  period_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  category: BillingCategoryWhereInput
  category_is_null: Boolean
  printableNumber: String
  printableNumber_not: String
  printableNumber_contains: String
  printableNumber_not_contains: String
  printableNumber_starts_with: String
  printableNumber_not_starts_with: String
  printableNumber_ends_with: String
  printableNumber_not_ends_with: String
  printableNumber_i: String
  printableNumber_not_i: String
  printableNumber_contains_i: String
  printableNumber_not_contains_i: String
  printableNumber_starts_with_i: String
  printableNumber_not_starts_with_i: String
  printableNumber_ends_with_i: String
  printableNumber_not_ends_with_i: String
  printableNumber_in: [String]
  printableNumber_not_in: [String]
  raw: JSON
  raw_not: JSON
  raw_in: [JSON]
  raw_not_in: [JSON]
  toPay: String
  toPay_not: String
  toPay_lt: String
  toPay_lte: String
  toPay_gt: String
  toPay_gte: String
  toPay_in: [String]
  toPay_not_in: [String]
  toPayDetails: BillingReceiptToPayDetailsFieldInput
  toPayDetails_not: BillingReceiptToPayDetailsFieldInput
  toPayDetails_in: [BillingReceiptToPayDetailsFieldInput]
  toPayDetails_not_in: [BillingReceiptToPayDetailsFieldInput]
  services: [BillingReceiptServiceFieldInput!]
  services_not: [BillingReceiptServiceFieldInput!]
  services_in: [[BillingReceiptServiceFieldInput!]]
  services_not_in: [[BillingReceiptServiceFieldInput!]]
  recipient: BillingReceiptsRecipientFieldInput
  recipient_not: BillingReceiptsRecipientFieldInput
  recipient_in: [BillingReceiptsRecipientFieldInput]
  recipient_not_in: [BillingReceiptsRecipientFieldInput]
  receiver: BillingRecipientWhereInput
  receiver_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingReceiptWhereUniqueInput {
  id: ID!
}

enum SortBillingReceiptsBy {
  context_ASC
  context_DESC
  property_ASC
  property_DESC
  account_ASC
  account_DESC
  period_ASC
  period_DESC
  importId_ASC
  importId_DESC
  category_ASC
  category_DESC
  printableNumber_ASC
  printableNumber_DESC
  toPay_ASC
  toPay_DESC
  receiver_ASC
  receiver_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingReceiptUpdateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  property: BillingPropertyRelateToOneInput
  account: BillingAccountRelateToOneInput
  period: String
  importId: String
  category: BillingCategoryRelateToOneInput
  printableNumber: String
  raw: JSON
  toPay: String
  toPayDetails: BillingReceiptToPayDetailsFieldInput
  services: [BillingReceiptServiceFieldInput!]
  recipient: BillingReceiptsRecipientFieldInput
  receiver: BillingRecipientRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingReceiptsUpdateInput {
  id: ID!
  data: BillingReceiptUpdateInput
}

input BillingReceiptCreateInput {
  context: BillingIntegrationOrganizationContextRelateToOneInput
  property: BillingPropertyRelateToOneInput
  account: BillingAccountRelateToOneInput
  period: String
  importId: String
  category: BillingCategoryRelateToOneInput
  printableNumber: String
  raw: JSON
  toPay: String
  toPayDetails: BillingReceiptToPayDetailsFieldInput
  services: [BillingReceiptServiceFieldInput!]
  recipient: BillingReceiptsRecipientFieldInput
  receiver: BillingRecipientRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingReceiptsCreateInput {
  data: BillingReceiptCreateInput
}

enum BillingRecipientHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingRecipientHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingRecipientHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingRecipientHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingRecipientHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingRecipientHistoryRecord List.
  """
  _label_: String
  importId: String
  context: String
  tin: String
  iec: String
  bic: String
  bankAccount: String
  bankName: String
  offsettingAccount: String
  territoryCode: String
  purpose: String
  name: String
  isApproved: Boolean
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingRecipientHistoryRecordHistoryActionType
  history_id: String
}

input BillingRecipientHistoryRecordWhereInput {
  AND: [BillingRecipientHistoryRecordWhereInput]
  OR: [BillingRecipientHistoryRecordWhereInput]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  iec: String
  iec_not: String
  iec_contains: String
  iec_not_contains: String
  iec_starts_with: String
  iec_not_starts_with: String
  iec_ends_with: String
  iec_not_ends_with: String
  iec_i: String
  iec_not_i: String
  iec_contains_i: String
  iec_not_contains_i: String
  iec_starts_with_i: String
  iec_not_starts_with_i: String
  iec_ends_with_i: String
  iec_not_ends_with_i: String
  iec_in: [String]
  iec_not_in: [String]
  bic: String
  bic_not: String
  bic_contains: String
  bic_not_contains: String
  bic_starts_with: String
  bic_not_starts_with: String
  bic_ends_with: String
  bic_not_ends_with: String
  bic_i: String
  bic_not_i: String
  bic_contains_i: String
  bic_not_contains_i: String
  bic_starts_with_i: String
  bic_not_starts_with_i: String
  bic_ends_with_i: String
  bic_not_ends_with_i: String
  bic_in: [String]
  bic_not_in: [String]
  bankAccount: String
  bankAccount_not: String
  bankAccount_contains: String
  bankAccount_not_contains: String
  bankAccount_starts_with: String
  bankAccount_not_starts_with: String
  bankAccount_ends_with: String
  bankAccount_not_ends_with: String
  bankAccount_i: String
  bankAccount_not_i: String
  bankAccount_contains_i: String
  bankAccount_not_contains_i: String
  bankAccount_starts_with_i: String
  bankAccount_not_starts_with_i: String
  bankAccount_ends_with_i: String
  bankAccount_not_ends_with_i: String
  bankAccount_in: [String]
  bankAccount_not_in: [String]
  bankName: String
  bankName_not: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankName_i: String
  bankName_not_i: String
  bankName_contains_i: String
  bankName_not_contains_i: String
  bankName_starts_with_i: String
  bankName_not_starts_with_i: String
  bankName_ends_with_i: String
  bankName_not_ends_with_i: String
  bankName_in: [String]
  bankName_not_in: [String]
  offsettingAccount: String
  offsettingAccount_not: String
  offsettingAccount_contains: String
  offsettingAccount_not_contains: String
  offsettingAccount_starts_with: String
  offsettingAccount_not_starts_with: String
  offsettingAccount_ends_with: String
  offsettingAccount_not_ends_with: String
  offsettingAccount_i: String
  offsettingAccount_not_i: String
  offsettingAccount_contains_i: String
  offsettingAccount_not_contains_i: String
  offsettingAccount_starts_with_i: String
  offsettingAccount_not_starts_with_i: String
  offsettingAccount_ends_with_i: String
  offsettingAccount_not_ends_with_i: String
  offsettingAccount_in: [String]
  offsettingAccount_not_in: [String]
  territoryCode: String
  territoryCode_not: String
  territoryCode_contains: String
  territoryCode_not_contains: String
  territoryCode_starts_with: String
  territoryCode_not_starts_with: String
  territoryCode_ends_with: String
  territoryCode_not_ends_with: String
  territoryCode_i: String
  territoryCode_not_i: String
  territoryCode_contains_i: String
  territoryCode_not_contains_i: String
  territoryCode_starts_with_i: String
  territoryCode_not_starts_with_i: String
  territoryCode_ends_with_i: String
  territoryCode_not_ends_with_i: String
  territoryCode_in: [String]
  territoryCode_not_in: [String]
  purpose: String
  purpose_not: String
  purpose_contains: String
  purpose_not_contains: String
  purpose_starts_with: String
  purpose_not_starts_with: String
  purpose_ends_with: String
  purpose_not_ends_with: String
  purpose_i: String
  purpose_not_i: String
  purpose_contains_i: String
  purpose_not_contains_i: String
  purpose_starts_with_i: String
  purpose_not_starts_with_i: String
  purpose_ends_with_i: String
  purpose_not_ends_with_i: String
  purpose_in: [String]
  purpose_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  isApproved: Boolean
  isApproved_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingRecipientHistoryRecordHistoryActionType
  history_action_not: BillingRecipientHistoryRecordHistoryActionType
  history_action_in: [BillingRecipientHistoryRecordHistoryActionType]
  history_action_not_in: [BillingRecipientHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingRecipientHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingRecipientHistoryRecordsBy {
  importId_ASC
  importId_DESC
  tin_ASC
  tin_DESC
  iec_ASC
  iec_DESC
  bic_ASC
  bic_DESC
  bankAccount_ASC
  bankAccount_DESC
  bankName_ASC
  bankName_DESC
  offsettingAccount_ASC
  offsettingAccount_DESC
  territoryCode_ASC
  territoryCode_DESC
  purpose_ASC
  purpose_DESC
  name_ASC
  name_DESC
  isApproved_ASC
  isApproved_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingRecipientHistoryRecordUpdateInput {
  importId: String
  context: String
  tin: String
  iec: String
  bic: String
  bankAccount: String
  bankName: String
  offsettingAccount: String
  territoryCode: String
  purpose: String
  name: String
  isApproved: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingRecipientHistoryRecordHistoryActionType
  history_id: String
}

input BillingRecipientHistoryRecordsUpdateInput {
  id: ID!
  data: BillingRecipientHistoryRecordUpdateInput
}

input BillingRecipientHistoryRecordCreateInput {
  importId: String
  context: String
  tin: String
  iec: String
  bic: String
  bankAccount: String
  bankName: String
  offsettingAccount: String
  territoryCode: String
  purpose: String
  name: String
  isApproved: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingRecipientHistoryRecordHistoryActionType
  history_id: String
}

input BillingRecipientHistoryRecordsCreateInput {
  data: BillingRecipientHistoryRecordCreateInput
}

""" Organization' billing information: bank account, bic, and so on """
type BillingRecipient {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingRecipient List config, or
   2. As an alias to the field set on 'labelField' in the BillingRecipient List config, or
   3. As an alias to a 'name' field on the BillingRecipient List (if one exists), or
   4. As an alias to the 'id' field on the BillingRecipient List.
  """
  _label_: String

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Integration context """
  context: BillingIntegrationOrganizationContext

  """ Tax Identification Number """
  tin: String

  """ Importer-Exporter Code """
  iec: String

  """ Bank Identification Code """
  bic: String

  """ Number of bank account of this recipient """
  bankAccount: String

  """ Bank name """
  bankName: String

  """ Bank account """
  offsettingAccount: String

  """ Location code (Classifier of Territories of Municipal Units - OKTMO) """
  territoryCode: String

  """ For what reason is this recipient is able to collect payments. """
  purpose: String

  """ Billing Recipient name. Usually the juristic name of the organization 
  """
  name: String

  """ If set to True, then this billing recipient info is considered allowed and users are allowed to pay for receipts with this recipient 
  """
  isApproved: Boolean

  """ Structured metadata obtained from the `billing data source`. The structure depends on the integration system. 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingRecipientWhereInput {
  AND: [BillingRecipientWhereInput]
  OR: [BillingRecipientWhereInput]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  context: BillingIntegrationOrganizationContextWhereInput
  context_is_null: Boolean
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  iec: String
  iec_not: String
  iec_contains: String
  iec_not_contains: String
  iec_starts_with: String
  iec_not_starts_with: String
  iec_ends_with: String
  iec_not_ends_with: String
  iec_i: String
  iec_not_i: String
  iec_contains_i: String
  iec_not_contains_i: String
  iec_starts_with_i: String
  iec_not_starts_with_i: String
  iec_ends_with_i: String
  iec_not_ends_with_i: String
  iec_in: [String]
  iec_not_in: [String]
  bic: String
  bic_not: String
  bic_contains: String
  bic_not_contains: String
  bic_starts_with: String
  bic_not_starts_with: String
  bic_ends_with: String
  bic_not_ends_with: String
  bic_i: String
  bic_not_i: String
  bic_contains_i: String
  bic_not_contains_i: String
  bic_starts_with_i: String
  bic_not_starts_with_i: String
  bic_ends_with_i: String
  bic_not_ends_with_i: String
  bic_in: [String]
  bic_not_in: [String]
  bankAccount: String
  bankAccount_not: String
  bankAccount_contains: String
  bankAccount_not_contains: String
  bankAccount_starts_with: String
  bankAccount_not_starts_with: String
  bankAccount_ends_with: String
  bankAccount_not_ends_with: String
  bankAccount_i: String
  bankAccount_not_i: String
  bankAccount_contains_i: String
  bankAccount_not_contains_i: String
  bankAccount_starts_with_i: String
  bankAccount_not_starts_with_i: String
  bankAccount_ends_with_i: String
  bankAccount_not_ends_with_i: String
  bankAccount_in: [String]
  bankAccount_not_in: [String]
  bankName: String
  bankName_not: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankName_i: String
  bankName_not_i: String
  bankName_contains_i: String
  bankName_not_contains_i: String
  bankName_starts_with_i: String
  bankName_not_starts_with_i: String
  bankName_ends_with_i: String
  bankName_not_ends_with_i: String
  bankName_in: [String]
  bankName_not_in: [String]
  offsettingAccount: String
  offsettingAccount_not: String
  offsettingAccount_contains: String
  offsettingAccount_not_contains: String
  offsettingAccount_starts_with: String
  offsettingAccount_not_starts_with: String
  offsettingAccount_ends_with: String
  offsettingAccount_not_ends_with: String
  offsettingAccount_i: String
  offsettingAccount_not_i: String
  offsettingAccount_contains_i: String
  offsettingAccount_not_contains_i: String
  offsettingAccount_starts_with_i: String
  offsettingAccount_not_starts_with_i: String
  offsettingAccount_ends_with_i: String
  offsettingAccount_not_ends_with_i: String
  offsettingAccount_in: [String]
  offsettingAccount_not_in: [String]
  territoryCode: String
  territoryCode_not: String
  territoryCode_contains: String
  territoryCode_not_contains: String
  territoryCode_starts_with: String
  territoryCode_not_starts_with: String
  territoryCode_ends_with: String
  territoryCode_not_ends_with: String
  territoryCode_i: String
  territoryCode_not_i: String
  territoryCode_contains_i: String
  territoryCode_not_contains_i: String
  territoryCode_starts_with_i: String
  territoryCode_not_starts_with_i: String
  territoryCode_ends_with_i: String
  territoryCode_not_ends_with_i: String
  territoryCode_in: [String]
  territoryCode_not_in: [String]
  purpose: String
  purpose_not: String
  purpose_contains: String
  purpose_not_contains: String
  purpose_starts_with: String
  purpose_not_starts_with: String
  purpose_ends_with: String
  purpose_not_ends_with: String
  purpose_i: String
  purpose_not_i: String
  purpose_contains_i: String
  purpose_not_contains_i: String
  purpose_starts_with_i: String
  purpose_not_starts_with_i: String
  purpose_ends_with_i: String
  purpose_not_ends_with_i: String
  purpose_in: [String]
  purpose_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  isApproved: Boolean
  isApproved_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingRecipientWhereUniqueInput {
  id: ID!
}

enum SortBillingRecipientsBy {
  importId_ASC
  importId_DESC
  context_ASC
  context_DESC
  tin_ASC
  tin_DESC
  iec_ASC
  iec_DESC
  bic_ASC
  bic_DESC
  bankAccount_ASC
  bankAccount_DESC
  bankName_ASC
  bankName_DESC
  offsettingAccount_ASC
  offsettingAccount_DESC
  territoryCode_ASC
  territoryCode_DESC
  purpose_ASC
  purpose_DESC
  name_ASC
  name_DESC
  isApproved_ASC
  isApproved_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingRecipientUpdateInput {
  importId: String
  context: BillingIntegrationOrganizationContextRelateToOneInput
  tin: String
  iec: String
  bic: String
  bankAccount: String
  bankName: String
  offsettingAccount: String
  territoryCode: String
  purpose: String
  name: String
  isApproved: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingRecipientsUpdateInput {
  id: ID!
  data: BillingRecipientUpdateInput
}

input BillingRecipientCreateInput {
  importId: String
  context: BillingIntegrationOrganizationContextRelateToOneInput
  tin: String
  iec: String
  bic: String
  bankAccount: String
  bankName: String
  offsettingAccount: String
  territoryCode: String
  purpose: String
  name: String
  isApproved: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingRecipientsCreateInput {
  data: BillingRecipientCreateInput
}

enum BillingCategoryHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BillingCategoryHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingCategoryHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BillingCategoryHistoryRecord List config, or
   3. As an alias to a 'name' field on the BillingCategoryHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BillingCategoryHistoryRecord List.
  """
  _label_: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingCategoryHistoryRecordHistoryActionType
  history_id: String
}

input BillingCategoryHistoryRecordWhereInput {
  AND: [BillingCategoryHistoryRecordWhereInput]
  OR: [BillingCategoryHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BillingCategoryHistoryRecordHistoryActionType
  history_action_not: BillingCategoryHistoryRecordHistoryActionType
  history_action_in: [BillingCategoryHistoryRecordHistoryActionType]
  history_action_not_in: [BillingCategoryHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BillingCategoryHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBillingCategoryHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BillingCategoryHistoryRecordUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingCategoryHistoryRecordHistoryActionType
  history_id: String
}

input BillingCategoryHistoryRecordsUpdateInput {
  id: ID!
  data: BillingCategoryHistoryRecordUpdateInput
}

input BillingCategoryHistoryRecordCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BillingCategoryHistoryRecordHistoryActionType
  history_id: String
}

input BillingCategoryHistoryRecordsCreateInput {
  data: BillingCategoryHistoryRecordCreateInput
}

""" Payment category - used primarily in display purposes """
type BillingCategory {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BillingCategory List config, or
   2. As an alias to the field set on 'labelField' in the BillingCategory List config, or
   3. As an alias to a 'name' field on the BillingCategory List (if one exists), or
   4. As an alias to the 'id' field on the BillingCategory List.
  """
  _label_: String

  """ Localized name of billing category: Hot water, Cold water, Housing Services 
  """
  name: String
  nameNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BillingCategoryWhereInput {
  AND: [BillingCategoryWhereInput]
  OR: [BillingCategoryWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BillingCategoryWhereUniqueInput {
  id: ID!
}

enum SortBillingCategoriesBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BillingCategoryUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingCategoriesUpdateInput {
  id: ID!
  data: BillingCategoryUpdateInput
}

input BillingCategoryCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BillingCategoriesCreateInput {
  data: BillingCategoryCreateInput
}

enum BankAccountHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankAccountHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankAccountHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankAccountHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankAccountHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankAccountHistoryRecord List.
  """
  _label_: String
  organization: String
  integrationContext: String
  property: String
  tin: String
  tinMeta: JSON
  country: String
  routingNumber: String
  routingNumberMeta: JSON
  number: String
  currencyCode: String
  approvedAt: String
  approvedBy: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankAccountHistoryRecordHistoryActionType
  history_id: String
}

input BankAccountHistoryRecordWhereInput {
  AND: [BankAccountHistoryRecordWhereInput]
  OR: [BankAccountHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  integrationContext: String
  integrationContext_not: String
  integrationContext_in: [String]
  integrationContext_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  tinMeta: JSON
  tinMeta_not: JSON
  tinMeta_in: [JSON]
  tinMeta_not_in: [JSON]
  country: String
  country_not: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  country_i: String
  country_not_i: String
  country_contains_i: String
  country_not_contains_i: String
  country_starts_with_i: String
  country_not_starts_with_i: String
  country_ends_with_i: String
  country_not_ends_with_i: String
  country_in: [String]
  country_not_in: [String]
  routingNumber: String
  routingNumber_not: String
  routingNumber_contains: String
  routingNumber_not_contains: String
  routingNumber_starts_with: String
  routingNumber_not_starts_with: String
  routingNumber_ends_with: String
  routingNumber_not_ends_with: String
  routingNumber_i: String
  routingNumber_not_i: String
  routingNumber_contains_i: String
  routingNumber_not_contains_i: String
  routingNumber_starts_with_i: String
  routingNumber_not_starts_with_i: String
  routingNumber_ends_with_i: String
  routingNumber_not_ends_with_i: String
  routingNumber_in: [String]
  routingNumber_not_in: [String]
  routingNumberMeta: JSON
  routingNumberMeta_not: JSON
  routingNumberMeta_in: [JSON]
  routingNumberMeta_not_in: [JSON]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_contains: String
  currencyCode_not_contains: String
  currencyCode_starts_with: String
  currencyCode_not_starts_with: String
  currencyCode_ends_with: String
  currencyCode_not_ends_with: String
  currencyCode_i: String
  currencyCode_not_i: String
  currencyCode_contains_i: String
  currencyCode_not_contains_i: String
  currencyCode_starts_with_i: String
  currencyCode_not_starts_with_i: String
  currencyCode_ends_with_i: String
  currencyCode_not_ends_with_i: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  approvedAt: String
  approvedAt_not: String
  approvedAt_lt: String
  approvedAt_lte: String
  approvedAt_gt: String
  approvedAt_gte: String
  approvedAt_in: [String]
  approvedAt_not_in: [String]
  approvedBy: String
  approvedBy_not: String
  approvedBy_in: [String]
  approvedBy_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  territoryCode: String
  territoryCode_not: String
  territoryCode_contains: String
  territoryCode_not_contains: String
  territoryCode_starts_with: String
  territoryCode_not_starts_with: String
  territoryCode_ends_with: String
  territoryCode_not_ends_with: String
  territoryCode_i: String
  territoryCode_not_i: String
  territoryCode_contains_i: String
  territoryCode_not_contains_i: String
  territoryCode_starts_with_i: String
  territoryCode_not_starts_with_i: String
  territoryCode_ends_with_i: String
  territoryCode_not_ends_with_i: String
  territoryCode_in: [String]
  territoryCode_not_in: [String]
  bankName: String
  bankName_not: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankName_i: String
  bankName_not_i: String
  bankName_contains_i: String
  bankName_not_contains_i: String
  bankName_starts_with_i: String
  bankName_not_starts_with_i: String
  bankName_ends_with_i: String
  bankName_not_ends_with_i: String
  bankName_in: [String]
  bankName_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankAccountHistoryRecordHistoryActionType
  history_action_not: BankAccountHistoryRecordHistoryActionType
  history_action_in: [BankAccountHistoryRecordHistoryActionType]
  history_action_not_in: [BankAccountHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankAccountHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankAccountHistoryRecordsBy {
  tin_ASC
  tin_DESC
  country_ASC
  country_DESC
  routingNumber_ASC
  routingNumber_DESC
  number_ASC
  number_DESC
  currencyCode_ASC
  currencyCode_DESC
  approvedAt_ASC
  approvedAt_DESC
  importId_ASC
  importId_DESC
  territoryCode_ASC
  territoryCode_DESC
  bankName_ASC
  bankName_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankAccountHistoryRecordUpdateInput {
  organization: String
  integrationContext: String
  property: String
  tin: String
  tinMeta: JSON
  country: String
  routingNumber: String
  routingNumberMeta: JSON
  number: String
  currencyCode: String
  approvedAt: String
  approvedBy: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankAccountHistoryRecordHistoryActionType
  history_id: String
}

input BankAccountHistoryRecordsUpdateInput {
  id: ID!
  data: BankAccountHistoryRecordUpdateInput
}

input BankAccountHistoryRecordCreateInput {
  organization: String
  integrationContext: String
  property: String
  tin: String
  tinMeta: JSON
  country: String
  routingNumber: String
  routingNumberMeta: JSON
  number: String
  currencyCode: String
  approvedAt: String
  approvedBy: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankAccountHistoryRecordHistoryActionType
  history_id: String
}

input BankAccountHistoryRecordsCreateInput {
  data: BankAccountHistoryRecordCreateInput
}

input BankIntegrationContextRelateToOneInput {
  create: BankIntegrationContextCreateInput
  connect: BankIntegrationContextWhereUniqueInput
  disconnect: BankIntegrationContextWhereUniqueInput
  disconnectAll: Boolean
}

input PropertyRelateToOneInput {
  create: PropertyCreateInput
  connect: PropertyWhereUniqueInput
  disconnect: PropertyWhereUniqueInput
  disconnectAll: Boolean
}

enum BankAccountCountryType {
  en
  ru
}

""" Bank account, that will have transactions, pulled from various integrated data sources 
"""
type BankAccount {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankAccount List config, or
   2. As an alias to the field set on 'labelField' in the BankAccount List config, or
   3. As an alias to a 'name' field on the BankAccount List (if one exists), or
   4. As an alias to the 'id' field on the BankAccount List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Used data source to obtain transactions from """
  integrationContext: BankIntegrationContext

  """ Property to which this bank account is connected """
  property: Property

  """ Tax Identification Number """
  tin: String

  """ Structured metadata found by tin """
  tinMeta: JSON

  """ Country where the bank is located """
  country: BankAccountCountryType

  """ The routing transit number for the bank account. """
  routingNumber: String

  """ Structured metadata found by routing number """
  routingNumberMeta: JSON

  """ Bank account number """
  number: String

  """ Code of currency in ISO-4217 format """
  currencyCode: String

  """ When the bank account received the status of approved """
  approvedAt: String

  """ Who set the approved status for the bank account """
  approvedBy: User

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Location of the holder of this bank account. It depends on a country. In Russia it is OKTMO 
  """
  territoryCode: String

  """ Bank name """
  bankName: String

  """ Structured non-typed metadata, can be used by mini-apps or external services to store information 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankAccountWhereInput {
  AND: [BankAccountWhereInput]
  OR: [BankAccountWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  integrationContext: BankIntegrationContextWhereInput
  integrationContext_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  tinMeta: JSON
  tinMeta_not: JSON
  tinMeta_in: [JSON]
  tinMeta_not_in: [JSON]
  country: BankAccountCountryType
  country_not: BankAccountCountryType
  country_in: [BankAccountCountryType]
  country_not_in: [BankAccountCountryType]
  routingNumber: String
  routingNumber_not: String
  routingNumber_contains: String
  routingNumber_not_contains: String
  routingNumber_starts_with: String
  routingNumber_not_starts_with: String
  routingNumber_ends_with: String
  routingNumber_not_ends_with: String
  routingNumber_i: String
  routingNumber_not_i: String
  routingNumber_contains_i: String
  routingNumber_not_contains_i: String
  routingNumber_starts_with_i: String
  routingNumber_not_starts_with_i: String
  routingNumber_ends_with_i: String
  routingNumber_not_ends_with_i: String
  routingNumber_in: [String]
  routingNumber_not_in: [String]
  routingNumberMeta: JSON
  routingNumberMeta_not: JSON
  routingNumberMeta_in: [JSON]
  routingNumberMeta_not_in: [JSON]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  approvedAt: String
  approvedAt_not: String
  approvedAt_lt: String
  approvedAt_lte: String
  approvedAt_gt: String
  approvedAt_gte: String
  approvedAt_in: [String]
  approvedAt_not_in: [String]
  approvedBy: UserWhereInput
  approvedBy_is_null: Boolean
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  territoryCode: String
  territoryCode_not: String
  territoryCode_contains: String
  territoryCode_not_contains: String
  territoryCode_starts_with: String
  territoryCode_not_starts_with: String
  territoryCode_ends_with: String
  territoryCode_not_ends_with: String
  territoryCode_i: String
  territoryCode_not_i: String
  territoryCode_contains_i: String
  territoryCode_not_contains_i: String
  territoryCode_starts_with_i: String
  territoryCode_not_starts_with_i: String
  territoryCode_ends_with_i: String
  territoryCode_not_ends_with_i: String
  territoryCode_in: [String]
  territoryCode_not_in: [String]
  bankName: String
  bankName_not: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankName_i: String
  bankName_not_i: String
  bankName_contains_i: String
  bankName_not_contains_i: String
  bankName_starts_with_i: String
  bankName_not_starts_with_i: String
  bankName_ends_with_i: String
  bankName_not_ends_with_i: String
  bankName_in: [String]
  bankName_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankAccountWhereUniqueInput {
  id: ID!
}

enum SortBankAccountsBy {
  organization_ASC
  organization_DESC
  integrationContext_ASC
  integrationContext_DESC
  property_ASC
  property_DESC
  tin_ASC
  tin_DESC
  country_ASC
  country_DESC
  routingNumber_ASC
  routingNumber_DESC
  number_ASC
  number_DESC
  currencyCode_ASC
  currencyCode_DESC
  approvedAt_ASC
  approvedAt_DESC
  approvedBy_ASC
  approvedBy_DESC
  importId_ASC
  importId_DESC
  territoryCode_ASC
  territoryCode_DESC
  bankName_ASC
  bankName_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankAccountUpdateInput {
  organization: OrganizationRelateToOneInput
  integrationContext: BankIntegrationContextRelateToOneInput
  property: PropertyRelateToOneInput
  tin: String
  tinMeta: JSON
  country: BankAccountCountryType
  routingNumber: String
  routingNumberMeta: JSON
  number: String
  currencyCode: String
  approvedAt: String
  approvedBy: UserRelateToOneInput
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankAccountsUpdateInput {
  id: ID!
  data: BankAccountUpdateInput
}

input BankAccountCreateInput {
  organization: OrganizationRelateToOneInput
  integrationContext: BankIntegrationContextRelateToOneInput
  property: PropertyRelateToOneInput
  tin: String
  tinMeta: JSON
  country: BankAccountCountryType
  routingNumber: String
  routingNumberMeta: JSON
  number: String
  currencyCode: String
  approvedAt: String
  approvedBy: UserRelateToOneInput
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankAccountsCreateInput {
  data: BankAccountCreateInput
}

enum BankCategoryHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankCategoryHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankCategoryHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankCategoryHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankCategoryHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankCategoryHistoryRecord List.
  """
  _label_: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankCategoryHistoryRecordHistoryActionType
  history_id: String
}

input BankCategoryHistoryRecordWhereInput {
  AND: [BankCategoryHistoryRecordWhereInput]
  OR: [BankCategoryHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankCategoryHistoryRecordHistoryActionType
  history_action_not: BankCategoryHistoryRecordHistoryActionType
  history_action_in: [BankCategoryHistoryRecordHistoryActionType]
  history_action_not_in: [BankCategoryHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankCategoryHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankCategoryHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankCategoryHistoryRecordUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankCategoryHistoryRecordHistoryActionType
  history_id: String
}

input BankCategoryHistoryRecordsUpdateInput {
  id: ID!
  data: BankCategoryHistoryRecordUpdateInput
}

input BankCategoryHistoryRecordCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankCategoryHistoryRecordHistoryActionType
  history_id: String
}

input BankCategoryHistoryRecordsCreateInput {
  data: BankCategoryHistoryRecordCreateInput
}

""" Expenses category, that will be associated with transactions and contractors 
"""
type BankCategory {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankCategory List config, or
   2. As an alias to the field set on 'labelField' in the BankCategory List config, or
   3. As an alias to a 'name' field on the BankCategory List (if one exists), or
   4. As an alias to the 'id' field on the BankCategory List.
  """
  _label_: String

  """ Key for i18n """
  name: String
  nameNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankCategoryWhereInput {
  AND: [BankCategoryWhereInput]
  OR: [BankCategoryWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankCategoryWhereUniqueInput {
  id: ID!
}

enum SortBankCategoriesBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankCategoryUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankCategoriesUpdateInput {
  id: ID!
  data: BankCategoryUpdateInput
}

input BankCategoryCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankCategoriesCreateInput {
  data: BankCategoryCreateInput
}

enum BankCostItemHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankCostItemHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankCostItemHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankCostItemHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankCostItemHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankCostItemHistoryRecord List.
  """
  _label_: String
  name: String
  isOutcome: Boolean
  category: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankCostItemHistoryRecordHistoryActionType
  history_id: String
}

input BankCostItemHistoryRecordWhereInput {
  AND: [BankCostItemHistoryRecordWhereInput]
  OR: [BankCostItemHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  isOutcome: Boolean
  isOutcome_not: Boolean
  category: String
  category_not: String
  category_in: [String]
  category_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankCostItemHistoryRecordHistoryActionType
  history_action_not: BankCostItemHistoryRecordHistoryActionType
  history_action_in: [BankCostItemHistoryRecordHistoryActionType]
  history_action_not_in: [BankCostItemHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankCostItemHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankCostItemHistoryRecordsBy {
  name_ASC
  name_DESC
  isOutcome_ASC
  isOutcome_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankCostItemHistoryRecordUpdateInput {
  name: String
  isOutcome: Boolean
  category: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankCostItemHistoryRecordHistoryActionType
  history_id: String
}

input BankCostItemHistoryRecordsUpdateInput {
  id: ID!
  data: BankCostItemHistoryRecordUpdateInput
}

input BankCostItemHistoryRecordCreateInput {
  name: String
  isOutcome: Boolean
  category: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankCostItemHistoryRecordHistoryActionType
  history_id: String
}

input BankCostItemHistoryRecordsCreateInput {
  data: BankCostItemHistoryRecordCreateInput
}

input BankCategoryRelateToOneInput {
  create: BankCategoryCreateInput
  connect: BankCategoryWhereUniqueInput
  disconnect: BankCategoryWhereUniqueInput
  disconnectAll: Boolean
}

""" Expenses classification item for BankTransaction. Will be determined by automatic classification feature for each transaction 
"""
type BankCostItem {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankCostItem List config, or
   2. As an alias to the field set on 'labelField' in the BankCostItem List config, or
   3. As an alias to a 'name' field on the BankCostItem List (if one exists), or
   4. As an alias to the 'id' field on the BankCostItem List.
  """
  _label_: String

  """ Name of expenses item as key for i18n """
  name: String
  nameNonLocalized: String

  """ Indicator of cost item, corresponding to outcome transactions. Outcome-related cost item cannot be assigned to income-transaction 
  """
  isOutcome: Boolean

  """ Used only for grouping to display in UI. Does not used in automatic classification feature 
  """
  category: BankCategory
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankCostItemWhereInput {
  AND: [BankCostItemWhereInput]
  OR: [BankCostItemWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  isOutcome: Boolean
  isOutcome_not: Boolean
  category: BankCategoryWhereInput
  category_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankCostItemWhereUniqueInput {
  id: ID!
}

enum SortBankCostItemsBy {
  name_ASC
  name_DESC
  isOutcome_ASC
  isOutcome_DESC
  category_ASC
  category_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankCostItemUpdateInput {
  name: String
  isOutcome: Boolean
  category: BankCategoryRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankCostItemsUpdateInput {
  id: ID!
  data: BankCostItemUpdateInput
}

input BankCostItemCreateInput {
  name: String
  isOutcome: Boolean
  category: BankCategoryRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankCostItemsCreateInput {
  data: BankCostItemCreateInput
}

enum BankContractorAccountHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankContractorAccountHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankContractorAccountHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankContractorAccountHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankContractorAccountHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankContractorAccountHistoryRecord List.
  """
  _label_: String
  name: String
  organization: String
  costItem: String
  tin: String
  country: String
  routingNumber: String
  number: String
  currencyCode: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankContractorAccountHistoryRecordHistoryActionType
  history_id: String
}

input BankContractorAccountHistoryRecordWhereInput {
  AND: [BankContractorAccountHistoryRecordWhereInput]
  OR: [BankContractorAccountHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  costItem: String
  costItem_not: String
  costItem_in: [String]
  costItem_not_in: [String]
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  country: String
  country_not: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  country_i: String
  country_not_i: String
  country_contains_i: String
  country_not_contains_i: String
  country_starts_with_i: String
  country_not_starts_with_i: String
  country_ends_with_i: String
  country_not_ends_with_i: String
  country_in: [String]
  country_not_in: [String]
  routingNumber: String
  routingNumber_not: String
  routingNumber_contains: String
  routingNumber_not_contains: String
  routingNumber_starts_with: String
  routingNumber_not_starts_with: String
  routingNumber_ends_with: String
  routingNumber_not_ends_with: String
  routingNumber_i: String
  routingNumber_not_i: String
  routingNumber_contains_i: String
  routingNumber_not_contains_i: String
  routingNumber_starts_with_i: String
  routingNumber_not_starts_with_i: String
  routingNumber_ends_with_i: String
  routingNumber_not_ends_with_i: String
  routingNumber_in: [String]
  routingNumber_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_contains: String
  currencyCode_not_contains: String
  currencyCode_starts_with: String
  currencyCode_not_starts_with: String
  currencyCode_ends_with: String
  currencyCode_not_ends_with: String
  currencyCode_i: String
  currencyCode_not_i: String
  currencyCode_contains_i: String
  currencyCode_not_contains_i: String
  currencyCode_starts_with_i: String
  currencyCode_not_starts_with_i: String
  currencyCode_ends_with_i: String
  currencyCode_not_ends_with_i: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  territoryCode: String
  territoryCode_not: String
  territoryCode_contains: String
  territoryCode_not_contains: String
  territoryCode_starts_with: String
  territoryCode_not_starts_with: String
  territoryCode_ends_with: String
  territoryCode_not_ends_with: String
  territoryCode_i: String
  territoryCode_not_i: String
  territoryCode_contains_i: String
  territoryCode_not_contains_i: String
  territoryCode_starts_with_i: String
  territoryCode_not_starts_with_i: String
  territoryCode_ends_with_i: String
  territoryCode_not_ends_with_i: String
  territoryCode_in: [String]
  territoryCode_not_in: [String]
  bankName: String
  bankName_not: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankName_i: String
  bankName_not_i: String
  bankName_contains_i: String
  bankName_not_contains_i: String
  bankName_starts_with_i: String
  bankName_not_starts_with_i: String
  bankName_ends_with_i: String
  bankName_not_ends_with_i: String
  bankName_in: [String]
  bankName_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankContractorAccountHistoryRecordHistoryActionType
  history_action_not: BankContractorAccountHistoryRecordHistoryActionType
  history_action_in: [BankContractorAccountHistoryRecordHistoryActionType]
  history_action_not_in: [BankContractorAccountHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankContractorAccountHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankContractorAccountHistoryRecordsBy {
  name_ASC
  name_DESC
  tin_ASC
  tin_DESC
  country_ASC
  country_DESC
  routingNumber_ASC
  routingNumber_DESC
  number_ASC
  number_DESC
  currencyCode_ASC
  currencyCode_DESC
  importId_ASC
  importId_DESC
  territoryCode_ASC
  territoryCode_DESC
  bankName_ASC
  bankName_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankContractorAccountHistoryRecordUpdateInput {
  name: String
  organization: String
  costItem: String
  tin: String
  country: String
  routingNumber: String
  number: String
  currencyCode: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankContractorAccountHistoryRecordHistoryActionType
  history_id: String
}

input BankContractorAccountHistoryRecordsUpdateInput {
  id: ID!
  data: BankContractorAccountHistoryRecordUpdateInput
}

input BankContractorAccountHistoryRecordCreateInput {
  name: String
  organization: String
  costItem: String
  tin: String
  country: String
  routingNumber: String
  number: String
  currencyCode: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankContractorAccountHistoryRecordHistoryActionType
  history_id: String
}

input BankContractorAccountHistoryRecordsCreateInput {
  data: BankContractorAccountHistoryRecordCreateInput
}

input BankCostItemRelateToOneInput {
  create: BankCostItemCreateInput
  connect: BankCostItemWhereUniqueInput
  disconnect: BankCostItemWhereUniqueInput
  disconnectAll: Boolean
}

""" Account for external contractor, which organization is not stored in condo. Contractor is related to expenses transactions of an Organization. Will be obtained from export files with bank transactions or from banking API 
"""
type BankContractorAccount {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankContractorAccount List config, or
   2. As an alias to the field set on 'labelField' in the BankContractorAccount List config, or
   3. As an alias to a 'name' field on the BankContractorAccount List (if one exists), or
   4. As an alias to the 'id' field on the BankContractorAccount List.
  """
  _label_: String

  """ Name of contractor organization """
  name: String

  """ Technical link to property management organization, that has expenses transactions with this contractor. Used for access rights and cascade behaviour of data. Contractor organization is not stored in condo. The object will be deleted if the related organization ceases to exist 
  """
  organization: Organization

  """ Related cost item, that will determine cost items for transactions belonging to this contractor 
  """
  costItem: BankCostItem

  """ Tax Identification Number """
  tin: String

  """ Country where the bank is located """
  country: String

  """ The routing transit number for the bank account. """
  routingNumber: String

  """ Bank account number """
  number: String

  """ Code of currency in ISO-4217 format """
  currencyCode: String

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Location of the holder of this bank account. It depends on a country. In Russia it is OKTMO 
  """
  territoryCode: String

  """ Name of bank """
  bankName: String

  """ Structured non-typed metadata, can be used by mini-apps or external services to store information 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankContractorAccountWhereInput {
  AND: [BankContractorAccountWhereInput]
  OR: [BankContractorAccountWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  costItem: BankCostItemWhereInput
  costItem_is_null: Boolean
  tin: String
  tin_not: String
  tin_contains: String
  tin_not_contains: String
  tin_starts_with: String
  tin_not_starts_with: String
  tin_ends_with: String
  tin_not_ends_with: String
  tin_i: String
  tin_not_i: String
  tin_contains_i: String
  tin_not_contains_i: String
  tin_starts_with_i: String
  tin_not_starts_with_i: String
  tin_ends_with_i: String
  tin_not_ends_with_i: String
  tin_in: [String]
  tin_not_in: [String]
  country: String
  country_not: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  country_i: String
  country_not_i: String
  country_contains_i: String
  country_not_contains_i: String
  country_starts_with_i: String
  country_not_starts_with_i: String
  country_ends_with_i: String
  country_not_ends_with_i: String
  country_in: [String]
  country_not_in: [String]
  routingNumber: String
  routingNumber_not: String
  routingNumber_contains: String
  routingNumber_not_contains: String
  routingNumber_starts_with: String
  routingNumber_not_starts_with: String
  routingNumber_ends_with: String
  routingNumber_not_ends_with: String
  routingNumber_i: String
  routingNumber_not_i: String
  routingNumber_contains_i: String
  routingNumber_not_contains_i: String
  routingNumber_starts_with_i: String
  routingNumber_not_starts_with_i: String
  routingNumber_ends_with_i: String
  routingNumber_not_ends_with_i: String
  routingNumber_in: [String]
  routingNumber_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  territoryCode: String
  territoryCode_not: String
  territoryCode_contains: String
  territoryCode_not_contains: String
  territoryCode_starts_with: String
  territoryCode_not_starts_with: String
  territoryCode_ends_with: String
  territoryCode_not_ends_with: String
  territoryCode_i: String
  territoryCode_not_i: String
  territoryCode_contains_i: String
  territoryCode_not_contains_i: String
  territoryCode_starts_with_i: String
  territoryCode_not_starts_with_i: String
  territoryCode_ends_with_i: String
  territoryCode_not_ends_with_i: String
  territoryCode_in: [String]
  territoryCode_not_in: [String]
  bankName: String
  bankName_not: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankName_i: String
  bankName_not_i: String
  bankName_contains_i: String
  bankName_not_contains_i: String
  bankName_starts_with_i: String
  bankName_not_starts_with_i: String
  bankName_ends_with_i: String
  bankName_not_ends_with_i: String
  bankName_in: [String]
  bankName_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankContractorAccountWhereUniqueInput {
  id: ID!
}

enum SortBankContractorAccountsBy {
  name_ASC
  name_DESC
  organization_ASC
  organization_DESC
  costItem_ASC
  costItem_DESC
  tin_ASC
  tin_DESC
  country_ASC
  country_DESC
  routingNumber_ASC
  routingNumber_DESC
  number_ASC
  number_DESC
  currencyCode_ASC
  currencyCode_DESC
  importId_ASC
  importId_DESC
  territoryCode_ASC
  territoryCode_DESC
  bankName_ASC
  bankName_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankContractorAccountUpdateInput {
  name: String
  organization: OrganizationRelateToOneInput
  costItem: BankCostItemRelateToOneInput
  tin: String
  country: String
  routingNumber: String
  number: String
  currencyCode: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankContractorAccountsUpdateInput {
  id: ID!
  data: BankContractorAccountUpdateInput
}

input BankContractorAccountCreateInput {
  name: String
  organization: OrganizationRelateToOneInput
  costItem: BankCostItemRelateToOneInput
  tin: String
  country: String
  routingNumber: String
  number: String
  currencyCode: String
  importId: String
  territoryCode: String
  bankName: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankContractorAccountsCreateInput {
  data: BankContractorAccountCreateInput
}

enum BankIntegrationHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankIntegrationHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankIntegrationHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankIntegrationHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankIntegrationHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankIntegrationHistoryRecord List.
  """
  _label_: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input BankIntegrationHistoryRecordWhereInput {
  AND: [BankIntegrationHistoryRecordWhereInput]
  OR: [BankIntegrationHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankIntegrationHistoryRecordHistoryActionType
  history_action_not: BankIntegrationHistoryRecordHistoryActionType
  history_action_in: [BankIntegrationHistoryRecordHistoryActionType]
  history_action_not_in: [BankIntegrationHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankIntegrationHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankIntegrationHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankIntegrationHistoryRecordUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input BankIntegrationHistoryRecordsUpdateInput {
  id: ID!
  data: BankIntegrationHistoryRecordUpdateInput
}

input BankIntegrationHistoryRecordCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input BankIntegrationHistoryRecordsCreateInput {
  data: BankIntegrationHistoryRecordCreateInput
}

""" Determines way of obtaining banking data """
type BankIntegration {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankIntegration List config, or
   2. As an alias to the field set on 'labelField' in the BankIntegration List config, or
   3. As an alias to a 'name' field on the BankIntegration List (if one exists), or
   4. As an alias to the 'id' field on the BankIntegration List.
  """
  _label_: String

  """ Name of integration """
  name: String
  nameNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankIntegrationWhereInput {
  AND: [BankIntegrationWhereInput]
  OR: [BankIntegrationWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankIntegrationWhereUniqueInput {
  id: ID!
}

enum SortBankIntegrationsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankIntegrationUpdateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankIntegrationsUpdateInput {
  id: ID!
  data: BankIntegrationUpdateInput
}

input BankIntegrationCreateInput {
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankIntegrationsCreateInput {
  data: BankIntegrationCreateInput
}

enum BankIntegrationContextHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankIntegrationContextHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankIntegrationContextHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankIntegrationContextHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankIntegrationContextHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankIntegrationContextHistoryRecord List.
  """
  _label_: String
  integration: String
  organization: String
  enabled: Boolean
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankIntegrationContextHistoryRecordHistoryActionType
  history_id: String
}

input BankIntegrationContextHistoryRecordWhereInput {
  AND: [BankIntegrationContextHistoryRecordWhereInput]
  OR: [BankIntegrationContextHistoryRecordWhereInput]
  integration: String
  integration_not: String
  integration_in: [String]
  integration_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  enabled: Boolean
  enabled_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankIntegrationContextHistoryRecordHistoryActionType
  history_action_not: BankIntegrationContextHistoryRecordHistoryActionType
  history_action_in: [BankIntegrationContextHistoryRecordHistoryActionType]
  history_action_not_in: [BankIntegrationContextHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankIntegrationContextHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankIntegrationContextHistoryRecordsBy {
  enabled_ASC
  enabled_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankIntegrationContextHistoryRecordUpdateInput {
  integration: String
  organization: String
  enabled: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankIntegrationContextHistoryRecordHistoryActionType
  history_id: String
}

input BankIntegrationContextHistoryRecordsUpdateInput {
  id: ID!
  data: BankIntegrationContextHistoryRecordUpdateInput
}

input BankIntegrationContextHistoryRecordCreateInput {
  integration: String
  organization: String
  enabled: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankIntegrationContextHistoryRecordHistoryActionType
  history_id: String
}

input BankIntegrationContextHistoryRecordsCreateInput {
  data: BankIntegrationContextHistoryRecordCreateInput
}

input BankIntegrationRelateToOneInput {
  create: BankIntegrationCreateInput
  connect: BankIntegrationWhereUniqueInput
  disconnect: BankIntegrationWhereUniqueInput
  disconnectAll: Boolean
}

""" Usage of specific integration by specific organization. Contains summary information about last synchronization with data source (integration) 
"""
type BankIntegrationContext {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankIntegrationContext List config, or
   2. As an alias to the field set on 'labelField' in the BankIntegrationContext List config, or
   3. As an alias to a 'name' field on the BankIntegrationContext List (if one exists), or
   4. As an alias to the 'id' field on the BankIntegrationContext List.
  """
  _label_: String

  """ Data source, used for this integration. """
  integration: BankIntegration

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Controls availability of sync operation for this integration. Can be disabled by support in some cases, when client dont wants to have automatic synchronization via API, for example 
  """
  enabled: Boolean

  """ Structured non-typed metadata, can be used by mini-apps or external services to store information 
  """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankIntegrationContextWhereInput {
  AND: [BankIntegrationContextWhereInput]
  OR: [BankIntegrationContextWhereInput]
  integration: BankIntegrationWhereInput
  integration_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  enabled: Boolean
  enabled_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankIntegrationContextWhereUniqueInput {
  id: ID!
}

enum SortBankIntegrationContextsBy {
  integration_ASC
  integration_DESC
  organization_ASC
  organization_DESC
  enabled_ASC
  enabled_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankIntegrationContextUpdateInput {
  integration: BankIntegrationRelateToOneInput
  organization: OrganizationRelateToOneInput
  enabled: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankIntegrationContextsUpdateInput {
  id: ID!
  data: BankIntegrationContextUpdateInput
}

input BankIntegrationContextCreateInput {
  integration: BankIntegrationRelateToOneInput
  organization: OrganizationRelateToOneInput
  enabled: Boolean
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankIntegrationContextsCreateInput {
  data: BankIntegrationContextCreateInput
}

enum BankTransactionHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type BankTransactionHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankTransactionHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the BankTransactionHistoryRecord List config, or
   3. As an alias to a 'name' field on the BankTransactionHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the BankTransactionHistoryRecord List.
  """
  _label_: String
  account: String
  integrationContext: String
  contractorAccount: String
  costItem: String
  organization: String
  number: String
  date: String
  amount: String
  isOutcome: Boolean
  currencyCode: String
  purpose: String
  meta: JSON
  importId: String
  importRemoteSystem: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankTransactionHistoryRecordHistoryActionType
  history_id: String
}

input BankTransactionHistoryRecordWhereInput {
  AND: [BankTransactionHistoryRecordWhereInput]
  OR: [BankTransactionHistoryRecordWhereInput]
  account: String
  account_not: String
  account_in: [String]
  account_not_in: [String]
  integrationContext: String
  integrationContext_not: String
  integrationContext_in: [String]
  integrationContext_not_in: [String]
  contractorAccount: String
  contractorAccount_not: String
  contractorAccount_in: [String]
  contractorAccount_not_in: [String]
  costItem: String
  costItem_not: String
  costItem_in: [String]
  costItem_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  date: String
  date_not: String
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_in: [String]
  date_not_in: [String]
  amount: String
  amount_not: String
  amount_lt: String
  amount_lte: String
  amount_gt: String
  amount_gte: String
  amount_in: [String]
  amount_not_in: [String]
  isOutcome: Boolean
  isOutcome_not: Boolean
  currencyCode: String
  currencyCode_not: String
  currencyCode_contains: String
  currencyCode_not_contains: String
  currencyCode_starts_with: String
  currencyCode_not_starts_with: String
  currencyCode_ends_with: String
  currencyCode_not_ends_with: String
  currencyCode_i: String
  currencyCode_not_i: String
  currencyCode_contains_i: String
  currencyCode_not_contains_i: String
  currencyCode_starts_with_i: String
  currencyCode_not_starts_with_i: String
  currencyCode_ends_with_i: String
  currencyCode_not_ends_with_i: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  purpose: String
  purpose_not: String
  purpose_contains: String
  purpose_not_contains: String
  purpose_starts_with: String
  purpose_not_starts_with: String
  purpose_ends_with: String
  purpose_not_ends_with: String
  purpose_i: String
  purpose_not_i: String
  purpose_contains_i: String
  purpose_not_contains_i: String
  purpose_starts_with_i: String
  purpose_not_starts_with_i: String
  purpose_ends_with_i: String
  purpose_not_ends_with_i: String
  purpose_in: [String]
  purpose_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  importRemoteSystem: String
  importRemoteSystem_not: String
  importRemoteSystem_contains: String
  importRemoteSystem_not_contains: String
  importRemoteSystem_starts_with: String
  importRemoteSystem_not_starts_with: String
  importRemoteSystem_ends_with: String
  importRemoteSystem_not_ends_with: String
  importRemoteSystem_i: String
  importRemoteSystem_not_i: String
  importRemoteSystem_contains_i: String
  importRemoteSystem_not_contains_i: String
  importRemoteSystem_starts_with_i: String
  importRemoteSystem_not_starts_with_i: String
  importRemoteSystem_ends_with_i: String
  importRemoteSystem_not_ends_with_i: String
  importRemoteSystem_in: [String]
  importRemoteSystem_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: BankTransactionHistoryRecordHistoryActionType
  history_action_not: BankTransactionHistoryRecordHistoryActionType
  history_action_in: [BankTransactionHistoryRecordHistoryActionType]
  history_action_not_in: [BankTransactionHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input BankTransactionHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortBankTransactionHistoryRecordsBy {
  number_ASC
  number_DESC
  date_ASC
  date_DESC
  amount_ASC
  amount_DESC
  isOutcome_ASC
  isOutcome_DESC
  currencyCode_ASC
  currencyCode_DESC
  purpose_ASC
  purpose_DESC
  importId_ASC
  importId_DESC
  importRemoteSystem_ASC
  importRemoteSystem_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input BankTransactionHistoryRecordUpdateInput {
  account: String
  integrationContext: String
  contractorAccount: String
  costItem: String
  organization: String
  number: String
  date: String
  amount: String
  isOutcome: Boolean
  currencyCode: String
  purpose: String
  meta: JSON
  importId: String
  importRemoteSystem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankTransactionHistoryRecordHistoryActionType
  history_id: String
}

input BankTransactionHistoryRecordsUpdateInput {
  id: ID!
  data: BankTransactionHistoryRecordUpdateInput
}

input BankTransactionHistoryRecordCreateInput {
  account: String
  integrationContext: String
  contractorAccount: String
  costItem: String
  organization: String
  number: String
  date: String
  amount: String
  isOutcome: Boolean
  currencyCode: String
  purpose: String
  meta: JSON
  importId: String
  importRemoteSystem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: BankTransactionHistoryRecordHistoryActionType
  history_id: String
}

input BankTransactionHistoryRecordsCreateInput {
  data: BankTransactionHistoryRecordCreateInput
}

input BankAccountRelateToOneInput {
  create: BankAccountCreateInput
  connect: BankAccountWhereUniqueInput
  disconnect: BankAccountWhereUniqueInput
  disconnectAll: Boolean
}

input BankContractorAccountRelateToOneInput {
  create: BankContractorAccountCreateInput
  connect: BankContractorAccountWhereUniqueInput
  disconnect: BankContractorAccountWhereUniqueInput
  disconnectAll: Boolean
}

""" Transaction related to costs of Organization with BankAccount. Full fields set from data import will be stored in "meta" 
"""
type BankTransaction {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the BankTransaction List config, or
   2. As an alias to the field set on 'labelField' in the BankTransaction List config, or
   3. As an alias to a 'name' field on the BankTransaction List (if one exists), or
   4. As an alias to the 'id' field on the BankTransaction List.
  """
  _label_: String

  """ Related BankAccount of Organization which payed """
  account: BankAccount

  """ Data source from which this transaction was created """
  integrationContext: BankIntegrationContext

  """ Related account of contractor, which has received the payment via this transaction 
  """
  contractorAccount: BankContractorAccount

  """ Related costs class """
  costItem: BankCostItem

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Number of transaction, obtained from external system """
  number: String

  """ When payment order was created """
  date: String

  """ Amount of transaction in specified currency. Always positive number. Look at "isOutcome" field to determine whether this transaction commits negative or positive change to balance 
  """
  amount: String

  """ Indicator of outcome transaction which commits negative change to balance 
  """
  isOutcome: Boolean

  """ Code of currency in ISO-4217 format """
  currencyCode: String

  """ Textual description of payment purpose in free form """
  purpose: String

  """ Stores data, obtained from external source """
  meta: JSON

  """ Identifier of corresponding record in external system, from that this record was copied 
  """
  importId: String

  """ Name of external system, from that this record was copied """
  importRemoteSystem: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input BankTransactionWhereInput {
  AND: [BankTransactionWhereInput]
  OR: [BankTransactionWhereInput]
  account: BankAccountWhereInput
  account_is_null: Boolean
  integrationContext: BankIntegrationContextWhereInput
  integrationContext_is_null: Boolean
  contractorAccount: BankContractorAccountWhereInput
  contractorAccount_is_null: Boolean
  costItem: BankCostItemWhereInput
  costItem_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  date: String
  date_not: String
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_in: [String]
  date_not_in: [String]
  amount: String
  amount_not: String
  amount_lt: String
  amount_lte: String
  amount_gt: String
  amount_gte: String
  amount_in: [String]
  amount_not_in: [String]
  isOutcome: Boolean
  isOutcome_not: Boolean
  currencyCode: String
  currencyCode_not: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  purpose: String
  purpose_not: String
  purpose_contains: String
  purpose_not_contains: String
  purpose_starts_with: String
  purpose_not_starts_with: String
  purpose_ends_with: String
  purpose_not_ends_with: String
  purpose_i: String
  purpose_not_i: String
  purpose_contains_i: String
  purpose_not_contains_i: String
  purpose_starts_with_i: String
  purpose_not_starts_with_i: String
  purpose_ends_with_i: String
  purpose_not_ends_with_i: String
  purpose_in: [String]
  purpose_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  importRemoteSystem: String
  importRemoteSystem_not: String
  importRemoteSystem_contains: String
  importRemoteSystem_not_contains: String
  importRemoteSystem_starts_with: String
  importRemoteSystem_not_starts_with: String
  importRemoteSystem_ends_with: String
  importRemoteSystem_not_ends_with: String
  importRemoteSystem_i: String
  importRemoteSystem_not_i: String
  importRemoteSystem_contains_i: String
  importRemoteSystem_not_contains_i: String
  importRemoteSystem_starts_with_i: String
  importRemoteSystem_not_starts_with_i: String
  importRemoteSystem_ends_with_i: String
  importRemoteSystem_not_ends_with_i: String
  importRemoteSystem_in: [String]
  importRemoteSystem_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input BankTransactionWhereUniqueInput {
  id: ID!
}

enum SortBankTransactionsBy {
  account_ASC
  account_DESC
  integrationContext_ASC
  integrationContext_DESC
  contractorAccount_ASC
  contractorAccount_DESC
  costItem_ASC
  costItem_DESC
  organization_ASC
  organization_DESC
  number_ASC
  number_DESC
  date_ASC
  date_DESC
  amount_ASC
  amount_DESC
  isOutcome_ASC
  isOutcome_DESC
  currencyCode_ASC
  currencyCode_DESC
  purpose_ASC
  purpose_DESC
  importId_ASC
  importId_DESC
  importRemoteSystem_ASC
  importRemoteSystem_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input BankTransactionUpdateInput {
  account: BankAccountRelateToOneInput
  integrationContext: BankIntegrationContextRelateToOneInput
  contractorAccount: BankContractorAccountRelateToOneInput
  costItem: BankCostItemRelateToOneInput
  organization: OrganizationRelateToOneInput
  number: String
  date: String
  amount: String
  isOutcome: Boolean
  currencyCode: String
  purpose: String
  meta: JSON
  importId: String
  importRemoteSystem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankTransactionsUpdateInput {
  id: ID!
  data: BankTransactionUpdateInput
}

input BankTransactionCreateInput {
  account: BankAccountRelateToOneInput
  integrationContext: BankIntegrationContextRelateToOneInput
  contractorAccount: BankContractorAccountRelateToOneInput
  costItem: BankCostItemRelateToOneInput
  organization: OrganizationRelateToOneInput
  number: String
  date: String
  amount: String
  isOutcome: Boolean
  currencyCode: String
  purpose: String
  meta: JSON
  importId: String
  importRemoteSystem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input BankTransactionsCreateInput {
  data: BankTransactionCreateInput
}

enum TicketHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketHistoryRecord List.
  """
  _label_: String
  organization: String
  statusReopenedCounter: Int
  reviewValue: String
  reviewComment: String
  statusUpdatedAt: String
  completedAt: String
  lastCommentAt: String
  lastResidentCommentAt: String
  statusReason: String
  status: String
  deadline: String
  order: Int
  number: JSON
  client: String
  contact: String
  clientName: String
  clientEmail: String
  clientPhone: String
  assignee: String
  executor: String
  categoryClassifier: String
  placeClassifier: String
  problemClassifier: String
  classifier: String
  isAutoClassified: Boolean
  details: String
  related: String
  isPaid: Boolean
  isEmergency: Boolean
  isWarranty: Boolean
  isResidentTicket: Boolean
  canReadByResident: Boolean
  meta: JSON
  property: String
  propertyAddress: String
  propertyAddressMeta: JSON
  sectionName: String
  sectionType: String
  floorName: String
  unitName: String
  unitType: String
  source: String
  sourceMeta: JSON
  deferredUntil: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketHistoryRecordHistoryActionType
  history_id: String
}

input TicketHistoryRecordWhereInput {
  AND: [TicketHistoryRecordWhereInput]
  OR: [TicketHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  statusReopenedCounter: Int
  statusReopenedCounter_not: Int
  statusReopenedCounter_lt: Int
  statusReopenedCounter_lte: Int
  statusReopenedCounter_gt: Int
  statusReopenedCounter_gte: Int
  statusReopenedCounter_in: [Int]
  statusReopenedCounter_not_in: [Int]
  reviewValue: String
  reviewValue_not: String
  reviewValue_contains: String
  reviewValue_not_contains: String
  reviewValue_starts_with: String
  reviewValue_not_starts_with: String
  reviewValue_ends_with: String
  reviewValue_not_ends_with: String
  reviewValue_i: String
  reviewValue_not_i: String
  reviewValue_contains_i: String
  reviewValue_not_contains_i: String
  reviewValue_starts_with_i: String
  reviewValue_not_starts_with_i: String
  reviewValue_ends_with_i: String
  reviewValue_not_ends_with_i: String
  reviewValue_in: [String]
  reviewValue_not_in: [String]
  reviewComment: String
  reviewComment_not: String
  reviewComment_contains: String
  reviewComment_not_contains: String
  reviewComment_starts_with: String
  reviewComment_not_starts_with: String
  reviewComment_ends_with: String
  reviewComment_not_ends_with: String
  reviewComment_i: String
  reviewComment_not_i: String
  reviewComment_contains_i: String
  reviewComment_not_contains_i: String
  reviewComment_starts_with_i: String
  reviewComment_not_starts_with_i: String
  reviewComment_ends_with_i: String
  reviewComment_not_ends_with_i: String
  reviewComment_in: [String]
  reviewComment_not_in: [String]
  statusUpdatedAt: String
  statusUpdatedAt_not: String
  statusUpdatedAt_lt: String
  statusUpdatedAt_lte: String
  statusUpdatedAt_gt: String
  statusUpdatedAt_gte: String
  statusUpdatedAt_in: [String]
  statusUpdatedAt_not_in: [String]
  completedAt: String
  completedAt_not: String
  completedAt_lt: String
  completedAt_lte: String
  completedAt_gt: String
  completedAt_gte: String
  completedAt_in: [String]
  completedAt_not_in: [String]
  lastCommentAt: String
  lastCommentAt_not: String
  lastCommentAt_lt: String
  lastCommentAt_lte: String
  lastCommentAt_gt: String
  lastCommentAt_gte: String
  lastCommentAt_in: [String]
  lastCommentAt_not_in: [String]
  lastResidentCommentAt: String
  lastResidentCommentAt_not: String
  lastResidentCommentAt_lt: String
  lastResidentCommentAt_lte: String
  lastResidentCommentAt_gt: String
  lastResidentCommentAt_gte: String
  lastResidentCommentAt_in: [String]
  lastResidentCommentAt_not_in: [String]
  statusReason: String
  statusReason_not: String
  statusReason_contains: String
  statusReason_not_contains: String
  statusReason_starts_with: String
  statusReason_not_starts_with: String
  statusReason_ends_with: String
  statusReason_not_ends_with: String
  statusReason_i: String
  statusReason_not_i: String
  statusReason_contains_i: String
  statusReason_not_contains_i: String
  statusReason_starts_with_i: String
  statusReason_not_starts_with_i: String
  statusReason_ends_with_i: String
  statusReason_not_ends_with_i: String
  statusReason_in: [String]
  statusReason_not_in: [String]
  status: String
  status_not: String
  status_in: [String]
  status_not_in: [String]
  deadline: String
  deadline_not: String
  deadline_lt: String
  deadline_lte: String
  deadline_gt: String
  deadline_gte: String
  deadline_in: [String]
  deadline_not_in: [String]
  order: Int
  order_not: Int
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int]
  order_not_in: [Int]
  number: JSON
  number_not: JSON
  number_in: [JSON]
  number_not_in: [JSON]
  client: String
  client_not: String
  client_in: [String]
  client_not_in: [String]
  contact: String
  contact_not: String
  contact_in: [String]
  contact_not_in: [String]
  clientName: String
  clientName_not: String
  clientName_contains: String
  clientName_not_contains: String
  clientName_starts_with: String
  clientName_not_starts_with: String
  clientName_ends_with: String
  clientName_not_ends_with: String
  clientName_i: String
  clientName_not_i: String
  clientName_contains_i: String
  clientName_not_contains_i: String
  clientName_starts_with_i: String
  clientName_not_starts_with_i: String
  clientName_ends_with_i: String
  clientName_not_ends_with_i: String
  clientName_in: [String]
  clientName_not_in: [String]
  clientEmail: String
  clientEmail_not: String
  clientEmail_contains: String
  clientEmail_not_contains: String
  clientEmail_starts_with: String
  clientEmail_not_starts_with: String
  clientEmail_ends_with: String
  clientEmail_not_ends_with: String
  clientEmail_i: String
  clientEmail_not_i: String
  clientEmail_contains_i: String
  clientEmail_not_contains_i: String
  clientEmail_starts_with_i: String
  clientEmail_not_starts_with_i: String
  clientEmail_ends_with_i: String
  clientEmail_not_ends_with_i: String
  clientEmail_in: [String]
  clientEmail_not_in: [String]
  clientPhone: String
  clientPhone_not: String
  clientPhone_contains: String
  clientPhone_not_contains: String
  clientPhone_starts_with: String
  clientPhone_not_starts_with: String
  clientPhone_ends_with: String
  clientPhone_not_ends_with: String
  clientPhone_i: String
  clientPhone_not_i: String
  clientPhone_contains_i: String
  clientPhone_not_contains_i: String
  clientPhone_starts_with_i: String
  clientPhone_not_starts_with_i: String
  clientPhone_ends_with_i: String
  clientPhone_not_ends_with_i: String
  clientPhone_in: [String]
  clientPhone_not_in: [String]
  assignee: String
  assignee_not: String
  assignee_in: [String]
  assignee_not_in: [String]
  executor: String
  executor_not: String
  executor_in: [String]
  executor_not_in: [String]
  categoryClassifier: String
  categoryClassifier_not: String
  categoryClassifier_in: [String]
  categoryClassifier_not_in: [String]
  placeClassifier: String
  placeClassifier_not: String
  placeClassifier_in: [String]
  placeClassifier_not_in: [String]
  problemClassifier: String
  problemClassifier_not: String
  problemClassifier_in: [String]
  problemClassifier_not_in: [String]
  classifier: String
  classifier_not: String
  classifier_in: [String]
  classifier_not_in: [String]
  isAutoClassified: Boolean
  isAutoClassified_not: Boolean
  details: String
  details_not: String
  details_contains: String
  details_not_contains: String
  details_starts_with: String
  details_not_starts_with: String
  details_ends_with: String
  details_not_ends_with: String
  details_i: String
  details_not_i: String
  details_contains_i: String
  details_not_contains_i: String
  details_starts_with_i: String
  details_not_starts_with_i: String
  details_ends_with_i: String
  details_not_ends_with_i: String
  details_in: [String]
  details_not_in: [String]
  related: String
  related_not: String
  related_in: [String]
  related_not_in: [String]
  isPaid: Boolean
  isPaid_not: Boolean
  isEmergency: Boolean
  isEmergency_not: Boolean
  isWarranty: Boolean
  isWarranty_not: Boolean
  isResidentTicket: Boolean
  isResidentTicket_not: Boolean
  canReadByResident: Boolean
  canReadByResident_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  propertyAddress: String
  propertyAddress_not: String
  propertyAddress_contains: String
  propertyAddress_not_contains: String
  propertyAddress_starts_with: String
  propertyAddress_not_starts_with: String
  propertyAddress_ends_with: String
  propertyAddress_not_ends_with: String
  propertyAddress_i: String
  propertyAddress_not_i: String
  propertyAddress_contains_i: String
  propertyAddress_not_contains_i: String
  propertyAddress_starts_with_i: String
  propertyAddress_not_starts_with_i: String
  propertyAddress_ends_with_i: String
  propertyAddress_not_ends_with_i: String
  propertyAddress_in: [String]
  propertyAddress_not_in: [String]
  propertyAddressMeta: JSON
  propertyAddressMeta_not: JSON
  propertyAddressMeta_in: [JSON]
  propertyAddressMeta_not_in: [JSON]
  sectionName: String
  sectionName_not: String
  sectionName_contains: String
  sectionName_not_contains: String
  sectionName_starts_with: String
  sectionName_not_starts_with: String
  sectionName_ends_with: String
  sectionName_not_ends_with: String
  sectionName_i: String
  sectionName_not_i: String
  sectionName_contains_i: String
  sectionName_not_contains_i: String
  sectionName_starts_with_i: String
  sectionName_not_starts_with_i: String
  sectionName_ends_with_i: String
  sectionName_not_ends_with_i: String
  sectionName_in: [String]
  sectionName_not_in: [String]
  sectionType: String
  sectionType_not: String
  sectionType_contains: String
  sectionType_not_contains: String
  sectionType_starts_with: String
  sectionType_not_starts_with: String
  sectionType_ends_with: String
  sectionType_not_ends_with: String
  sectionType_i: String
  sectionType_not_i: String
  sectionType_contains_i: String
  sectionType_not_contains_i: String
  sectionType_starts_with_i: String
  sectionType_not_starts_with_i: String
  sectionType_ends_with_i: String
  sectionType_not_ends_with_i: String
  sectionType_in: [String]
  sectionType_not_in: [String]
  floorName: String
  floorName_not: String
  floorName_contains: String
  floorName_not_contains: String
  floorName_starts_with: String
  floorName_not_starts_with: String
  floorName_ends_with: String
  floorName_not_ends_with: String
  floorName_i: String
  floorName_not_i: String
  floorName_contains_i: String
  floorName_not_contains_i: String
  floorName_starts_with_i: String
  floorName_not_starts_with_i: String
  floorName_ends_with_i: String
  floorName_not_ends_with_i: String
  floorName_in: [String]
  floorName_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_contains: String
  unitType_not_contains: String
  unitType_starts_with: String
  unitType_not_starts_with: String
  unitType_ends_with: String
  unitType_not_ends_with: String
  unitType_i: String
  unitType_not_i: String
  unitType_contains_i: String
  unitType_not_contains_i: String
  unitType_starts_with_i: String
  unitType_not_starts_with_i: String
  unitType_ends_with_i: String
  unitType_not_ends_with_i: String
  unitType_in: [String]
  unitType_not_in: [String]
  source: String
  source_not: String
  source_in: [String]
  source_not_in: [String]
  sourceMeta: JSON
  sourceMeta_not: JSON
  sourceMeta_in: [JSON]
  sourceMeta_not_in: [JSON]
  deferredUntil: String
  deferredUntil_not: String
  deferredUntil_lt: String
  deferredUntil_lte: String
  deferredUntil_gt: String
  deferredUntil_gte: String
  deferredUntil_in: [String]
  deferredUntil_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketHistoryRecordHistoryActionType
  history_action_not: TicketHistoryRecordHistoryActionType
  history_action_in: [TicketHistoryRecordHistoryActionType]
  history_action_not_in: [TicketHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketHistoryRecordsBy {
  statusReopenedCounter_ASC
  statusReopenedCounter_DESC
  reviewValue_ASC
  reviewValue_DESC
  reviewComment_ASC
  reviewComment_DESC
  statusUpdatedAt_ASC
  statusUpdatedAt_DESC
  completedAt_ASC
  completedAt_DESC
  lastCommentAt_ASC
  lastCommentAt_DESC
  lastResidentCommentAt_ASC
  lastResidentCommentAt_DESC
  statusReason_ASC
  statusReason_DESC
  deadline_ASC
  deadline_DESC
  order_ASC
  order_DESC
  clientName_ASC
  clientName_DESC
  clientEmail_ASC
  clientEmail_DESC
  clientPhone_ASC
  clientPhone_DESC
  isAutoClassified_ASC
  isAutoClassified_DESC
  details_ASC
  details_DESC
  isPaid_ASC
  isPaid_DESC
  isEmergency_ASC
  isEmergency_DESC
  isWarranty_ASC
  isWarranty_DESC
  isResidentTicket_ASC
  isResidentTicket_DESC
  canReadByResident_ASC
  canReadByResident_DESC
  propertyAddress_ASC
  propertyAddress_DESC
  sectionName_ASC
  sectionName_DESC
  sectionType_ASC
  sectionType_DESC
  floorName_ASC
  floorName_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  deferredUntil_ASC
  deferredUntil_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketHistoryRecordUpdateInput {
  organization: String
  statusReopenedCounter: Int
  reviewValue: String
  reviewComment: String
  statusUpdatedAt: String
  completedAt: String
  lastCommentAt: String
  lastResidentCommentAt: String
  statusReason: String
  status: String
  deadline: String
  order: Int
  number: JSON
  client: String
  contact: String
  clientName: String
  clientEmail: String
  clientPhone: String
  assignee: String
  executor: String
  categoryClassifier: String
  placeClassifier: String
  problemClassifier: String
  classifier: String
  isAutoClassified: Boolean
  details: String
  related: String
  isPaid: Boolean
  isEmergency: Boolean
  isWarranty: Boolean
  isResidentTicket: Boolean
  canReadByResident: Boolean
  meta: JSON
  property: String
  propertyAddress: String
  propertyAddressMeta: JSON
  sectionName: String
  sectionType: String
  floorName: String
  unitName: String
  unitType: String
  source: String
  sourceMeta: JSON
  deferredUntil: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketHistoryRecordHistoryActionType
  history_id: String
}

input TicketHistoryRecordsUpdateInput {
  id: ID!
  data: TicketHistoryRecordUpdateInput
}

input TicketHistoryRecordCreateInput {
  organization: String
  statusReopenedCounter: Int
  reviewValue: String
  reviewComment: String
  statusUpdatedAt: String
  completedAt: String
  lastCommentAt: String
  lastResidentCommentAt: String
  statusReason: String
  status: String
  deadline: String
  order: Int
  number: JSON
  client: String
  contact: String
  clientName: String
  clientEmail: String
  clientPhone: String
  assignee: String
  executor: String
  categoryClassifier: String
  placeClassifier: String
  problemClassifier: String
  classifier: String
  isAutoClassified: Boolean
  details: String
  related: String
  isPaid: Boolean
  isEmergency: Boolean
  isWarranty: Boolean
  isResidentTicket: Boolean
  canReadByResident: Boolean
  meta: JSON
  property: String
  propertyAddress: String
  propertyAddressMeta: JSON
  sectionName: String
  sectionType: String
  floorName: String
  unitName: String
  unitType: String
  source: String
  sourceMeta: JSON
  deferredUntil: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketHistoryRecordHistoryActionType
  history_id: String
}

input TicketHistoryRecordsCreateInput {
  data: TicketHistoryRecordCreateInput
}

enum TicketReviewValueType {
  bad
  good
  returned
}

input TicketStatusRelateToOneInput {
  create: TicketStatusCreateInput
  connect: TicketStatusWhereUniqueInput
  disconnect: TicketStatusWhereUniqueInput
  disconnectAll: Boolean
}

input ContactRelateToOneInput {
  create: ContactCreateInput
  connect: ContactWhereUniqueInput
  disconnect: ContactWhereUniqueInput
  disconnectAll: Boolean
}

input TicketPlaceClassifierRelateToOneInput {
  create: TicketPlaceClassifierCreateInput
  connect: TicketPlaceClassifierWhereUniqueInput
  disconnect: TicketPlaceClassifierWhereUniqueInput
  disconnectAll: Boolean
}

input TicketProblemClassifierRelateToOneInput {
  create: TicketProblemClassifierCreateInput
  connect: TicketProblemClassifierWhereUniqueInput
  disconnect: TicketProblemClassifierWhereUniqueInput
  disconnectAll: Boolean
}

input TicketClassifierRelateToOneInput {
  create: TicketClassifierCreateInput
  connect: TicketClassifierWhereUniqueInput
  disconnect: TicketClassifierWhereUniqueInput
  disconnectAll: Boolean
}

input TicketRelateToOneInput {
  create: TicketCreateInput
  connect: TicketWhereUniqueInput
  disconnect: TicketWhereUniqueInput
  disconnectAll: Boolean
}

input TicketSourceRelateToOneInput {
  create: TicketSourceCreateInput
  connect: TicketSourceWhereUniqueInput
  disconnect: TicketSourceWhereUniqueInput
  disconnectAll: Boolean
}

""" Users request or contact with the user. It has fields `clientName`, `clientPhone`, `clientEmail`, which stores contact information at the moment of creating or updating. Values of these fields are independent from related entities, like Contact, Resident etc. If by some reason related entities will be deleted, unavailable or will change its contact information, these fields will stay unchanged.So, by creating a new ticket with connection to some contact entity (Contact, Resident), these fields will be populated by its contact information if other values are not explicitly provided. 
"""
type Ticket {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Ticket List config, or
   2. As an alias to the field set on 'labelField' in the Ticket List config, or
   3. As an alias to a 'name' field on the Ticket List (if one exists), or
   4. As an alias to the 'id' field on the Ticket List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Counter showing the number of changes `status` to `new_or_reopened` """
  statusReopenedCounter: Int

  """ Review of the ticket by a resident on a 2-point scale. 0 – ticket returned, 1 – bad review, 2 – good review 
  """
  reviewValue: TicketReviewValueType

  """ Resident's comment on ticket review """
  reviewComment: String

  """ Status updated at time """
  statusUpdatedAt: String

  """ When status of the ticket was changed to completed """
  completedAt: String

  """ Last comment time in ticket """
  lastCommentAt: String

  """ Last resident comment time in ticket """
  lastResidentCommentAt: String

  """ Text reason for status changes. Sometimes you should describe the reason why you change the `status` 
  """
  statusReason: String

  """ Status is the step of the ticket processing workflow. Companies may have different ticket processing workflows 
  """
  status: TicketStatus

  """ Time after which the ticket must be completed """
  deadline: String

  """ Field required for specific sorting of model objects """
  order: Int

  """ Autogenerated ticket human readable ID """
  number: Int

  """ Inhabitant/customer/person who has a problem or want to improve/order something. Not null if we have a registered client. This field indicates, that the Ticket is visible to a Resident and it has access to it. This field will be set to User of corresponding Resident in following cases: 1) the Ticket was created by Resident from mobile app;2) the Ticket was created by OrganizationEmployee with phone number, that matches some Resident;3) a Resident was registered after this Ticket was created and the Resident have the same phone number as in this Ticket, so this Ticket will be automatically connected to it. 
  """
  client: User

  """ Contact, that reported issue, described in this ticket """
  contact: Contact

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientName: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientEmail: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientPhone: String

  """ Assignee/responsible employee/user who must ensure that the issue is fulfilled 
  """
  assignee: User

  """ Executor employee/user who perform the issue """
  executor: User

  """ @deprecated """
  categoryClassifier: TicketCategoryClassifier

  """ @deprecated """
  placeClassifier: TicketPlaceClassifier

  """ @deprecated """
  problemClassifier: TicketProblemClassifier

  """ Valid combination of 3 classifiers """
  classifier: TicketClassifier

  """ Indicates that ticket has been classified automatically without human confirmation 
  """
  isAutoClassified: Boolean

  """ Text description of the issue. Maybe written by a user or an operator 
  """
  details: String

  """ Sometimes, it is important for us to show related issues. For example, to show related issues 
  """
  related: Ticket

  """ Indicates the ticket is paid """
  isPaid: Boolean

  """ Indicates the ticket is emergency """
  isEmergency: Boolean

  """ Indicates the ticket is warranty """
  isWarranty: Boolean

  """ Determines who the ticket was created for: for a resident or not for a resident 
  """
  isResidentTicket: Boolean

  """ Determines if a resident in the mobile app can see the ticket created in crm 
  """
  canReadByResident: Boolean

  """ Extra analytics not related to remote system """
  meta: JSON

  """ Property related to the Ticket """
  property: Property

  """ Address of property, which synced with property and displayed, if property is deleted 
  """
  propertyAddress: String

  """ Address meta of property, which synced with property and used to form view of address, if property is deleted 
  """
  propertyAddressMeta: AddressMetaField

  """ Section name/number of an apartment building (property). You need to take from Property.map 
  """
  sectionName: String

  """ Type of section, such as parking or section """
  sectionType: String

  """ Floor of an apartment building (property). You need to take from Property.map 
  """
  floorName: String

  """ Flat number / door number of an apartment building (property). You need to take from Property.map 
  """
  unitName: String

  """ Type of unit, such as parking lot or flat """
  unitType: String

  """ Ticket source channel/system. Examples: call, email, visit, ... """
  source: TicketSource

  """ In the case of remote system sync, you can store some extra analytics. Examples: email, name, phone, ... 
  """
  sourceMeta: JSON

  """ Date until which the ticket is deferred """
  deferredUntil: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketWhereInput {
  AND: [TicketWhereInput]
  OR: [TicketWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  statusReopenedCounter: Int
  statusReopenedCounter_not: Int
  statusReopenedCounter_lt: Int
  statusReopenedCounter_lte: Int
  statusReopenedCounter_gt: Int
  statusReopenedCounter_gte: Int
  statusReopenedCounter_in: [Int]
  statusReopenedCounter_not_in: [Int]
  reviewValue: TicketReviewValueType
  reviewValue_not: TicketReviewValueType
  reviewValue_in: [TicketReviewValueType]
  reviewValue_not_in: [TicketReviewValueType]
  reviewComment: String
  reviewComment_not: String
  reviewComment_contains: String
  reviewComment_not_contains: String
  reviewComment_starts_with: String
  reviewComment_not_starts_with: String
  reviewComment_ends_with: String
  reviewComment_not_ends_with: String
  reviewComment_i: String
  reviewComment_not_i: String
  reviewComment_contains_i: String
  reviewComment_not_contains_i: String
  reviewComment_starts_with_i: String
  reviewComment_not_starts_with_i: String
  reviewComment_ends_with_i: String
  reviewComment_not_ends_with_i: String
  reviewComment_in: [String]
  reviewComment_not_in: [String]
  statusUpdatedAt: String
  statusUpdatedAt_not: String
  statusUpdatedAt_lt: String
  statusUpdatedAt_lte: String
  statusUpdatedAt_gt: String
  statusUpdatedAt_gte: String
  statusUpdatedAt_in: [String]
  statusUpdatedAt_not_in: [String]
  completedAt: String
  completedAt_not: String
  completedAt_lt: String
  completedAt_lte: String
  completedAt_gt: String
  completedAt_gte: String
  completedAt_in: [String]
  completedAt_not_in: [String]
  lastCommentAt: String
  lastCommentAt_not: String
  lastCommentAt_lt: String
  lastCommentAt_lte: String
  lastCommentAt_gt: String
  lastCommentAt_gte: String
  lastCommentAt_in: [String]
  lastCommentAt_not_in: [String]
  lastResidentCommentAt: String
  lastResidentCommentAt_not: String
  lastResidentCommentAt_lt: String
  lastResidentCommentAt_lte: String
  lastResidentCommentAt_gt: String
  lastResidentCommentAt_gte: String
  lastResidentCommentAt_in: [String]
  lastResidentCommentAt_not_in: [String]
  statusReason: String
  statusReason_not: String
  statusReason_contains: String
  statusReason_not_contains: String
  statusReason_starts_with: String
  statusReason_not_starts_with: String
  statusReason_ends_with: String
  statusReason_not_ends_with: String
  statusReason_i: String
  statusReason_not_i: String
  statusReason_contains_i: String
  statusReason_not_contains_i: String
  statusReason_starts_with_i: String
  statusReason_not_starts_with_i: String
  statusReason_ends_with_i: String
  statusReason_not_ends_with_i: String
  statusReason_in: [String]
  statusReason_not_in: [String]
  status: TicketStatusWhereInput
  status_is_null: Boolean
  deadline: String
  deadline_not: String
  deadline_lt: String
  deadline_lte: String
  deadline_gt: String
  deadline_gte: String
  deadline_in: [String]
  deadline_not_in: [String]
  order: Int
  order_not: Int
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int]
  order_not_in: [Int]
  number: Int
  number_not: Int
  number_lt: Int
  number_lte: Int
  number_gt: Int
  number_gte: Int
  number_in: [Int]
  number_not_in: [Int]
  client: UserWhereInput
  client_is_null: Boolean
  contact: ContactWhereInput
  contact_is_null: Boolean
  clientName: String
  clientName_not: String
  clientName_contains: String
  clientName_not_contains: String
  clientName_starts_with: String
  clientName_not_starts_with: String
  clientName_ends_with: String
  clientName_not_ends_with: String
  clientName_i: String
  clientName_not_i: String
  clientName_contains_i: String
  clientName_not_contains_i: String
  clientName_starts_with_i: String
  clientName_not_starts_with_i: String
  clientName_ends_with_i: String
  clientName_not_ends_with_i: String
  clientName_in: [String]
  clientName_not_in: [String]
  clientEmail: String
  clientEmail_not: String
  clientEmail_contains: String
  clientEmail_not_contains: String
  clientEmail_starts_with: String
  clientEmail_not_starts_with: String
  clientEmail_ends_with: String
  clientEmail_not_ends_with: String
  clientEmail_i: String
  clientEmail_not_i: String
  clientEmail_contains_i: String
  clientEmail_not_contains_i: String
  clientEmail_starts_with_i: String
  clientEmail_not_starts_with_i: String
  clientEmail_ends_with_i: String
  clientEmail_not_ends_with_i: String
  clientEmail_in: [String]
  clientEmail_not_in: [String]
  clientPhone: String
  clientPhone_not: String
  clientPhone_contains: String
  clientPhone_not_contains: String
  clientPhone_starts_with: String
  clientPhone_not_starts_with: String
  clientPhone_ends_with: String
  clientPhone_not_ends_with: String
  clientPhone_i: String
  clientPhone_not_i: String
  clientPhone_contains_i: String
  clientPhone_not_contains_i: String
  clientPhone_starts_with_i: String
  clientPhone_not_starts_with_i: String
  clientPhone_ends_with_i: String
  clientPhone_not_ends_with_i: String
  clientPhone_in: [String]
  clientPhone_not_in: [String]
  assignee: UserWhereInput
  assignee_is_null: Boolean
  executor: UserWhereInput
  executor_is_null: Boolean
  categoryClassifier: TicketCategoryClassifierWhereInput
  categoryClassifier_is_null: Boolean
  placeClassifier: TicketPlaceClassifierWhereInput
  placeClassifier_is_null: Boolean
  problemClassifier: TicketProblemClassifierWhereInput
  problemClassifier_is_null: Boolean
  classifier: TicketClassifierWhereInput
  classifier_is_null: Boolean
  isAutoClassified: Boolean
  isAutoClassified_not: Boolean
  details: String
  details_not: String
  details_contains: String
  details_not_contains: String
  details_starts_with: String
  details_not_starts_with: String
  details_ends_with: String
  details_not_ends_with: String
  details_i: String
  details_not_i: String
  details_contains_i: String
  details_not_contains_i: String
  details_starts_with_i: String
  details_not_starts_with_i: String
  details_ends_with_i: String
  details_not_ends_with_i: String
  details_in: [String]
  details_not_in: [String]
  related: TicketWhereInput
  related_is_null: Boolean
  isPaid: Boolean
  isPaid_not: Boolean
  isEmergency: Boolean
  isEmergency_not: Boolean
  isWarranty: Boolean
  isWarranty_not: Boolean
  isResidentTicket: Boolean
  isResidentTicket_not: Boolean
  canReadByResident: Boolean
  canReadByResident_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  property: PropertyWhereInput
  property_is_null: Boolean
  propertyAddress: String
  propertyAddress_not: String
  propertyAddress_contains: String
  propertyAddress_not_contains: String
  propertyAddress_starts_with: String
  propertyAddress_not_starts_with: String
  propertyAddress_ends_with: String
  propertyAddress_not_ends_with: String
  propertyAddress_i: String
  propertyAddress_not_i: String
  propertyAddress_contains_i: String
  propertyAddress_not_contains_i: String
  propertyAddress_starts_with_i: String
  propertyAddress_not_starts_with_i: String
  propertyAddress_ends_with_i: String
  propertyAddress_not_ends_with_i: String
  propertyAddress_in: [String]
  propertyAddress_not_in: [String]
  propertyAddressMeta: JSON
  propertyAddressMeta_not: JSON
  propertyAddressMeta_in: [JSON]
  propertyAddressMeta_not_in: [JSON]
  sectionName: String
  sectionName_not: String
  sectionName_contains: String
  sectionName_not_contains: String
  sectionName_starts_with: String
  sectionName_not_starts_with: String
  sectionName_ends_with: String
  sectionName_not_ends_with: String
  sectionName_i: String
  sectionName_not_i: String
  sectionName_contains_i: String
  sectionName_not_contains_i: String
  sectionName_starts_with_i: String
  sectionName_not_starts_with_i: String
  sectionName_ends_with_i: String
  sectionName_not_ends_with_i: String
  sectionName_in: [String]
  sectionName_not_in: [String]
  sectionType: String
  sectionType_not: String
  sectionType_in: [String]
  sectionType_not_in: [String]
  floorName: String
  floorName_not: String
  floorName_contains: String
  floorName_not_contains: String
  floorName_starts_with: String
  floorName_not_starts_with: String
  floorName_ends_with: String
  floorName_not_ends_with: String
  floorName_i: String
  floorName_not_i: String
  floorName_contains_i: String
  floorName_not_contains_i: String
  floorName_starts_with_i: String
  floorName_not_starts_with_i: String
  floorName_ends_with_i: String
  floorName_not_ends_with_i: String
  floorName_in: [String]
  floorName_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_in: [String]
  unitType_not_in: [String]
  source: TicketSourceWhereInput
  source_is_null: Boolean
  sourceMeta: JSON
  sourceMeta_not: JSON
  sourceMeta_in: [JSON]
  sourceMeta_not_in: [JSON]
  deferredUntil: String
  deferredUntil_not: String
  deferredUntil_lt: String
  deferredUntil_lte: String
  deferredUntil_gt: String
  deferredUntil_gte: String
  deferredUntil_in: [String]
  deferredUntil_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketWhereUniqueInput {
  id: ID!
}

enum SortTicketsBy {
  organization_ASC
  organization_DESC
  statusReopenedCounter_ASC
  statusReopenedCounter_DESC
  reviewValue_ASC
  reviewValue_DESC
  reviewComment_ASC
  reviewComment_DESC
  statusUpdatedAt_ASC
  statusUpdatedAt_DESC
  completedAt_ASC
  completedAt_DESC
  lastCommentAt_ASC
  lastCommentAt_DESC
  lastResidentCommentAt_ASC
  lastResidentCommentAt_DESC
  statusReason_ASC
  statusReason_DESC
  status_ASC
  status_DESC
  deadline_ASC
  deadline_DESC
  order_ASC
  order_DESC
  number_ASC
  number_DESC
  client_ASC
  client_DESC
  contact_ASC
  contact_DESC
  clientName_ASC
  clientName_DESC
  clientEmail_ASC
  clientEmail_DESC
  clientPhone_ASC
  clientPhone_DESC
  assignee_ASC
  assignee_DESC
  executor_ASC
  executor_DESC
  categoryClassifier_ASC
  categoryClassifier_DESC
  placeClassifier_ASC
  placeClassifier_DESC
  problemClassifier_ASC
  problemClassifier_DESC
  classifier_ASC
  classifier_DESC
  isAutoClassified_ASC
  isAutoClassified_DESC
  details_ASC
  details_DESC
  related_ASC
  related_DESC
  isPaid_ASC
  isPaid_DESC
  isEmergency_ASC
  isEmergency_DESC
  isWarranty_ASC
  isWarranty_DESC
  isResidentTicket_ASC
  isResidentTicket_DESC
  canReadByResident_ASC
  canReadByResident_DESC
  property_ASC
  property_DESC
  propertyAddress_ASC
  propertyAddress_DESC
  sectionName_ASC
  sectionName_DESC
  sectionType_ASC
  sectionType_DESC
  floorName_ASC
  floorName_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  source_ASC
  source_DESC
  deferredUntil_ASC
  deferredUntil_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketUpdateInput {
  organization: OrganizationRelateToOneInput
  statusReopenedCounter: Int
  reviewValue: TicketReviewValueType
  reviewComment: String
  statusUpdatedAt: String
  completedAt: String
  lastCommentAt: String
  lastResidentCommentAt: String
  statusReason: String
  status: TicketStatusRelateToOneInput
  deadline: String
  order: Int
  number: Int
  client: UserRelateToOneInput
  contact: ContactRelateToOneInput
  clientName: String
  clientEmail: String
  clientPhone: String
  assignee: UserRelateToOneInput
  executor: UserRelateToOneInput
  categoryClassifier: TicketCategoryClassifierRelateToOneInput
  placeClassifier: TicketPlaceClassifierRelateToOneInput
  problemClassifier: TicketProblemClassifierRelateToOneInput
  classifier: TicketClassifierRelateToOneInput
  isAutoClassified: Boolean
  details: String
  related: TicketRelateToOneInput
  isPaid: Boolean
  isEmergency: Boolean
  isWarranty: Boolean
  isResidentTicket: Boolean
  canReadByResident: Boolean
  meta: JSON
  property: PropertyRelateToOneInput
  propertyAddress: String
  propertyAddressMeta: JSON
  sectionName: String
  sectionType: String
  floorName: String
  unitName: String
  unitType: String
  source: TicketSourceRelateToOneInput
  sourceMeta: JSON
  deferredUntil: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketsUpdateInput {
  id: ID!
  data: TicketUpdateInput
}

input TicketCreateInput {
  organization: OrganizationRelateToOneInput
  statusReopenedCounter: Int
  reviewValue: TicketReviewValueType
  reviewComment: String
  statusUpdatedAt: String
  completedAt: String
  lastCommentAt: String
  lastResidentCommentAt: String
  statusReason: String
  status: TicketStatusRelateToOneInput
  deadline: String
  order: Int
  number: Int
  client: UserRelateToOneInput
  contact: ContactRelateToOneInput
  clientName: String
  clientEmail: String
  clientPhone: String
  assignee: UserRelateToOneInput
  executor: UserRelateToOneInput
  categoryClassifier: TicketCategoryClassifierRelateToOneInput
  placeClassifier: TicketPlaceClassifierRelateToOneInput
  problemClassifier: TicketProblemClassifierRelateToOneInput
  classifier: TicketClassifierRelateToOneInput
  isAutoClassified: Boolean
  details: String
  related: TicketRelateToOneInput
  isPaid: Boolean
  isEmergency: Boolean
  isWarranty: Boolean
  isResidentTicket: Boolean
  canReadByResident: Boolean
  meta: JSON
  property: PropertyRelateToOneInput
  propertyAddress: String
  propertyAddressMeta: JSON
  sectionName: String
  sectionType: String
  floorName: String
  unitName: String
  unitType: String
  source: TicketSourceRelateToOneInput
  sourceMeta: JSON
  deferredUntil: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketsCreateInput {
  data: TicketCreateInput
}

enum TicketSourceHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketSourceHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketSourceHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketSourceHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketSourceHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketSourceHistoryRecord List.
  """
  _label_: String
  organization: String
  type: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketSourceHistoryRecordHistoryActionType
  history_id: String
}

input TicketSourceHistoryRecordWhereInput {
  AND: [TicketSourceHistoryRecordWhereInput]
  OR: [TicketSourceHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketSourceHistoryRecordHistoryActionType
  history_action_not: TicketSourceHistoryRecordHistoryActionType
  history_action_in: [TicketSourceHistoryRecordHistoryActionType]
  history_action_not_in: [TicketSourceHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketSourceHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketSourceHistoryRecordsBy {
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketSourceHistoryRecordUpdateInput {
  organization: String
  type: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketSourceHistoryRecordHistoryActionType
  history_id: String
}

input TicketSourceHistoryRecordsUpdateInput {
  id: ID!
  data: TicketSourceHistoryRecordUpdateInput
}

input TicketSourceHistoryRecordCreateInput {
  organization: String
  type: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketSourceHistoryRecordHistoryActionType
  history_id: String
}

input TicketSourceHistoryRecordsCreateInput {
  data: TicketSourceHistoryRecordCreateInput
}

enum TicketSourceTypeType {
  email
  mobile_app
  remote_system
  call
  other
  visit
  web_app
  organization_site
  messenger
  social_network
  mobile_app_staff
  mobile_app_resident
  crm_import
}

""" Ticket source. Income call, mobile app, external system, ... """
type TicketSource {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketSource List config, or
   2. As an alias to the field set on 'labelField' in the TicketSource List config, or
   3. As an alias to a 'name' field on the TicketSource List (if one exists), or
   4. As an alias to the 'id' field on the TicketSource List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization
  type: TicketSourceTypeType

  """ Localized Ticket source name """
  name: String
  nameNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketSourceWhereInput {
  AND: [TicketSourceWhereInput]
  OR: [TicketSourceWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  type: TicketSourceTypeType
  type_not: TicketSourceTypeType
  type_in: [TicketSourceTypeType]
  type_not_in: [TicketSourceTypeType]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketSourceWhereUniqueInput {
  id: ID!
}

enum SortTicketSourcesBy {
  organization_ASC
  organization_DESC
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketSourceUpdateInput {
  organization: OrganizationRelateToOneInput
  type: TicketSourceTypeType
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketSourcesUpdateInput {
  id: ID!
  data: TicketSourceUpdateInput
}

input TicketSourceCreateInput {
  organization: OrganizationRelateToOneInput
  type: TicketSourceTypeType
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketSourcesCreateInput {
  data: TicketSourceCreateInput
}

enum TicketStatusHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketStatusHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketStatusHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketStatusHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketStatusHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketStatusHistoryRecord List.
  """
  _label_: String
  organization: String
  type: String
  name: String
  colors: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketStatusHistoryRecordHistoryActionType
  history_id: String
}

input TicketStatusHistoryRecordWhereInput {
  AND: [TicketStatusHistoryRecordWhereInput]
  OR: [TicketStatusHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  colors: JSON
  colors_not: JSON
  colors_in: [JSON]
  colors_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketStatusHistoryRecordHistoryActionType
  history_action_not: TicketStatusHistoryRecordHistoryActionType
  history_action_in: [TicketStatusHistoryRecordHistoryActionType]
  history_action_not_in: [TicketStatusHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketStatusHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketStatusHistoryRecordsBy {
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketStatusHistoryRecordUpdateInput {
  organization: String
  type: String
  name: String
  colors: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketStatusHistoryRecordHistoryActionType
  history_id: String
}

input TicketStatusHistoryRecordsUpdateInput {
  id: ID!
  data: TicketStatusHistoryRecordUpdateInput
}

input TicketStatusHistoryRecordCreateInput {
  organization: String
  type: String
  name: String
  colors: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketStatusHistoryRecordHistoryActionType
  history_id: String
}

input TicketStatusHistoryRecordsCreateInput {
  data: TicketStatusHistoryRecordCreateInput
}

enum TicketStatusTypeType {
  new_or_reopened
  processing
  canceled
  completed
  deferred
  closed
}

type TicketStatusColorsField {
  primary: String
  secondary: String
  additional: String
}

""" Ticket status. We have a organization specific statuses """
type TicketStatus {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketStatus List config, or
   2. As an alias to the field set on 'labelField' in the TicketStatus List config, or
   3. As an alias to a 'name' field on the TicketStatus List (if one exists), or
   4. As an alias to the 'id' field on the TicketStatus List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ Ticket status. You should also increase `statusReopenedCounter` if you want to reopen ticket 
  """
  type: TicketStatusTypeType

  """ Status name """
  name: String
  nameNonLocalized: String

  """ Status colors, includes primary (font color), secondary (background color), additional (border color), all colors presented in HEX 
  """
  colors: TicketStatusColorsField
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketStatusWhereInput {
  AND: [TicketStatusWhereInput]
  OR: [TicketStatusWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  type: TicketStatusTypeType
  type_not: TicketStatusTypeType
  type_in: [TicketStatusTypeType]
  type_not_in: [TicketStatusTypeType]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketStatusWhereUniqueInput {
  id: ID!
}

enum SortTicketStatusesBy {
  organization_ASC
  organization_DESC
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketStatusUpdateInput {
  organization: OrganizationRelateToOneInput
  type: TicketStatusTypeType
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketStatusesUpdateInput {
  id: ID!
  data: TicketStatusUpdateInput
}

input TicketStatusCreateInput {
  organization: OrganizationRelateToOneInput
  type: TicketStatusTypeType
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketStatusesCreateInput {
  data: TicketStatusCreateInput
}

enum TicketFileHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketFileHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketFileHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketFileHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketFileHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketFileHistoryRecord List.
  """
  _label_: String
  file: JSON
  ticket: String
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketFileHistoryRecordHistoryActionType
  history_id: String
}

input TicketFileHistoryRecordWhereInput {
  AND: [TicketFileHistoryRecordWhereInput]
  OR: [TicketFileHistoryRecordWhereInput]
  file: JSON
  file_not: JSON
  file_in: [JSON]
  file_not_in: [JSON]
  ticket: String
  ticket_not: String
  ticket_in: [String]
  ticket_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketFileHistoryRecordHistoryActionType
  history_action_not: TicketFileHistoryRecordHistoryActionType
  history_action_in: [TicketFileHistoryRecordHistoryActionType]
  history_action_not_in: [TicketFileHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketFileHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketFileHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketFileHistoryRecordUpdateInput {
  file: JSON
  ticket: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketFileHistoryRecordHistoryActionType
  history_id: String
}

input TicketFileHistoryRecordsUpdateInput {
  id: ID!
  data: TicketFileHistoryRecordUpdateInput
}

input TicketFileHistoryRecordCreateInput {
  file: JSON
  ticket: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketFileHistoryRecordHistoryActionType
  history_id: String
}

input TicketFileHistoryRecordsCreateInput {
  data: TicketFileHistoryRecordCreateInput
}

""" File attached to the ticket """
type TicketFile {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketFile List config, or
   2. As an alias to the field set on 'labelField' in the TicketFile List config, or
   3. As an alias to a 'name' field on the TicketFile List (if one exists), or
   4. As an alias to the 'id' field on the TicketFile List.
  """
  _label_: String

  """ File object with meta information and publicUrl """
  file: File

  """ Link to ticket """
  ticket: Ticket

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketFileWhereInput {
  AND: [TicketFileWhereInput]
  OR: [TicketFileWhereInput]
  file: String
  file_not: String
  file_in: [String]
  file_not_in: [String]
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketFileWhereUniqueInput {
  id: ID!
}

enum SortTicketFilesBy {
  ticket_ASC
  ticket_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketFileUpdateInput {
  file: Upload
  ticket: TicketRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketFilesUpdateInput {
  id: ID!
  data: TicketFileUpdateInput
}

input TicketFileCreateInput {
  file: Upload
  ticket: TicketRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketFilesCreateInput {
  data: TicketFileCreateInput
}

enum TicketChangeReviewValueFromType {
  bad
  good
  returned
}

enum TicketChangeReviewValueToType {
  bad
  good
  returned
}

""" Incremental changes of Ticket """
type TicketChange {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketChange List config, or
   2. As an alias to the field set on 'labelField' in the TicketChange List config, or
   3. As an alias to a 'name' field on the TicketChange List (if one exists), or
   4. As an alias to the 'id' field on the TicketChange List.
  """
  _label_: String

  """ Related ticket, whose change is logged in this entity """
  ticket: Ticket

  """ Counter showing the number of changes `status` to `new_or_reopened` """
  statusReopenedCounterFrom: Int

  """ Counter showing the number of changes `status` to `new_or_reopened` """
  statusReopenedCounterTo: Int

  """ Review of the ticket by a resident on a 2-point scale. 0 – ticket returned, 1 – bad review, 2 – good review 
  """
  reviewValueFrom: TicketChangeReviewValueFromType

  """ Review of the ticket by a resident on a 2-point scale. 0 – ticket returned, 1 – bad review, 2 – good review 
  """
  reviewValueTo: TicketChangeReviewValueToType

  """ Resident's comment on ticket review """
  reviewCommentFrom: String

  """ Resident's comment on ticket review """
  reviewCommentTo: String

  """ Text reason for status changes. Sometimes you should describe the reason why you change the `status` 
  """
  statusReasonFrom: String

  """ Text reason for status changes. Sometimes you should describe the reason why you change the `status` 
  """
  statusReasonTo: String

  """ Time after which the ticket must be completed """
  deadlineFrom: String

  """ Time after which the ticket must be completed """
  deadlineTo: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientNameFrom: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientNameTo: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientEmailFrom: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientEmailTo: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientPhoneFrom: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientPhoneTo: String

  """ Text description of the issue. Maybe written by a user or an operator 
  """
  detailsFrom: String

  """ Text description of the issue. Maybe written by a user or an operator 
  """
  detailsTo: String

  """ Indicates the ticket is paid """
  isPaidFrom: Boolean

  """ Indicates the ticket is paid """
  isPaidTo: Boolean

  """ Indicates the ticket is emergency """
  isEmergencyFrom: Boolean

  """ Indicates the ticket is emergency """
  isEmergencyTo: Boolean

  """ Indicates the ticket is warranty """
  isWarrantyFrom: Boolean

  """ Indicates the ticket is warranty """
  isWarrantyTo: Boolean

  """ Determines who the ticket was created for: for a resident or not for a resident 
  """
  isResidentTicketFrom: Boolean

  """ Determines who the ticket was created for: for a resident or not for a resident 
  """
  isResidentTicketTo: Boolean

  """ Determines if a resident in the mobile app can see the ticket created in crm 
  """
  canReadByResidentFrom: Boolean

  """ Determines if a resident in the mobile app can see the ticket created in crm 
  """
  canReadByResidentTo: Boolean

  """ Extra analytics not related to remote system """
  metaFrom: JSON

  """ Extra analytics not related to remote system """
  metaTo: JSON

  """ Address of property, which synced with property and displayed, if property is deleted 
  """
  propertyAddressFrom: String

  """ Address of property, which synced with property and displayed, if property is deleted 
  """
  propertyAddressTo: String

  """ Address meta of property, which synced with property and used to form view of address, if property is deleted 
  """
  propertyAddressMetaFrom: JSON

  """ Address meta of property, which synced with property and used to form view of address, if property is deleted 
  """
  propertyAddressMetaTo: JSON

  """ Section name/number of an apartment building (property). You need to take from Property.map 
  """
  sectionNameFrom: String

  """ Section name/number of an apartment building (property). You need to take from Property.map 
  """
  sectionNameTo: String

  """ Type of section, such as parking or section """
  sectionTypeFrom: String

  """ Type of section, such as parking or section """
  sectionTypeTo: String

  """ Floor of an apartment building (property). You need to take from Property.map 
  """
  floorNameFrom: String

  """ Floor of an apartment building (property). You need to take from Property.map 
  """
  floorNameTo: String

  """ Flat number / door number of an apartment building (property). You need to take from Property.map 
  """
  unitNameFrom: String

  """ Flat number / door number of an apartment building (property). You need to take from Property.map 
  """
  unitNameTo: String

  """ Type of unit, such as parking lot or flat """
  unitTypeFrom: String

  """ Type of unit, such as parking lot or flat """
  unitTypeTo: String

  """ In the case of remote system sync, you can store some extra analytics. Examples: email, name, phone, ... 
  """
  sourceMetaFrom: JSON

  """ In the case of remote system sync, you can store some extra analytics. Examples: email, name, phone, ... 
  """
  sourceMetaTo: JSON

  """ Date until which the ticket is deferred """
  deferredUntilFrom: String

  """ Date until which the ticket is deferred """
  deferredUntilTo: String

  """ Old id of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationIdFrom: ID

  """ New id of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationIdTo: ID

  """ Old display name of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationDisplayNameFrom: String

  """ New display name of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationDisplayNameTo: String

  """ Old id of related entity. Status is the step of the ticket processing workflow. Companies may have different ticket processing workflows 
  """
  statusIdFrom: ID

  """ New id of related entity. Status is the step of the ticket processing workflow. Companies may have different ticket processing workflows 
  """
  statusIdTo: ID

  """ Old display name of related entity. Status is the step of the ticket processing workflow. Companies may have different ticket processing workflows 
  """
  statusDisplayNameFrom: String
  statusDisplayNameFromNonLocalized: String

  """ New display name of related entity. Status is the step of the ticket processing workflow. Companies may have different ticket processing workflows 
  """
  statusDisplayNameTo: String
  statusDisplayNameToNonLocalized: String

  """ Old id of related entity. Inhabitant/customer/person who has a problem or want to improve/order something. Not null if we have a registered client. This field indicates, that the Ticket is visible to a Resident and it has access to it. This field will be set to User of corresponding Resident in following cases: 1) the Ticket was created by Resident from mobile app;2) the Ticket was created by OrganizationEmployee with phone number, that matches some Resident;3) a Resident was registered after this Ticket was created and the Resident have the same phone number as in this Ticket, so this Ticket will be automatically connected to it. 
  """
  clientIdFrom: ID

  """ New id of related entity. Inhabitant/customer/person who has a problem or want to improve/order something. Not null if we have a registered client. This field indicates, that the Ticket is visible to a Resident and it has access to it. This field will be set to User of corresponding Resident in following cases: 1) the Ticket was created by Resident from mobile app;2) the Ticket was created by OrganizationEmployee with phone number, that matches some Resident;3) a Resident was registered after this Ticket was created and the Resident have the same phone number as in this Ticket, so this Ticket will be automatically connected to it. 
  """
  clientIdTo: ID

  """ Old display name of related entity. Inhabitant/customer/person who has a problem or want to improve/order something. Not null if we have a registered client. This field indicates, that the Ticket is visible to a Resident and it has access to it. This field will be set to User of corresponding Resident in following cases: 1) the Ticket was created by Resident from mobile app;2) the Ticket was created by OrganizationEmployee with phone number, that matches some Resident;3) a Resident was registered after this Ticket was created and the Resident have the same phone number as in this Ticket, so this Ticket will be automatically connected to it. 
  """
  clientDisplayNameFrom: String

  """ New display name of related entity. Inhabitant/customer/person who has a problem or want to improve/order something. Not null if we have a registered client. This field indicates, that the Ticket is visible to a Resident and it has access to it. This field will be set to User of corresponding Resident in following cases: 1) the Ticket was created by Resident from mobile app;2) the Ticket was created by OrganizationEmployee with phone number, that matches some Resident;3) a Resident was registered after this Ticket was created and the Resident have the same phone number as in this Ticket, so this Ticket will be automatically connected to it. 
  """
  clientDisplayNameTo: String

  """ Old id of related entity. Contact, that reported issue, described in this ticket 
  """
  contactIdFrom: ID

  """ New id of related entity. Contact, that reported issue, described in this ticket 
  """
  contactIdTo: ID

  """ Old display name of related entity. Contact, that reported issue, described in this ticket 
  """
  contactDisplayNameFrom: String

  """ New display name of related entity. Contact, that reported issue, described in this ticket 
  """
  contactDisplayNameTo: String

  """ Old id of related entity. Assignee/responsible employee/user who must ensure that the issue is fulfilled 
  """
  assigneeIdFrom: ID

  """ New id of related entity. Assignee/responsible employee/user who must ensure that the issue is fulfilled 
  """
  assigneeIdTo: ID

  """ Old display name of related entity. Assignee/responsible employee/user who must ensure that the issue is fulfilled 
  """
  assigneeDisplayNameFrom: String

  """ New display name of related entity. Assignee/responsible employee/user who must ensure that the issue is fulfilled 
  """
  assigneeDisplayNameTo: String

  """ Old id of related entity. Executor employee/user who perform the issue 
  """
  executorIdFrom: ID

  """ New id of related entity. Executor employee/user who perform the issue 
  """
  executorIdTo: ID

  """ Old display name of related entity. Executor employee/user who perform the issue 
  """
  executorDisplayNameFrom: String

  """ New display name of related entity. Executor employee/user who perform the issue 
  """
  executorDisplayNameTo: String

  """ Old id of related entity. Valid combination of 3 classifiers """
  classifierIdFrom: ID

  """ New id of related entity. Valid combination of 3 classifiers """
  classifierIdTo: ID

  """ Old display name of related entity. Valid combination of 3 classifiers 
  """
  classifierDisplayNameFrom: String

  """ New display name of related entity. Valid combination of 3 classifiers 
  """
  classifierDisplayNameTo: String

  """ Old id of related entity. Sometimes, it is important for us to show related issues. For example, to show related issues 
  """
  relatedIdFrom: ID

  """ New id of related entity. Sometimes, it is important for us to show related issues. For example, to show related issues 
  """
  relatedIdTo: ID

  """ Old display name of related entity. Sometimes, it is important for us to show related issues. For example, to show related issues 
  """
  relatedDisplayNameFrom: String

  """ New display name of related entity. Sometimes, it is important for us to show related issues. For example, to show related issues 
  """
  relatedDisplayNameTo: String

  """ Old id of related entity. Property related to the Ticket """
  propertyIdFrom: ID

  """ New id of related entity. Property related to the Ticket """
  propertyIdTo: ID

  """ Old display name of related entity. Property related to the Ticket """
  propertyDisplayNameFrom: String

  """ New display name of related entity. Property related to the Ticket """
  propertyDisplayNameTo: String

  """ Old id of related entity. Ticket source channel/system. Examples: call, email, visit, ... 
  """
  sourceIdFrom: ID

  """ New id of related entity. Ticket source channel/system. Examples: call, email, visit, ... 
  """
  sourceIdTo: ID

  """ Old display name of related entity. Ticket source channel/system. Examples: call, email, visit, ... 
  """
  sourceDisplayNameFrom: String
  sourceDisplayNameFromNonLocalized: String

  """ New display name of related entity. Ticket source channel/system. Examples: call, email, visit, ... 
  """
  sourceDisplayNameTo: String
  sourceDisplayNameToNonLocalized: String

  """ Type of employee who changed the ticket, can be employee role from same organization or related, resident or deleted employee 
  """
  changedByRole: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketChangeWhereInput {
  AND: [TicketChangeWhereInput]
  OR: [TicketChangeWhereInput]
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  statusReopenedCounterFrom: Int
  statusReopenedCounterFrom_not: Int
  statusReopenedCounterFrom_lt: Int
  statusReopenedCounterFrom_lte: Int
  statusReopenedCounterFrom_gt: Int
  statusReopenedCounterFrom_gte: Int
  statusReopenedCounterFrom_in: [Int]
  statusReopenedCounterFrom_not_in: [Int]
  statusReopenedCounterTo: Int
  statusReopenedCounterTo_not: Int
  statusReopenedCounterTo_lt: Int
  statusReopenedCounterTo_lte: Int
  statusReopenedCounterTo_gt: Int
  statusReopenedCounterTo_gte: Int
  statusReopenedCounterTo_in: [Int]
  statusReopenedCounterTo_not_in: [Int]
  reviewValueFrom: TicketChangeReviewValueFromType
  reviewValueFrom_not: TicketChangeReviewValueFromType
  reviewValueFrom_in: [TicketChangeReviewValueFromType]
  reviewValueFrom_not_in: [TicketChangeReviewValueFromType]
  reviewValueTo: TicketChangeReviewValueToType
  reviewValueTo_not: TicketChangeReviewValueToType
  reviewValueTo_in: [TicketChangeReviewValueToType]
  reviewValueTo_not_in: [TicketChangeReviewValueToType]
  reviewCommentFrom: String
  reviewCommentFrom_not: String
  reviewCommentFrom_contains: String
  reviewCommentFrom_not_contains: String
  reviewCommentFrom_starts_with: String
  reviewCommentFrom_not_starts_with: String
  reviewCommentFrom_ends_with: String
  reviewCommentFrom_not_ends_with: String
  reviewCommentFrom_i: String
  reviewCommentFrom_not_i: String
  reviewCommentFrom_contains_i: String
  reviewCommentFrom_not_contains_i: String
  reviewCommentFrom_starts_with_i: String
  reviewCommentFrom_not_starts_with_i: String
  reviewCommentFrom_ends_with_i: String
  reviewCommentFrom_not_ends_with_i: String
  reviewCommentFrom_in: [String]
  reviewCommentFrom_not_in: [String]
  reviewCommentTo: String
  reviewCommentTo_not: String
  reviewCommentTo_contains: String
  reviewCommentTo_not_contains: String
  reviewCommentTo_starts_with: String
  reviewCommentTo_not_starts_with: String
  reviewCommentTo_ends_with: String
  reviewCommentTo_not_ends_with: String
  reviewCommentTo_i: String
  reviewCommentTo_not_i: String
  reviewCommentTo_contains_i: String
  reviewCommentTo_not_contains_i: String
  reviewCommentTo_starts_with_i: String
  reviewCommentTo_not_starts_with_i: String
  reviewCommentTo_ends_with_i: String
  reviewCommentTo_not_ends_with_i: String
  reviewCommentTo_in: [String]
  reviewCommentTo_not_in: [String]
  statusReasonFrom: String
  statusReasonFrom_not: String
  statusReasonFrom_contains: String
  statusReasonFrom_not_contains: String
  statusReasonFrom_starts_with: String
  statusReasonFrom_not_starts_with: String
  statusReasonFrom_ends_with: String
  statusReasonFrom_not_ends_with: String
  statusReasonFrom_i: String
  statusReasonFrom_not_i: String
  statusReasonFrom_contains_i: String
  statusReasonFrom_not_contains_i: String
  statusReasonFrom_starts_with_i: String
  statusReasonFrom_not_starts_with_i: String
  statusReasonFrom_ends_with_i: String
  statusReasonFrom_not_ends_with_i: String
  statusReasonFrom_in: [String]
  statusReasonFrom_not_in: [String]
  statusReasonTo: String
  statusReasonTo_not: String
  statusReasonTo_contains: String
  statusReasonTo_not_contains: String
  statusReasonTo_starts_with: String
  statusReasonTo_not_starts_with: String
  statusReasonTo_ends_with: String
  statusReasonTo_not_ends_with: String
  statusReasonTo_i: String
  statusReasonTo_not_i: String
  statusReasonTo_contains_i: String
  statusReasonTo_not_contains_i: String
  statusReasonTo_starts_with_i: String
  statusReasonTo_not_starts_with_i: String
  statusReasonTo_ends_with_i: String
  statusReasonTo_not_ends_with_i: String
  statusReasonTo_in: [String]
  statusReasonTo_not_in: [String]
  deadlineFrom: String
  deadlineFrom_not: String
  deadlineFrom_lt: String
  deadlineFrom_lte: String
  deadlineFrom_gt: String
  deadlineFrom_gte: String
  deadlineFrom_in: [String]
  deadlineFrom_not_in: [String]
  deadlineTo: String
  deadlineTo_not: String
  deadlineTo_lt: String
  deadlineTo_lte: String
  deadlineTo_gt: String
  deadlineTo_gte: String
  deadlineTo_in: [String]
  deadlineTo_not_in: [String]
  clientNameFrom: String
  clientNameFrom_not: String
  clientNameFrom_contains: String
  clientNameFrom_not_contains: String
  clientNameFrom_starts_with: String
  clientNameFrom_not_starts_with: String
  clientNameFrom_ends_with: String
  clientNameFrom_not_ends_with: String
  clientNameFrom_i: String
  clientNameFrom_not_i: String
  clientNameFrom_contains_i: String
  clientNameFrom_not_contains_i: String
  clientNameFrom_starts_with_i: String
  clientNameFrom_not_starts_with_i: String
  clientNameFrom_ends_with_i: String
  clientNameFrom_not_ends_with_i: String
  clientNameFrom_in: [String]
  clientNameFrom_not_in: [String]
  clientNameTo: String
  clientNameTo_not: String
  clientNameTo_contains: String
  clientNameTo_not_contains: String
  clientNameTo_starts_with: String
  clientNameTo_not_starts_with: String
  clientNameTo_ends_with: String
  clientNameTo_not_ends_with: String
  clientNameTo_i: String
  clientNameTo_not_i: String
  clientNameTo_contains_i: String
  clientNameTo_not_contains_i: String
  clientNameTo_starts_with_i: String
  clientNameTo_not_starts_with_i: String
  clientNameTo_ends_with_i: String
  clientNameTo_not_ends_with_i: String
  clientNameTo_in: [String]
  clientNameTo_not_in: [String]
  clientEmailFrom: String
  clientEmailFrom_not: String
  clientEmailFrom_contains: String
  clientEmailFrom_not_contains: String
  clientEmailFrom_starts_with: String
  clientEmailFrom_not_starts_with: String
  clientEmailFrom_ends_with: String
  clientEmailFrom_not_ends_with: String
  clientEmailFrom_i: String
  clientEmailFrom_not_i: String
  clientEmailFrom_contains_i: String
  clientEmailFrom_not_contains_i: String
  clientEmailFrom_starts_with_i: String
  clientEmailFrom_not_starts_with_i: String
  clientEmailFrom_ends_with_i: String
  clientEmailFrom_not_ends_with_i: String
  clientEmailFrom_in: [String]
  clientEmailFrom_not_in: [String]
  clientEmailTo: String
  clientEmailTo_not: String
  clientEmailTo_contains: String
  clientEmailTo_not_contains: String
  clientEmailTo_starts_with: String
  clientEmailTo_not_starts_with: String
  clientEmailTo_ends_with: String
  clientEmailTo_not_ends_with: String
  clientEmailTo_i: String
  clientEmailTo_not_i: String
  clientEmailTo_contains_i: String
  clientEmailTo_not_contains_i: String
  clientEmailTo_starts_with_i: String
  clientEmailTo_not_starts_with_i: String
  clientEmailTo_ends_with_i: String
  clientEmailTo_not_ends_with_i: String
  clientEmailTo_in: [String]
  clientEmailTo_not_in: [String]
  clientPhoneFrom: String
  clientPhoneFrom_not: String
  clientPhoneFrom_contains: String
  clientPhoneFrom_not_contains: String
  clientPhoneFrom_starts_with: String
  clientPhoneFrom_not_starts_with: String
  clientPhoneFrom_ends_with: String
  clientPhoneFrom_not_ends_with: String
  clientPhoneFrom_i: String
  clientPhoneFrom_not_i: String
  clientPhoneFrom_contains_i: String
  clientPhoneFrom_not_contains_i: String
  clientPhoneFrom_starts_with_i: String
  clientPhoneFrom_not_starts_with_i: String
  clientPhoneFrom_ends_with_i: String
  clientPhoneFrom_not_ends_with_i: String
  clientPhoneFrom_in: [String]
  clientPhoneFrom_not_in: [String]
  clientPhoneTo: String
  clientPhoneTo_not: String
  clientPhoneTo_contains: String
  clientPhoneTo_not_contains: String
  clientPhoneTo_starts_with: String
  clientPhoneTo_not_starts_with: String
  clientPhoneTo_ends_with: String
  clientPhoneTo_not_ends_with: String
  clientPhoneTo_i: String
  clientPhoneTo_not_i: String
  clientPhoneTo_contains_i: String
  clientPhoneTo_not_contains_i: String
  clientPhoneTo_starts_with_i: String
  clientPhoneTo_not_starts_with_i: String
  clientPhoneTo_ends_with_i: String
  clientPhoneTo_not_ends_with_i: String
  clientPhoneTo_in: [String]
  clientPhoneTo_not_in: [String]
  detailsFrom: String
  detailsFrom_not: String
  detailsFrom_contains: String
  detailsFrom_not_contains: String
  detailsFrom_starts_with: String
  detailsFrom_not_starts_with: String
  detailsFrom_ends_with: String
  detailsFrom_not_ends_with: String
  detailsFrom_i: String
  detailsFrom_not_i: String
  detailsFrom_contains_i: String
  detailsFrom_not_contains_i: String
  detailsFrom_starts_with_i: String
  detailsFrom_not_starts_with_i: String
  detailsFrom_ends_with_i: String
  detailsFrom_not_ends_with_i: String
  detailsFrom_in: [String]
  detailsFrom_not_in: [String]
  detailsTo: String
  detailsTo_not: String
  detailsTo_contains: String
  detailsTo_not_contains: String
  detailsTo_starts_with: String
  detailsTo_not_starts_with: String
  detailsTo_ends_with: String
  detailsTo_not_ends_with: String
  detailsTo_i: String
  detailsTo_not_i: String
  detailsTo_contains_i: String
  detailsTo_not_contains_i: String
  detailsTo_starts_with_i: String
  detailsTo_not_starts_with_i: String
  detailsTo_ends_with_i: String
  detailsTo_not_ends_with_i: String
  detailsTo_in: [String]
  detailsTo_not_in: [String]
  isPaidFrom: Boolean
  isPaidFrom_not: Boolean
  isPaidTo: Boolean
  isPaidTo_not: Boolean
  isEmergencyFrom: Boolean
  isEmergencyFrom_not: Boolean
  isEmergencyTo: Boolean
  isEmergencyTo_not: Boolean
  isWarrantyFrom: Boolean
  isWarrantyFrom_not: Boolean
  isWarrantyTo: Boolean
  isWarrantyTo_not: Boolean
  isResidentTicketFrom: Boolean
  isResidentTicketFrom_not: Boolean
  isResidentTicketTo: Boolean
  isResidentTicketTo_not: Boolean
  canReadByResidentFrom: Boolean
  canReadByResidentFrom_not: Boolean
  canReadByResidentTo: Boolean
  canReadByResidentTo_not: Boolean
  metaFrom: JSON
  metaFrom_not: JSON
  metaFrom_in: [JSON]
  metaFrom_not_in: [JSON]
  metaTo: JSON
  metaTo_not: JSON
  metaTo_in: [JSON]
  metaTo_not_in: [JSON]
  propertyAddressFrom: String
  propertyAddressFrom_not: String
  propertyAddressFrom_contains: String
  propertyAddressFrom_not_contains: String
  propertyAddressFrom_starts_with: String
  propertyAddressFrom_not_starts_with: String
  propertyAddressFrom_ends_with: String
  propertyAddressFrom_not_ends_with: String
  propertyAddressFrom_i: String
  propertyAddressFrom_not_i: String
  propertyAddressFrom_contains_i: String
  propertyAddressFrom_not_contains_i: String
  propertyAddressFrom_starts_with_i: String
  propertyAddressFrom_not_starts_with_i: String
  propertyAddressFrom_ends_with_i: String
  propertyAddressFrom_not_ends_with_i: String
  propertyAddressFrom_in: [String]
  propertyAddressFrom_not_in: [String]
  propertyAddressTo: String
  propertyAddressTo_not: String
  propertyAddressTo_contains: String
  propertyAddressTo_not_contains: String
  propertyAddressTo_starts_with: String
  propertyAddressTo_not_starts_with: String
  propertyAddressTo_ends_with: String
  propertyAddressTo_not_ends_with: String
  propertyAddressTo_i: String
  propertyAddressTo_not_i: String
  propertyAddressTo_contains_i: String
  propertyAddressTo_not_contains_i: String
  propertyAddressTo_starts_with_i: String
  propertyAddressTo_not_starts_with_i: String
  propertyAddressTo_ends_with_i: String
  propertyAddressTo_not_ends_with_i: String
  propertyAddressTo_in: [String]
  propertyAddressTo_not_in: [String]
  propertyAddressMetaFrom: JSON
  propertyAddressMetaFrom_not: JSON
  propertyAddressMetaFrom_in: [JSON]
  propertyAddressMetaFrom_not_in: [JSON]
  propertyAddressMetaTo: JSON
  propertyAddressMetaTo_not: JSON
  propertyAddressMetaTo_in: [JSON]
  propertyAddressMetaTo_not_in: [JSON]
  sectionNameFrom: String
  sectionNameFrom_not: String
  sectionNameFrom_contains: String
  sectionNameFrom_not_contains: String
  sectionNameFrom_starts_with: String
  sectionNameFrom_not_starts_with: String
  sectionNameFrom_ends_with: String
  sectionNameFrom_not_ends_with: String
  sectionNameFrom_i: String
  sectionNameFrom_not_i: String
  sectionNameFrom_contains_i: String
  sectionNameFrom_not_contains_i: String
  sectionNameFrom_starts_with_i: String
  sectionNameFrom_not_starts_with_i: String
  sectionNameFrom_ends_with_i: String
  sectionNameFrom_not_ends_with_i: String
  sectionNameFrom_in: [String]
  sectionNameFrom_not_in: [String]
  sectionNameTo: String
  sectionNameTo_not: String
  sectionNameTo_contains: String
  sectionNameTo_not_contains: String
  sectionNameTo_starts_with: String
  sectionNameTo_not_starts_with: String
  sectionNameTo_ends_with: String
  sectionNameTo_not_ends_with: String
  sectionNameTo_i: String
  sectionNameTo_not_i: String
  sectionNameTo_contains_i: String
  sectionNameTo_not_contains_i: String
  sectionNameTo_starts_with_i: String
  sectionNameTo_not_starts_with_i: String
  sectionNameTo_ends_with_i: String
  sectionNameTo_not_ends_with_i: String
  sectionNameTo_in: [String]
  sectionNameTo_not_in: [String]
  sectionTypeFrom: String
  sectionTypeFrom_not: String
  sectionTypeFrom_in: [String]
  sectionTypeFrom_not_in: [String]
  sectionTypeTo: String
  sectionTypeTo_not: String
  sectionTypeTo_in: [String]
  sectionTypeTo_not_in: [String]
  floorNameFrom: String
  floorNameFrom_not: String
  floorNameFrom_contains: String
  floorNameFrom_not_contains: String
  floorNameFrom_starts_with: String
  floorNameFrom_not_starts_with: String
  floorNameFrom_ends_with: String
  floorNameFrom_not_ends_with: String
  floorNameFrom_i: String
  floorNameFrom_not_i: String
  floorNameFrom_contains_i: String
  floorNameFrom_not_contains_i: String
  floorNameFrom_starts_with_i: String
  floorNameFrom_not_starts_with_i: String
  floorNameFrom_ends_with_i: String
  floorNameFrom_not_ends_with_i: String
  floorNameFrom_in: [String]
  floorNameFrom_not_in: [String]
  floorNameTo: String
  floorNameTo_not: String
  floorNameTo_contains: String
  floorNameTo_not_contains: String
  floorNameTo_starts_with: String
  floorNameTo_not_starts_with: String
  floorNameTo_ends_with: String
  floorNameTo_not_ends_with: String
  floorNameTo_i: String
  floorNameTo_not_i: String
  floorNameTo_contains_i: String
  floorNameTo_not_contains_i: String
  floorNameTo_starts_with_i: String
  floorNameTo_not_starts_with_i: String
  floorNameTo_ends_with_i: String
  floorNameTo_not_ends_with_i: String
  floorNameTo_in: [String]
  floorNameTo_not_in: [String]
  unitNameFrom: String
  unitNameFrom_not: String
  unitNameFrom_contains: String
  unitNameFrom_not_contains: String
  unitNameFrom_starts_with: String
  unitNameFrom_not_starts_with: String
  unitNameFrom_ends_with: String
  unitNameFrom_not_ends_with: String
  unitNameFrom_i: String
  unitNameFrom_not_i: String
  unitNameFrom_contains_i: String
  unitNameFrom_not_contains_i: String
  unitNameFrom_starts_with_i: String
  unitNameFrom_not_starts_with_i: String
  unitNameFrom_ends_with_i: String
  unitNameFrom_not_ends_with_i: String
  unitNameFrom_in: [String]
  unitNameFrom_not_in: [String]
  unitNameTo: String
  unitNameTo_not: String
  unitNameTo_contains: String
  unitNameTo_not_contains: String
  unitNameTo_starts_with: String
  unitNameTo_not_starts_with: String
  unitNameTo_ends_with: String
  unitNameTo_not_ends_with: String
  unitNameTo_i: String
  unitNameTo_not_i: String
  unitNameTo_contains_i: String
  unitNameTo_not_contains_i: String
  unitNameTo_starts_with_i: String
  unitNameTo_not_starts_with_i: String
  unitNameTo_ends_with_i: String
  unitNameTo_not_ends_with_i: String
  unitNameTo_in: [String]
  unitNameTo_not_in: [String]
  unitTypeFrom: String
  unitTypeFrom_not: String
  unitTypeFrom_in: [String]
  unitTypeFrom_not_in: [String]
  unitTypeTo: String
  unitTypeTo_not: String
  unitTypeTo_in: [String]
  unitTypeTo_not_in: [String]
  sourceMetaFrom: JSON
  sourceMetaFrom_not: JSON
  sourceMetaFrom_in: [JSON]
  sourceMetaFrom_not_in: [JSON]
  sourceMetaTo: JSON
  sourceMetaTo_not: JSON
  sourceMetaTo_in: [JSON]
  sourceMetaTo_not_in: [JSON]
  deferredUntilFrom: String
  deferredUntilFrom_not: String
  deferredUntilFrom_lt: String
  deferredUntilFrom_lte: String
  deferredUntilFrom_gt: String
  deferredUntilFrom_gte: String
  deferredUntilFrom_in: [String]
  deferredUntilFrom_not_in: [String]
  deferredUntilTo: String
  deferredUntilTo_not: String
  deferredUntilTo_lt: String
  deferredUntilTo_lte: String
  deferredUntilTo_gt: String
  deferredUntilTo_gte: String
  deferredUntilTo_in: [String]
  deferredUntilTo_not_in: [String]
  organizationIdFrom: ID
  organizationIdFrom_not: ID
  organizationIdFrom_in: [ID]
  organizationIdFrom_not_in: [ID]
  organizationIdTo: ID
  organizationIdTo_not: ID
  organizationIdTo_in: [ID]
  organizationIdTo_not_in: [ID]
  organizationDisplayNameFrom: String
  organizationDisplayNameFrom_not: String
  organizationDisplayNameFrom_contains: String
  organizationDisplayNameFrom_not_contains: String
  organizationDisplayNameFrom_starts_with: String
  organizationDisplayNameFrom_not_starts_with: String
  organizationDisplayNameFrom_ends_with: String
  organizationDisplayNameFrom_not_ends_with: String
  organizationDisplayNameFrom_i: String
  organizationDisplayNameFrom_not_i: String
  organizationDisplayNameFrom_contains_i: String
  organizationDisplayNameFrom_not_contains_i: String
  organizationDisplayNameFrom_starts_with_i: String
  organizationDisplayNameFrom_not_starts_with_i: String
  organizationDisplayNameFrom_ends_with_i: String
  organizationDisplayNameFrom_not_ends_with_i: String
  organizationDisplayNameFrom_in: [String]
  organizationDisplayNameFrom_not_in: [String]
  organizationDisplayNameTo: String
  organizationDisplayNameTo_not: String
  organizationDisplayNameTo_contains: String
  organizationDisplayNameTo_not_contains: String
  organizationDisplayNameTo_starts_with: String
  organizationDisplayNameTo_not_starts_with: String
  organizationDisplayNameTo_ends_with: String
  organizationDisplayNameTo_not_ends_with: String
  organizationDisplayNameTo_i: String
  organizationDisplayNameTo_not_i: String
  organizationDisplayNameTo_contains_i: String
  organizationDisplayNameTo_not_contains_i: String
  organizationDisplayNameTo_starts_with_i: String
  organizationDisplayNameTo_not_starts_with_i: String
  organizationDisplayNameTo_ends_with_i: String
  organizationDisplayNameTo_not_ends_with_i: String
  organizationDisplayNameTo_in: [String]
  organizationDisplayNameTo_not_in: [String]
  statusIdFrom: ID
  statusIdFrom_not: ID
  statusIdFrom_in: [ID]
  statusIdFrom_not_in: [ID]
  statusIdTo: ID
  statusIdTo_not: ID
  statusIdTo_in: [ID]
  statusIdTo_not_in: [ID]
  statusDisplayNameFrom: String
  statusDisplayNameFrom_not: String
  statusDisplayNameFrom_contains: String
  statusDisplayNameFrom_not_contains: String
  statusDisplayNameFrom_starts_with: String
  statusDisplayNameFrom_not_starts_with: String
  statusDisplayNameFrom_ends_with: String
  statusDisplayNameFrom_not_ends_with: String
  statusDisplayNameFrom_i: String
  statusDisplayNameFrom_not_i: String
  statusDisplayNameFrom_contains_i: String
  statusDisplayNameFrom_not_contains_i: String
  statusDisplayNameFrom_starts_with_i: String
  statusDisplayNameFrom_not_starts_with_i: String
  statusDisplayNameFrom_ends_with_i: String
  statusDisplayNameFrom_not_ends_with_i: String
  statusDisplayNameFrom_in: [String]
  statusDisplayNameFrom_not_in: [String]
  statusDisplayNameTo: String
  statusDisplayNameTo_not: String
  statusDisplayNameTo_contains: String
  statusDisplayNameTo_not_contains: String
  statusDisplayNameTo_starts_with: String
  statusDisplayNameTo_not_starts_with: String
  statusDisplayNameTo_ends_with: String
  statusDisplayNameTo_not_ends_with: String
  statusDisplayNameTo_i: String
  statusDisplayNameTo_not_i: String
  statusDisplayNameTo_contains_i: String
  statusDisplayNameTo_not_contains_i: String
  statusDisplayNameTo_starts_with_i: String
  statusDisplayNameTo_not_starts_with_i: String
  statusDisplayNameTo_ends_with_i: String
  statusDisplayNameTo_not_ends_with_i: String
  statusDisplayNameTo_in: [String]
  statusDisplayNameTo_not_in: [String]
  clientIdFrom: ID
  clientIdFrom_not: ID
  clientIdFrom_in: [ID]
  clientIdFrom_not_in: [ID]
  clientIdTo: ID
  clientIdTo_not: ID
  clientIdTo_in: [ID]
  clientIdTo_not_in: [ID]
  clientDisplayNameFrom: String
  clientDisplayNameFrom_not: String
  clientDisplayNameFrom_contains: String
  clientDisplayNameFrom_not_contains: String
  clientDisplayNameFrom_starts_with: String
  clientDisplayNameFrom_not_starts_with: String
  clientDisplayNameFrom_ends_with: String
  clientDisplayNameFrom_not_ends_with: String
  clientDisplayNameFrom_i: String
  clientDisplayNameFrom_not_i: String
  clientDisplayNameFrom_contains_i: String
  clientDisplayNameFrom_not_contains_i: String
  clientDisplayNameFrom_starts_with_i: String
  clientDisplayNameFrom_not_starts_with_i: String
  clientDisplayNameFrom_ends_with_i: String
  clientDisplayNameFrom_not_ends_with_i: String
  clientDisplayNameFrom_in: [String]
  clientDisplayNameFrom_not_in: [String]
  clientDisplayNameTo: String
  clientDisplayNameTo_not: String
  clientDisplayNameTo_contains: String
  clientDisplayNameTo_not_contains: String
  clientDisplayNameTo_starts_with: String
  clientDisplayNameTo_not_starts_with: String
  clientDisplayNameTo_ends_with: String
  clientDisplayNameTo_not_ends_with: String
  clientDisplayNameTo_i: String
  clientDisplayNameTo_not_i: String
  clientDisplayNameTo_contains_i: String
  clientDisplayNameTo_not_contains_i: String
  clientDisplayNameTo_starts_with_i: String
  clientDisplayNameTo_not_starts_with_i: String
  clientDisplayNameTo_ends_with_i: String
  clientDisplayNameTo_not_ends_with_i: String
  clientDisplayNameTo_in: [String]
  clientDisplayNameTo_not_in: [String]
  contactIdFrom: ID
  contactIdFrom_not: ID
  contactIdFrom_in: [ID]
  contactIdFrom_not_in: [ID]
  contactIdTo: ID
  contactIdTo_not: ID
  contactIdTo_in: [ID]
  contactIdTo_not_in: [ID]
  contactDisplayNameFrom: String
  contactDisplayNameFrom_not: String
  contactDisplayNameFrom_contains: String
  contactDisplayNameFrom_not_contains: String
  contactDisplayNameFrom_starts_with: String
  contactDisplayNameFrom_not_starts_with: String
  contactDisplayNameFrom_ends_with: String
  contactDisplayNameFrom_not_ends_with: String
  contactDisplayNameFrom_i: String
  contactDisplayNameFrom_not_i: String
  contactDisplayNameFrom_contains_i: String
  contactDisplayNameFrom_not_contains_i: String
  contactDisplayNameFrom_starts_with_i: String
  contactDisplayNameFrom_not_starts_with_i: String
  contactDisplayNameFrom_ends_with_i: String
  contactDisplayNameFrom_not_ends_with_i: String
  contactDisplayNameFrom_in: [String]
  contactDisplayNameFrom_not_in: [String]
  contactDisplayNameTo: String
  contactDisplayNameTo_not: String
  contactDisplayNameTo_contains: String
  contactDisplayNameTo_not_contains: String
  contactDisplayNameTo_starts_with: String
  contactDisplayNameTo_not_starts_with: String
  contactDisplayNameTo_ends_with: String
  contactDisplayNameTo_not_ends_with: String
  contactDisplayNameTo_i: String
  contactDisplayNameTo_not_i: String
  contactDisplayNameTo_contains_i: String
  contactDisplayNameTo_not_contains_i: String
  contactDisplayNameTo_starts_with_i: String
  contactDisplayNameTo_not_starts_with_i: String
  contactDisplayNameTo_ends_with_i: String
  contactDisplayNameTo_not_ends_with_i: String
  contactDisplayNameTo_in: [String]
  contactDisplayNameTo_not_in: [String]
  assigneeIdFrom: ID
  assigneeIdFrom_not: ID
  assigneeIdFrom_in: [ID]
  assigneeIdFrom_not_in: [ID]
  assigneeIdTo: ID
  assigneeIdTo_not: ID
  assigneeIdTo_in: [ID]
  assigneeIdTo_not_in: [ID]
  assigneeDisplayNameFrom: String
  assigneeDisplayNameFrom_not: String
  assigneeDisplayNameFrom_contains: String
  assigneeDisplayNameFrom_not_contains: String
  assigneeDisplayNameFrom_starts_with: String
  assigneeDisplayNameFrom_not_starts_with: String
  assigneeDisplayNameFrom_ends_with: String
  assigneeDisplayNameFrom_not_ends_with: String
  assigneeDisplayNameFrom_i: String
  assigneeDisplayNameFrom_not_i: String
  assigneeDisplayNameFrom_contains_i: String
  assigneeDisplayNameFrom_not_contains_i: String
  assigneeDisplayNameFrom_starts_with_i: String
  assigneeDisplayNameFrom_not_starts_with_i: String
  assigneeDisplayNameFrom_ends_with_i: String
  assigneeDisplayNameFrom_not_ends_with_i: String
  assigneeDisplayNameFrom_in: [String]
  assigneeDisplayNameFrom_not_in: [String]
  assigneeDisplayNameTo: String
  assigneeDisplayNameTo_not: String
  assigneeDisplayNameTo_contains: String
  assigneeDisplayNameTo_not_contains: String
  assigneeDisplayNameTo_starts_with: String
  assigneeDisplayNameTo_not_starts_with: String
  assigneeDisplayNameTo_ends_with: String
  assigneeDisplayNameTo_not_ends_with: String
  assigneeDisplayNameTo_i: String
  assigneeDisplayNameTo_not_i: String
  assigneeDisplayNameTo_contains_i: String
  assigneeDisplayNameTo_not_contains_i: String
  assigneeDisplayNameTo_starts_with_i: String
  assigneeDisplayNameTo_not_starts_with_i: String
  assigneeDisplayNameTo_ends_with_i: String
  assigneeDisplayNameTo_not_ends_with_i: String
  assigneeDisplayNameTo_in: [String]
  assigneeDisplayNameTo_not_in: [String]
  executorIdFrom: ID
  executorIdFrom_not: ID
  executorIdFrom_in: [ID]
  executorIdFrom_not_in: [ID]
  executorIdTo: ID
  executorIdTo_not: ID
  executorIdTo_in: [ID]
  executorIdTo_not_in: [ID]
  executorDisplayNameFrom: String
  executorDisplayNameFrom_not: String
  executorDisplayNameFrom_contains: String
  executorDisplayNameFrom_not_contains: String
  executorDisplayNameFrom_starts_with: String
  executorDisplayNameFrom_not_starts_with: String
  executorDisplayNameFrom_ends_with: String
  executorDisplayNameFrom_not_ends_with: String
  executorDisplayNameFrom_i: String
  executorDisplayNameFrom_not_i: String
  executorDisplayNameFrom_contains_i: String
  executorDisplayNameFrom_not_contains_i: String
  executorDisplayNameFrom_starts_with_i: String
  executorDisplayNameFrom_not_starts_with_i: String
  executorDisplayNameFrom_ends_with_i: String
  executorDisplayNameFrom_not_ends_with_i: String
  executorDisplayNameFrom_in: [String]
  executorDisplayNameFrom_not_in: [String]
  executorDisplayNameTo: String
  executorDisplayNameTo_not: String
  executorDisplayNameTo_contains: String
  executorDisplayNameTo_not_contains: String
  executorDisplayNameTo_starts_with: String
  executorDisplayNameTo_not_starts_with: String
  executorDisplayNameTo_ends_with: String
  executorDisplayNameTo_not_ends_with: String
  executorDisplayNameTo_i: String
  executorDisplayNameTo_not_i: String
  executorDisplayNameTo_contains_i: String
  executorDisplayNameTo_not_contains_i: String
  executorDisplayNameTo_starts_with_i: String
  executorDisplayNameTo_not_starts_with_i: String
  executorDisplayNameTo_ends_with_i: String
  executorDisplayNameTo_not_ends_with_i: String
  executorDisplayNameTo_in: [String]
  executorDisplayNameTo_not_in: [String]
  classifierIdFrom: ID
  classifierIdFrom_not: ID
  classifierIdFrom_in: [ID]
  classifierIdFrom_not_in: [ID]
  classifierIdTo: ID
  classifierIdTo_not: ID
  classifierIdTo_in: [ID]
  classifierIdTo_not_in: [ID]
  classifierDisplayNameFrom: String
  classifierDisplayNameFrom_not: String
  classifierDisplayNameFrom_contains: String
  classifierDisplayNameFrom_not_contains: String
  classifierDisplayNameFrom_starts_with: String
  classifierDisplayNameFrom_not_starts_with: String
  classifierDisplayNameFrom_ends_with: String
  classifierDisplayNameFrom_not_ends_with: String
  classifierDisplayNameFrom_i: String
  classifierDisplayNameFrom_not_i: String
  classifierDisplayNameFrom_contains_i: String
  classifierDisplayNameFrom_not_contains_i: String
  classifierDisplayNameFrom_starts_with_i: String
  classifierDisplayNameFrom_not_starts_with_i: String
  classifierDisplayNameFrom_ends_with_i: String
  classifierDisplayNameFrom_not_ends_with_i: String
  classifierDisplayNameFrom_in: [String]
  classifierDisplayNameFrom_not_in: [String]
  classifierDisplayNameTo: String
  classifierDisplayNameTo_not: String
  classifierDisplayNameTo_contains: String
  classifierDisplayNameTo_not_contains: String
  classifierDisplayNameTo_starts_with: String
  classifierDisplayNameTo_not_starts_with: String
  classifierDisplayNameTo_ends_with: String
  classifierDisplayNameTo_not_ends_with: String
  classifierDisplayNameTo_i: String
  classifierDisplayNameTo_not_i: String
  classifierDisplayNameTo_contains_i: String
  classifierDisplayNameTo_not_contains_i: String
  classifierDisplayNameTo_starts_with_i: String
  classifierDisplayNameTo_not_starts_with_i: String
  classifierDisplayNameTo_ends_with_i: String
  classifierDisplayNameTo_not_ends_with_i: String
  classifierDisplayNameTo_in: [String]
  classifierDisplayNameTo_not_in: [String]
  relatedIdFrom: ID
  relatedIdFrom_not: ID
  relatedIdFrom_in: [ID]
  relatedIdFrom_not_in: [ID]
  relatedIdTo: ID
  relatedIdTo_not: ID
  relatedIdTo_in: [ID]
  relatedIdTo_not_in: [ID]
  relatedDisplayNameFrom: String
  relatedDisplayNameFrom_not: String
  relatedDisplayNameFrom_contains: String
  relatedDisplayNameFrom_not_contains: String
  relatedDisplayNameFrom_starts_with: String
  relatedDisplayNameFrom_not_starts_with: String
  relatedDisplayNameFrom_ends_with: String
  relatedDisplayNameFrom_not_ends_with: String
  relatedDisplayNameFrom_i: String
  relatedDisplayNameFrom_not_i: String
  relatedDisplayNameFrom_contains_i: String
  relatedDisplayNameFrom_not_contains_i: String
  relatedDisplayNameFrom_starts_with_i: String
  relatedDisplayNameFrom_not_starts_with_i: String
  relatedDisplayNameFrom_ends_with_i: String
  relatedDisplayNameFrom_not_ends_with_i: String
  relatedDisplayNameFrom_in: [String]
  relatedDisplayNameFrom_not_in: [String]
  relatedDisplayNameTo: String
  relatedDisplayNameTo_not: String
  relatedDisplayNameTo_contains: String
  relatedDisplayNameTo_not_contains: String
  relatedDisplayNameTo_starts_with: String
  relatedDisplayNameTo_not_starts_with: String
  relatedDisplayNameTo_ends_with: String
  relatedDisplayNameTo_not_ends_with: String
  relatedDisplayNameTo_i: String
  relatedDisplayNameTo_not_i: String
  relatedDisplayNameTo_contains_i: String
  relatedDisplayNameTo_not_contains_i: String
  relatedDisplayNameTo_starts_with_i: String
  relatedDisplayNameTo_not_starts_with_i: String
  relatedDisplayNameTo_ends_with_i: String
  relatedDisplayNameTo_not_ends_with_i: String
  relatedDisplayNameTo_in: [String]
  relatedDisplayNameTo_not_in: [String]
  propertyIdFrom: ID
  propertyIdFrom_not: ID
  propertyIdFrom_in: [ID]
  propertyIdFrom_not_in: [ID]
  propertyIdTo: ID
  propertyIdTo_not: ID
  propertyIdTo_in: [ID]
  propertyIdTo_not_in: [ID]
  propertyDisplayNameFrom: String
  propertyDisplayNameFrom_not: String
  propertyDisplayNameFrom_contains: String
  propertyDisplayNameFrom_not_contains: String
  propertyDisplayNameFrom_starts_with: String
  propertyDisplayNameFrom_not_starts_with: String
  propertyDisplayNameFrom_ends_with: String
  propertyDisplayNameFrom_not_ends_with: String
  propertyDisplayNameFrom_i: String
  propertyDisplayNameFrom_not_i: String
  propertyDisplayNameFrom_contains_i: String
  propertyDisplayNameFrom_not_contains_i: String
  propertyDisplayNameFrom_starts_with_i: String
  propertyDisplayNameFrom_not_starts_with_i: String
  propertyDisplayNameFrom_ends_with_i: String
  propertyDisplayNameFrom_not_ends_with_i: String
  propertyDisplayNameFrom_in: [String]
  propertyDisplayNameFrom_not_in: [String]
  propertyDisplayNameTo: String
  propertyDisplayNameTo_not: String
  propertyDisplayNameTo_contains: String
  propertyDisplayNameTo_not_contains: String
  propertyDisplayNameTo_starts_with: String
  propertyDisplayNameTo_not_starts_with: String
  propertyDisplayNameTo_ends_with: String
  propertyDisplayNameTo_not_ends_with: String
  propertyDisplayNameTo_i: String
  propertyDisplayNameTo_not_i: String
  propertyDisplayNameTo_contains_i: String
  propertyDisplayNameTo_not_contains_i: String
  propertyDisplayNameTo_starts_with_i: String
  propertyDisplayNameTo_not_starts_with_i: String
  propertyDisplayNameTo_ends_with_i: String
  propertyDisplayNameTo_not_ends_with_i: String
  propertyDisplayNameTo_in: [String]
  propertyDisplayNameTo_not_in: [String]
  sourceIdFrom: ID
  sourceIdFrom_not: ID
  sourceIdFrom_in: [ID]
  sourceIdFrom_not_in: [ID]
  sourceIdTo: ID
  sourceIdTo_not: ID
  sourceIdTo_in: [ID]
  sourceIdTo_not_in: [ID]
  sourceDisplayNameFrom: String
  sourceDisplayNameFrom_not: String
  sourceDisplayNameFrom_contains: String
  sourceDisplayNameFrom_not_contains: String
  sourceDisplayNameFrom_starts_with: String
  sourceDisplayNameFrom_not_starts_with: String
  sourceDisplayNameFrom_ends_with: String
  sourceDisplayNameFrom_not_ends_with: String
  sourceDisplayNameFrom_i: String
  sourceDisplayNameFrom_not_i: String
  sourceDisplayNameFrom_contains_i: String
  sourceDisplayNameFrom_not_contains_i: String
  sourceDisplayNameFrom_starts_with_i: String
  sourceDisplayNameFrom_not_starts_with_i: String
  sourceDisplayNameFrom_ends_with_i: String
  sourceDisplayNameFrom_not_ends_with_i: String
  sourceDisplayNameFrom_in: [String]
  sourceDisplayNameFrom_not_in: [String]
  sourceDisplayNameTo: String
  sourceDisplayNameTo_not: String
  sourceDisplayNameTo_contains: String
  sourceDisplayNameTo_not_contains: String
  sourceDisplayNameTo_starts_with: String
  sourceDisplayNameTo_not_starts_with: String
  sourceDisplayNameTo_ends_with: String
  sourceDisplayNameTo_not_ends_with: String
  sourceDisplayNameTo_i: String
  sourceDisplayNameTo_not_i: String
  sourceDisplayNameTo_contains_i: String
  sourceDisplayNameTo_not_contains_i: String
  sourceDisplayNameTo_starts_with_i: String
  sourceDisplayNameTo_not_starts_with_i: String
  sourceDisplayNameTo_ends_with_i: String
  sourceDisplayNameTo_not_ends_with_i: String
  sourceDisplayNameTo_in: [String]
  sourceDisplayNameTo_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketChangeWhereUniqueInput {
  id: ID!
}

enum SortTicketChangesBy {
  ticket_ASC
  ticket_DESC
  statusReopenedCounterFrom_ASC
  statusReopenedCounterFrom_DESC
  statusReopenedCounterTo_ASC
  statusReopenedCounterTo_DESC
  reviewValueFrom_ASC
  reviewValueFrom_DESC
  reviewValueTo_ASC
  reviewValueTo_DESC
  reviewCommentFrom_ASC
  reviewCommentFrom_DESC
  reviewCommentTo_ASC
  reviewCommentTo_DESC
  statusReasonFrom_ASC
  statusReasonFrom_DESC
  statusReasonTo_ASC
  statusReasonTo_DESC
  deadlineFrom_ASC
  deadlineFrom_DESC
  deadlineTo_ASC
  deadlineTo_DESC
  clientNameFrom_ASC
  clientNameFrom_DESC
  clientNameTo_ASC
  clientNameTo_DESC
  clientEmailFrom_ASC
  clientEmailFrom_DESC
  clientEmailTo_ASC
  clientEmailTo_DESC
  clientPhoneFrom_ASC
  clientPhoneFrom_DESC
  clientPhoneTo_ASC
  clientPhoneTo_DESC
  detailsFrom_ASC
  detailsFrom_DESC
  detailsTo_ASC
  detailsTo_DESC
  isPaidFrom_ASC
  isPaidFrom_DESC
  isPaidTo_ASC
  isPaidTo_DESC
  isEmergencyFrom_ASC
  isEmergencyFrom_DESC
  isEmergencyTo_ASC
  isEmergencyTo_DESC
  isWarrantyFrom_ASC
  isWarrantyFrom_DESC
  isWarrantyTo_ASC
  isWarrantyTo_DESC
  isResidentTicketFrom_ASC
  isResidentTicketFrom_DESC
  isResidentTicketTo_ASC
  isResidentTicketTo_DESC
  canReadByResidentFrom_ASC
  canReadByResidentFrom_DESC
  canReadByResidentTo_ASC
  canReadByResidentTo_DESC
  propertyAddressFrom_ASC
  propertyAddressFrom_DESC
  propertyAddressTo_ASC
  propertyAddressTo_DESC
  sectionNameFrom_ASC
  sectionNameFrom_DESC
  sectionNameTo_ASC
  sectionNameTo_DESC
  sectionTypeFrom_ASC
  sectionTypeFrom_DESC
  sectionTypeTo_ASC
  sectionTypeTo_DESC
  floorNameFrom_ASC
  floorNameFrom_DESC
  floorNameTo_ASC
  floorNameTo_DESC
  unitNameFrom_ASC
  unitNameFrom_DESC
  unitNameTo_ASC
  unitNameTo_DESC
  unitTypeFrom_ASC
  unitTypeFrom_DESC
  unitTypeTo_ASC
  unitTypeTo_DESC
  deferredUntilFrom_ASC
  deferredUntilFrom_DESC
  deferredUntilTo_ASC
  deferredUntilTo_DESC
  organizationIdFrom_ASC
  organizationIdFrom_DESC
  organizationIdTo_ASC
  organizationIdTo_DESC
  organizationDisplayNameFrom_ASC
  organizationDisplayNameFrom_DESC
  organizationDisplayNameTo_ASC
  organizationDisplayNameTo_DESC
  statusIdFrom_ASC
  statusIdFrom_DESC
  statusIdTo_ASC
  statusIdTo_DESC
  statusDisplayNameFrom_ASC
  statusDisplayNameFrom_DESC
  statusDisplayNameTo_ASC
  statusDisplayNameTo_DESC
  clientIdFrom_ASC
  clientIdFrom_DESC
  clientIdTo_ASC
  clientIdTo_DESC
  clientDisplayNameFrom_ASC
  clientDisplayNameFrom_DESC
  clientDisplayNameTo_ASC
  clientDisplayNameTo_DESC
  contactIdFrom_ASC
  contactIdFrom_DESC
  contactIdTo_ASC
  contactIdTo_DESC
  contactDisplayNameFrom_ASC
  contactDisplayNameFrom_DESC
  contactDisplayNameTo_ASC
  contactDisplayNameTo_DESC
  assigneeIdFrom_ASC
  assigneeIdFrom_DESC
  assigneeIdTo_ASC
  assigneeIdTo_DESC
  assigneeDisplayNameFrom_ASC
  assigneeDisplayNameFrom_DESC
  assigneeDisplayNameTo_ASC
  assigneeDisplayNameTo_DESC
  executorIdFrom_ASC
  executorIdFrom_DESC
  executorIdTo_ASC
  executorIdTo_DESC
  executorDisplayNameFrom_ASC
  executorDisplayNameFrom_DESC
  executorDisplayNameTo_ASC
  executorDisplayNameTo_DESC
  classifierIdFrom_ASC
  classifierIdFrom_DESC
  classifierIdTo_ASC
  classifierIdTo_DESC
  classifierDisplayNameFrom_ASC
  classifierDisplayNameFrom_DESC
  classifierDisplayNameTo_ASC
  classifierDisplayNameTo_DESC
  relatedIdFrom_ASC
  relatedIdFrom_DESC
  relatedIdTo_ASC
  relatedIdTo_DESC
  relatedDisplayNameFrom_ASC
  relatedDisplayNameFrom_DESC
  relatedDisplayNameTo_ASC
  relatedDisplayNameTo_DESC
  propertyIdFrom_ASC
  propertyIdFrom_DESC
  propertyIdTo_ASC
  propertyIdTo_DESC
  propertyDisplayNameFrom_ASC
  propertyDisplayNameFrom_DESC
  propertyDisplayNameTo_ASC
  propertyDisplayNameTo_DESC
  sourceIdFrom_ASC
  sourceIdFrom_DESC
  sourceIdTo_ASC
  sourceIdTo_DESC
  sourceDisplayNameFrom_ASC
  sourceDisplayNameFrom_DESC
  sourceDisplayNameTo_ASC
  sourceDisplayNameTo_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  dv_ASC
  dv_DESC
}

input TicketChangeUpdateInput {
  ticket: TicketRelateToOneInput
  statusReopenedCounterFrom: Int
  statusReopenedCounterTo: Int
  reviewValueFrom: TicketChangeReviewValueFromType
  reviewValueTo: TicketChangeReviewValueToType
  reviewCommentFrom: String
  reviewCommentTo: String
  statusReasonFrom: String
  statusReasonTo: String
  deadlineFrom: String
  deadlineTo: String
  clientNameFrom: String
  clientNameTo: String
  clientEmailFrom: String
  clientEmailTo: String
  clientPhoneFrom: String
  clientPhoneTo: String
  detailsFrom: String
  detailsTo: String
  isPaidFrom: Boolean
  isPaidTo: Boolean
  isEmergencyFrom: Boolean
  isEmergencyTo: Boolean
  isWarrantyFrom: Boolean
  isWarrantyTo: Boolean
  isResidentTicketFrom: Boolean
  isResidentTicketTo: Boolean
  canReadByResidentFrom: Boolean
  canReadByResidentTo: Boolean
  metaFrom: JSON
  metaTo: JSON
  propertyAddressFrom: String
  propertyAddressTo: String
  propertyAddressMetaFrom: JSON
  propertyAddressMetaTo: JSON
  sectionNameFrom: String
  sectionNameTo: String
  sectionTypeFrom: String
  sectionTypeTo: String
  floorNameFrom: String
  floorNameTo: String
  unitNameFrom: String
  unitNameTo: String
  unitTypeFrom: String
  unitTypeTo: String
  sourceMetaFrom: JSON
  sourceMetaTo: JSON
  deferredUntilFrom: String
  deferredUntilTo: String
  organizationIdFrom: ID
  organizationIdTo: ID
  organizationDisplayNameFrom: String
  organizationDisplayNameTo: String
  statusIdFrom: ID
  statusIdTo: ID
  statusDisplayNameFrom: String
  statusDisplayNameTo: String
  clientIdFrom: ID
  clientIdTo: ID
  clientDisplayNameFrom: String
  clientDisplayNameTo: String
  contactIdFrom: ID
  contactIdTo: ID
  contactDisplayNameFrom: String
  contactDisplayNameTo: String
  assigneeIdFrom: ID
  assigneeIdTo: ID
  assigneeDisplayNameFrom: String
  assigneeDisplayNameTo: String
  executorIdFrom: ID
  executorIdTo: ID
  executorDisplayNameFrom: String
  executorDisplayNameTo: String
  classifierIdFrom: ID
  classifierIdTo: ID
  classifierDisplayNameFrom: String
  classifierDisplayNameTo: String
  relatedIdFrom: ID
  relatedIdTo: ID
  relatedDisplayNameFrom: String
  relatedDisplayNameTo: String
  propertyIdFrom: ID
  propertyIdTo: ID
  propertyDisplayNameFrom: String
  propertyDisplayNameTo: String
  sourceIdFrom: ID
  sourceIdTo: ID
  sourceDisplayNameFrom: String
  sourceDisplayNameTo: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
}

input TicketChangesUpdateInput {
  id: ID!
  data: TicketChangeUpdateInput
}

input TicketChangeCreateInput {
  ticket: TicketRelateToOneInput
  statusReopenedCounterFrom: Int
  statusReopenedCounterTo: Int
  reviewValueFrom: TicketChangeReviewValueFromType
  reviewValueTo: TicketChangeReviewValueToType
  reviewCommentFrom: String
  reviewCommentTo: String
  statusReasonFrom: String
  statusReasonTo: String
  deadlineFrom: String
  deadlineTo: String
  clientNameFrom: String
  clientNameTo: String
  clientEmailFrom: String
  clientEmailTo: String
  clientPhoneFrom: String
  clientPhoneTo: String
  detailsFrom: String
  detailsTo: String
  isPaidFrom: Boolean
  isPaidTo: Boolean
  isEmergencyFrom: Boolean
  isEmergencyTo: Boolean
  isWarrantyFrom: Boolean
  isWarrantyTo: Boolean
  isResidentTicketFrom: Boolean
  isResidentTicketTo: Boolean
  canReadByResidentFrom: Boolean
  canReadByResidentTo: Boolean
  metaFrom: JSON
  metaTo: JSON
  propertyAddressFrom: String
  propertyAddressTo: String
  propertyAddressMetaFrom: JSON
  propertyAddressMetaTo: JSON
  sectionNameFrom: String
  sectionNameTo: String
  sectionTypeFrom: String
  sectionTypeTo: String
  floorNameFrom: String
  floorNameTo: String
  unitNameFrom: String
  unitNameTo: String
  unitTypeFrom: String
  unitTypeTo: String
  sourceMetaFrom: JSON
  sourceMetaTo: JSON
  deferredUntilFrom: String
  deferredUntilTo: String
  organizationIdFrom: ID
  organizationIdTo: ID
  organizationDisplayNameFrom: String
  organizationDisplayNameTo: String
  statusIdFrom: ID
  statusIdTo: ID
  statusDisplayNameFrom: String
  statusDisplayNameTo: String
  clientIdFrom: ID
  clientIdTo: ID
  clientDisplayNameFrom: String
  clientDisplayNameTo: String
  contactIdFrom: ID
  contactIdTo: ID
  contactDisplayNameFrom: String
  contactDisplayNameTo: String
  assigneeIdFrom: ID
  assigneeIdTo: ID
  assigneeDisplayNameFrom: String
  assigneeDisplayNameTo: String
  executorIdFrom: ID
  executorIdTo: ID
  executorDisplayNameFrom: String
  executorDisplayNameTo: String
  classifierIdFrom: ID
  classifierIdTo: ID
  classifierDisplayNameFrom: String
  classifierDisplayNameTo: String
  relatedIdFrom: ID
  relatedIdTo: ID
  relatedDisplayNameFrom: String
  relatedDisplayNameTo: String
  propertyIdFrom: ID
  propertyIdTo: ID
  propertyDisplayNameFrom: String
  propertyDisplayNameTo: String
  sourceIdFrom: ID
  sourceIdTo: ID
  sourceDisplayNameFrom: String
  sourceDisplayNameTo: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
}

input TicketChangesCreateInput {
  data: TicketChangeCreateInput
}

enum TicketCommentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketCommentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCommentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketCommentHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketCommentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketCommentHistoryRecord List.
  """
  _label_: String
  type: String
  ticket: String
  user: String
  content: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentHistoryRecordWhereInput {
  AND: [TicketCommentHistoryRecordWhereInput]
  OR: [TicketCommentHistoryRecordWhereInput]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  ticket: String
  ticket_not: String
  ticket_in: [String]
  ticket_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  content: String
  content_not: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  content_i: String
  content_not_i: String
  content_contains_i: String
  content_not_contains_i: String
  content_starts_with_i: String
  content_not_starts_with_i: String
  content_ends_with_i: String
  content_not_ends_with_i: String
  content_in: [String]
  content_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketCommentHistoryRecordHistoryActionType
  history_action_not: TicketCommentHistoryRecordHistoryActionType
  history_action_in: [TicketCommentHistoryRecordHistoryActionType]
  history_action_not_in: [TicketCommentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketCommentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketCommentHistoryRecordsBy {
  type_ASC
  type_DESC
  content_ASC
  content_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketCommentHistoryRecordUpdateInput {
  type: String
  ticket: String
  user: String
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentHistoryRecordsUpdateInput {
  id: ID!
  data: TicketCommentHistoryRecordUpdateInput
}

input TicketCommentHistoryRecordCreateInput {
  type: String
  ticket: String
  user: String
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentHistoryRecordsCreateInput {
  data: TicketCommentHistoryRecordCreateInput
}

""" Textual comment for tickets """
type TicketComment {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketComment List config, or
   2. As an alias to the field set on 'labelField' in the TicketComment List config, or
   3. As an alias to a 'name' field on the TicketComment List (if one exists), or
   4. As an alias to the 'id' field on the TicketComment List.
  """
  _label_: String

  """ Comment type (internal for an organization or with a resident) """
  type: String

  """ Related ticket of the comment """
  ticket: Ticket

  """ User, who created the comment """
  user: User

  """ Plain text content """
  content: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketCommentWhereInput {
  AND: [TicketCommentWhereInput]
  OR: [TicketCommentWhereInput]
  type: String
  type_not: String
  type_in: [String]
  type_not_in: [String]
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  user: UserWhereInput
  user_is_null: Boolean
  content: String
  content_not: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  content_i: String
  content_not_i: String
  content_contains_i: String
  content_not_contains_i: String
  content_starts_with_i: String
  content_not_starts_with_i: String
  content_ends_with_i: String
  content_not_ends_with_i: String
  content_in: [String]
  content_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketCommentWhereUniqueInput {
  id: ID!
}

enum SortTicketCommentsBy {
  type_ASC
  type_DESC
  ticket_ASC
  ticket_DESC
  user_ASC
  user_DESC
  content_ASC
  content_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketCommentUpdateInput {
  type: String
  ticket: TicketRelateToOneInput
  user: UserRelateToOneInput
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCommentsUpdateInput {
  id: ID!
  data: TicketCommentUpdateInput
}

input TicketCommentCreateInput {
  type: String
  ticket: TicketRelateToOneInput
  user: UserRelateToOneInput
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCommentsCreateInput {
  data: TicketCommentCreateInput
}

enum TicketPlaceClassifierHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketPlaceClassifierHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketPlaceClassifierHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketPlaceClassifierHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketPlaceClassifierHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketPlaceClassifierHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPlaceClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketPlaceClassifierHistoryRecordWhereInput {
  AND: [TicketPlaceClassifierHistoryRecordWhereInput]
  OR: [TicketPlaceClassifierHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketPlaceClassifierHistoryRecordHistoryActionType
  history_action_not: TicketPlaceClassifierHistoryRecordHistoryActionType
  history_action_in: [TicketPlaceClassifierHistoryRecordHistoryActionType]
  history_action_not_in: [TicketPlaceClassifierHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketPlaceClassifierHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketPlaceClassifierHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketPlaceClassifierHistoryRecordUpdateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPlaceClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketPlaceClassifierHistoryRecordsUpdateInput {
  id: ID!
  data: TicketPlaceClassifierHistoryRecordUpdateInput
}

input TicketPlaceClassifierHistoryRecordCreateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPlaceClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketPlaceClassifierHistoryRecordsCreateInput {
  data: TicketPlaceClassifierHistoryRecordCreateInput
}

""" Describes where the incident occurred """
type TicketPlaceClassifier {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketPlaceClassifier List config, or
   2. As an alias to the field set on 'labelField' in the TicketPlaceClassifier List config, or
   3. As an alias to a 'name' field on the TicketPlaceClassifier List (if one exists), or
   4. As an alias to the 'id' field on the TicketPlaceClassifier List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ text content """
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketPlaceClassifierWhereInput {
  AND: [TicketPlaceClassifierWhereInput]
  OR: [TicketPlaceClassifierWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketPlaceClassifierWhereUniqueInput {
  id: ID!
}

enum SortTicketPlaceClassifiersBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketPlaceClassifierUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketPlaceClassifiersUpdateInput {
  id: ID!
  data: TicketPlaceClassifierUpdateInput
}

input TicketPlaceClassifierCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketPlaceClassifiersCreateInput {
  data: TicketPlaceClassifierCreateInput
}

enum TicketCategoryClassifierHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketCategoryClassifierHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCategoryClassifierHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketCategoryClassifierHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketCategoryClassifierHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketCategoryClassifierHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCategoryClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketCategoryClassifierHistoryRecordWhereInput {
  AND: [TicketCategoryClassifierHistoryRecordWhereInput]
  OR: [TicketCategoryClassifierHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketCategoryClassifierHistoryRecordHistoryActionType
  history_action_not: TicketCategoryClassifierHistoryRecordHistoryActionType
  history_action_in: [TicketCategoryClassifierHistoryRecordHistoryActionType]
  history_action_not_in: [TicketCategoryClassifierHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketCategoryClassifierHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketCategoryClassifierHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketCategoryClassifierHistoryRecordUpdateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCategoryClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketCategoryClassifierHistoryRecordsUpdateInput {
  id: ID!
  data: TicketCategoryClassifierHistoryRecordUpdateInput
}

input TicketCategoryClassifierHistoryRecordCreateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCategoryClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketCategoryClassifierHistoryRecordsCreateInput {
  data: TicketCategoryClassifierHistoryRecordCreateInput
}

""" Describes what type of work needs to be done to fix incident """
type TicketCategoryClassifier {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCategoryClassifier List config, or
   2. As an alias to the field set on 'labelField' in the TicketCategoryClassifier List config, or
   3. As an alias to a 'name' field on the TicketCategoryClassifier List (if one exists), or
   4. As an alias to the 'id' field on the TicketCategoryClassifier List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ text description """
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketCategoryClassifierWhereInput {
  AND: [TicketCategoryClassifierWhereInput]
  OR: [TicketCategoryClassifierWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketCategoryClassifierWhereUniqueInput {
  id: ID!
}

enum SortTicketCategoryClassifiersBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketCategoryClassifierUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCategoryClassifiersUpdateInput {
  id: ID!
  data: TicketCategoryClassifierUpdateInput
}

input TicketCategoryClassifierCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCategoryClassifiersCreateInput {
  data: TicketCategoryClassifierCreateInput
}

enum TicketProblemClassifierHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketProblemClassifierHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketProblemClassifierHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketProblemClassifierHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketProblemClassifierHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketProblemClassifierHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketProblemClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketProblemClassifierHistoryRecordWhereInput {
  AND: [TicketProblemClassifierHistoryRecordWhereInput]
  OR: [TicketProblemClassifierHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketProblemClassifierHistoryRecordHistoryActionType
  history_action_not: TicketProblemClassifierHistoryRecordHistoryActionType
  history_action_in: [TicketProblemClassifierHistoryRecordHistoryActionType]
  history_action_not_in: [TicketProblemClassifierHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketProblemClassifierHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketProblemClassifierHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketProblemClassifierHistoryRecordUpdateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketProblemClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketProblemClassifierHistoryRecordsUpdateInput {
  id: ID!
  data: TicketProblemClassifierHistoryRecordUpdateInput
}

input TicketProblemClassifierHistoryRecordCreateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketProblemClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketProblemClassifierHistoryRecordsCreateInput {
  data: TicketProblemClassifierHistoryRecordCreateInput
}

""" Describes what work needs to be done to fix incident """
type TicketProblemClassifier {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketProblemClassifier List config, or
   2. As an alias to the field set on 'labelField' in the TicketProblemClassifier List config, or
   3. As an alias to a 'name' field on the TicketProblemClassifier List (if one exists), or
   4. As an alias to the 'id' field on the TicketProblemClassifier List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ text content """
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketProblemClassifierWhereInput {
  AND: [TicketProblemClassifierWhereInput]
  OR: [TicketProblemClassifierWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketProblemClassifierWhereUniqueInput {
  id: ID!
}

enum SortTicketProblemClassifiersBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketProblemClassifierUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketProblemClassifiersUpdateInput {
  id: ID!
  data: TicketProblemClassifierUpdateInput
}

input TicketProblemClassifierCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketProblemClassifiersCreateInput {
  data: TicketProblemClassifierCreateInput
}

enum TicketClassifierHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketClassifierHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketClassifierHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketClassifierHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketClassifierHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketClassifierHistoryRecord List.
  """
  _label_: String
  organization: String
  place: String
  category: String
  problem: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketClassifierHistoryRecordWhereInput {
  AND: [TicketClassifierHistoryRecordWhereInput]
  OR: [TicketClassifierHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  place: String
  place_not: String
  place_in: [String]
  place_not_in: [String]
  category: String
  category_not: String
  category_in: [String]
  category_not_in: [String]
  problem: String
  problem_not: String
  problem_in: [String]
  problem_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketClassifierHistoryRecordHistoryActionType
  history_action_not: TicketClassifierHistoryRecordHistoryActionType
  history_action_in: [TicketClassifierHistoryRecordHistoryActionType]
  history_action_not_in: [TicketClassifierHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketClassifierHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketClassifierHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketClassifierHistoryRecordUpdateInput {
  organization: String
  place: String
  category: String
  problem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketClassifierHistoryRecordsUpdateInput {
  id: ID!
  data: TicketClassifierHistoryRecordUpdateInput
}

input TicketClassifierHistoryRecordCreateInput {
  organization: String
  place: String
  category: String
  problem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketClassifierHistoryRecordHistoryActionType
  history_id: String
}

input TicketClassifierHistoryRecordsCreateInput {
  data: TicketClassifierHistoryRecordCreateInput
}

""" Rules for all possible valid combinations of classifiers """
type TicketClassifier {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketClassifier List config, or
   2. As an alias to the field set on 'labelField' in the TicketClassifier List config, or
   3. As an alias to a 'name' field on the TicketClassifier List (if one exists), or
   4. As an alias to the 'id' field on the TicketClassifier List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ Location of incident """
  place: TicketPlaceClassifier

  """ Type of work to fix incident """
  category: TicketCategoryClassifier

  """ What needs to be done """
  problem: TicketProblemClassifier
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketClassifierWhereInput {
  AND: [TicketClassifierWhereInput]
  OR: [TicketClassifierWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  place: TicketPlaceClassifierWhereInput
  place_is_null: Boolean
  category: TicketCategoryClassifierWhereInput
  category_is_null: Boolean
  problem: TicketProblemClassifierWhereInput
  problem_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketClassifierWhereUniqueInput {
  id: ID!
}

enum SortTicketClassifiersBy {
  organization_ASC
  organization_DESC
  place_ASC
  place_DESC
  category_ASC
  category_DESC
  problem_ASC
  problem_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketClassifierUpdateInput {
  organization: OrganizationRelateToOneInput
  place: TicketPlaceClassifierRelateToOneInput
  category: TicketCategoryClassifierRelateToOneInput
  problem: TicketProblemClassifierRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketClassifiersUpdateInput {
  id: ID!
  data: TicketClassifierUpdateInput
}

input TicketClassifierCreateInput {
  organization: OrganizationRelateToOneInput
  place: TicketPlaceClassifierRelateToOneInput
  category: TicketCategoryClassifierRelateToOneInput
  problem: TicketProblemClassifierRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketClassifiersCreateInput {
  data: TicketClassifierCreateInput
}

enum TicketFilterTemplateHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketFilterTemplateHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketFilterTemplateHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketFilterTemplateHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketFilterTemplateHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketFilterTemplateHistoryRecord List.
  """
  _label_: String
  name: String
  employee: String
  fields: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input TicketFilterTemplateHistoryRecordWhereInput {
  AND: [TicketFilterTemplateHistoryRecordWhereInput]
  OR: [TicketFilterTemplateHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  employee: String
  employee_not: String
  employee_in: [String]
  employee_not_in: [String]
  fields: JSON
  fields_not: JSON
  fields_in: [JSON]
  fields_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketFilterTemplateHistoryRecordHistoryActionType
  history_action_not: TicketFilterTemplateHistoryRecordHistoryActionType
  history_action_in: [TicketFilterTemplateHistoryRecordHistoryActionType]
  history_action_not_in: [TicketFilterTemplateHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketFilterTemplateHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketFilterTemplateHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketFilterTemplateHistoryRecordUpdateInput {
  name: String
  employee: String
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input TicketFilterTemplateHistoryRecordsUpdateInput {
  id: ID!
  data: TicketFilterTemplateHistoryRecordUpdateInput
}

input TicketFilterTemplateHistoryRecordCreateInput {
  name: String
  employee: String
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input TicketFilterTemplateHistoryRecordsCreateInput {
  data: TicketFilterTemplateHistoryRecordCreateInput
}

type TicketFilter {
  organization: [String]
  number: Int
  createdAt: [String]
  status: [String]
  details: String
  property: [String]
  propertyScope: [String]
  address: String
  clientName: String
  executor: [String]
  assignee: [String]
  executorName: String
  deadline: [String]
  assigneeName: String
  attributes: [String]
  source: [String]
  sectionName: [String]
  floorName: [String]
  unitType: [String]
  unitName: [String]
  placeClassifier: [String]
  categoryClassifier: [String]
  problemClassifier: [String]
  clientPhone: [String]
  createdBy: [String]
  reviewValue: [String]
  contactIsNull: [String]
  completedAt: [String]
  lastCommentAt: [String]
}

""" Employee specific ticket filter template """
type TicketFilterTemplate {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketFilterTemplate List config, or
   2. As an alias to the field set on 'labelField' in the TicketFilterTemplate List config, or
   3. As an alias to a 'name' field on the TicketFilterTemplate List (if one exists), or
   4. As an alias to the 'id' field on the TicketFilterTemplate List.
  """
  _label_: String

  """ Ticket filter template name """
  name: String

  """ Link to employee, who created this template """
  employee: OrganizationEmployee

  """ Filter that match the given template """
  fields: TicketFilter
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketFilterTemplateWhereInput {
  AND: [TicketFilterTemplateWhereInput]
  OR: [TicketFilterTemplateWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  employee: OrganizationEmployeeWhereInput
  employee_is_null: Boolean
  fields: JSON
  fields_not: JSON
  fields_in: [JSON]
  fields_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketFilterTemplateWhereUniqueInput {
  id: ID!
}

enum SortTicketFilterTemplatesBy {
  name_ASC
  name_DESC
  employee_ASC
  employee_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketFilterTemplateUpdateInput {
  name: String
  employee: OrganizationEmployeeRelateToOneInput
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketFilterTemplatesUpdateInput {
  id: ID!
  data: TicketFilterTemplateUpdateInput
}

input TicketFilterTemplateCreateInput {
  name: String
  employee: OrganizationEmployeeRelateToOneInput
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketFilterTemplatesCreateInput {
  data: TicketFilterTemplateCreateInput
}

enum TicketCommentFileHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketCommentFileHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCommentFileHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketCommentFileHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketCommentFileHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketCommentFileHistoryRecord List.
  """
  _label_: String
  file: JSON
  ticket: String
  ticketComment: String
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentFileHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentFileHistoryRecordWhereInput {
  AND: [TicketCommentFileHistoryRecordWhereInput]
  OR: [TicketCommentFileHistoryRecordWhereInput]
  file: JSON
  file_not: JSON
  file_in: [JSON]
  file_not_in: [JSON]
  ticket: String
  ticket_not: String
  ticket_in: [String]
  ticket_not_in: [String]
  ticketComment: String
  ticketComment_not: String
  ticketComment_in: [String]
  ticketComment_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketCommentFileHistoryRecordHistoryActionType
  history_action_not: TicketCommentFileHistoryRecordHistoryActionType
  history_action_in: [TicketCommentFileHistoryRecordHistoryActionType]
  history_action_not_in: [TicketCommentFileHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketCommentFileHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketCommentFileHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketCommentFileHistoryRecordUpdateInput {
  file: JSON
  ticket: String
  ticketComment: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentFileHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentFileHistoryRecordsUpdateInput {
  id: ID!
  data: TicketCommentFileHistoryRecordUpdateInput
}

input TicketCommentFileHistoryRecordCreateInput {
  file: JSON
  ticket: String
  ticketComment: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentFileHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentFileHistoryRecordsCreateInput {
  data: TicketCommentFileHistoryRecordCreateInput
}

input TicketCommentRelateToOneInput {
  create: TicketCommentCreateInput
  connect: TicketCommentWhereUniqueInput
  disconnect: TicketCommentWhereUniqueInput
  disconnectAll: Boolean
}

""" File attached to the ticket comment """
type TicketCommentFile {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCommentFile List config, or
   2. As an alias to the field set on 'labelField' in the TicketCommentFile List config, or
   3. As an alias to a 'name' field on the TicketCommentFile List (if one exists), or
   4. As an alias to the 'id' field on the TicketCommentFile List.
  """
  _label_: String

  """ File object with meta information and publicUrl """
  file: File

  """ Link to ticket """
  ticket: Ticket

  """ Link to ticket comment """
  ticketComment: TicketComment

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketCommentFileWhereInput {
  AND: [TicketCommentFileWhereInput]
  OR: [TicketCommentFileWhereInput]
  file: String
  file_not: String
  file_in: [String]
  file_not_in: [String]
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  ticketComment: TicketCommentWhereInput
  ticketComment_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketCommentFileWhereUniqueInput {
  id: ID!
}

enum SortTicketCommentFilesBy {
  ticket_ASC
  ticket_DESC
  ticketComment_ASC
  ticketComment_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketCommentFileUpdateInput {
  file: Upload
  ticket: TicketRelateToOneInput
  ticketComment: TicketCommentRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCommentFilesUpdateInput {
  id: ID!
  data: TicketCommentFileUpdateInput
}

input TicketCommentFileCreateInput {
  file: Upload
  ticket: TicketRelateToOneInput
  ticketComment: TicketCommentRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCommentFilesCreateInput {
  data: TicketCommentFileCreateInput
}

enum TicketCommentsTimeHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketCommentsTimeHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCommentsTimeHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketCommentsTimeHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketCommentsTimeHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketCommentsTimeHistoryRecord List.
  """
  _label_: String
  ticket: String
  lastCommentAt: String
  lastResidentCommentAt: String
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentsTimeHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentsTimeHistoryRecordWhereInput {
  AND: [TicketCommentsTimeHistoryRecordWhereInput]
  OR: [TicketCommentsTimeHistoryRecordWhereInput]
  ticket: String
  ticket_not: String
  ticket_in: [String]
  ticket_not_in: [String]
  lastCommentAt: String
  lastCommentAt_not: String
  lastCommentAt_lt: String
  lastCommentAt_lte: String
  lastCommentAt_gt: String
  lastCommentAt_gte: String
  lastCommentAt_in: [String]
  lastCommentAt_not_in: [String]
  lastResidentCommentAt: String
  lastResidentCommentAt_not: String
  lastResidentCommentAt_lt: String
  lastResidentCommentAt_lte: String
  lastResidentCommentAt_gt: String
  lastResidentCommentAt_gte: String
  lastResidentCommentAt_in: [String]
  lastResidentCommentAt_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketCommentsTimeHistoryRecordHistoryActionType
  history_action_not: TicketCommentsTimeHistoryRecordHistoryActionType
  history_action_in: [TicketCommentsTimeHistoryRecordHistoryActionType]
  history_action_not_in: [TicketCommentsTimeHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketCommentsTimeHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketCommentsTimeHistoryRecordsBy {
  lastCommentAt_ASC
  lastCommentAt_DESC
  lastResidentCommentAt_ASC
  lastResidentCommentAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketCommentsTimeHistoryRecordUpdateInput {
  ticket: String
  lastCommentAt: String
  lastResidentCommentAt: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentsTimeHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentsTimeHistoryRecordsUpdateInput {
  id: ID!
  data: TicketCommentsTimeHistoryRecordUpdateInput
}

input TicketCommentsTimeHistoryRecordCreateInput {
  ticket: String
  lastCommentAt: String
  lastResidentCommentAt: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketCommentsTimeHistoryRecordHistoryActionType
  history_id: String
}

input TicketCommentsTimeHistoryRecordsCreateInput {
  data: TicketCommentsTimeHistoryRecordCreateInput
}

""" The time of the last comment and the last comment of the resident in a specific ticket 
"""
type TicketCommentsTime {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketCommentsTime List config, or
   2. As an alias to the field set on 'labelField' in the TicketCommentsTime List config, or
   3. As an alias to a 'name' field on the TicketCommentsTime List (if one exists), or
   4. As an alias to the 'id' field on the TicketCommentsTime List.
  """
  _label_: String

  """ Link to the ticket """
  ticket: Ticket

  """ Time of last comment with resident type in this ticket """
  lastCommentAt: String

  """ Time of last comment with resident user in this ticket """
  lastResidentCommentAt: String

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketCommentsTimeWhereInput {
  AND: [TicketCommentsTimeWhereInput]
  OR: [TicketCommentsTimeWhereInput]
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  lastCommentAt: String
  lastCommentAt_not: String
  lastCommentAt_lt: String
  lastCommentAt_lte: String
  lastCommentAt_gt: String
  lastCommentAt_gte: String
  lastCommentAt_in: [String]
  lastCommentAt_not_in: [String]
  lastResidentCommentAt: String
  lastResidentCommentAt_not: String
  lastResidentCommentAt_lt: String
  lastResidentCommentAt_lte: String
  lastResidentCommentAt_gt: String
  lastResidentCommentAt_gte: String
  lastResidentCommentAt_in: [String]
  lastResidentCommentAt_not_in: [String]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketCommentsTimeWhereUniqueInput {
  id: ID!
}

enum SortTicketCommentsTimesBy {
  ticket_ASC
  ticket_DESC
  lastCommentAt_ASC
  lastCommentAt_DESC
  lastResidentCommentAt_ASC
  lastResidentCommentAt_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketCommentsTimeUpdateInput {
  ticket: TicketRelateToOneInput
  lastCommentAt: String
  lastResidentCommentAt: String
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCommentsTimesUpdateInput {
  id: ID!
  data: TicketCommentsTimeUpdateInput
}

input TicketCommentsTimeCreateInput {
  ticket: TicketRelateToOneInput
  lastCommentAt: String
  lastResidentCommentAt: String
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketCommentsTimesCreateInput {
  data: TicketCommentsTimeCreateInput
}

enum UserTicketCommentReadTimeHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type UserTicketCommentReadTimeHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the UserTicketCommentReadTimeHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the UserTicketCommentReadTimeHistoryRecord List config, or
   3. As an alias to a 'name' field on the UserTicketCommentReadTimeHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the UserTicketCommentReadTimeHistoryRecord List.
  """
  _label_: String
  user: String
  ticket: String
  readCommentAt: String
  readResidentCommentAt: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserTicketCommentReadTimeHistoryRecordHistoryActionType
  history_id: String
}

input UserTicketCommentReadTimeHistoryRecordWhereInput {
  AND: [UserTicketCommentReadTimeHistoryRecordWhereInput]
  OR: [UserTicketCommentReadTimeHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  ticket: String
  ticket_not: String
  ticket_in: [String]
  ticket_not_in: [String]
  readCommentAt: String
  readCommentAt_not: String
  readCommentAt_lt: String
  readCommentAt_lte: String
  readCommentAt_gt: String
  readCommentAt_gte: String
  readCommentAt_in: [String]
  readCommentAt_not_in: [String]
  readResidentCommentAt: String
  readResidentCommentAt_not: String
  readResidentCommentAt_lt: String
  readResidentCommentAt_lte: String
  readResidentCommentAt_gt: String
  readResidentCommentAt_gte: String
  readResidentCommentAt_in: [String]
  readResidentCommentAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: UserTicketCommentReadTimeHistoryRecordHistoryActionType
  history_action_not: UserTicketCommentReadTimeHistoryRecordHistoryActionType
  history_action_in: [UserTicketCommentReadTimeHistoryRecordHistoryActionType]
  history_action_not_in: [UserTicketCommentReadTimeHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input UserTicketCommentReadTimeHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortUserTicketCommentReadTimeHistoryRecordsBy {
  readCommentAt_ASC
  readCommentAt_DESC
  readResidentCommentAt_ASC
  readResidentCommentAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input UserTicketCommentReadTimeHistoryRecordUpdateInput {
  user: String
  ticket: String
  readCommentAt: String
  readResidentCommentAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserTicketCommentReadTimeHistoryRecordHistoryActionType
  history_id: String
}

input UserTicketCommentReadTimeHistoryRecordsUpdateInput {
  id: ID!
  data: UserTicketCommentReadTimeHistoryRecordUpdateInput
}

input UserTicketCommentReadTimeHistoryRecordCreateInput {
  user: String
  ticket: String
  readCommentAt: String
  readResidentCommentAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: UserTicketCommentReadTimeHistoryRecordHistoryActionType
  history_id: String
}

input UserTicketCommentReadTimeHistoryRecordsCreateInput {
  data: UserTicketCommentReadTimeHistoryRecordCreateInput
}

""" Time when a comment from a resident was last read by a specific user in a specific ticket 
"""
type UserTicketCommentReadTime {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the UserTicketCommentReadTime List config, or
   2. As an alias to the field set on 'labelField' in the UserTicketCommentReadTime List config, or
   3. As an alias to a 'name' field on the UserTicketCommentReadTime List (if one exists), or
   4. As an alias to the 'id' field on the UserTicketCommentReadTime List.
  """
  _label_: String

  """ The user who read the comment """
  user: User

  """ Ticket in which the user read the comment """
  ticket: Ticket

  """ Time when the last comment was last read by the user """
  readCommentAt: String

  """ Time when the last comment from a resident was last read by the user """
  readResidentCommentAt: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input UserTicketCommentReadTimeWhereInput {
  AND: [UserTicketCommentReadTimeWhereInput]
  OR: [UserTicketCommentReadTimeWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  readCommentAt: String
  readCommentAt_not: String
  readCommentAt_lt: String
  readCommentAt_lte: String
  readCommentAt_gt: String
  readCommentAt_gte: String
  readCommentAt_in: [String]
  readCommentAt_not_in: [String]
  readResidentCommentAt: String
  readResidentCommentAt_not: String
  readResidentCommentAt_lt: String
  readResidentCommentAt_lte: String
  readResidentCommentAt_gt: String
  readResidentCommentAt_gte: String
  readResidentCommentAt_in: [String]
  readResidentCommentAt_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input UserTicketCommentReadTimeWhereUniqueInput {
  id: ID!
}

enum SortUserTicketCommentReadTimesBy {
  user_ASC
  user_DESC
  ticket_ASC
  ticket_DESC
  readCommentAt_ASC
  readCommentAt_DESC
  readResidentCommentAt_ASC
  readResidentCommentAt_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input UserTicketCommentReadTimeUpdateInput {
  user: UserRelateToOneInput
  ticket: TicketRelateToOneInput
  readCommentAt: String
  readResidentCommentAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input UserTicketCommentReadTimesUpdateInput {
  id: ID!
  data: UserTicketCommentReadTimeUpdateInput
}

input UserTicketCommentReadTimeCreateInput {
  user: UserRelateToOneInput
  ticket: TicketRelateToOneInput
  readCommentAt: String
  readResidentCommentAt: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input UserTicketCommentReadTimesCreateInput {
  data: UserTicketCommentReadTimeCreateInput
}

enum TicketPropertyHintHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketPropertyHintHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketPropertyHintHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketPropertyHintHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketPropertyHintHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketPropertyHintHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  content: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPropertyHintHistoryRecordHistoryActionType
  history_id: String
}

input TicketPropertyHintHistoryRecordWhereInput {
  AND: [TicketPropertyHintHistoryRecordWhereInput]
  OR: [TicketPropertyHintHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  content: String
  content_not: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  content_i: String
  content_not_i: String
  content_contains_i: String
  content_not_contains_i: String
  content_starts_with_i: String
  content_not_starts_with_i: String
  content_ends_with_i: String
  content_not_ends_with_i: String
  content_in: [String]
  content_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketPropertyHintHistoryRecordHistoryActionType
  history_action_not: TicketPropertyHintHistoryRecordHistoryActionType
  history_action_in: [TicketPropertyHintHistoryRecordHistoryActionType]
  history_action_not_in: [TicketPropertyHintHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketPropertyHintHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketPropertyHintHistoryRecordsBy {
  name_ASC
  name_DESC
  content_ASC
  content_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketPropertyHintHistoryRecordUpdateInput {
  organization: String
  name: String
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPropertyHintHistoryRecordHistoryActionType
  history_id: String
}

input TicketPropertyHintHistoryRecordsUpdateInput {
  id: ID!
  data: TicketPropertyHintHistoryRecordUpdateInput
}

input TicketPropertyHintHistoryRecordCreateInput {
  organization: String
  name: String
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPropertyHintHistoryRecordHistoryActionType
  history_id: String
}

input TicketPropertyHintHistoryRecordsCreateInput {
  data: TicketPropertyHintHistoryRecordCreateInput
}

""" Textual information in free format related to a property or group of properties, for example list of responsible for property, organization number for clients 
"""
type TicketPropertyHint {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketPropertyHint List config, or
   2. As an alias to the field set on 'labelField' in the TicketPropertyHint List config, or
   3. As an alias to a 'name' field on the TicketPropertyHint List (if one exists), or
   4. As an alias to the 'id' field on the TicketPropertyHint List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Hint name """
  name: String

  """ Textual content of help in HTML format """
  content: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketPropertyHintWhereInput {
  AND: [TicketPropertyHintWhereInput]
  OR: [TicketPropertyHintWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  content: String
  content_not: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  content_i: String
  content_not_i: String
  content_contains_i: String
  content_not_contains_i: String
  content_starts_with_i: String
  content_not_starts_with_i: String
  content_ends_with_i: String
  content_not_ends_with_i: String
  content_in: [String]
  content_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketPropertyHintWhereUniqueInput {
  id: ID!
}

enum SortTicketPropertyHintsBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  content_ASC
  content_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketPropertyHintUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketPropertyHintsUpdateInput {
  id: ID!
  data: TicketPropertyHintUpdateInput
}

input TicketPropertyHintCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  content: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketPropertyHintsCreateInput {
  data: TicketPropertyHintCreateInput
}

enum TicketPropertyHintPropertyHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketPropertyHintPropertyHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketPropertyHintPropertyHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketPropertyHintPropertyHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketPropertyHintPropertyHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketPropertyHintPropertyHistoryRecord List.
  """
  _label_: String
  ticketPropertyHint: String
  property: String
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPropertyHintPropertyHistoryRecordHistoryActionType
  history_id: String
}

input TicketPropertyHintPropertyHistoryRecordWhereInput {
  AND: [TicketPropertyHintPropertyHistoryRecordWhereInput]
  OR: [TicketPropertyHintPropertyHistoryRecordWhereInput]
  ticketPropertyHint: String
  ticketPropertyHint_not: String
  ticketPropertyHint_in: [String]
  ticketPropertyHint_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketPropertyHintPropertyHistoryRecordHistoryActionType
  history_action_not: TicketPropertyHintPropertyHistoryRecordHistoryActionType
  history_action_in: [TicketPropertyHintPropertyHistoryRecordHistoryActionType]
  history_action_not_in: [TicketPropertyHintPropertyHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketPropertyHintPropertyHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketPropertyHintPropertyHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketPropertyHintPropertyHistoryRecordUpdateInput {
  ticketPropertyHint: String
  property: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPropertyHintPropertyHistoryRecordHistoryActionType
  history_id: String
}

input TicketPropertyHintPropertyHistoryRecordsUpdateInput {
  id: ID!
  data: TicketPropertyHintPropertyHistoryRecordUpdateInput
}

input TicketPropertyHintPropertyHistoryRecordCreateInput {
  ticketPropertyHint: String
  property: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketPropertyHintPropertyHistoryRecordHistoryActionType
  history_id: String
}

input TicketPropertyHintPropertyHistoryRecordsCreateInput {
  data: TicketPropertyHintPropertyHistoryRecordCreateInput
}

input TicketPropertyHintRelateToOneInput {
  create: TicketPropertyHintCreateInput
  connect: TicketPropertyHintWhereUniqueInput
  disconnect: TicketPropertyHintWhereUniqueInput
  disconnectAll: Boolean
}

""" Join entity for many-to-many relations, that determines a Property to which the TicketPropertyHint belongs 
"""
type TicketPropertyHintProperty {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketPropertyHintProperty List config, or
   2. As an alias to the field set on 'labelField' in the TicketPropertyHintProperty List config, or
   3. As an alias to a 'name' field on the TicketPropertyHintProperty List (if one exists), or
   4. As an alias to the 'id' field on the TicketPropertyHintProperty List.
  """
  _label_: String

  """ TicketPropertyHint which belongs to property """
  ticketPropertyHint: TicketPropertyHint

  """ Property for which ticketPropertyHint exists """
  property: Property

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketPropertyHintPropertyWhereInput {
  AND: [TicketPropertyHintPropertyWhereInput]
  OR: [TicketPropertyHintPropertyWhereInput]
  ticketPropertyHint: TicketPropertyHintWhereInput
  ticketPropertyHint_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketPropertyHintPropertyWhereUniqueInput {
  id: ID!
}

enum SortTicketPropertyHintPropertiesBy {
  ticketPropertyHint_ASC
  ticketPropertyHint_DESC
  property_ASC
  property_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketPropertyHintPropertyUpdateInput {
  ticketPropertyHint: TicketPropertyHintRelateToOneInput
  property: PropertyRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketPropertyHintPropertiesUpdateInput {
  id: ID!
  data: TicketPropertyHintPropertyUpdateInput
}

input TicketPropertyHintPropertyCreateInput {
  ticketPropertyHint: TicketPropertyHintRelateToOneInput
  property: PropertyRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketPropertyHintPropertiesCreateInput {
  data: TicketPropertyHintPropertyCreateInput
}

enum TicketExportTaskHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketExportTaskHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketExportTaskHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketExportTaskHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketExportTaskHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketExportTaskHistoryRecord List.
  """
  _label_: String
  status: String
  format: String
  exportedRecordsCount: Int
  totalRecordsCount: Int
  file: JSON
  meta: JSON
  where: JSON
  sortBy: JSON
  locale: String
  timeZone: String
  user: String
  options: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketExportTaskHistoryRecordHistoryActionType
  history_id: String
}

input TicketExportTaskHistoryRecordWhereInput {
  AND: [TicketExportTaskHistoryRecordWhereInput]
  OR: [TicketExportTaskHistoryRecordWhereInput]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  format: String
  format_not: String
  format_contains: String
  format_not_contains: String
  format_starts_with: String
  format_not_starts_with: String
  format_ends_with: String
  format_not_ends_with: String
  format_i: String
  format_not_i: String
  format_contains_i: String
  format_not_contains_i: String
  format_starts_with_i: String
  format_not_starts_with_i: String
  format_ends_with_i: String
  format_not_ends_with_i: String
  format_in: [String]
  format_not_in: [String]
  exportedRecordsCount: Int
  exportedRecordsCount_not: Int
  exportedRecordsCount_lt: Int
  exportedRecordsCount_lte: Int
  exportedRecordsCount_gt: Int
  exportedRecordsCount_gte: Int
  exportedRecordsCount_in: [Int]
  exportedRecordsCount_not_in: [Int]
  totalRecordsCount: Int
  totalRecordsCount_not: Int
  totalRecordsCount_lt: Int
  totalRecordsCount_lte: Int
  totalRecordsCount_gt: Int
  totalRecordsCount_gte: Int
  totalRecordsCount_in: [Int]
  totalRecordsCount_not_in: [Int]
  file: JSON
  file_not: JSON
  file_in: [JSON]
  file_not_in: [JSON]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  where: JSON
  where_not: JSON
  where_in: [JSON]
  where_not_in: [JSON]
  sortBy: JSON
  sortBy_not: JSON
  sortBy_in: [JSON]
  sortBy_not_in: [JSON]
  locale: String
  locale_not: String
  locale_contains: String
  locale_not_contains: String
  locale_starts_with: String
  locale_not_starts_with: String
  locale_ends_with: String
  locale_not_ends_with: String
  locale_i: String
  locale_not_i: String
  locale_contains_i: String
  locale_not_contains_i: String
  locale_starts_with_i: String
  locale_not_starts_with_i: String
  locale_ends_with_i: String
  locale_not_ends_with_i: String
  locale_in: [String]
  locale_not_in: [String]
  timeZone: String
  timeZone_not: String
  timeZone_contains: String
  timeZone_not_contains: String
  timeZone_starts_with: String
  timeZone_not_starts_with: String
  timeZone_ends_with: String
  timeZone_not_ends_with: String
  timeZone_i: String
  timeZone_not_i: String
  timeZone_contains_i: String
  timeZone_not_contains_i: String
  timeZone_starts_with_i: String
  timeZone_not_starts_with_i: String
  timeZone_ends_with_i: String
  timeZone_not_ends_with_i: String
  timeZone_in: [String]
  timeZone_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  options: JSON
  options_not: JSON
  options_in: [JSON]
  options_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketExportTaskHistoryRecordHistoryActionType
  history_action_not: TicketExportTaskHistoryRecordHistoryActionType
  history_action_in: [TicketExportTaskHistoryRecordHistoryActionType]
  history_action_not_in: [TicketExportTaskHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketExportTaskHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketExportTaskHistoryRecordsBy {
  status_ASC
  status_DESC
  format_ASC
  format_DESC
  exportedRecordsCount_ASC
  exportedRecordsCount_DESC
  totalRecordsCount_ASC
  totalRecordsCount_DESC
  locale_ASC
  locale_DESC
  timeZone_ASC
  timeZone_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketExportTaskHistoryRecordUpdateInput {
  status: String
  format: String
  exportedRecordsCount: Int
  totalRecordsCount: Int
  file: JSON
  meta: JSON
  where: JSON
  sortBy: JSON
  locale: String
  timeZone: String
  user: String
  options: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketExportTaskHistoryRecordHistoryActionType
  history_id: String
}

input TicketExportTaskHistoryRecordsUpdateInput {
  id: ID!
  data: TicketExportTaskHistoryRecordUpdateInput
}

input TicketExportTaskHistoryRecordCreateInput {
  status: String
  format: String
  exportedRecordsCount: Int
  totalRecordsCount: Int
  file: JSON
  meta: JSON
  where: JSON
  sortBy: JSON
  locale: String
  timeZone: String
  user: String
  options: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketExportTaskHistoryRecordHistoryActionType
  history_id: String
}

input TicketExportTaskHistoryRecordsCreateInput {
  data: TicketExportTaskHistoryRecordCreateInput
}

enum TicketExportTaskStatusType {
  processing
  completed
  error
  cancelled
}

enum TicketExportTaskFormatType {
  excel
  pdf
}

type TicketExportOptions {
  commentIds: [String]
  haveAllComments: Boolean
  haveListCompletedWorks: Boolean
  haveConsumedMaterials: Boolean
  haveTotalCostWork: Boolean
}

input TicketExportOptionsInput {
  commentIds: [String]
  haveAllComments: Boolean
  haveListCompletedWorks: Boolean
  haveConsumedMaterials: Boolean
  haveTotalCostWork: Boolean
}

""" Stores requested export format, status of export job, link to exported file and information about progress of export job 
"""
type TicketExportTask {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketExportTask List config, or
   2. As an alias to the field set on 'labelField' in the TicketExportTask List config, or
   3. As an alias to a 'name' field on the TicketExportTask List (if one exists), or
   4. As an alias to the 'id' field on the TicketExportTask List.
  """
  _label_: String

  """ Status of export job """
  status: TicketExportTaskStatusType

  """ Requested export file format """
  format: TicketExportTaskFormatType

  """ How many records at the moment are exported """
  exportedRecordsCount: Int

  """ Total records to export that will be determined at server side in export operation 
  """
  totalRecordsCount: Int

  """ Meta information about file, saved outside of database somewhere. Shape of meta information JSON object is specific to file adapter, used by saving a file. 
  """
  file: File

  """ Stores information about query and ids of exported and failed records 
  """
  meta: JSON

  """ Filtering conditions for records to export """
  where: JSON

  """ Sorting parameters for records to export """
  sortBy: JSON

  """ Requested export locale, in that the resulting file will be rendered """
  locale: String

  """ To requested timeZone all datetime fields will be converted """
  timeZone: String

  """ User that requested this exporting operation. Will be used for read access checks to display all exported tasks somewhere and to display progress indicator of ongoing exporting task for current user 
  """
  user: User

  """ Options for exporting tickets into PDF format """
  options: TicketExportOptions
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketExportTaskWhereInput {
  AND: [TicketExportTaskWhereInput]
  OR: [TicketExportTaskWhereInput]
  status: TicketExportTaskStatusType
  status_not: TicketExportTaskStatusType
  status_in: [TicketExportTaskStatusType]
  status_not_in: [TicketExportTaskStatusType]
  format: TicketExportTaskFormatType
  format_not: TicketExportTaskFormatType
  format_in: [TicketExportTaskFormatType]
  format_not_in: [TicketExportTaskFormatType]
  exportedRecordsCount: Int
  exportedRecordsCount_not: Int
  exportedRecordsCount_lt: Int
  exportedRecordsCount_lte: Int
  exportedRecordsCount_gt: Int
  exportedRecordsCount_gte: Int
  exportedRecordsCount_in: [Int]
  exportedRecordsCount_not_in: [Int]
  totalRecordsCount: Int
  totalRecordsCount_not: Int
  totalRecordsCount_lt: Int
  totalRecordsCount_lte: Int
  totalRecordsCount_gt: Int
  totalRecordsCount_gte: Int
  totalRecordsCount_in: [Int]
  totalRecordsCount_not_in: [Int]
  file: String
  file_not: String
  file_in: [String]
  file_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  where: JSON
  where_not: JSON
  where_in: [JSON]
  where_not_in: [JSON]
  sortBy: JSON
  sortBy_not: JSON
  sortBy_in: [JSON]
  sortBy_not_in: [JSON]
  locale: String
  locale_not: String
  locale_contains: String
  locale_not_contains: String
  locale_starts_with: String
  locale_not_starts_with: String
  locale_ends_with: String
  locale_not_ends_with: String
  locale_i: String
  locale_not_i: String
  locale_contains_i: String
  locale_not_contains_i: String
  locale_starts_with_i: String
  locale_not_starts_with_i: String
  locale_ends_with_i: String
  locale_not_ends_with_i: String
  locale_in: [String]
  locale_not_in: [String]
  timeZone: String
  timeZone_not: String
  timeZone_contains: String
  timeZone_not_contains: String
  timeZone_starts_with: String
  timeZone_not_starts_with: String
  timeZone_ends_with: String
  timeZone_not_ends_with: String
  timeZone_i: String
  timeZone_not_i: String
  timeZone_contains_i: String
  timeZone_not_contains_i: String
  timeZone_starts_with_i: String
  timeZone_not_starts_with_i: String
  timeZone_ends_with_i: String
  timeZone_not_ends_with_i: String
  timeZone_in: [String]
  timeZone_not_in: [String]
  user: UserWhereInput
  user_is_null: Boolean
  options: TicketExportOptionsInput
  options_not: TicketExportOptionsInput
  options_in: [TicketExportOptionsInput]
  options_not_in: [TicketExportOptionsInput]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketExportTaskWhereUniqueInput {
  id: ID!
}

enum SortTicketExportTasksBy {
  status_ASC
  status_DESC
  format_ASC
  format_DESC
  exportedRecordsCount_ASC
  exportedRecordsCount_DESC
  totalRecordsCount_ASC
  totalRecordsCount_DESC
  locale_ASC
  locale_DESC
  timeZone_ASC
  timeZone_DESC
  user_ASC
  user_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketExportTaskUpdateInput {
  status: TicketExportTaskStatusType
  format: TicketExportTaskFormatType
  exportedRecordsCount: Int
  totalRecordsCount: Int
  file: Upload
  meta: JSON
  where: JSON
  sortBy: JSON
  locale: String
  timeZone: String
  user: UserRelateToOneInput
  options: TicketExportOptionsInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketExportTasksUpdateInput {
  id: ID!
  data: TicketExportTaskUpdateInput
}

input TicketExportTaskCreateInput {
  status: TicketExportTaskStatusType
  format: TicketExportTaskFormatType
  exportedRecordsCount: Int
  totalRecordsCount: Int
  file: Upload
  meta: JSON
  where: JSON
  sortBy: JSON
  locale: String
  timeZone: String
  user: UserRelateToOneInput
  options: TicketExportOptionsInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketExportTasksCreateInput {
  data: TicketExportTaskCreateInput
}

enum TicketOrganizationSettingHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type TicketOrganizationSettingHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketOrganizationSettingHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the TicketOrganizationSettingHistoryRecord List config, or
   3. As an alias to a 'name' field on the TicketOrganizationSettingHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the TicketOrganizationSettingHistoryRecord List.
  """
  _label_: String
  organization: String
  defaultDeadlineDuration: JSON
  paidDeadlineDuration: JSON
  emergencyDeadlineDuration: JSON
  warrantyDeadlineDuration: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketOrganizationSettingHistoryRecordHistoryActionType
  history_id: String
}

input TicketOrganizationSettingHistoryRecordWhereInput {
  AND: [TicketOrganizationSettingHistoryRecordWhereInput]
  OR: [TicketOrganizationSettingHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  defaultDeadlineDuration: JSON
  defaultDeadlineDuration_not: JSON
  defaultDeadlineDuration_in: [JSON]
  defaultDeadlineDuration_not_in: [JSON]
  paidDeadlineDuration: JSON
  paidDeadlineDuration_not: JSON
  paidDeadlineDuration_in: [JSON]
  paidDeadlineDuration_not_in: [JSON]
  emergencyDeadlineDuration: JSON
  emergencyDeadlineDuration_not: JSON
  emergencyDeadlineDuration_in: [JSON]
  emergencyDeadlineDuration_not_in: [JSON]
  warrantyDeadlineDuration: JSON
  warrantyDeadlineDuration_not: JSON
  warrantyDeadlineDuration_in: [JSON]
  warrantyDeadlineDuration_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: TicketOrganizationSettingHistoryRecordHistoryActionType
  history_action_not: TicketOrganizationSettingHistoryRecordHistoryActionType
  history_action_in: [TicketOrganizationSettingHistoryRecordHistoryActionType]
  history_action_not_in: [TicketOrganizationSettingHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input TicketOrganizationSettingHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortTicketOrganizationSettingHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input TicketOrganizationSettingHistoryRecordUpdateInput {
  organization: String
  defaultDeadlineDuration: JSON
  paidDeadlineDuration: JSON
  emergencyDeadlineDuration: JSON
  warrantyDeadlineDuration: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketOrganizationSettingHistoryRecordHistoryActionType
  history_id: String
}

input TicketOrganizationSettingHistoryRecordsUpdateInput {
  id: ID!
  data: TicketOrganizationSettingHistoryRecordUpdateInput
}

input TicketOrganizationSettingHistoryRecordCreateInput {
  organization: String
  defaultDeadlineDuration: JSON
  paidDeadlineDuration: JSON
  emergencyDeadlineDuration: JSON
  warrantyDeadlineDuration: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: TicketOrganizationSettingHistoryRecordHistoryActionType
  history_id: String
}

input TicketOrganizationSettingHistoryRecordsCreateInput {
  data: TicketOrganizationSettingHistoryRecordCreateInput
}

""" Ticket settings rules for each organization. (Setting the "deadline" fields for each ticket type) 
"""
type TicketOrganizationSetting {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the TicketOrganizationSetting List config, or
   2. As an alias to the field set on 'labelField' in the TicketOrganizationSetting List config, or
   3. As an alias to a 'name' field on the TicketOrganizationSetting List (if one exists), or
   4. As an alias to the 'id' field on the TicketOrganizationSetting List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Default deadline duration for default tickets (ISO 8601 format) """
  defaultDeadlineDuration: String

  """ Default deadline duration for paid tickets (ISO 8601 format) """
  paidDeadlineDuration: String

  """ Default deadline duration for emergency tickets (ISO 8601 format) """
  emergencyDeadlineDuration: String

  """ Default deadline duration for warranty tickets (ISO 8601 format) """
  warrantyDeadlineDuration: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input TicketOrganizationSettingWhereInput {
  AND: [TicketOrganizationSettingWhereInput]
  OR: [TicketOrganizationSettingWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  defaultDeadlineDuration: String
  defaultDeadlineDuration_not: String
  defaultDeadlineDuration_contains: String
  defaultDeadlineDuration_not_contains: String
  defaultDeadlineDuration_starts_with: String
  defaultDeadlineDuration_not_starts_with: String
  defaultDeadlineDuration_ends_with: String
  defaultDeadlineDuration_not_ends_with: String
  defaultDeadlineDuration_i: String
  defaultDeadlineDuration_not_i: String
  defaultDeadlineDuration_contains_i: String
  defaultDeadlineDuration_not_contains_i: String
  defaultDeadlineDuration_starts_with_i: String
  defaultDeadlineDuration_not_starts_with_i: String
  defaultDeadlineDuration_ends_with_i: String
  defaultDeadlineDuration_not_ends_with_i: String
  defaultDeadlineDuration_in: [String]
  defaultDeadlineDuration_not_in: [String]
  paidDeadlineDuration: String
  paidDeadlineDuration_not: String
  paidDeadlineDuration_contains: String
  paidDeadlineDuration_not_contains: String
  paidDeadlineDuration_starts_with: String
  paidDeadlineDuration_not_starts_with: String
  paidDeadlineDuration_ends_with: String
  paidDeadlineDuration_not_ends_with: String
  paidDeadlineDuration_i: String
  paidDeadlineDuration_not_i: String
  paidDeadlineDuration_contains_i: String
  paidDeadlineDuration_not_contains_i: String
  paidDeadlineDuration_starts_with_i: String
  paidDeadlineDuration_not_starts_with_i: String
  paidDeadlineDuration_ends_with_i: String
  paidDeadlineDuration_not_ends_with_i: String
  paidDeadlineDuration_in: [String]
  paidDeadlineDuration_not_in: [String]
  emergencyDeadlineDuration: String
  emergencyDeadlineDuration_not: String
  emergencyDeadlineDuration_contains: String
  emergencyDeadlineDuration_not_contains: String
  emergencyDeadlineDuration_starts_with: String
  emergencyDeadlineDuration_not_starts_with: String
  emergencyDeadlineDuration_ends_with: String
  emergencyDeadlineDuration_not_ends_with: String
  emergencyDeadlineDuration_i: String
  emergencyDeadlineDuration_not_i: String
  emergencyDeadlineDuration_contains_i: String
  emergencyDeadlineDuration_not_contains_i: String
  emergencyDeadlineDuration_starts_with_i: String
  emergencyDeadlineDuration_not_starts_with_i: String
  emergencyDeadlineDuration_ends_with_i: String
  emergencyDeadlineDuration_not_ends_with_i: String
  emergencyDeadlineDuration_in: [String]
  emergencyDeadlineDuration_not_in: [String]
  warrantyDeadlineDuration: String
  warrantyDeadlineDuration_not: String
  warrantyDeadlineDuration_contains: String
  warrantyDeadlineDuration_not_contains: String
  warrantyDeadlineDuration_starts_with: String
  warrantyDeadlineDuration_not_starts_with: String
  warrantyDeadlineDuration_ends_with: String
  warrantyDeadlineDuration_not_ends_with: String
  warrantyDeadlineDuration_i: String
  warrantyDeadlineDuration_not_i: String
  warrantyDeadlineDuration_contains_i: String
  warrantyDeadlineDuration_not_contains_i: String
  warrantyDeadlineDuration_starts_with_i: String
  warrantyDeadlineDuration_not_starts_with_i: String
  warrantyDeadlineDuration_ends_with_i: String
  warrantyDeadlineDuration_not_ends_with_i: String
  warrantyDeadlineDuration_in: [String]
  warrantyDeadlineDuration_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input TicketOrganizationSettingWhereUniqueInput {
  id: ID!
}

enum SortTicketOrganizationSettingsBy {
  organization_ASC
  organization_DESC
  defaultDeadlineDuration_ASC
  defaultDeadlineDuration_DESC
  paidDeadlineDuration_ASC
  paidDeadlineDuration_DESC
  emergencyDeadlineDuration_ASC
  emergencyDeadlineDuration_DESC
  warrantyDeadlineDuration_ASC
  warrantyDeadlineDuration_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input TicketOrganizationSettingUpdateInput {
  organization: OrganizationRelateToOneInput
  defaultDeadlineDuration: String
  paidDeadlineDuration: String
  emergencyDeadlineDuration: String
  warrantyDeadlineDuration: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketOrganizationSettingsUpdateInput {
  id: ID!
  data: TicketOrganizationSettingUpdateInput
}

input TicketOrganizationSettingCreateInput {
  organization: OrganizationRelateToOneInput
  defaultDeadlineDuration: String
  paidDeadlineDuration: String
  emergencyDeadlineDuration: String
  warrantyDeadlineDuration: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input TicketOrganizationSettingsCreateInput {
  data: TicketOrganizationSettingCreateInput
}

enum IncidentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type IncidentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the IncidentHistoryRecord List config, or
   3. As an alias to a 'name' field on the IncidentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the IncidentHistoryRecord List.
  """
  _label_: String
  organization: String
  number: JSON
  details: String
  status: String
  textForResident: String
  workStart: String
  workFinish: String
  workType: String
  hasAllProperties: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentHistoryRecordHistoryActionType
  history_id: String
}

input IncidentHistoryRecordWhereInput {
  AND: [IncidentHistoryRecordWhereInput]
  OR: [IncidentHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  number: JSON
  number_not: JSON
  number_in: [JSON]
  number_not_in: [JSON]
  details: String
  details_not: String
  details_contains: String
  details_not_contains: String
  details_starts_with: String
  details_not_starts_with: String
  details_ends_with: String
  details_not_ends_with: String
  details_i: String
  details_not_i: String
  details_contains_i: String
  details_not_contains_i: String
  details_starts_with_i: String
  details_not_starts_with_i: String
  details_ends_with_i: String
  details_not_ends_with_i: String
  details_in: [String]
  details_not_in: [String]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  textForResident: String
  textForResident_not: String
  textForResident_contains: String
  textForResident_not_contains: String
  textForResident_starts_with: String
  textForResident_not_starts_with: String
  textForResident_ends_with: String
  textForResident_not_ends_with: String
  textForResident_i: String
  textForResident_not_i: String
  textForResident_contains_i: String
  textForResident_not_contains_i: String
  textForResident_starts_with_i: String
  textForResident_not_starts_with_i: String
  textForResident_ends_with_i: String
  textForResident_not_ends_with_i: String
  textForResident_in: [String]
  textForResident_not_in: [String]
  workStart: String
  workStart_not: String
  workStart_lt: String
  workStart_lte: String
  workStart_gt: String
  workStart_gte: String
  workStart_in: [String]
  workStart_not_in: [String]
  workFinish: String
  workFinish_not: String
  workFinish_lt: String
  workFinish_lte: String
  workFinish_gt: String
  workFinish_gte: String
  workFinish_in: [String]
  workFinish_not_in: [String]
  workType: String
  workType_not: String
  workType_contains: String
  workType_not_contains: String
  workType_starts_with: String
  workType_not_starts_with: String
  workType_ends_with: String
  workType_not_ends_with: String
  workType_i: String
  workType_not_i: String
  workType_contains_i: String
  workType_not_contains_i: String
  workType_starts_with_i: String
  workType_not_starts_with_i: String
  workType_ends_with_i: String
  workType_not_ends_with_i: String
  workType_in: [String]
  workType_not_in: [String]
  hasAllProperties: Boolean
  hasAllProperties_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: IncidentHistoryRecordHistoryActionType
  history_action_not: IncidentHistoryRecordHistoryActionType
  history_action_in: [IncidentHistoryRecordHistoryActionType]
  history_action_not_in: [IncidentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input IncidentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortIncidentHistoryRecordsBy {
  details_ASC
  details_DESC
  status_ASC
  status_DESC
  textForResident_ASC
  textForResident_DESC
  workStart_ASC
  workStart_DESC
  workFinish_ASC
  workFinish_DESC
  workType_ASC
  workType_DESC
  hasAllProperties_ASC
  hasAllProperties_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input IncidentHistoryRecordUpdateInput {
  organization: String
  number: JSON
  details: String
  status: String
  textForResident: String
  workStart: String
  workFinish: String
  workType: String
  hasAllProperties: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentHistoryRecordHistoryActionType
  history_id: String
}

input IncidentHistoryRecordsUpdateInput {
  id: ID!
  data: IncidentHistoryRecordUpdateInput
}

input IncidentHistoryRecordCreateInput {
  organization: String
  number: JSON
  details: String
  status: String
  textForResident: String
  workStart: String
  workFinish: String
  workType: String
  hasAllProperties: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentHistoryRecordHistoryActionType
  history_id: String
}

input IncidentHistoryRecordsCreateInput {
  data: IncidentHistoryRecordCreateInput
}

enum IncidentStatusType {
  actual
  not_actual
}

enum IncidentWorkTypeType {
  scheduled
  emergency
}

""" Entries of mass planned and emergency incidents with water, electricity, etc. 
"""
type Incident {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Incident List config, or
   2. As an alias to the field set on 'labelField' in the Incident List config, or
   3. As an alias to a 'name' field on the Incident List (if one exists), or
   4. As an alias to the 'id' field on the Incident List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Autogenerated incident human readable ID """
  number: Int

  """ Text description of the incident """
  details: String

  """ Incident status indicates the actuality of the incident """
  status: IncidentStatusType

  """ Text that employees should say to residents """
  textForResident: String

  """ Start date of work related to the incident (seconds and milliseconds are forced to zero) 
  """
  workStart: String

  """ Finish date of work related to the incident (seconds and milliseconds are forced to zero) 
  """
  workFinish: String

  """ Type of work that is carried out during the incident: emergency or scheduled 
  """
  workType: IncidentWorkTypeType

  """ True if incident includes all properties in organization """
  hasAllProperties: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input IncidentWhereInput {
  AND: [IncidentWhereInput]
  OR: [IncidentWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  number: Int
  number_not: Int
  number_lt: Int
  number_lte: Int
  number_gt: Int
  number_gte: Int
  number_in: [Int]
  number_not_in: [Int]
  details: String
  details_not: String
  details_contains: String
  details_not_contains: String
  details_starts_with: String
  details_not_starts_with: String
  details_ends_with: String
  details_not_ends_with: String
  details_i: String
  details_not_i: String
  details_contains_i: String
  details_not_contains_i: String
  details_starts_with_i: String
  details_not_starts_with_i: String
  details_ends_with_i: String
  details_not_ends_with_i: String
  details_in: [String]
  details_not_in: [String]
  status: IncidentStatusType
  status_not: IncidentStatusType
  status_in: [IncidentStatusType]
  status_not_in: [IncidentStatusType]
  textForResident: String
  textForResident_not: String
  textForResident_contains: String
  textForResident_not_contains: String
  textForResident_starts_with: String
  textForResident_not_starts_with: String
  textForResident_ends_with: String
  textForResident_not_ends_with: String
  textForResident_i: String
  textForResident_not_i: String
  textForResident_contains_i: String
  textForResident_not_contains_i: String
  textForResident_starts_with_i: String
  textForResident_not_starts_with_i: String
  textForResident_ends_with_i: String
  textForResident_not_ends_with_i: String
  textForResident_in: [String]
  textForResident_not_in: [String]
  workStart: String
  workStart_not: String
  workStart_lt: String
  workStart_lte: String
  workStart_gt: String
  workStart_gte: String
  workStart_in: [String]
  workStart_not_in: [String]
  workFinish: String
  workFinish_not: String
  workFinish_lt: String
  workFinish_lte: String
  workFinish_gt: String
  workFinish_gte: String
  workFinish_in: [String]
  workFinish_not_in: [String]
  workType: IncidentWorkTypeType
  workType_not: IncidentWorkTypeType
  workType_in: [IncidentWorkTypeType]
  workType_not_in: [IncidentWorkTypeType]
  hasAllProperties: Boolean
  hasAllProperties_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input IncidentWhereUniqueInput {
  id: ID!
}

enum SortIncidentsBy {
  organization_ASC
  organization_DESC
  number_ASC
  number_DESC
  details_ASC
  details_DESC
  status_ASC
  status_DESC
  textForResident_ASC
  textForResident_DESC
  workStart_ASC
  workStart_DESC
  workFinish_ASC
  workFinish_DESC
  workType_ASC
  workType_DESC
  hasAllProperties_ASC
  hasAllProperties_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input IncidentUpdateInput {
  organization: OrganizationRelateToOneInput
  number: Int
  details: String
  status: IncidentStatusType
  textForResident: String
  workStart: String
  workFinish: String
  workType: IncidentWorkTypeType
  hasAllProperties: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentsUpdateInput {
  id: ID!
  data: IncidentUpdateInput
}

input IncidentCreateInput {
  organization: OrganizationRelateToOneInput
  number: Int
  details: String
  status: IncidentStatusType
  textForResident: String
  workStart: String
  workFinish: String
  workType: IncidentWorkTypeType
  hasAllProperties: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentsCreateInput {
  data: IncidentCreateInput
}

input IncidentRelateToOneInput {
  create: IncidentCreateInput
  connect: IncidentWhereUniqueInput
  disconnect: IncidentWhereUniqueInput
  disconnectAll: Boolean
}

enum IncidentChangeStatusFromType {
  actual
  not_actual
}

enum IncidentChangeStatusToType {
  actual
  not_actual
}

enum IncidentChangeWorkTypeFromType {
  scheduled
  emergency
}

enum IncidentChangeWorkTypeToType {
  scheduled
  emergency
}

""" Incremental changes of Incident """
type IncidentChange {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentChange List config, or
   2. As an alias to the field set on 'labelField' in the IncidentChange List config, or
   3. As an alias to a 'name' field on the IncidentChange List (if one exists), or
   4. As an alias to the 'id' field on the IncidentChange List.
  """
  _label_: String

  """ Related incident, whose change is logged in this entity """
  incident: Incident

  """ Text description of the incident """
  detailsFrom: String

  """ Text description of the incident """
  detailsTo: String

  """ Incident status indicates the actuality of the incident """
  statusFrom: IncidentChangeStatusFromType

  """ Incident status indicates the actuality of the incident """
  statusTo: IncidentChangeStatusToType

  """ Text that employees should say to residents """
  textForResidentFrom: String

  """ Text that employees should say to residents """
  textForResidentTo: String

  """ Start date of work related to the incident (seconds and milliseconds are forced to zero) 
  """
  workStartFrom: String

  """ Start date of work related to the incident (seconds and milliseconds are forced to zero) 
  """
  workStartTo: String

  """ Finish date of work related to the incident (seconds and milliseconds are forced to zero) 
  """
  workFinishFrom: String

  """ Finish date of work related to the incident (seconds and milliseconds are forced to zero) 
  """
  workFinishTo: String

  """ Type of work that is carried out during the incident: emergency or scheduled 
  """
  workTypeFrom: IncidentChangeWorkTypeFromType

  """ Type of work that is carried out during the incident: emergency or scheduled 
  """
  workTypeTo: IncidentChangeWorkTypeToType

  """ Old id of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationIdFrom: ID

  """ New id of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationIdTo: ID

  """ Old display name of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationDisplayNameFrom: String

  """ New display name of related entity. Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organizationDisplayNameTo: String

  """ Type of employee who changed the incident, can be employee role from same organization or related, resident or deleted employee 
  """
  changedByRole: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input IncidentChangeWhereInput {
  AND: [IncidentChangeWhereInput]
  OR: [IncidentChangeWhereInput]
  incident: IncidentWhereInput
  incident_is_null: Boolean
  detailsFrom: String
  detailsFrom_not: String
  detailsFrom_contains: String
  detailsFrom_not_contains: String
  detailsFrom_starts_with: String
  detailsFrom_not_starts_with: String
  detailsFrom_ends_with: String
  detailsFrom_not_ends_with: String
  detailsFrom_i: String
  detailsFrom_not_i: String
  detailsFrom_contains_i: String
  detailsFrom_not_contains_i: String
  detailsFrom_starts_with_i: String
  detailsFrom_not_starts_with_i: String
  detailsFrom_ends_with_i: String
  detailsFrom_not_ends_with_i: String
  detailsFrom_in: [String]
  detailsFrom_not_in: [String]
  detailsTo: String
  detailsTo_not: String
  detailsTo_contains: String
  detailsTo_not_contains: String
  detailsTo_starts_with: String
  detailsTo_not_starts_with: String
  detailsTo_ends_with: String
  detailsTo_not_ends_with: String
  detailsTo_i: String
  detailsTo_not_i: String
  detailsTo_contains_i: String
  detailsTo_not_contains_i: String
  detailsTo_starts_with_i: String
  detailsTo_not_starts_with_i: String
  detailsTo_ends_with_i: String
  detailsTo_not_ends_with_i: String
  detailsTo_in: [String]
  detailsTo_not_in: [String]
  statusFrom: IncidentChangeStatusFromType
  statusFrom_not: IncidentChangeStatusFromType
  statusFrom_in: [IncidentChangeStatusFromType]
  statusFrom_not_in: [IncidentChangeStatusFromType]
  statusTo: IncidentChangeStatusToType
  statusTo_not: IncidentChangeStatusToType
  statusTo_in: [IncidentChangeStatusToType]
  statusTo_not_in: [IncidentChangeStatusToType]
  textForResidentFrom: String
  textForResidentFrom_not: String
  textForResidentFrom_contains: String
  textForResidentFrom_not_contains: String
  textForResidentFrom_starts_with: String
  textForResidentFrom_not_starts_with: String
  textForResidentFrom_ends_with: String
  textForResidentFrom_not_ends_with: String
  textForResidentFrom_i: String
  textForResidentFrom_not_i: String
  textForResidentFrom_contains_i: String
  textForResidentFrom_not_contains_i: String
  textForResidentFrom_starts_with_i: String
  textForResidentFrom_not_starts_with_i: String
  textForResidentFrom_ends_with_i: String
  textForResidentFrom_not_ends_with_i: String
  textForResidentFrom_in: [String]
  textForResidentFrom_not_in: [String]
  textForResidentTo: String
  textForResidentTo_not: String
  textForResidentTo_contains: String
  textForResidentTo_not_contains: String
  textForResidentTo_starts_with: String
  textForResidentTo_not_starts_with: String
  textForResidentTo_ends_with: String
  textForResidentTo_not_ends_with: String
  textForResidentTo_i: String
  textForResidentTo_not_i: String
  textForResidentTo_contains_i: String
  textForResidentTo_not_contains_i: String
  textForResidentTo_starts_with_i: String
  textForResidentTo_not_starts_with_i: String
  textForResidentTo_ends_with_i: String
  textForResidentTo_not_ends_with_i: String
  textForResidentTo_in: [String]
  textForResidentTo_not_in: [String]
  workStartFrom: String
  workStartFrom_not: String
  workStartFrom_lt: String
  workStartFrom_lte: String
  workStartFrom_gt: String
  workStartFrom_gte: String
  workStartFrom_in: [String]
  workStartFrom_not_in: [String]
  workStartTo: String
  workStartTo_not: String
  workStartTo_lt: String
  workStartTo_lte: String
  workStartTo_gt: String
  workStartTo_gte: String
  workStartTo_in: [String]
  workStartTo_not_in: [String]
  workFinishFrom: String
  workFinishFrom_not: String
  workFinishFrom_lt: String
  workFinishFrom_lte: String
  workFinishFrom_gt: String
  workFinishFrom_gte: String
  workFinishFrom_in: [String]
  workFinishFrom_not_in: [String]
  workFinishTo: String
  workFinishTo_not: String
  workFinishTo_lt: String
  workFinishTo_lte: String
  workFinishTo_gt: String
  workFinishTo_gte: String
  workFinishTo_in: [String]
  workFinishTo_not_in: [String]
  workTypeFrom: IncidentChangeWorkTypeFromType
  workTypeFrom_not: IncidentChangeWorkTypeFromType
  workTypeFrom_in: [IncidentChangeWorkTypeFromType]
  workTypeFrom_not_in: [IncidentChangeWorkTypeFromType]
  workTypeTo: IncidentChangeWorkTypeToType
  workTypeTo_not: IncidentChangeWorkTypeToType
  workTypeTo_in: [IncidentChangeWorkTypeToType]
  workTypeTo_not_in: [IncidentChangeWorkTypeToType]
  organizationIdFrom: ID
  organizationIdFrom_not: ID
  organizationIdFrom_in: [ID]
  organizationIdFrom_not_in: [ID]
  organizationIdTo: ID
  organizationIdTo_not: ID
  organizationIdTo_in: [ID]
  organizationIdTo_not_in: [ID]
  organizationDisplayNameFrom: String
  organizationDisplayNameFrom_not: String
  organizationDisplayNameFrom_contains: String
  organizationDisplayNameFrom_not_contains: String
  organizationDisplayNameFrom_starts_with: String
  organizationDisplayNameFrom_not_starts_with: String
  organizationDisplayNameFrom_ends_with: String
  organizationDisplayNameFrom_not_ends_with: String
  organizationDisplayNameFrom_i: String
  organizationDisplayNameFrom_not_i: String
  organizationDisplayNameFrom_contains_i: String
  organizationDisplayNameFrom_not_contains_i: String
  organizationDisplayNameFrom_starts_with_i: String
  organizationDisplayNameFrom_not_starts_with_i: String
  organizationDisplayNameFrom_ends_with_i: String
  organizationDisplayNameFrom_not_ends_with_i: String
  organizationDisplayNameFrom_in: [String]
  organizationDisplayNameFrom_not_in: [String]
  organizationDisplayNameTo: String
  organizationDisplayNameTo_not: String
  organizationDisplayNameTo_contains: String
  organizationDisplayNameTo_not_contains: String
  organizationDisplayNameTo_starts_with: String
  organizationDisplayNameTo_not_starts_with: String
  organizationDisplayNameTo_ends_with: String
  organizationDisplayNameTo_not_ends_with: String
  organizationDisplayNameTo_i: String
  organizationDisplayNameTo_not_i: String
  organizationDisplayNameTo_contains_i: String
  organizationDisplayNameTo_not_contains_i: String
  organizationDisplayNameTo_starts_with_i: String
  organizationDisplayNameTo_not_starts_with_i: String
  organizationDisplayNameTo_ends_with_i: String
  organizationDisplayNameTo_not_ends_with_i: String
  organizationDisplayNameTo_in: [String]
  organizationDisplayNameTo_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input IncidentChangeWhereUniqueInput {
  id: ID!
}

enum SortIncidentChangesBy {
  incident_ASC
  incident_DESC
  detailsFrom_ASC
  detailsFrom_DESC
  detailsTo_ASC
  detailsTo_DESC
  statusFrom_ASC
  statusFrom_DESC
  statusTo_ASC
  statusTo_DESC
  textForResidentFrom_ASC
  textForResidentFrom_DESC
  textForResidentTo_ASC
  textForResidentTo_DESC
  workStartFrom_ASC
  workStartFrom_DESC
  workStartTo_ASC
  workStartTo_DESC
  workFinishFrom_ASC
  workFinishFrom_DESC
  workFinishTo_ASC
  workFinishTo_DESC
  workTypeFrom_ASC
  workTypeFrom_DESC
  workTypeTo_ASC
  workTypeTo_DESC
  organizationIdFrom_ASC
  organizationIdFrom_DESC
  organizationIdTo_ASC
  organizationIdTo_DESC
  organizationDisplayNameFrom_ASC
  organizationDisplayNameFrom_DESC
  organizationDisplayNameTo_ASC
  organizationDisplayNameTo_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  dv_ASC
  dv_DESC
}

input IncidentChangeUpdateInput {
  incident: IncidentRelateToOneInput
  detailsFrom: String
  detailsTo: String
  statusFrom: IncidentChangeStatusFromType
  statusTo: IncidentChangeStatusToType
  textForResidentFrom: String
  textForResidentTo: String
  workStartFrom: String
  workStartTo: String
  workFinishFrom: String
  workFinishTo: String
  workTypeFrom: IncidentChangeWorkTypeFromType
  workTypeTo: IncidentChangeWorkTypeToType
  organizationIdFrom: ID
  organizationIdTo: ID
  organizationDisplayNameFrom: String
  organizationDisplayNameTo: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
}

input IncidentChangesUpdateInput {
  id: ID!
  data: IncidentChangeUpdateInput
}

input IncidentChangeCreateInput {
  incident: IncidentRelateToOneInput
  detailsFrom: String
  detailsTo: String
  statusFrom: IncidentChangeStatusFromType
  statusTo: IncidentChangeStatusToType
  textForResidentFrom: String
  textForResidentTo: String
  workStartFrom: String
  workStartTo: String
  workFinishFrom: String
  workFinishTo: String
  workTypeFrom: IncidentChangeWorkTypeFromType
  workTypeTo: IncidentChangeWorkTypeToType
  organizationIdFrom: ID
  organizationIdTo: ID
  organizationDisplayNameFrom: String
  organizationDisplayNameTo: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  dv: Int
  sender: SenderFieldInput
}

input IncidentChangesCreateInput {
  data: IncidentChangeCreateInput
}

enum IncidentPropertyHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type IncidentPropertyHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentPropertyHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the IncidentPropertyHistoryRecord List config, or
   3. As an alias to a 'name' field on the IncidentPropertyHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the IncidentPropertyHistoryRecord List.
  """
  _label_: String
  incident: String
  property: String
  propertyAddress: String
  propertyAddressMeta: JSON
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentPropertyHistoryRecordHistoryActionType
  history_id: String
}

input IncidentPropertyHistoryRecordWhereInput {
  AND: [IncidentPropertyHistoryRecordWhereInput]
  OR: [IncidentPropertyHistoryRecordWhereInput]
  incident: String
  incident_not: String
  incident_in: [String]
  incident_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  propertyAddress: String
  propertyAddress_not: String
  propertyAddress_contains: String
  propertyAddress_not_contains: String
  propertyAddress_starts_with: String
  propertyAddress_not_starts_with: String
  propertyAddress_ends_with: String
  propertyAddress_not_ends_with: String
  propertyAddress_i: String
  propertyAddress_not_i: String
  propertyAddress_contains_i: String
  propertyAddress_not_contains_i: String
  propertyAddress_starts_with_i: String
  propertyAddress_not_starts_with_i: String
  propertyAddress_ends_with_i: String
  propertyAddress_not_ends_with_i: String
  propertyAddress_in: [String]
  propertyAddress_not_in: [String]
  propertyAddressMeta: JSON
  propertyAddressMeta_not: JSON
  propertyAddressMeta_in: [JSON]
  propertyAddressMeta_not_in: [JSON]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: IncidentPropertyHistoryRecordHistoryActionType
  history_action_not: IncidentPropertyHistoryRecordHistoryActionType
  history_action_in: [IncidentPropertyHistoryRecordHistoryActionType]
  history_action_not_in: [IncidentPropertyHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input IncidentPropertyHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortIncidentPropertyHistoryRecordsBy {
  propertyAddress_ASC
  propertyAddress_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input IncidentPropertyHistoryRecordUpdateInput {
  incident: String
  property: String
  propertyAddress: String
  propertyAddressMeta: JSON
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentPropertyHistoryRecordHistoryActionType
  history_id: String
}

input IncidentPropertyHistoryRecordsUpdateInput {
  id: ID!
  data: IncidentPropertyHistoryRecordUpdateInput
}

input IncidentPropertyHistoryRecordCreateInput {
  incident: String
  property: String
  propertyAddress: String
  propertyAddressMeta: JSON
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentPropertyHistoryRecordHistoryActionType
  history_id: String
}

input IncidentPropertyHistoryRecordsCreateInput {
  data: IncidentPropertyHistoryRecordCreateInput
}

""" Many-to-many relationship between Incident and Property """
type IncidentProperty {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentProperty List config, or
   2. As an alias to the field set on 'labelField' in the IncidentProperty List config, or
   3. As an alias to a 'name' field on the IncidentProperty List (if one exists), or
   4. As an alias to the 'id' field on the IncidentProperty List.
  """
  _label_: String

  """ Incident which has a property """
  incident: Incident

  """ A property which is in the incident entry """
  property: Property

  """ Address of property, which synced with property and displayed, if property is deleted 
  """
  propertyAddress: String

  """ Address meta of property, which synced with property and used to form view of address, if property is deleted 
  """
  propertyAddressMeta: AddressMetaField

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input IncidentPropertyWhereInput {
  AND: [IncidentPropertyWhereInput]
  OR: [IncidentPropertyWhereInput]
  incident: IncidentWhereInput
  incident_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  propertyAddress: String
  propertyAddress_not: String
  propertyAddress_contains: String
  propertyAddress_not_contains: String
  propertyAddress_starts_with: String
  propertyAddress_not_starts_with: String
  propertyAddress_ends_with: String
  propertyAddress_not_ends_with: String
  propertyAddress_i: String
  propertyAddress_not_i: String
  propertyAddress_contains_i: String
  propertyAddress_not_contains_i: String
  propertyAddress_starts_with_i: String
  propertyAddress_not_starts_with_i: String
  propertyAddress_ends_with_i: String
  propertyAddress_not_ends_with_i: String
  propertyAddress_in: [String]
  propertyAddress_not_in: [String]
  propertyAddressMeta: JSON
  propertyAddressMeta_not: JSON
  propertyAddressMeta_in: [JSON]
  propertyAddressMeta_not_in: [JSON]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input IncidentPropertyWhereUniqueInput {
  id: ID!
}

enum SortIncidentPropertiesBy {
  incident_ASC
  incident_DESC
  property_ASC
  property_DESC
  propertyAddress_ASC
  propertyAddress_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input IncidentPropertyUpdateInput {
  incident: IncidentRelateToOneInput
  property: PropertyRelateToOneInput
  propertyAddress: String
  propertyAddressMeta: JSON
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentPropertiesUpdateInput {
  id: ID!
  data: IncidentPropertyUpdateInput
}

input IncidentPropertyCreateInput {
  incident: IncidentRelateToOneInput
  property: PropertyRelateToOneInput
  propertyAddress: String
  propertyAddressMeta: JSON
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentPropertiesCreateInput {
  data: IncidentPropertyCreateInput
}

enum IncidentClassifierHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type IncidentClassifierHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentClassifierHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the IncidentClassifierHistoryRecord List config, or
   3. As an alias to a 'name' field on the IncidentClassifierHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the IncidentClassifierHistoryRecord List.
  """
  _label_: String
  organization: String
  category: String
  problem: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentClassifierHistoryRecordHistoryActionType
  history_id: String
}

input IncidentClassifierHistoryRecordWhereInput {
  AND: [IncidentClassifierHistoryRecordWhereInput]
  OR: [IncidentClassifierHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  category: String
  category_not: String
  category_in: [String]
  category_not_in: [String]
  problem: String
  problem_not: String
  problem_in: [String]
  problem_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: IncidentClassifierHistoryRecordHistoryActionType
  history_action_not: IncidentClassifierHistoryRecordHistoryActionType
  history_action_in: [IncidentClassifierHistoryRecordHistoryActionType]
  history_action_not_in: [IncidentClassifierHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input IncidentClassifierHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortIncidentClassifierHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input IncidentClassifierHistoryRecordUpdateInput {
  organization: String
  category: String
  problem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentClassifierHistoryRecordHistoryActionType
  history_id: String
}

input IncidentClassifierHistoryRecordsUpdateInput {
  id: ID!
  data: IncidentClassifierHistoryRecordUpdateInput
}

input IncidentClassifierHistoryRecordCreateInput {
  organization: String
  category: String
  problem: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentClassifierHistoryRecordHistoryActionType
  history_id: String
}

input IncidentClassifierHistoryRecordsCreateInput {
  data: IncidentClassifierHistoryRecordCreateInput
}

""" Rules for all possible valid combinations of classifiers for incidents 
"""
type IncidentClassifier {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentClassifier List config, or
   2. As an alias to the field set on 'labelField' in the IncidentClassifier List config, or
   3. As an alias to a 'name' field on the IncidentClassifier List (if one exists), or
   4. As an alias to the 'id' field on the IncidentClassifier List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ Type of work to fix incident """
  category: TicketCategoryClassifier

  """ What needs to be done """
  problem: TicketProblemClassifier
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input IncidentClassifierWhereInput {
  AND: [IncidentClassifierWhereInput]
  OR: [IncidentClassifierWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  category: TicketCategoryClassifierWhereInput
  category_is_null: Boolean
  problem: TicketProblemClassifierWhereInput
  problem_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input IncidentClassifierWhereUniqueInput {
  id: ID!
}

enum SortIncidentClassifiersBy {
  organization_ASC
  organization_DESC
  category_ASC
  category_DESC
  problem_ASC
  problem_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input IncidentClassifierUpdateInput {
  organization: OrganizationRelateToOneInput
  category: TicketCategoryClassifierRelateToOneInput
  problem: TicketProblemClassifierRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentClassifiersUpdateInput {
  id: ID!
  data: IncidentClassifierUpdateInput
}

input IncidentClassifierCreateInput {
  organization: OrganizationRelateToOneInput
  category: TicketCategoryClassifierRelateToOneInput
  problem: TicketProblemClassifierRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentClassifiersCreateInput {
  data: IncidentClassifierCreateInput
}

enum IncidentClassifierIncidentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type IncidentClassifierIncidentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentClassifierIncidentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the IncidentClassifierIncidentHistoryRecord List config, or
   3. As an alias to a 'name' field on the IncidentClassifierIncidentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the IncidentClassifierIncidentHistoryRecord List.
  """
  _label_: String
  incident: String
  classifier: String
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentClassifierIncidentHistoryRecordHistoryActionType
  history_id: String
}

input IncidentClassifierIncidentHistoryRecordWhereInput {
  AND: [IncidentClassifierIncidentHistoryRecordWhereInput]
  OR: [IncidentClassifierIncidentHistoryRecordWhereInput]
  incident: String
  incident_not: String
  incident_in: [String]
  incident_not_in: [String]
  classifier: String
  classifier_not: String
  classifier_in: [String]
  classifier_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: IncidentClassifierIncidentHistoryRecordHistoryActionType
  history_action_not: IncidentClassifierIncidentHistoryRecordHistoryActionType
  history_action_in: [IncidentClassifierIncidentHistoryRecordHistoryActionType]
  history_action_not_in: [IncidentClassifierIncidentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input IncidentClassifierIncidentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortIncidentClassifierIncidentHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input IncidentClassifierIncidentHistoryRecordUpdateInput {
  incident: String
  classifier: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentClassifierIncidentHistoryRecordHistoryActionType
  history_id: String
}

input IncidentClassifierIncidentHistoryRecordsUpdateInput {
  id: ID!
  data: IncidentClassifierIncidentHistoryRecordUpdateInput
}

input IncidentClassifierIncidentHistoryRecordCreateInput {
  incident: String
  classifier: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: IncidentClassifierIncidentHistoryRecordHistoryActionType
  history_id: String
}

input IncidentClassifierIncidentHistoryRecordsCreateInput {
  data: IncidentClassifierIncidentHistoryRecordCreateInput
}

input IncidentClassifierRelateToOneInput {
  create: IncidentClassifierCreateInput
  connect: IncidentClassifierWhereUniqueInput
  disconnect: IncidentClassifierWhereUniqueInput
  disconnectAll: Boolean
}

""" Many-to-many relationship between Incident and IncidentClassifier """
type IncidentClassifierIncident {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the IncidentClassifierIncident List config, or
   2. As an alias to the field set on 'labelField' in the IncidentClassifierIncident List config, or
   3. As an alias to a 'name' field on the IncidentClassifierIncident List (if one exists), or
   4. As an alias to the 'id' field on the IncidentClassifierIncident List.
  """
  _label_: String

  """ Incident which has a classifier """
  incident: Incident

  """ A classifier which is in the incident entry """
  classifier: IncidentClassifier

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input IncidentClassifierIncidentWhereInput {
  AND: [IncidentClassifierIncidentWhereInput]
  OR: [IncidentClassifierIncidentWhereInput]
  incident: IncidentWhereInput
  incident_is_null: Boolean
  classifier: IncidentClassifierWhereInput
  classifier_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input IncidentClassifierIncidentWhereUniqueInput {
  id: ID!
}

enum SortIncidentClassifierIncidentsBy {
  incident_ASC
  incident_DESC
  classifier_ASC
  classifier_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input IncidentClassifierIncidentUpdateInput {
  incident: IncidentRelateToOneInput
  classifier: IncidentClassifierRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentClassifierIncidentsUpdateInput {
  id: ID!
  data: IncidentClassifierIncidentUpdateInput
}

input IncidentClassifierIncidentCreateInput {
  incident: IncidentRelateToOneInput
  classifier: IncidentClassifierRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input IncidentClassifierIncidentsCreateInput {
  data: IncidentClassifierIncidentCreateInput
}

enum MessageHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MessageHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MessageHistoryRecord List config, or
   3. As an alias to a 'name' field on the MessageHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MessageHistoryRecord List.
  """
  _label_: String
  organization: String
  user: String
  phone: String
  email: String
  remoteClient: String
  emailFrom: String
  lang: String
  type: String
  meta: JSON
  status: String
  processingMeta: JSON
  deliveredAt: String
  sentAt: String
  readAt: String
  uniqKey: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageHistoryRecordHistoryActionType
  history_id: String
}

input MessageHistoryRecordWhereInput {
  AND: [MessageHistoryRecordWhereInput]
  OR: [MessageHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  remoteClient: String
  remoteClient_not: String
  remoteClient_in: [String]
  remoteClient_not_in: [String]
  emailFrom: String
  emailFrom_not: String
  emailFrom_contains: String
  emailFrom_not_contains: String
  emailFrom_starts_with: String
  emailFrom_not_starts_with: String
  emailFrom_ends_with: String
  emailFrom_not_ends_with: String
  emailFrom_i: String
  emailFrom_not_i: String
  emailFrom_contains_i: String
  emailFrom_not_contains_i: String
  emailFrom_starts_with_i: String
  emailFrom_not_starts_with_i: String
  emailFrom_ends_with_i: String
  emailFrom_not_ends_with_i: String
  emailFrom_in: [String]
  emailFrom_not_in: [String]
  lang: String
  lang_not: String
  lang_contains: String
  lang_not_contains: String
  lang_starts_with: String
  lang_not_starts_with: String
  lang_ends_with: String
  lang_not_ends_with: String
  lang_i: String
  lang_not_i: String
  lang_contains_i: String
  lang_not_contains_i: String
  lang_starts_with_i: String
  lang_not_starts_with_i: String
  lang_ends_with_i: String
  lang_not_ends_with_i: String
  lang_in: [String]
  lang_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  processingMeta: JSON
  processingMeta_not: JSON
  processingMeta_in: [JSON]
  processingMeta_not_in: [JSON]
  deliveredAt: String
  deliveredAt_not: String
  deliveredAt_lt: String
  deliveredAt_lte: String
  deliveredAt_gt: String
  deliveredAt_gte: String
  deliveredAt_in: [String]
  deliveredAt_not_in: [String]
  sentAt: String
  sentAt_not: String
  sentAt_lt: String
  sentAt_lte: String
  sentAt_gt: String
  sentAt_gte: String
  sentAt_in: [String]
  sentAt_not_in: [String]
  readAt: String
  readAt_not: String
  readAt_lt: String
  readAt_lte: String
  readAt_gt: String
  readAt_gte: String
  readAt_in: [String]
  readAt_not_in: [String]
  uniqKey: String
  uniqKey_not: String
  uniqKey_contains: String
  uniqKey_not_contains: String
  uniqKey_starts_with: String
  uniqKey_not_starts_with: String
  uniqKey_ends_with: String
  uniqKey_not_ends_with: String
  uniqKey_i: String
  uniqKey_not_i: String
  uniqKey_contains_i: String
  uniqKey_not_contains_i: String
  uniqKey_starts_with_i: String
  uniqKey_not_starts_with_i: String
  uniqKey_ends_with_i: String
  uniqKey_not_ends_with_i: String
  uniqKey_in: [String]
  uniqKey_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MessageHistoryRecordHistoryActionType
  history_action_not: MessageHistoryRecordHistoryActionType
  history_action_in: [MessageHistoryRecordHistoryActionType]
  history_action_not_in: [MessageHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MessageHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMessageHistoryRecordsBy {
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  emailFrom_ASC
  emailFrom_DESC
  lang_ASC
  lang_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  deliveredAt_ASC
  deliveredAt_DESC
  sentAt_ASC
  sentAt_DESC
  readAt_ASC
  readAt_DESC
  uniqKey_ASC
  uniqKey_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MessageHistoryRecordUpdateInput {
  organization: String
  user: String
  phone: String
  email: String
  remoteClient: String
  emailFrom: String
  lang: String
  type: String
  meta: JSON
  status: String
  processingMeta: JSON
  deliveredAt: String
  sentAt: String
  readAt: String
  uniqKey: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageHistoryRecordHistoryActionType
  history_id: String
}

input MessageHistoryRecordsUpdateInput {
  id: ID!
  data: MessageHistoryRecordUpdateInput
}

input MessageHistoryRecordCreateInput {
  organization: String
  user: String
  phone: String
  email: String
  remoteClient: String
  emailFrom: String
  lang: String
  type: String
  meta: JSON
  status: String
  processingMeta: JSON
  deliveredAt: String
  sentAt: String
  readAt: String
  uniqKey: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageHistoryRecordHistoryActionType
  history_id: String
}

input MessageHistoryRecordsCreateInput {
  data: MessageHistoryRecordCreateInput
}

input RemoteClientRelateToOneInput {
  create: RemoteClientCreateInput
  connect: RemoteClientWhereUniqueInput
  disconnect: RemoteClientWhereUniqueInput
  disconnectAll: Boolean
}

enum MessageLangType {
  ru
  en
}

enum MessageStatusType {
  sending
  resending
  processing
  error
  blacklisted
  sent
  delivered
  read
  canceled
}

""" Notification message """
type Message {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Message List config, or
   2. As an alias to the field set on 'labelField' in the Message List config, or
   3. As an alias to a 'name' field on the Message List (if one exists), or
   4. As an alias to the 'id' field on the Message List.
  """
  _label_: String

  """ This message is related to some organization. Organization can manage their messages 
  """
  organization: Organization

  """ to User """
  user: User

  """ to Phone """
  phone: String

  """ to Email """
  email: String

  """ to Remote client """
  remoteClient: RemoteClient

  """ from Email """
  emailFrom: String

  """ Message status """
  lang: MessageLangType

  """ Message type """
  type: String

  """ Message context """
  meta: JSON

  """ Message status """
  status: MessageStatusType

  """ Task processing metadata. Just for debug purpose. You can see exactly what and where the message was sent 
  """
  processingMeta: JSON

  """ Delivered (received) at time """
  deliveredAt: String

  """ Sent at time """
  sentAt: String

  """ Read at time """
  readAt: String

  """ Unique message key. You can use it if you need to make sure that the message you are trying to create has not been created before. Fields `user`, `type` and `uniqkey` is to be unique. If you don't have a `user`, the fields `type` and `uniqkey` is to be unique 
  """
  uniqKey: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MessageWhereInput {
  AND: [MessageWhereInput]
  OR: [MessageWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  user: UserWhereInput
  user_is_null: Boolean
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  remoteClient: RemoteClientWhereInput
  remoteClient_is_null: Boolean
  emailFrom: String
  emailFrom_not: String
  emailFrom_contains: String
  emailFrom_not_contains: String
  emailFrom_starts_with: String
  emailFrom_not_starts_with: String
  emailFrom_ends_with: String
  emailFrom_not_ends_with: String
  emailFrom_i: String
  emailFrom_not_i: String
  emailFrom_contains_i: String
  emailFrom_not_contains_i: String
  emailFrom_starts_with_i: String
  emailFrom_not_starts_with_i: String
  emailFrom_ends_with_i: String
  emailFrom_not_ends_with_i: String
  emailFrom_in: [String]
  emailFrom_not_in: [String]
  lang: MessageLangType
  lang_not: MessageLangType
  lang_in: [MessageLangType]
  lang_not_in: [MessageLangType]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  status: MessageStatusType
  status_not: MessageStatusType
  status_in: [MessageStatusType]
  status_not_in: [MessageStatusType]
  processingMeta: JSON
  processingMeta_not: JSON
  processingMeta_in: [JSON]
  processingMeta_not_in: [JSON]
  deliveredAt: String
  deliveredAt_not: String
  deliveredAt_lt: String
  deliveredAt_lte: String
  deliveredAt_gt: String
  deliveredAt_gte: String
  deliveredAt_in: [String]
  deliveredAt_not_in: [String]
  sentAt: String
  sentAt_not: String
  sentAt_lt: String
  sentAt_lte: String
  sentAt_gt: String
  sentAt_gte: String
  sentAt_in: [String]
  sentAt_not_in: [String]
  readAt: String
  readAt_not: String
  readAt_lt: String
  readAt_lte: String
  readAt_gt: String
  readAt_gte: String
  readAt_in: [String]
  readAt_not_in: [String]
  uniqKey: String
  uniqKey_not: String
  uniqKey_contains: String
  uniqKey_not_contains: String
  uniqKey_starts_with: String
  uniqKey_not_starts_with: String
  uniqKey_ends_with: String
  uniqKey_not_ends_with: String
  uniqKey_i: String
  uniqKey_not_i: String
  uniqKey_contains_i: String
  uniqKey_not_contains_i: String
  uniqKey_starts_with_i: String
  uniqKey_not_starts_with_i: String
  uniqKey_ends_with_i: String
  uniqKey_not_ends_with_i: String
  uniqKey_in: [String]
  uniqKey_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MessageWhereUniqueInput {
  id: ID!
}

enum SortMessagesBy {
  organization_ASC
  organization_DESC
  user_ASC
  user_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  remoteClient_ASC
  remoteClient_DESC
  emailFrom_ASC
  emailFrom_DESC
  lang_ASC
  lang_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  deliveredAt_ASC
  deliveredAt_DESC
  sentAt_ASC
  sentAt_DESC
  readAt_ASC
  readAt_DESC
  uniqKey_ASC
  uniqKey_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MessageUpdateInput {
  organization: OrganizationRelateToOneInput
  user: UserRelateToOneInput
  phone: String
  email: String
  remoteClient: RemoteClientRelateToOneInput
  emailFrom: String
  lang: MessageLangType
  type: String
  meta: JSON
  status: MessageStatusType
  processingMeta: JSON
  deliveredAt: String
  sentAt: String
  readAt: String
  uniqKey: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessagesUpdateInput {
  id: ID!
  data: MessageUpdateInput
}

input MessageCreateInput {
  organization: OrganizationRelateToOneInput
  user: UserRelateToOneInput
  phone: String
  email: String
  remoteClient: RemoteClientRelateToOneInput
  emailFrom: String
  lang: MessageLangType
  type: String
  meta: JSON
  status: MessageStatusType
  processingMeta: JSON
  deliveredAt: String
  sentAt: String
  readAt: String
  uniqKey: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessagesCreateInput {
  data: MessageCreateInput
}

enum RemoteClientHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type RemoteClientHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the RemoteClientHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the RemoteClientHistoryRecord List config, or
   3. As an alias to a 'name' field on the RemoteClientHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the RemoteClientHistoryRecord List.
  """
  _label_: String
  deviceId: String
  appId: String
  pushToken: String
  pushTransport: String
  devicePlatform: String
  pushType: String
  pushTokenVoIP: String
  pushTransportVoIP: String
  pushTypeVoIP: String
  owner: String
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RemoteClientHistoryRecordHistoryActionType
  history_id: String
}

input RemoteClientHistoryRecordWhereInput {
  AND: [RemoteClientHistoryRecordWhereInput]
  OR: [RemoteClientHistoryRecordWhereInput]
  deviceId: String
  deviceId_not: String
  deviceId_contains: String
  deviceId_not_contains: String
  deviceId_starts_with: String
  deviceId_not_starts_with: String
  deviceId_ends_with: String
  deviceId_not_ends_with: String
  deviceId_i: String
  deviceId_not_i: String
  deviceId_contains_i: String
  deviceId_not_contains_i: String
  deviceId_starts_with_i: String
  deviceId_not_starts_with_i: String
  deviceId_ends_with_i: String
  deviceId_not_ends_with_i: String
  deviceId_in: [String]
  deviceId_not_in: [String]
  appId: String
  appId_not: String
  appId_contains: String
  appId_not_contains: String
  appId_starts_with: String
  appId_not_starts_with: String
  appId_ends_with: String
  appId_not_ends_with: String
  appId_i: String
  appId_not_i: String
  appId_contains_i: String
  appId_not_contains_i: String
  appId_starts_with_i: String
  appId_not_starts_with_i: String
  appId_ends_with_i: String
  appId_not_ends_with_i: String
  appId_in: [String]
  appId_not_in: [String]
  pushToken: String
  pushToken_not: String
  pushToken_contains: String
  pushToken_not_contains: String
  pushToken_starts_with: String
  pushToken_not_starts_with: String
  pushToken_ends_with: String
  pushToken_not_ends_with: String
  pushToken_i: String
  pushToken_not_i: String
  pushToken_contains_i: String
  pushToken_not_contains_i: String
  pushToken_starts_with_i: String
  pushToken_not_starts_with_i: String
  pushToken_ends_with_i: String
  pushToken_not_ends_with_i: String
  pushToken_in: [String]
  pushToken_not_in: [String]
  pushTransport: String
  pushTransport_not: String
  pushTransport_contains: String
  pushTransport_not_contains: String
  pushTransport_starts_with: String
  pushTransport_not_starts_with: String
  pushTransport_ends_with: String
  pushTransport_not_ends_with: String
  pushTransport_i: String
  pushTransport_not_i: String
  pushTransport_contains_i: String
  pushTransport_not_contains_i: String
  pushTransport_starts_with_i: String
  pushTransport_not_starts_with_i: String
  pushTransport_ends_with_i: String
  pushTransport_not_ends_with_i: String
  pushTransport_in: [String]
  pushTransport_not_in: [String]
  devicePlatform: String
  devicePlatform_not: String
  devicePlatform_contains: String
  devicePlatform_not_contains: String
  devicePlatform_starts_with: String
  devicePlatform_not_starts_with: String
  devicePlatform_ends_with: String
  devicePlatform_not_ends_with: String
  devicePlatform_i: String
  devicePlatform_not_i: String
  devicePlatform_contains_i: String
  devicePlatform_not_contains_i: String
  devicePlatform_starts_with_i: String
  devicePlatform_not_starts_with_i: String
  devicePlatform_ends_with_i: String
  devicePlatform_not_ends_with_i: String
  devicePlatform_in: [String]
  devicePlatform_not_in: [String]
  pushType: String
  pushType_not: String
  pushType_contains: String
  pushType_not_contains: String
  pushType_starts_with: String
  pushType_not_starts_with: String
  pushType_ends_with: String
  pushType_not_ends_with: String
  pushType_i: String
  pushType_not_i: String
  pushType_contains_i: String
  pushType_not_contains_i: String
  pushType_starts_with_i: String
  pushType_not_starts_with_i: String
  pushType_ends_with_i: String
  pushType_not_ends_with_i: String
  pushType_in: [String]
  pushType_not_in: [String]
  pushTokenVoIP: String
  pushTokenVoIP_not: String
  pushTokenVoIP_contains: String
  pushTokenVoIP_not_contains: String
  pushTokenVoIP_starts_with: String
  pushTokenVoIP_not_starts_with: String
  pushTokenVoIP_ends_with: String
  pushTokenVoIP_not_ends_with: String
  pushTokenVoIP_i: String
  pushTokenVoIP_not_i: String
  pushTokenVoIP_contains_i: String
  pushTokenVoIP_not_contains_i: String
  pushTokenVoIP_starts_with_i: String
  pushTokenVoIP_not_starts_with_i: String
  pushTokenVoIP_ends_with_i: String
  pushTokenVoIP_not_ends_with_i: String
  pushTokenVoIP_in: [String]
  pushTokenVoIP_not_in: [String]
  pushTransportVoIP: String
  pushTransportVoIP_not: String
  pushTransportVoIP_contains: String
  pushTransportVoIP_not_contains: String
  pushTransportVoIP_starts_with: String
  pushTransportVoIP_not_starts_with: String
  pushTransportVoIP_ends_with: String
  pushTransportVoIP_not_ends_with: String
  pushTransportVoIP_i: String
  pushTransportVoIP_not_i: String
  pushTransportVoIP_contains_i: String
  pushTransportVoIP_not_contains_i: String
  pushTransportVoIP_starts_with_i: String
  pushTransportVoIP_not_starts_with_i: String
  pushTransportVoIP_ends_with_i: String
  pushTransportVoIP_not_ends_with_i: String
  pushTransportVoIP_in: [String]
  pushTransportVoIP_not_in: [String]
  pushTypeVoIP: String
  pushTypeVoIP_not: String
  pushTypeVoIP_contains: String
  pushTypeVoIP_not_contains: String
  pushTypeVoIP_starts_with: String
  pushTypeVoIP_not_starts_with: String
  pushTypeVoIP_ends_with: String
  pushTypeVoIP_not_ends_with: String
  pushTypeVoIP_i: String
  pushTypeVoIP_not_i: String
  pushTypeVoIP_contains_i: String
  pushTypeVoIP_not_contains_i: String
  pushTypeVoIP_starts_with_i: String
  pushTypeVoIP_not_starts_with_i: String
  pushTypeVoIP_ends_with_i: String
  pushTypeVoIP_not_ends_with_i: String
  pushTypeVoIP_in: [String]
  pushTypeVoIP_not_in: [String]
  owner: String
  owner_not: String
  owner_in: [String]
  owner_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: RemoteClientHistoryRecordHistoryActionType
  history_action_not: RemoteClientHistoryRecordHistoryActionType
  history_action_in: [RemoteClientHistoryRecordHistoryActionType]
  history_action_not_in: [RemoteClientHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input RemoteClientHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortRemoteClientHistoryRecordsBy {
  deviceId_ASC
  deviceId_DESC
  appId_ASC
  appId_DESC
  pushToken_ASC
  pushToken_DESC
  pushTransport_ASC
  pushTransport_DESC
  devicePlatform_ASC
  devicePlatform_DESC
  pushType_ASC
  pushType_DESC
  pushTokenVoIP_ASC
  pushTokenVoIP_DESC
  pushTransportVoIP_ASC
  pushTransportVoIP_DESC
  pushTypeVoIP_ASC
  pushTypeVoIP_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input RemoteClientHistoryRecordUpdateInput {
  deviceId: String
  appId: String
  pushToken: String
  pushTransport: String
  devicePlatform: String
  pushType: String
  pushTokenVoIP: String
  pushTransportVoIP: String
  pushTypeVoIP: String
  owner: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RemoteClientHistoryRecordHistoryActionType
  history_id: String
}

input RemoteClientHistoryRecordsUpdateInput {
  id: ID!
  data: RemoteClientHistoryRecordUpdateInput
}

input RemoteClientHistoryRecordCreateInput {
  deviceId: String
  appId: String
  pushToken: String
  pushTransport: String
  devicePlatform: String
  pushType: String
  pushTokenVoIP: String
  pushTransportVoIP: String
  pushTypeVoIP: String
  owner: String
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RemoteClientHistoryRecordHistoryActionType
  history_id: String
}

input RemoteClientHistoryRecordsCreateInput {
  data: RemoteClientHistoryRecordCreateInput
}

enum RemoteClientPushTransportType {
  firebase
  apple
  huawei
}

enum RemoteClientDevicePlatformType {
  android
  ios
  web
}

enum RemoteClientPushTypeType {
  default
  silent_data
}

enum RemoteClientPushTransportVoIPType {
  firebase
  apple
  huawei
}

enum RemoteClientPushTypeVoIPType {
  default
  silent_data
}

""" Used to describe device in order to be able to send push notifications via corresponding transport, depending on pushTransport value. RemoteClient could be mobile or web based. RemoteClient could be registered (created by user, admin or anonymous) with or without token, and updated later on by admin (or a user within SyncRemoteClientService) by adding/changing token value and connecting device to user (whose authorization was passed within request). All such interactions should be done via SyncRemoteClientService. 
"""
type RemoteClient {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the RemoteClient List config, or
   2. As an alias to the field set on 'labelField' in the RemoteClient List config, or
   3. As an alias to a 'name' field on the RemoteClient List (if one exists), or
   4. As an alias to the 'id' field on the RemoteClient List.
  """
  _label_: String

  """ Mobile/web device ID, which is used to identify a device. One user can have many devices, and one device can be used by many users once upon a time. 
  """
  deviceId: String

  """ Application ID, which is used to identify app. Same device can have multiple apps installed for same user. It is also required for applying correct credentials for Firebase/Huawei/etc. API requests. 
  """
  appId: String

  """ Used by transport services (FireBase, Apple, Huawei, etc.) to transfer push notifications to devices. 
  """
  pushToken: String

  """ Transport service, that delivers push notifications to client device. Type of device requires specific transport service, e.g. Huawei devices can not receive notifications through FireBase. 
  """
  pushTransport: RemoteClientPushTransportType

  """ Represents the platform type of the client application like android/ios/web. 
  """
  devicePlatform: RemoteClientDevicePlatformType

  """ Represents the type of push to be sent to the remote client like default/silent-data/etc. Remote client can control structure of data sent via push to the device using this field.Some remote clients are able to show own notifications instead system ones. To do so they have to receive push, containing no notification part, which is sent if this field is equal to PUSH_TYPE_SILENT_DATA. 
  """
  pushType: RemoteClientPushTypeType

  """ Used by transport services (FireBase, Apple, Huawei, etc.) to transfer VoIP push notifications to devices. 
  """
  pushTokenVoIP: String

  """ Transport service, that delivers VoIP push notifications to client device. Type of device requires specific transport service, e.g. Huawei devices can not receive notifications through FireBase. 
  """
  pushTransportVoIP: RemoteClientPushTransportVoIPType

  """ Represents the type of VoIP push to be sent to the remote client like default/silent-data/etc. Remote client can control structure of data sent via push to the device using this field.Some remote clients are able to show own notifications instead system ones. To do so they have to receive push, containing no notification part, which is sent if this field is equal to PUSH_TYPE_SILENT_DATA. 
  """
  pushTypeVoIP: RemoteClientPushTypeVoIPType

  """ Owner user of a device and a push token. User, which is logged in on the device. Push token can be created by anonymous user and connected to authorized user later on. 
  """
  owner: User

  """ RemoteClient metadata. OS type, OS version, etc. """
  meta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input RemoteClientWhereInput {
  AND: [RemoteClientWhereInput]
  OR: [RemoteClientWhereInput]
  deviceId: String
  deviceId_not: String
  deviceId_contains: String
  deviceId_not_contains: String
  deviceId_starts_with: String
  deviceId_not_starts_with: String
  deviceId_ends_with: String
  deviceId_not_ends_with: String
  deviceId_i: String
  deviceId_not_i: String
  deviceId_contains_i: String
  deviceId_not_contains_i: String
  deviceId_starts_with_i: String
  deviceId_not_starts_with_i: String
  deviceId_ends_with_i: String
  deviceId_not_ends_with_i: String
  deviceId_in: [String]
  deviceId_not_in: [String]
  appId: String
  appId_not: String
  appId_contains: String
  appId_not_contains: String
  appId_starts_with: String
  appId_not_starts_with: String
  appId_ends_with: String
  appId_not_ends_with: String
  appId_i: String
  appId_not_i: String
  appId_contains_i: String
  appId_not_contains_i: String
  appId_starts_with_i: String
  appId_not_starts_with_i: String
  appId_ends_with_i: String
  appId_not_ends_with_i: String
  appId_in: [String]
  appId_not_in: [String]
  pushToken: String
  pushToken_not: String
  pushToken_contains: String
  pushToken_not_contains: String
  pushToken_starts_with: String
  pushToken_not_starts_with: String
  pushToken_ends_with: String
  pushToken_not_ends_with: String
  pushToken_i: String
  pushToken_not_i: String
  pushToken_contains_i: String
  pushToken_not_contains_i: String
  pushToken_starts_with_i: String
  pushToken_not_starts_with_i: String
  pushToken_ends_with_i: String
  pushToken_not_ends_with_i: String
  pushToken_in: [String]
  pushToken_not_in: [String]
  pushTransport: RemoteClientPushTransportType
  pushTransport_not: RemoteClientPushTransportType
  pushTransport_in: [RemoteClientPushTransportType]
  pushTransport_not_in: [RemoteClientPushTransportType]
  devicePlatform: RemoteClientDevicePlatformType
  devicePlatform_not: RemoteClientDevicePlatformType
  devicePlatform_in: [RemoteClientDevicePlatformType]
  devicePlatform_not_in: [RemoteClientDevicePlatformType]
  pushType: RemoteClientPushTypeType
  pushType_not: RemoteClientPushTypeType
  pushType_in: [RemoteClientPushTypeType]
  pushType_not_in: [RemoteClientPushTypeType]
  pushTokenVoIP: String
  pushTokenVoIP_not: String
  pushTokenVoIP_contains: String
  pushTokenVoIP_not_contains: String
  pushTokenVoIP_starts_with: String
  pushTokenVoIP_not_starts_with: String
  pushTokenVoIP_ends_with: String
  pushTokenVoIP_not_ends_with: String
  pushTokenVoIP_i: String
  pushTokenVoIP_not_i: String
  pushTokenVoIP_contains_i: String
  pushTokenVoIP_not_contains_i: String
  pushTokenVoIP_starts_with_i: String
  pushTokenVoIP_not_starts_with_i: String
  pushTokenVoIP_ends_with_i: String
  pushTokenVoIP_not_ends_with_i: String
  pushTokenVoIP_in: [String]
  pushTokenVoIP_not_in: [String]
  pushTransportVoIP: RemoteClientPushTransportVoIPType
  pushTransportVoIP_not: RemoteClientPushTransportVoIPType
  pushTransportVoIP_in: [RemoteClientPushTransportVoIPType]
  pushTransportVoIP_not_in: [RemoteClientPushTransportVoIPType]
  pushTypeVoIP: RemoteClientPushTypeVoIPType
  pushTypeVoIP_not: RemoteClientPushTypeVoIPType
  pushTypeVoIP_in: [RemoteClientPushTypeVoIPType]
  pushTypeVoIP_not_in: [RemoteClientPushTypeVoIPType]
  owner: UserWhereInput
  owner_is_null: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input RemoteClientWhereUniqueInput {
  id: ID!
}

enum SortRemoteClientsBy {
  deviceId_ASC
  deviceId_DESC
  appId_ASC
  appId_DESC
  pushToken_ASC
  pushToken_DESC
  pushTransport_ASC
  pushTransport_DESC
  devicePlatform_ASC
  devicePlatform_DESC
  pushType_ASC
  pushType_DESC
  pushTokenVoIP_ASC
  pushTokenVoIP_DESC
  pushTransportVoIP_ASC
  pushTransportVoIP_DESC
  pushTypeVoIP_ASC
  pushTypeVoIP_DESC
  owner_ASC
  owner_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input RemoteClientUpdateInput {
  deviceId: String
  appId: String
  pushToken: String
  pushTransport: RemoteClientPushTransportType
  devicePlatform: RemoteClientDevicePlatformType
  pushType: RemoteClientPushTypeType
  pushTokenVoIP: String
  pushTransportVoIP: RemoteClientPushTransportVoIPType
  pushTypeVoIP: RemoteClientPushTypeVoIPType
  owner: UserRelateToOneInput
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input RemoteClientsUpdateInput {
  id: ID!
  data: RemoteClientUpdateInput
}

input RemoteClientCreateInput {
  deviceId: String
  appId: String
  pushToken: String
  pushTransport: RemoteClientPushTransportType
  devicePlatform: RemoteClientDevicePlatformType
  pushType: RemoteClientPushTypeType
  pushTokenVoIP: String
  pushTransportVoIP: RemoteClientPushTransportVoIPType
  pushTypeVoIP: RemoteClientPushTypeVoIPType
  owner: UserRelateToOneInput
  meta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input RemoteClientsCreateInput {
  data: RemoteClientCreateInput
}

enum MessageUserBlackListHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MessageUserBlackListHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageUserBlackListHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MessageUserBlackListHistoryRecord List config, or
   3. As an alias to a 'name' field on the MessageUserBlackListHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MessageUserBlackListHistoryRecord List.
  """
  _label_: String
  user: String
  phone: String
  email: String
  type: String
  description: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageUserBlackListHistoryRecordHistoryActionType
  history_id: String
}

input MessageUserBlackListHistoryRecordWhereInput {
  AND: [MessageUserBlackListHistoryRecordWhereInput]
  OR: [MessageUserBlackListHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MessageUserBlackListHistoryRecordHistoryActionType
  history_action_not: MessageUserBlackListHistoryRecordHistoryActionType
  history_action_in: [MessageUserBlackListHistoryRecordHistoryActionType]
  history_action_not_in: [MessageUserBlackListHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MessageUserBlackListHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMessageUserBlackListHistoryRecordsBy {
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  type_ASC
  type_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MessageUserBlackListHistoryRecordUpdateInput {
  user: String
  phone: String
  email: String
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageUserBlackListHistoryRecordHistoryActionType
  history_id: String
}

input MessageUserBlackListHistoryRecordsUpdateInput {
  id: ID!
  data: MessageUserBlackListHistoryRecordUpdateInput
}

input MessageUserBlackListHistoryRecordCreateInput {
  user: String
  phone: String
  email: String
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageUserBlackListHistoryRecordHistoryActionType
  history_id: String
}

input MessageUserBlackListHistoryRecordsCreateInput {
  data: MessageUserBlackListHistoryRecordCreateInput
}

""" Rule for blocking messages (specific type or all) for user, phone or email 
"""
type MessageUserBlackList {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageUserBlackList List config, or
   2. As an alias to the field set on 'labelField' in the MessageUserBlackList List config, or
   3. As an alias to a 'name' field on the MessageUserBlackList List (if one exists), or
   4. As an alias to the 'id' field on the MessageUserBlackList List.
  """
  _label_: String

  """ The user to whom we want to block sending messages """
  user: User

  """ The phone number to which we want to block sending messages """
  phone: String

  """ Email to which we want to block the sending of messages """
  email: String

  """ The type of message we want to block (null means all types) """
  type: String

  """ The reason why the entry was added to the MessageUserBlackList """
  description: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MessageUserBlackListWhereInput {
  AND: [MessageUserBlackListWhereInput]
  OR: [MessageUserBlackListWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  type: String
  type_not: String
  type_in: [String]
  type_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MessageUserBlackListWhereUniqueInput {
  id: ID!
}

enum SortMessageUserBlackListsBy {
  user_ASC
  user_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  type_ASC
  type_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MessageUserBlackListUpdateInput {
  user: UserRelateToOneInput
  phone: String
  email: String
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessageUserBlackListsUpdateInput {
  id: ID!
  data: MessageUserBlackListUpdateInput
}

input MessageUserBlackListCreateInput {
  user: UserRelateToOneInput
  phone: String
  email: String
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessageUserBlackListsCreateInput {
  data: MessageUserBlackListCreateInput
}

enum MessageOrganizationBlackListHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MessageOrganizationBlackListHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageOrganizationBlackListHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MessageOrganizationBlackListHistoryRecord List config, or
   3. As an alias to a 'name' field on the MessageOrganizationBlackListHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MessageOrganizationBlackListHistoryRecord List.
  """
  _label_: String
  organization: String
  type: String
  description: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageOrganizationBlackListHistoryRecordHistoryActionType
  history_id: String
}

input MessageOrganizationBlackListHistoryRecordWhereInput {
  AND: [MessageOrganizationBlackListHistoryRecordWhereInput]
  OR: [MessageOrganizationBlackListHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MessageOrganizationBlackListHistoryRecordHistoryActionType
  history_action_not: MessageOrganizationBlackListHistoryRecordHistoryActionType
  history_action_in: [MessageOrganizationBlackListHistoryRecordHistoryActionType]
  history_action_not_in: [MessageOrganizationBlackListHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MessageOrganizationBlackListHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMessageOrganizationBlackListHistoryRecordsBy {
  type_ASC
  type_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MessageOrganizationBlackListHistoryRecordUpdateInput {
  organization: String
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageOrganizationBlackListHistoryRecordHistoryActionType
  history_id: String
}

input MessageOrganizationBlackListHistoryRecordsUpdateInput {
  id: ID!
  data: MessageOrganizationBlackListHistoryRecordUpdateInput
}

input MessageOrganizationBlackListHistoryRecordCreateInput {
  organization: String
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageOrganizationBlackListHistoryRecordHistoryActionType
  history_id: String
}

input MessageOrganizationBlackListHistoryRecordsCreateInput {
  data: MessageOrganizationBlackListHistoryRecordCreateInput
}

""" Rule for blocking specific type of messages for organization """
type MessageOrganizationBlackList {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageOrganizationBlackList List config, or
   2. As an alias to the field set on 'labelField' in the MessageOrganizationBlackList List config, or
   3. As an alias to a 'name' field on the MessageOrganizationBlackList List (if one exists), or
   4. As an alias to the 'id' field on the MessageOrganizationBlackList List.
  """
  _label_: String

  """ The organization we want to block from sending messages to (null - all organizations) 
  """
  organization: Organization

  """ The type of message we want to block """
  type: String

  """ The reason why the entry was added to the MessageOrganizationBlackList 
  """
  description: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MessageOrganizationBlackListWhereInput {
  AND: [MessageOrganizationBlackListWhereInput]
  OR: [MessageOrganizationBlackListWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  type: String
  type_not: String
  type_in: [String]
  type_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MessageOrganizationBlackListWhereUniqueInput {
  id: ID!
}

enum SortMessageOrganizationBlackListsBy {
  organization_ASC
  organization_DESC
  type_ASC
  type_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MessageOrganizationBlackListUpdateInput {
  organization: OrganizationRelateToOneInput
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessageOrganizationBlackListsUpdateInput {
  id: ID!
  data: MessageOrganizationBlackListUpdateInput
}

input MessageOrganizationBlackListCreateInput {
  organization: OrganizationRelateToOneInput
  type: String
  description: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessageOrganizationBlackListsCreateInput {
  data: MessageOrganizationBlackListCreateInput
}

enum MessageBatchHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MessageBatchHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageBatchHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MessageBatchHistoryRecord List config, or
   3. As an alias to a 'name' field on the MessageBatchHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MessageBatchHistoryRecord List.
  """
  _label_: String
  messageType: String
  title: String
  message: String
  deepLink: String
  targets: JSON
  status: String
  processingMeta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageBatchHistoryRecordHistoryActionType
  history_id: String
}

input MessageBatchHistoryRecordWhereInput {
  AND: [MessageBatchHistoryRecordWhereInput]
  OR: [MessageBatchHistoryRecordWhereInput]
  messageType: String
  messageType_not: String
  messageType_contains: String
  messageType_not_contains: String
  messageType_starts_with: String
  messageType_not_starts_with: String
  messageType_ends_with: String
  messageType_not_ends_with: String
  messageType_i: String
  messageType_not_i: String
  messageType_contains_i: String
  messageType_not_contains_i: String
  messageType_starts_with_i: String
  messageType_not_starts_with_i: String
  messageType_ends_with_i: String
  messageType_not_ends_with_i: String
  messageType_in: [String]
  messageType_not_in: [String]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  message: String
  message_not: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  message_i: String
  message_not_i: String
  message_contains_i: String
  message_not_contains_i: String
  message_starts_with_i: String
  message_not_starts_with_i: String
  message_ends_with_i: String
  message_not_ends_with_i: String
  message_in: [String]
  message_not_in: [String]
  deepLink: String
  deepLink_not: String
  deepLink_contains: String
  deepLink_not_contains: String
  deepLink_starts_with: String
  deepLink_not_starts_with: String
  deepLink_ends_with: String
  deepLink_not_ends_with: String
  deepLink_i: String
  deepLink_not_i: String
  deepLink_contains_i: String
  deepLink_not_contains_i: String
  deepLink_starts_with_i: String
  deepLink_not_starts_with_i: String
  deepLink_ends_with_i: String
  deepLink_not_ends_with_i: String
  deepLink_in: [String]
  deepLink_not_in: [String]
  targets: JSON
  targets_not: JSON
  targets_in: [JSON]
  targets_not_in: [JSON]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  processingMeta: JSON
  processingMeta_not: JSON
  processingMeta_in: [JSON]
  processingMeta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MessageBatchHistoryRecordHistoryActionType
  history_action_not: MessageBatchHistoryRecordHistoryActionType
  history_action_in: [MessageBatchHistoryRecordHistoryActionType]
  history_action_not_in: [MessageBatchHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MessageBatchHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMessageBatchHistoryRecordsBy {
  messageType_ASC
  messageType_DESC
  title_ASC
  title_DESC
  message_ASC
  message_DESC
  deepLink_ASC
  deepLink_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MessageBatchHistoryRecordUpdateInput {
  messageType: String
  title: String
  message: String
  deepLink: String
  targets: JSON
  status: String
  processingMeta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageBatchHistoryRecordHistoryActionType
  history_id: String
}

input MessageBatchHistoryRecordsUpdateInput {
  id: ID!
  data: MessageBatchHistoryRecordUpdateInput
}

input MessageBatchHistoryRecordCreateInput {
  messageType: String
  title: String
  message: String
  deepLink: String
  targets: JSON
  status: String
  processingMeta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MessageBatchHistoryRecordHistoryActionType
  history_id: String
}

input MessageBatchHistoryRecordsCreateInput {
  data: MessageBatchHistoryRecordCreateInput
}

enum MessageBatchMessageTypeType {
  CUSTOM_CONTENT_MESSAGE
}

enum MessageBatchStatusType {
  created
  processing
  failed
  done
}

""" Message batch. Adding record here will cause sending message to all targets (user, phone or email) listed in targets via transport detected based on target type. 
"""
type MessageBatch {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MessageBatch List config, or
   2. As an alias to the field set on 'labelField' in the MessageBatch List config, or
   3. As an alias to a 'name' field on the MessageBatch List (if one exists), or
   4. As an alias to the 'id' field on the MessageBatch List.
  """
  _label_: String

  """ Message type to use for sending notification """
  messageType: MessageBatchMessageTypeType

  """ Common title for messages to be sent. Single line, shouldn't be very long. 
  """
  title: String

  """ Common body for messages to be sent. Can be multiline, but shouldn't be very long in case of SMS or Push. 
  """
  message: String

  """ A link to bring user to specified position within a mobile app. Used ONLY for push notifications 
  """
  deepLink: String

  """ List of ids for "push", "email", "sms" message types; list of emails for "email" message types; list of phone numbers for "sms" message types. Can be mixed. For each entry an appropriate message type will be used. 
  """
  targets: JSON

  """ Batch processing status """
  status: MessageBatchStatusType

  """ Batch processing results will be stored here """
  processingMeta: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MessageBatchWhereInput {
  AND: [MessageBatchWhereInput]
  OR: [MessageBatchWhereInput]
  messageType: MessageBatchMessageTypeType
  messageType_not: MessageBatchMessageTypeType
  messageType_in: [MessageBatchMessageTypeType]
  messageType_not_in: [MessageBatchMessageTypeType]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  message: String
  message_not: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  message_i: String
  message_not_i: String
  message_contains_i: String
  message_not_contains_i: String
  message_starts_with_i: String
  message_not_starts_with_i: String
  message_ends_with_i: String
  message_not_ends_with_i: String
  message_in: [String]
  message_not_in: [String]
  deepLink: String
  deepLink_not: String
  deepLink_contains: String
  deepLink_not_contains: String
  deepLink_starts_with: String
  deepLink_not_starts_with: String
  deepLink_ends_with: String
  deepLink_not_ends_with: String
  deepLink_i: String
  deepLink_not_i: String
  deepLink_contains_i: String
  deepLink_not_contains_i: String
  deepLink_starts_with_i: String
  deepLink_not_starts_with_i: String
  deepLink_ends_with_i: String
  deepLink_not_ends_with_i: String
  deepLink_in: [String]
  deepLink_not_in: [String]
  targets: JSON
  targets_not: JSON
  targets_in: [JSON]
  targets_not_in: [JSON]
  status: MessageBatchStatusType
  status_not: MessageBatchStatusType
  status_in: [MessageBatchStatusType]
  status_not_in: [MessageBatchStatusType]
  processingMeta: JSON
  processingMeta_not: JSON
  processingMeta_in: [JSON]
  processingMeta_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MessageBatchWhereUniqueInput {
  id: ID!
}

enum SortMessageBatchesBy {
  messageType_ASC
  messageType_DESC
  title_ASC
  title_DESC
  message_ASC
  message_DESC
  deepLink_ASC
  deepLink_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MessageBatchUpdateInput {
  messageType: MessageBatchMessageTypeType
  title: String
  message: String
  deepLink: String
  targets: JSON
  status: MessageBatchStatusType
  processingMeta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessageBatchesUpdateInput {
  id: ID!
  data: MessageBatchUpdateInput
}

input MessageBatchCreateInput {
  messageType: MessageBatchMessageTypeType
  title: String
  message: String
  deepLink: String
  targets: JSON
  status: MessageBatchStatusType
  processingMeta: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MessageBatchesCreateInput {
  data: MessageBatchCreateInput
}

enum ContactHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ContactHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ContactHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ContactHistoryRecord List config, or
   3. As an alias to a 'name' field on the ContactHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ContactHistoryRecord List.
  """
  _label_: String
  organization: String
  property: String
  unitName: String
  unitType: String
  email: String
  phone: String
  name: String
  role: String
  isVerified: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ContactHistoryRecordHistoryActionType
  history_id: String
}

input ContactHistoryRecordWhereInput {
  AND: [ContactHistoryRecordWhereInput]
  OR: [ContactHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_contains: String
  unitType_not_contains: String
  unitType_starts_with: String
  unitType_not_starts_with: String
  unitType_ends_with: String
  unitType_not_ends_with: String
  unitType_i: String
  unitType_not_i: String
  unitType_contains_i: String
  unitType_not_contains_i: String
  unitType_starts_with_i: String
  unitType_not_starts_with_i: String
  unitType_ends_with_i: String
  unitType_not_ends_with_i: String
  unitType_in: [String]
  unitType_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  role: String
  role_not: String
  role_in: [String]
  role_not_in: [String]
  isVerified: Boolean
  isVerified_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ContactHistoryRecordHistoryActionType
  history_action_not: ContactHistoryRecordHistoryActionType
  history_action_in: [ContactHistoryRecordHistoryActionType]
  history_action_not_in: [ContactHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ContactHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortContactHistoryRecordsBy {
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  name_ASC
  name_DESC
  isVerified_ASC
  isVerified_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ContactHistoryRecordUpdateInput {
  organization: String
  property: String
  unitName: String
  unitType: String
  email: String
  phone: String
  name: String
  role: String
  isVerified: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ContactHistoryRecordHistoryActionType
  history_id: String
}

input ContactHistoryRecordsUpdateInput {
  id: ID!
  data: ContactHistoryRecordUpdateInput
}

input ContactHistoryRecordCreateInput {
  organization: String
  property: String
  unitName: String
  unitType: String
  email: String
  phone: String
  name: String
  role: String
  isVerified: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ContactHistoryRecordHistoryActionType
  history_id: String
}

input ContactHistoryRecordsCreateInput {
  data: ContactHistoryRecordCreateInput
}

input ContactRoleRelateToOneInput {
  create: ContactRoleCreateInput
  connect: ContactRoleWhereUniqueInput
  disconnect: ContactRoleWhereUniqueInput
  disconnectAll: Boolean
}

""" Contact information of a person. Currently it will be related to a ticket, but in the future, it will be associated with more things 
"""
type Contact {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Contact List config, or
   2. As an alias to the field set on 'labelField' in the Contact List config, or
   3. As an alias to a 'name' field on the Contact List (if one exists), or
   4. As an alias to the 'id' field on the Contact List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Property, that is a subject of an issue, reported by this person in first ticket. Meaning of this field will be revised in the future 
  """
  property: Property

  """ Property unit, that is a subject of an issue, reported by this person in first ticket. Meaning of this field will be revised in the future 
  """
  unitName: String

  """ Type of unit, such as parking lot or flat """
  unitType: String

  """ Normalized contact email of this person """
  email: String

  """ Normalized contact phone of this person in E.164 format without spaces 
  """
  phone: String

  """ Name or full name of this person """
  name: String

  """ The contact's role """
  role: ContactRole

  """ Contact verification flag. """
  isVerified: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ContactWhereInput {
  AND: [ContactWhereInput]
  OR: [ContactWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_in: [String]
  unitType_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  phone: String
  phone_not: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  phone_i: String
  phone_not_i: String
  phone_contains_i: String
  phone_not_contains_i: String
  phone_starts_with_i: String
  phone_not_starts_with_i: String
  phone_ends_with_i: String
  phone_not_ends_with_i: String
  phone_in: [String]
  phone_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  role: ContactRoleWhereInput
  role_is_null: Boolean
  isVerified: Boolean
  isVerified_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ContactWhereUniqueInput {
  id: ID!
}

enum SortContactsBy {
  organization_ASC
  organization_DESC
  property_ASC
  property_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  name_ASC
  name_DESC
  role_ASC
  role_DESC
  isVerified_ASC
  isVerified_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ContactUpdateInput {
  organization: OrganizationRelateToOneInput
  property: PropertyRelateToOneInput
  unitName: String
  unitType: String
  email: String
  phone: String
  name: String
  role: ContactRoleRelateToOneInput
  isVerified: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ContactsUpdateInput {
  id: ID!
  data: ContactUpdateInput
}

input ContactCreateInput {
  organization: OrganizationRelateToOneInput
  property: PropertyRelateToOneInput
  unitName: String
  unitType: String
  email: String
  phone: String
  name: String
  role: ContactRoleRelateToOneInput
  isVerified: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ContactsCreateInput {
  data: ContactCreateInput
}

enum ContactRoleHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ContactRoleHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ContactRoleHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ContactRoleHistoryRecord List config, or
   3. As an alias to a 'name' field on the ContactRoleHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ContactRoleHistoryRecord List.
  """
  _label_: String
  organization: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ContactRoleHistoryRecordHistoryActionType
  history_id: String
}

input ContactRoleHistoryRecordWhereInput {
  AND: [ContactRoleHistoryRecordWhereInput]
  OR: [ContactRoleHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ContactRoleHistoryRecordHistoryActionType
  history_action_not: ContactRoleHistoryRecordHistoryActionType
  history_action_in: [ContactRoleHistoryRecordHistoryActionType]
  history_action_not_in: [ContactRoleHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ContactRoleHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortContactRoleHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ContactRoleHistoryRecordUpdateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ContactRoleHistoryRecordHistoryActionType
  history_id: String
}

input ContactRoleHistoryRecordsUpdateInput {
  id: ID!
  data: ContactRoleHistoryRecordUpdateInput
}

input ContactRoleHistoryRecordCreateInput {
  organization: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ContactRoleHistoryRecordHistoryActionType
  history_id: String
}

input ContactRoleHistoryRecordsCreateInput {
  data: ContactRoleHistoryRecordCreateInput
}

""" Role for contact """
type ContactRole {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ContactRole List config, or
   2. As an alias to the field set on 'labelField' in the ContactRole List config, or
   3. As an alias to a 'name' field on the ContactRole List (if one exists), or
   4. As an alias to the 'id' field on the ContactRole List.
  """
  _label_: String

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ The role's name """
  name: String
  nameNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ContactRoleWhereInput {
  AND: [ContactRoleWhereInput]
  OR: [ContactRoleWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ContactRoleWhereUniqueInput {
  id: ID!
}

enum SortContactRolesBy {
  organization_ASC
  organization_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ContactRoleUpdateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ContactRolesUpdateInput {
  id: ID!
  data: ContactRoleUpdateInput
}

input ContactRoleCreateInput {
  organization: OrganizationRelateToOneInput
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ContactRolesCreateInput {
  data: ContactRoleCreateInput
}

enum ResidentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ResidentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ResidentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ResidentHistoryRecord List config, or
   3. As an alias to a 'name' field on the ResidentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ResidentHistoryRecord List.
  """
  _label_: String
  user: String
  residentOrganization: JSON
  property: String
  residentProperty: JSON
  organizationFeatures: JSON
  paymentCategories: JSON
  unitName: String
  unitType: String
  organization: String
  id: ID!
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ResidentHistoryRecordHistoryActionType
  history_id: String
}

input ResidentHistoryRecordWhereInput {
  AND: [ResidentHistoryRecordWhereInput]
  OR: [ResidentHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  residentOrganization: JSON
  residentOrganization_not: JSON
  residentOrganization_in: [JSON]
  residentOrganization_not_in: [JSON]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  residentProperty: JSON
  residentProperty_not: JSON
  residentProperty_in: [JSON]
  residentProperty_not_in: [JSON]
  organizationFeatures: JSON
  organizationFeatures_not: JSON
  organizationFeatures_in: [JSON]
  organizationFeatures_not_in: [JSON]
  paymentCategories: JSON
  paymentCategories_not: JSON
  paymentCategories_in: [JSON]
  paymentCategories_not_in: [JSON]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_contains: String
  unitType_not_contains: String
  unitType_starts_with: String
  unitType_not_starts_with: String
  unitType_ends_with: String
  unitType_not_ends_with: String
  unitType_i: String
  unitType_not_i: String
  unitType_contains_i: String
  unitType_not_contains_i: String
  unitType_starts_with_i: String
  unitType_not_starts_with_i: String
  unitType_ends_with_i: String
  unitType_not_ends_with_i: String
  unitType_in: [String]
  unitType_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  addressKey: String
  addressKey_not: String
  addressKey_contains: String
  addressKey_not_contains: String
  addressKey_starts_with: String
  addressKey_not_starts_with: String
  addressKey_ends_with: String
  addressKey_not_ends_with: String
  addressKey_i: String
  addressKey_not_i: String
  addressKey_contains_i: String
  addressKey_not_contains_i: String
  addressKey_starts_with_i: String
  addressKey_not_starts_with_i: String
  addressKey_ends_with_i: String
  addressKey_not_ends_with_i: String
  addressKey_in: [String]
  addressKey_not_in: [String]
  addressMeta: JSON
  addressMeta_not: JSON
  addressMeta_in: [JSON]
  addressMeta_not_in: [JSON]
  addressSources: JSON
  addressSources_not: JSON
  addressSources_in: [JSON]
  addressSources_not_in: [JSON]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ResidentHistoryRecordHistoryActionType
  history_action_not: ResidentHistoryRecordHistoryActionType
  history_action_in: [ResidentHistoryRecordHistoryActionType]
  history_action_not_in: [ResidentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ResidentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortResidentHistoryRecordsBy {
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  id_ASC
  id_DESC
  address_ASC
  address_DESC
  addressKey_ASC
  addressKey_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ResidentHistoryRecordUpdateInput {
  user: String
  residentOrganization: JSON
  property: String
  residentProperty: JSON
  organizationFeatures: JSON
  paymentCategories: JSON
  unitName: String
  unitType: String
  organization: String
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ResidentHistoryRecordHistoryActionType
  history_id: String
}

input ResidentHistoryRecordsUpdateInput {
  id: ID!
  data: ResidentHistoryRecordUpdateInput
}

input ResidentHistoryRecordCreateInput {
  user: String
  residentOrganization: JSON
  property: String
  residentProperty: JSON
  organizationFeatures: JSON
  paymentCategories: JSON
  unitName: String
  unitType: String
  organization: String
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ResidentHistoryRecordHistoryActionType
  history_id: String
}

input ResidentHistoryRecordsCreateInput {
  data: ResidentHistoryRecordCreateInput
}

type residentOrganization {
  id: ID!
  name: String
  tin: String
  country: String
}

type ResidentProperty {
  id: ID!
  name: String
  address: String!
}

type OrganizationFeatures {
  hasBillingData: Boolean!
  hasMeters: Boolean!
}

type PaymentCategory {
  id: String!
  categoryName: String!
  billingName: String!
  acquiringName: String!
}

""" Person, that resides in a specified property and unit """
type Resident {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Resident List config, or
   2. As an alias to the field set on 'labelField' in the Resident List config, or
   3. As an alias to a 'name' field on the Resident List (if one exists), or
   4. As an alias to the 'id' field on the Resident List.
  """
  _label_: String

  """ Mobile user account """
  user: User

  """ Organization data, that is returned for current resident in mobile client 
  """
  residentOrganization: residentOrganization

  """ Property, in which this person resides. Can be missing, when a resident has been registered, but there is no Property in our system yet 
  """
  property: Property

  """ Property data, that is returned for current resident in mobile client 
  """
  residentProperty: ResidentProperty

  """ Contains features that are enabled for user organization """
  organizationFeatures: OrganizationFeatures

  """ Contains billing and acquiring integration names that are enabled for this resident per category 
  """
  paymentCategories: [PaymentCategory]

  """ Unit of the property, in which this person resides """
  unitName: String

  """ Type of unit, such as parking lot or flat """
  unitType: String

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!

  """ Normalized address """
  address: String

  """ The unique key of the address """
  addressKey: String

  """ Property address components """
  addressMeta: AddressMetaField

  """ The origins of the address (some strings which may looks like real address or some id) 
  """
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ResidentWhereInput {
  AND: [ResidentWhereInput]
  OR: [ResidentWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_in: [String]
  unitType_not_in: [String]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  addressKey: String
  addressKey_not: String
  addressKey_contains: String
  addressKey_not_contains: String
  addressKey_starts_with: String
  addressKey_not_starts_with: String
  addressKey_ends_with: String
  addressKey_not_ends_with: String
  addressKey_i: String
  addressKey_not_i: String
  addressKey_contains_i: String
  addressKey_not_contains_i: String
  addressKey_starts_with_i: String
  addressKey_not_starts_with_i: String
  addressKey_ends_with_i: String
  addressKey_not_ends_with_i: String
  addressKey_in: [String]
  addressKey_not_in: [String]
  addressMeta: JSON
  addressMeta_not: JSON
  addressMeta_in: [JSON]
  addressMeta_not_in: [JSON]
  addressSources: JSON
  addressSources_not: JSON
  addressSources_in: [JSON]
  addressSources_not_in: [JSON]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ResidentWhereUniqueInput {
  id: ID!
}

enum SortResidentsBy {
  user_ASC
  user_DESC
  property_ASC
  property_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  address_ASC
  address_DESC
  addressKey_ASC
  addressKey_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ResidentUpdateInput {
  user: UserRelateToOneInput
  property: PropertyRelateToOneInput
  unitName: String
  unitType: String
  organization: OrganizationRelateToOneInput
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ResidentsUpdateInput {
  id: ID!
  data: ResidentUpdateInput
}

input ResidentCreateInput {
  user: UserRelateToOneInput
  property: PropertyRelateToOneInput
  unitName: String
  unitType: String
  organization: OrganizationRelateToOneInput
  address: String
  addressKey: String
  addressMeta: JSON
  addressSources: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ResidentsCreateInput {
  data: ResidentCreateInput
}

enum ServiceConsumerHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ServiceConsumerHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ServiceConsumerHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ServiceConsumerHistoryRecord List config, or
   3. As an alias to a 'name' field on the ServiceConsumerHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ServiceConsumerHistoryRecord List.
  """
  _label_: String
  paymentCategory: String
  resident: String
  billingAccount: String
  residentBillingAccount: JSON
  billingIntegrationContext: String
  acquiringIntegrationContext: String
  residentAcquiringIntegrationContext: JSON
  accountNumber: String
  organization: String
  residentOrganization: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ServiceConsumerHistoryRecordHistoryActionType
  history_id: String
}

input ServiceConsumerHistoryRecordWhereInput {
  AND: [ServiceConsumerHistoryRecordWhereInput]
  OR: [ServiceConsumerHistoryRecordWhereInput]
  paymentCategory: String
  paymentCategory_not: String
  paymentCategory_contains: String
  paymentCategory_not_contains: String
  paymentCategory_starts_with: String
  paymentCategory_not_starts_with: String
  paymentCategory_ends_with: String
  paymentCategory_not_ends_with: String
  paymentCategory_i: String
  paymentCategory_not_i: String
  paymentCategory_contains_i: String
  paymentCategory_not_contains_i: String
  paymentCategory_starts_with_i: String
  paymentCategory_not_starts_with_i: String
  paymentCategory_ends_with_i: String
  paymentCategory_not_ends_with_i: String
  paymentCategory_in: [String]
  paymentCategory_not_in: [String]
  resident: String
  resident_not: String
  resident_in: [String]
  resident_not_in: [String]
  billingAccount: String
  billingAccount_not: String
  billingAccount_in: [String]
  billingAccount_not_in: [String]
  residentBillingAccount: JSON
  residentBillingAccount_not: JSON
  residentBillingAccount_in: [JSON]
  residentBillingAccount_not_in: [JSON]
  billingIntegrationContext: String
  billingIntegrationContext_not: String
  billingIntegrationContext_in: [String]
  billingIntegrationContext_not_in: [String]
  acquiringIntegrationContext: String
  acquiringIntegrationContext_not: String
  acquiringIntegrationContext_in: [String]
  acquiringIntegrationContext_not_in: [String]
  residentAcquiringIntegrationContext: JSON
  residentAcquiringIntegrationContext_not: JSON
  residentAcquiringIntegrationContext_in: [JSON]
  residentAcquiringIntegrationContext_not_in: [JSON]
  accountNumber: String
  accountNumber_not: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  accountNumber_i: String
  accountNumber_not_i: String
  accountNumber_contains_i: String
  accountNumber_not_contains_i: String
  accountNumber_starts_with_i: String
  accountNumber_not_starts_with_i: String
  accountNumber_ends_with_i: String
  accountNumber_not_ends_with_i: String
  accountNumber_in: [String]
  accountNumber_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  residentOrganization: JSON
  residentOrganization_not: JSON
  residentOrganization_in: [JSON]
  residentOrganization_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ServiceConsumerHistoryRecordHistoryActionType
  history_action_not: ServiceConsumerHistoryRecordHistoryActionType
  history_action_in: [ServiceConsumerHistoryRecordHistoryActionType]
  history_action_not_in: [ServiceConsumerHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ServiceConsumerHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortServiceConsumerHistoryRecordsBy {
  paymentCategory_ASC
  paymentCategory_DESC
  accountNumber_ASC
  accountNumber_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ServiceConsumerHistoryRecordUpdateInput {
  paymentCategory: String
  resident: String
  billingAccount: String
  residentBillingAccount: JSON
  billingIntegrationContext: String
  acquiringIntegrationContext: String
  residentAcquiringIntegrationContext: JSON
  accountNumber: String
  organization: String
  residentOrganization: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ServiceConsumerHistoryRecordHistoryActionType
  history_id: String
}

input ServiceConsumerHistoryRecordsUpdateInput {
  id: ID!
  data: ServiceConsumerHistoryRecordUpdateInput
}

input ServiceConsumerHistoryRecordCreateInput {
  paymentCategory: String
  resident: String
  billingAccount: String
  residentBillingAccount: JSON
  billingIntegrationContext: String
  acquiringIntegrationContext: String
  residentAcquiringIntegrationContext: JSON
  accountNumber: String
  organization: String
  residentOrganization: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ServiceConsumerHistoryRecordHistoryActionType
  history_id: String
}

input ServiceConsumerHistoryRecordsCreateInput {
  data: ServiceConsumerHistoryRecordCreateInput
}

input ResidentRelateToOneInput {
  create: ResidentCreateInput
  connect: ResidentWhereUniqueInput
  disconnect: ResidentWhereUniqueInput
  disconnectAll: Boolean
}

type ResidentBillingAccount {
  id: ID!
}

input AcquiringIntegrationContextRelateToOneInput {
  create: AcquiringIntegrationContextCreateInput
  connect: AcquiringIntegrationContextWhereUniqueInput
  disconnect: AcquiringIntegrationContextWhereUniqueInput
  disconnectAll: Boolean
}

type ResidentAcquiringIntegrationContext {
  id: ID!
  integration: AcquiringIntegration
}

""" Service Consumer object. Existence of this object means that the resident is willing to pay for certain services 
"""
type ServiceConsumer {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ServiceConsumer List config, or
   2. As an alias to the field set on 'labelField' in the ServiceConsumer List config, or
   3. As an alias to a 'name' field on the ServiceConsumer List (if one exists), or
   4. As an alias to the 'id' field on the ServiceConsumer List.
  """
  _label_: String

  """ A payment category for this resident """
  paymentCategory: String

  """ Resident object """
  resident: Resident

  """ [DEPRECATED] Billing account, that will allow this resident to pay for certain service 
  """
  billingAccount: BillingAccount

  """ [DEPRECATED] BillingAccount id, that is returned for current serviceConsumer in mobile client 
  """
  residentBillingAccount: ResidentBillingAccount

  """ [DEPRECATED] Billing integration context, that this serviceConsumer is connected to 
  """
  billingIntegrationContext: BillingIntegrationOrganizationContext

  """ Acquiring integration context, that this serviceConsumer is connected to 
  """
  acquiringIntegrationContext: AcquiringIntegrationContext

  """ AcquiringIntegration, that is returned for current serviceConsumer in mobile client 
  """
  residentAcquiringIntegrationContext: ResidentAcquiringIntegrationContext

  """ Account number taken from resident. This is what resident think his account number is 
  """
  accountNumber: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Organization data, that is returned for current resident in mobile client 
  """
  residentOrganization: residentOrganization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ServiceConsumerWhereInput {
  AND: [ServiceConsumerWhereInput]
  OR: [ServiceConsumerWhereInput]
  paymentCategory: String
  paymentCategory_not: String
  paymentCategory_contains: String
  paymentCategory_not_contains: String
  paymentCategory_starts_with: String
  paymentCategory_not_starts_with: String
  paymentCategory_ends_with: String
  paymentCategory_not_ends_with: String
  paymentCategory_i: String
  paymentCategory_not_i: String
  paymentCategory_contains_i: String
  paymentCategory_not_contains_i: String
  paymentCategory_starts_with_i: String
  paymentCategory_not_starts_with_i: String
  paymentCategory_ends_with_i: String
  paymentCategory_not_ends_with_i: String
  paymentCategory_in: [String]
  paymentCategory_not_in: [String]
  resident: ResidentWhereInput
  resident_is_null: Boolean
  billingAccount: BillingAccountWhereInput
  billingAccount_is_null: Boolean
  billingIntegrationContext: BillingIntegrationOrganizationContextWhereInput
  billingIntegrationContext_is_null: Boolean
  acquiringIntegrationContext: AcquiringIntegrationContextWhereInput
  acquiringIntegrationContext_is_null: Boolean
  accountNumber: String
  accountNumber_not: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  accountNumber_i: String
  accountNumber_not_i: String
  accountNumber_contains_i: String
  accountNumber_not_contains_i: String
  accountNumber_starts_with_i: String
  accountNumber_not_starts_with_i: String
  accountNumber_ends_with_i: String
  accountNumber_not_ends_with_i: String
  accountNumber_in: [String]
  accountNumber_not_in: [String]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ServiceConsumerWhereUniqueInput {
  id: ID!
}

enum SortServiceConsumersBy {
  paymentCategory_ASC
  paymentCategory_DESC
  resident_ASC
  resident_DESC
  billingAccount_ASC
  billingAccount_DESC
  billingIntegrationContext_ASC
  billingIntegrationContext_DESC
  acquiringIntegrationContext_ASC
  acquiringIntegrationContext_DESC
  accountNumber_ASC
  accountNumber_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ServiceConsumerUpdateInput {
  paymentCategory: String
  resident: ResidentRelateToOneInput
  billingAccount: BillingAccountRelateToOneInput
  billingIntegrationContext: BillingIntegrationOrganizationContextRelateToOneInput
  acquiringIntegrationContext: AcquiringIntegrationContextRelateToOneInput
  accountNumber: String
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ServiceConsumersUpdateInput {
  id: ID!
  data: ServiceConsumerUpdateInput
}

input ServiceConsumerCreateInput {
  paymentCategory: String
  resident: ResidentRelateToOneInput
  billingAccount: BillingAccountRelateToOneInput
  billingIntegrationContext: BillingIntegrationOrganizationContextRelateToOneInput
  acquiringIntegrationContext: AcquiringIntegrationContextRelateToOneInput
  accountNumber: String
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ServiceConsumersCreateInput {
  data: ServiceConsumerCreateInput
}

enum OnBoardingHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OnBoardingHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OnBoardingHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OnBoardingHistoryRecord List config, or
   3. As an alias to a 'name' field on the OnBoardingHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OnBoardingHistoryRecord List.
  """
  _label_: String
  completed: Boolean
  stepsTransitions: JSON
  user: String
  type: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OnBoardingHistoryRecordHistoryActionType
  history_id: String
}

input OnBoardingHistoryRecordWhereInput {
  AND: [OnBoardingHistoryRecordWhereInput]
  OR: [OnBoardingHistoryRecordWhereInput]
  completed: Boolean
  completed_not: Boolean
  stepsTransitions: JSON
  stepsTransitions_not: JSON
  stepsTransitions_in: [JSON]
  stepsTransitions_not_in: [JSON]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OnBoardingHistoryRecordHistoryActionType
  history_action_not: OnBoardingHistoryRecordHistoryActionType
  history_action_in: [OnBoardingHistoryRecordHistoryActionType]
  history_action_not_in: [OnBoardingHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OnBoardingHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOnBoardingHistoryRecordsBy {
  completed_ASC
  completed_DESC
  type_ASC
  type_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OnBoardingHistoryRecordUpdateInput {
  completed: Boolean
  stepsTransitions: JSON
  user: String
  type: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OnBoardingHistoryRecordHistoryActionType
  history_id: String
}

input OnBoardingHistoryRecordsUpdateInput {
  id: ID!
  data: OnBoardingHistoryRecordUpdateInput
}

input OnBoardingHistoryRecordCreateInput {
  completed: Boolean
  stepsTransitions: JSON
  user: String
  type: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OnBoardingHistoryRecordHistoryActionType
  history_id: String
}

input OnBoardingHistoryRecordsCreateInput {
  data: OnBoardingHistoryRecordCreateInput
}

enum OnBoardingTypeType {
  ADMINISTRATOR
}

""" User action guide. It should be used to build complex hierarchical systems of user actions. 
"""
type OnBoarding {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OnBoarding List config, or
   2. As an alias to the field set on 'labelField' in the OnBoarding List config, or
   3. As an alias to a 'name' field on the OnBoarding List (if one exists), or
   4. As an alias to the 'id' field on the OnBoarding List.
  """
  _label_: String

  """
   Primary Attribute of user guide what we need to watch for. 
  Indicates the status and detect the full completeness of guide. 
  """
  completed: Boolean

  """
   Graph of possible transitions for steps. If there is no transition in this graph, 
  it is impossible to move forward or backward of guide. 
  """
  stepsTransitions: JSON

  """ User onBoarding relates to. """
  user: User

  """ Type of onBoarding. Used for guid classification """
  type: OnBoardingTypeType
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OnBoardingWhereInput {
  AND: [OnBoardingWhereInput]
  OR: [OnBoardingWhereInput]
  completed: Boolean
  completed_not: Boolean
  stepsTransitions: JSON
  stepsTransitions_not: JSON
  stepsTransitions_in: [JSON]
  stepsTransitions_not_in: [JSON]
  user: UserWhereInput
  user_is_null: Boolean
  type: OnBoardingTypeType
  type_not: OnBoardingTypeType
  type_in: [OnBoardingTypeType]
  type_not_in: [OnBoardingTypeType]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OnBoardingWhereUniqueInput {
  id: ID!
}

enum SortOnBoardingsBy {
  completed_ASC
  completed_DESC
  user_ASC
  user_DESC
  type_ASC
  type_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OnBoardingUpdateInput {
  completed: Boolean
  stepsTransitions: JSON
  user: UserRelateToOneInput
  type: OnBoardingTypeType
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OnBoardingsUpdateInput {
  id: ID!
  data: OnBoardingUpdateInput
}

input OnBoardingCreateInput {
  completed: Boolean
  stepsTransitions: JSON
  user: UserRelateToOneInput
  type: OnBoardingTypeType
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OnBoardingsCreateInput {
  data: OnBoardingCreateInput
}

enum OnBoardingStepHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type OnBoardingStepHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OnBoardingStepHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the OnBoardingStepHistoryRecord List config, or
   3. As an alias to a 'name' field on the OnBoardingStepHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the OnBoardingStepHistoryRecord List.
  """
  _label_: String
  icon: String
  order: Int
  title: String
  description: String
  required: Boolean
  completed: Boolean
  action: String
  entity: String
  onBoarding: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OnBoardingStepHistoryRecordHistoryActionType
  history_id: String
}

input OnBoardingStepHistoryRecordWhereInput {
  AND: [OnBoardingStepHistoryRecordWhereInput]
  OR: [OnBoardingStepHistoryRecordWhereInput]
  icon: String
  icon_not: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  icon_i: String
  icon_not_i: String
  icon_contains_i: String
  icon_not_contains_i: String
  icon_starts_with_i: String
  icon_not_starts_with_i: String
  icon_ends_with_i: String
  icon_not_ends_with_i: String
  icon_in: [String]
  icon_not_in: [String]
  order: Int
  order_not: Int
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int]
  order_not_in: [Int]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  required: Boolean
  required_not: Boolean
  completed: Boolean
  completed_not: Boolean
  action: String
  action_not: String
  action_contains: String
  action_not_contains: String
  action_starts_with: String
  action_not_starts_with: String
  action_ends_with: String
  action_not_ends_with: String
  action_i: String
  action_not_i: String
  action_contains_i: String
  action_not_contains_i: String
  action_starts_with_i: String
  action_not_starts_with_i: String
  action_ends_with_i: String
  action_not_ends_with_i: String
  action_in: [String]
  action_not_in: [String]
  entity: String
  entity_not: String
  entity_contains: String
  entity_not_contains: String
  entity_starts_with: String
  entity_not_starts_with: String
  entity_ends_with: String
  entity_not_ends_with: String
  entity_i: String
  entity_not_i: String
  entity_contains_i: String
  entity_not_contains_i: String
  entity_starts_with_i: String
  entity_not_starts_with_i: String
  entity_ends_with_i: String
  entity_not_ends_with_i: String
  entity_in: [String]
  entity_not_in: [String]
  onBoarding: String
  onBoarding_not: String
  onBoarding_in: [String]
  onBoarding_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: OnBoardingStepHistoryRecordHistoryActionType
  history_action_not: OnBoardingStepHistoryRecordHistoryActionType
  history_action_in: [OnBoardingStepHistoryRecordHistoryActionType]
  history_action_not_in: [OnBoardingStepHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input OnBoardingStepHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortOnBoardingStepHistoryRecordsBy {
  icon_ASC
  icon_DESC
  order_ASC
  order_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  required_ASC
  required_DESC
  completed_ASC
  completed_DESC
  action_ASC
  action_DESC
  entity_ASC
  entity_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input OnBoardingStepHistoryRecordUpdateInput {
  icon: String
  order: Int
  title: String
  description: String
  required: Boolean
  completed: Boolean
  action: String
  entity: String
  onBoarding: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OnBoardingStepHistoryRecordHistoryActionType
  history_id: String
}

input OnBoardingStepHistoryRecordsUpdateInput {
  id: ID!
  data: OnBoardingStepHistoryRecordUpdateInput
}

input OnBoardingStepHistoryRecordCreateInput {
  icon: String
  order: Int
  title: String
  description: String
  required: Boolean
  completed: Boolean
  action: String
  entity: String
  onBoarding: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: OnBoardingStepHistoryRecordHistoryActionType
  history_id: String
}

input OnBoardingStepHistoryRecordsCreateInput {
  data: OnBoardingStepHistoryRecordCreateInput
}

enum OnBoardingStepActionType {
  create
  read
  update
  delete
}

input OnBoardingRelateToOneInput {
  create: OnBoardingCreateInput
  connect: OnBoardingWhereUniqueInput
  disconnect: OnBoardingWhereUniqueInput
  disconnectAll: Boolean
}

""" Logic part of user app guide. """
type OnBoardingStep {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the OnBoardingStep List config, or
   2. As an alias to the field set on 'labelField' in the OnBoardingStep List config, or
   3. As an alias to a 'name' field on the OnBoardingStep List (if one exists), or
   4. As an alias to the 'id' field on the OnBoardingStep List.
  """
  _label_: String

  """ Icon string definition of step. """
  icon: String

  """ Step order in view maps, should be used as priority indicator. """
  order: Int

  """ Shows the main point of a step. """
  title: String
  titleNonLocalized: String

  """ Shows additional point of a step """
  description: String
  descriptionNonLocalized: String

  """ Used for step transition logic calculation, if the value of this flag is true movement towards graph will be blocked. 
  """
  required: Boolean

  """ Detect completness of the current step. If all steps in onBoarding will be completed, onBoarding completed state should be set to true. 
  """
  completed: Boolean

  """ Detect step target action. Action should be used for validation step completness. 
  """
  action: OnBoardingStepActionType

  """ Domain entity on which is performed to """
  entity: String
  onBoarding: OnBoarding
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input OnBoardingStepWhereInput {
  AND: [OnBoardingStepWhereInput]
  OR: [OnBoardingStepWhereInput]
  icon: String
  icon_not: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  icon_i: String
  icon_not_i: String
  icon_contains_i: String
  icon_not_contains_i: String
  icon_starts_with_i: String
  icon_not_starts_with_i: String
  icon_ends_with_i: String
  icon_not_ends_with_i: String
  icon_in: [String]
  icon_not_in: [String]
  order: Int
  order_not: Int
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int]
  order_not_in: [Int]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  required: Boolean
  required_not: Boolean
  completed: Boolean
  completed_not: Boolean
  action: OnBoardingStepActionType
  action_not: OnBoardingStepActionType
  action_in: [OnBoardingStepActionType]
  action_not_in: [OnBoardingStepActionType]
  entity: String
  entity_not: String
  entity_contains: String
  entity_not_contains: String
  entity_starts_with: String
  entity_not_starts_with: String
  entity_ends_with: String
  entity_not_ends_with: String
  entity_i: String
  entity_not_i: String
  entity_contains_i: String
  entity_not_contains_i: String
  entity_starts_with_i: String
  entity_not_starts_with_i: String
  entity_ends_with_i: String
  entity_not_ends_with_i: String
  entity_in: [String]
  entity_not_in: [String]
  onBoarding: OnBoardingWhereInput
  onBoarding_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input OnBoardingStepWhereUniqueInput {
  id: ID!
}

enum SortOnBoardingStepsBy {
  icon_ASC
  icon_DESC
  order_ASC
  order_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  required_ASC
  required_DESC
  completed_ASC
  completed_DESC
  action_ASC
  action_DESC
  entity_ASC
  entity_DESC
  onBoarding_ASC
  onBoarding_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input OnBoardingStepUpdateInput {
  icon: String
  order: Int
  title: String
  description: String
  required: Boolean
  completed: Boolean
  action: OnBoardingStepActionType
  entity: String
  onBoarding: OnBoardingRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OnBoardingStepsUpdateInput {
  id: ID!
  data: OnBoardingStepUpdateInput
}

input OnBoardingStepCreateInput {
  icon: String
  order: Int
  title: String
  description: String
  required: Boolean
  completed: Boolean
  action: OnBoardingStepActionType
  entity: String
  onBoarding: OnBoardingRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input OnBoardingStepsCreateInput {
  data: OnBoardingStepCreateInput
}

enum MeterResourceHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MeterResourceHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterResourceHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MeterResourceHistoryRecord List config, or
   3. As an alias to a 'name' field on the MeterResourceHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MeterResourceHistoryRecord List.
  """
  _label_: String
  name: String
  measure: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterResourceHistoryRecordHistoryActionType
  history_id: String
}

input MeterResourceHistoryRecordWhereInput {
  AND: [MeterResourceHistoryRecordWhereInput]
  OR: [MeterResourceHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  measure: String
  measure_not: String
  measure_contains: String
  measure_not_contains: String
  measure_starts_with: String
  measure_not_starts_with: String
  measure_ends_with: String
  measure_not_ends_with: String
  measure_i: String
  measure_not_i: String
  measure_contains_i: String
  measure_not_contains_i: String
  measure_starts_with_i: String
  measure_not_starts_with_i: String
  measure_ends_with_i: String
  measure_not_ends_with_i: String
  measure_in: [String]
  measure_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MeterResourceHistoryRecordHistoryActionType
  history_action_not: MeterResourceHistoryRecordHistoryActionType
  history_action_in: [MeterResourceHistoryRecordHistoryActionType]
  history_action_not_in: [MeterResourceHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MeterResourceHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMeterResourceHistoryRecordsBy {
  name_ASC
  name_DESC
  measure_ASC
  measure_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MeterResourceHistoryRecordUpdateInput {
  name: String
  measure: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterResourceHistoryRecordHistoryActionType
  history_id: String
}

input MeterResourceHistoryRecordsUpdateInput {
  id: ID!
  data: MeterResourceHistoryRecordUpdateInput
}

input MeterResourceHistoryRecordCreateInput {
  name: String
  measure: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterResourceHistoryRecordHistoryActionType
  history_id: String
}

input MeterResourceHistoryRecordsCreateInput {
  data: MeterResourceHistoryRecordCreateInput
}

""" Kind of consumed resource, measured by meter """
type MeterResource {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterResource List config, or
   2. As an alias to the field set on 'labelField' in the MeterResource List config, or
   3. As an alias to a 'name' field on the MeterResource List (if one exists), or
   4. As an alias to the 'id' field on the MeterResource List.
  """
  _label_: String
  name: String
  nameNonLocalized: String
  measure: String
  measureNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MeterResourceWhereInput {
  AND: [MeterResourceWhereInput]
  OR: [MeterResourceWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  measure: String
  measure_not: String
  measure_contains: String
  measure_not_contains: String
  measure_starts_with: String
  measure_not_starts_with: String
  measure_ends_with: String
  measure_not_ends_with: String
  measure_i: String
  measure_not_i: String
  measure_contains_i: String
  measure_not_contains_i: String
  measure_starts_with_i: String
  measure_not_starts_with_i: String
  measure_ends_with_i: String
  measure_not_ends_with_i: String
  measure_in: [String]
  measure_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MeterResourceWhereUniqueInput {
  id: ID!
}

enum SortMeterResourcesBy {
  name_ASC
  name_DESC
  measure_ASC
  measure_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MeterResourceUpdateInput {
  name: String
  measure: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterResourcesUpdateInput {
  id: ID!
  data: MeterResourceUpdateInput
}

input MeterResourceCreateInput {
  name: String
  measure: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterResourcesCreateInput {
  data: MeterResourceCreateInput
}

enum MeterReadingSourceHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MeterReadingSourceHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterReadingSourceHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MeterReadingSourceHistoryRecord List config, or
   3. As an alias to a 'name' field on the MeterReadingSourceHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MeterReadingSourceHistoryRecord List.
  """
  _label_: String
  type: String
  name: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingSourceHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingSourceHistoryRecordWhereInput {
  AND: [MeterReadingSourceHistoryRecordWhereInput]
  OR: [MeterReadingSourceHistoryRecordWhereInput]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MeterReadingSourceHistoryRecordHistoryActionType
  history_action_not: MeterReadingSourceHistoryRecordHistoryActionType
  history_action_in: [MeterReadingSourceHistoryRecordHistoryActionType]
  history_action_not_in: [MeterReadingSourceHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MeterReadingSourceHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMeterReadingSourceHistoryRecordsBy {
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MeterReadingSourceHistoryRecordUpdateInput {
  type: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingSourceHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingSourceHistoryRecordsUpdateInput {
  id: ID!
  data: MeterReadingSourceHistoryRecordUpdateInput
}

input MeterReadingSourceHistoryRecordCreateInput {
  type: String
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingSourceHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingSourceHistoryRecordsCreateInput {
  data: MeterReadingSourceHistoryRecordCreateInput
}

enum MeterReadingSourceTypeType {
  import_condo
  call
  mobile_app
  external_import
  email
  remote_system
  other
  visit
  web_app
  organization_site
  messenger
  social_network
  mobile_app_staff
}

""" Ticket source. Income call, mobile_app, ... """
type MeterReadingSource {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterReadingSource List config, or
   2. As an alias to the field set on 'labelField' in the MeterReadingSource List config, or
   3. As an alias to a 'name' field on the MeterReadingSource List (if one exists), or
   4. As an alias to the 'id' field on the MeterReadingSource List.
  """
  _label_: String
  type: MeterReadingSourceTypeType
  name: String
  nameNonLocalized: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MeterReadingSourceWhereInput {
  AND: [MeterReadingSourceWhereInput]
  OR: [MeterReadingSourceWhereInput]
  type: MeterReadingSourceTypeType
  type_not: MeterReadingSourceTypeType
  type_in: [MeterReadingSourceTypeType]
  type_not_in: [MeterReadingSourceTypeType]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MeterReadingSourceWhereUniqueInput {
  id: ID!
}

enum SortMeterReadingSourcesBy {
  type_ASC
  type_DESC
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MeterReadingSourceUpdateInput {
  type: MeterReadingSourceTypeType
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterReadingSourcesUpdateInput {
  id: ID!
  data: MeterReadingSourceUpdateInput
}

input MeterReadingSourceCreateInput {
  type: MeterReadingSourceTypeType
  name: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterReadingSourcesCreateInput {
  data: MeterReadingSourceCreateInput
}

enum MeterReadingHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MeterReadingHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterReadingHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MeterReadingHistoryRecord List config, or
   3. As an alias to a 'name' field on the MeterReadingHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MeterReadingHistoryRecord List.
  """
  _label_: String
  date: String
  meter: String
  value1: String
  value2: String
  value3: String
  value4: String
  client: String
  contact: String
  clientName: String
  clientEmail: String
  clientPhone: String
  source: String
  organization: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingHistoryRecordWhereInput {
  AND: [MeterReadingHistoryRecordWhereInput]
  OR: [MeterReadingHistoryRecordWhereInput]
  date: String
  date_not: String
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_in: [String]
  date_not_in: [String]
  meter: String
  meter_not: String
  meter_in: [String]
  meter_not_in: [String]
  value1: String
  value1_not: String
  value1_lt: String
  value1_lte: String
  value1_gt: String
  value1_gte: String
  value1_in: [String]
  value1_not_in: [String]
  value2: String
  value2_not: String
  value2_lt: String
  value2_lte: String
  value2_gt: String
  value2_gte: String
  value2_in: [String]
  value2_not_in: [String]
  value3: String
  value3_not: String
  value3_lt: String
  value3_lte: String
  value3_gt: String
  value3_gte: String
  value3_in: [String]
  value3_not_in: [String]
  value4: String
  value4_not: String
  value4_lt: String
  value4_lte: String
  value4_gt: String
  value4_gte: String
  value4_in: [String]
  value4_not_in: [String]
  client: String
  client_not: String
  client_in: [String]
  client_not_in: [String]
  contact: String
  contact_not: String
  contact_in: [String]
  contact_not_in: [String]
  clientName: String
  clientName_not: String
  clientName_contains: String
  clientName_not_contains: String
  clientName_starts_with: String
  clientName_not_starts_with: String
  clientName_ends_with: String
  clientName_not_ends_with: String
  clientName_i: String
  clientName_not_i: String
  clientName_contains_i: String
  clientName_not_contains_i: String
  clientName_starts_with_i: String
  clientName_not_starts_with_i: String
  clientName_ends_with_i: String
  clientName_not_ends_with_i: String
  clientName_in: [String]
  clientName_not_in: [String]
  clientEmail: String
  clientEmail_not: String
  clientEmail_contains: String
  clientEmail_not_contains: String
  clientEmail_starts_with: String
  clientEmail_not_starts_with: String
  clientEmail_ends_with: String
  clientEmail_not_ends_with: String
  clientEmail_i: String
  clientEmail_not_i: String
  clientEmail_contains_i: String
  clientEmail_not_contains_i: String
  clientEmail_starts_with_i: String
  clientEmail_not_starts_with_i: String
  clientEmail_ends_with_i: String
  clientEmail_not_ends_with_i: String
  clientEmail_in: [String]
  clientEmail_not_in: [String]
  clientPhone: String
  clientPhone_not: String
  clientPhone_contains: String
  clientPhone_not_contains: String
  clientPhone_starts_with: String
  clientPhone_not_starts_with: String
  clientPhone_ends_with: String
  clientPhone_not_ends_with: String
  clientPhone_i: String
  clientPhone_not_i: String
  clientPhone_contains_i: String
  clientPhone_not_contains_i: String
  clientPhone_starts_with_i: String
  clientPhone_not_starts_with_i: String
  clientPhone_ends_with_i: String
  clientPhone_not_ends_with_i: String
  clientPhone_in: [String]
  clientPhone_not_in: [String]
  source: String
  source_not: String
  source_in: [String]
  source_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MeterReadingHistoryRecordHistoryActionType
  history_action_not: MeterReadingHistoryRecordHistoryActionType
  history_action_in: [MeterReadingHistoryRecordHistoryActionType]
  history_action_not_in: [MeterReadingHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MeterReadingHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMeterReadingHistoryRecordsBy {
  date_ASC
  date_DESC
  value1_ASC
  value1_DESC
  value2_ASC
  value2_DESC
  value3_ASC
  value3_DESC
  value4_ASC
  value4_DESC
  clientName_ASC
  clientName_DESC
  clientEmail_ASC
  clientEmail_DESC
  clientPhone_ASC
  clientPhone_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MeterReadingHistoryRecordUpdateInput {
  date: String
  meter: String
  value1: String
  value2: String
  value3: String
  value4: String
  client: String
  contact: String
  clientName: String
  clientEmail: String
  clientPhone: String
  source: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingHistoryRecordsUpdateInput {
  id: ID!
  data: MeterReadingHistoryRecordUpdateInput
}

input MeterReadingHistoryRecordCreateInput {
  date: String
  meter: String
  value1: String
  value2: String
  value3: String
  value4: String
  client: String
  contact: String
  clientName: String
  clientEmail: String
  clientPhone: String
  source: String
  organization: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingHistoryRecordsCreateInput {
  data: MeterReadingHistoryRecordCreateInput
}

input MeterRelateToOneInput {
  create: MeterCreateInput
  connect: MeterWhereUniqueInput
  disconnect: MeterWhereUniqueInput
  disconnectAll: Boolean
}

input MeterReadingSourceRelateToOneInput {
  create: MeterReadingSourceCreateInput
  connect: MeterReadingSourceWhereUniqueInput
  disconnect: MeterReadingSourceWhereUniqueInput
  disconnectAll: Boolean
}

""" Meter reading taken from a client or billing """
type MeterReading {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterReading List config, or
   2. As an alias to the field set on 'labelField' in the MeterReading List config, or
   3. As an alias to a 'name' field on the MeterReading List (if one exists), or
   4. As an alias to the 'id' field on the MeterReading List.
  """
  _label_: String

  """ Date when the readings were taken """
  date: String

  """ Meter from which readings were taken """
  meter: Meter

  """ If the meter is single-tariff, then only this value will be filled in;If multi-tariff, then the value of the first tariff will be in this field 
  """
  value1: String

  """ If the meter is multi-tariff, then the value of the second tariff is stored here 
  """
  value2: String

  """ If the meter is multi-tariff, then the value of the third tariff is stored here 
  """
  value3: String

  """ If the meter is multi-tariff, then the value of the fourth tariff is stored here 
  """
  value4: String

  """ Inhabitant/customer/person who has a problem or want to improve/order something. Not null if we have a registered client. 
  """
  client: User

  """ Contact, that reported issue, described in this ticket """
  contact: Contact

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientName: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientEmail: String

  """ Inhabitant/customer/person who has a problem. Sometimes we get a problem from an unregistered client, in such cases we have a null inside the `client` and just have something here. Or sometimes clients want to change it 
  """
  clientPhone: String

  """ Meter reading source channel/system. Examples: call, mobile_app, billing, ... 
  """
  source: MeterReadingSource

  """ Ref to the organization. It is filled in on the server and is read-only 
  """
  organization: Organization
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MeterReadingWhereInput {
  AND: [MeterReadingWhereInput]
  OR: [MeterReadingWhereInput]
  date: String
  date_not: String
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_in: [String]
  date_not_in: [String]
  meter: MeterWhereInput
  meter_is_null: Boolean
  value1: String
  value1_not: String
  value1_lt: String
  value1_lte: String
  value1_gt: String
  value1_gte: String
  value1_in: [String]
  value1_not_in: [String]
  value2: String
  value2_not: String
  value2_lt: String
  value2_lte: String
  value2_gt: String
  value2_gte: String
  value2_in: [String]
  value2_not_in: [String]
  value3: String
  value3_not: String
  value3_lt: String
  value3_lte: String
  value3_gt: String
  value3_gte: String
  value3_in: [String]
  value3_not_in: [String]
  value4: String
  value4_not: String
  value4_lt: String
  value4_lte: String
  value4_gt: String
  value4_gte: String
  value4_in: [String]
  value4_not_in: [String]
  client: UserWhereInput
  client_is_null: Boolean
  contact: ContactWhereInput
  contact_is_null: Boolean
  clientName: String
  clientName_not: String
  clientName_contains: String
  clientName_not_contains: String
  clientName_starts_with: String
  clientName_not_starts_with: String
  clientName_ends_with: String
  clientName_not_ends_with: String
  clientName_i: String
  clientName_not_i: String
  clientName_contains_i: String
  clientName_not_contains_i: String
  clientName_starts_with_i: String
  clientName_not_starts_with_i: String
  clientName_ends_with_i: String
  clientName_not_ends_with_i: String
  clientName_in: [String]
  clientName_not_in: [String]
  clientEmail: String
  clientEmail_not: String
  clientEmail_contains: String
  clientEmail_not_contains: String
  clientEmail_starts_with: String
  clientEmail_not_starts_with: String
  clientEmail_ends_with: String
  clientEmail_not_ends_with: String
  clientEmail_i: String
  clientEmail_not_i: String
  clientEmail_contains_i: String
  clientEmail_not_contains_i: String
  clientEmail_starts_with_i: String
  clientEmail_not_starts_with_i: String
  clientEmail_ends_with_i: String
  clientEmail_not_ends_with_i: String
  clientEmail_in: [String]
  clientEmail_not_in: [String]
  clientPhone: String
  clientPhone_not: String
  clientPhone_contains: String
  clientPhone_not_contains: String
  clientPhone_starts_with: String
  clientPhone_not_starts_with: String
  clientPhone_ends_with: String
  clientPhone_not_ends_with: String
  clientPhone_i: String
  clientPhone_not_i: String
  clientPhone_contains_i: String
  clientPhone_not_contains_i: String
  clientPhone_starts_with_i: String
  clientPhone_not_starts_with_i: String
  clientPhone_ends_with_i: String
  clientPhone_not_ends_with_i: String
  clientPhone_in: [String]
  clientPhone_not_in: [String]
  source: MeterReadingSourceWhereInput
  source_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MeterReadingWhereUniqueInput {
  id: ID!
}

enum SortMeterReadingsBy {
  date_ASC
  date_DESC
  meter_ASC
  meter_DESC
  value1_ASC
  value1_DESC
  value2_ASC
  value2_DESC
  value3_ASC
  value3_DESC
  value4_ASC
  value4_DESC
  client_ASC
  client_DESC
  contact_ASC
  contact_DESC
  clientName_ASC
  clientName_DESC
  clientEmail_ASC
  clientEmail_DESC
  clientPhone_ASC
  clientPhone_DESC
  source_ASC
  source_DESC
  organization_ASC
  organization_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MeterReadingUpdateInput {
  date: String
  meter: MeterRelateToOneInput
  value1: String
  value2: String
  value3: String
  value4: String
  client: UserRelateToOneInput
  contact: ContactRelateToOneInput
  clientName: String
  clientEmail: String
  clientPhone: String
  source: MeterReadingSourceRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterReadingsUpdateInput {
  id: ID!
  data: MeterReadingUpdateInput
}

input MeterReadingCreateInput {
  date: String
  meter: MeterRelateToOneInput
  value1: String
  value2: String
  value3: String
  value4: String
  client: UserRelateToOneInput
  contact: ContactRelateToOneInput
  clientName: String
  clientEmail: String
  clientPhone: String
  source: MeterReadingSourceRelateToOneInput
  organization: OrganizationRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterReadingsCreateInput {
  data: MeterReadingCreateInput
}

enum MeterHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MeterHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MeterHistoryRecord List config, or
   3. As an alias to a 'name' field on the MeterHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MeterHistoryRecord List.
  """
  _label_: String
  organization: String
  property: String
  number: String
  numberOfTariffs: Int
  installationDate: String
  commissioningDate: String
  verificationDate: String
  nextVerificationDate: String
  controlReadingsDate: String
  sealingDate: String
  accountNumber: String
  unitName: String
  unitType: String
  place: String
  resource: String
  isAutomatic: Boolean
  meta: JSON
  b2cApp: String
  b2bApp: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterHistoryRecordHistoryActionType
  history_id: String
}

input MeterHistoryRecordWhereInput {
  AND: [MeterHistoryRecordWhereInput]
  OR: [MeterHistoryRecordWhereInput]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  numberOfTariffs: Int
  numberOfTariffs_not: Int
  numberOfTariffs_lt: Int
  numberOfTariffs_lte: Int
  numberOfTariffs_gt: Int
  numberOfTariffs_gte: Int
  numberOfTariffs_in: [Int]
  numberOfTariffs_not_in: [Int]
  installationDate: String
  installationDate_not: String
  installationDate_lt: String
  installationDate_lte: String
  installationDate_gt: String
  installationDate_gte: String
  installationDate_in: [String]
  installationDate_not_in: [String]
  commissioningDate: String
  commissioningDate_not: String
  commissioningDate_lt: String
  commissioningDate_lte: String
  commissioningDate_gt: String
  commissioningDate_gte: String
  commissioningDate_in: [String]
  commissioningDate_not_in: [String]
  verificationDate: String
  verificationDate_not: String
  verificationDate_lt: String
  verificationDate_lte: String
  verificationDate_gt: String
  verificationDate_gte: String
  verificationDate_in: [String]
  verificationDate_not_in: [String]
  nextVerificationDate: String
  nextVerificationDate_not: String
  nextVerificationDate_lt: String
  nextVerificationDate_lte: String
  nextVerificationDate_gt: String
  nextVerificationDate_gte: String
  nextVerificationDate_in: [String]
  nextVerificationDate_not_in: [String]
  controlReadingsDate: String
  controlReadingsDate_not: String
  controlReadingsDate_lt: String
  controlReadingsDate_lte: String
  controlReadingsDate_gt: String
  controlReadingsDate_gte: String
  controlReadingsDate_in: [String]
  controlReadingsDate_not_in: [String]
  sealingDate: String
  sealingDate_not: String
  sealingDate_lt: String
  sealingDate_lte: String
  sealingDate_gt: String
  sealingDate_gte: String
  sealingDate_in: [String]
  sealingDate_not_in: [String]
  accountNumber: String
  accountNumber_not: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  accountNumber_i: String
  accountNumber_not_i: String
  accountNumber_contains_i: String
  accountNumber_not_contains_i: String
  accountNumber_starts_with_i: String
  accountNumber_not_starts_with_i: String
  accountNumber_ends_with_i: String
  accountNumber_not_ends_with_i: String
  accountNumber_in: [String]
  accountNumber_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_contains: String
  unitType_not_contains: String
  unitType_starts_with: String
  unitType_not_starts_with: String
  unitType_ends_with: String
  unitType_not_ends_with: String
  unitType_i: String
  unitType_not_i: String
  unitType_contains_i: String
  unitType_not_contains_i: String
  unitType_starts_with_i: String
  unitType_not_starts_with_i: String
  unitType_ends_with_i: String
  unitType_not_ends_with_i: String
  unitType_in: [String]
  unitType_not_in: [String]
  place: String
  place_not: String
  place_contains: String
  place_not_contains: String
  place_starts_with: String
  place_not_starts_with: String
  place_ends_with: String
  place_not_ends_with: String
  place_i: String
  place_not_i: String
  place_contains_i: String
  place_not_contains_i: String
  place_starts_with_i: String
  place_not_starts_with_i: String
  place_ends_with_i: String
  place_not_ends_with_i: String
  place_in: [String]
  place_not_in: [String]
  resource: String
  resource_not: String
  resource_in: [String]
  resource_not_in: [String]
  isAutomatic: Boolean
  isAutomatic_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  b2cApp: String
  b2cApp_not: String
  b2cApp_in: [String]
  b2cApp_not_in: [String]
  b2bApp: String
  b2bApp_not: String
  b2bApp_in: [String]
  b2bApp_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MeterHistoryRecordHistoryActionType
  history_action_not: MeterHistoryRecordHistoryActionType
  history_action_in: [MeterHistoryRecordHistoryActionType]
  history_action_not_in: [MeterHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MeterHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMeterHistoryRecordsBy {
  number_ASC
  number_DESC
  numberOfTariffs_ASC
  numberOfTariffs_DESC
  installationDate_ASC
  installationDate_DESC
  commissioningDate_ASC
  commissioningDate_DESC
  verificationDate_ASC
  verificationDate_DESC
  nextVerificationDate_ASC
  nextVerificationDate_DESC
  controlReadingsDate_ASC
  controlReadingsDate_DESC
  sealingDate_ASC
  sealingDate_DESC
  accountNumber_ASC
  accountNumber_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  place_ASC
  place_DESC
  isAutomatic_ASC
  isAutomatic_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MeterHistoryRecordUpdateInput {
  organization: String
  property: String
  number: String
  numberOfTariffs: Int
  installationDate: String
  commissioningDate: String
  verificationDate: String
  nextVerificationDate: String
  controlReadingsDate: String
  sealingDate: String
  accountNumber: String
  unitName: String
  unitType: String
  place: String
  resource: String
  isAutomatic: Boolean
  meta: JSON
  b2cApp: String
  b2bApp: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterHistoryRecordHistoryActionType
  history_id: String
}

input MeterHistoryRecordsUpdateInput {
  id: ID!
  data: MeterHistoryRecordUpdateInput
}

input MeterHistoryRecordCreateInput {
  organization: String
  property: String
  number: String
  numberOfTariffs: Int
  installationDate: String
  commissioningDate: String
  verificationDate: String
  nextVerificationDate: String
  controlReadingsDate: String
  sealingDate: String
  accountNumber: String
  unitName: String
  unitType: String
  place: String
  resource: String
  isAutomatic: Boolean
  meta: JSON
  b2cApp: String
  b2bApp: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterHistoryRecordHistoryActionType
  history_id: String
}

input MeterHistoryRecordsCreateInput {
  data: MeterHistoryRecordCreateInput
}

input MeterResourceRelateToOneInput {
  create: MeterResourceCreateInput
  connect: MeterResourceWhereUniqueInput
  disconnect: MeterResourceWhereUniqueInput
  disconnectAll: Boolean
}

input B2CAppRelateToOneInput {
  create: B2CAppCreateInput
  connect: B2CAppWhereUniqueInput
  disconnect: B2CAppWhereUniqueInput
  disconnectAll: Boolean
}

input B2BAppRelateToOneInput {
  create: B2BAppCreateInput
  connect: B2BAppWhereUniqueInput
  disconnect: B2BAppWhereUniqueInput
  disconnectAll: Boolean
}

""" Resource meter at a certain place in the unitName """
type Meter {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Meter List config, or
   2. As an alias to the field set on 'labelField' in the Meter List config, or
   3. As an alias to a 'name' field on the Meter List (if one exists), or
   4. As an alias to the 'id' field on the Meter List.
  """
  _label_: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ Link to property which contains unit with this meter """
  property: Property

  """ Number of resource meter, such as "А03 9908" """
  number: String
  numberOfTariffs: Int

  """ Date when the meter was installed in the unit """
  installationDate: String

  """ Date when the meter was commissioned.Commissioning - documentation of the meter as a billing meter 
  """
  commissioningDate: String

  """ The date when the employee came and checked how accurately the meter counts the resource 
  """
  verificationDate: String

  """ The date of the next meter verification.For example, for a cold water meter - usually 6 years after the verification date 
  """
  nextVerificationDate: String

  """ The date when the employee came and took readings from the meter """
  controlReadingsDate: String

  """ The date when meter was sealed.Sealing is the installation of a unique single-use device (directly a seal and a sealing rope)on the metering device, which is designed to control unauthorized access to the equipment. 
  """
  sealingDate: String

  """ Client's billing account """
  accountNumber: String

  """ Unit with this meter """
  unitName: String

  """ Type of unit, such as parking lot or flat """
  unitType: String

  """ Certain place in unit where meter is, such as kitchen """
  place: String

  """ Meter resource, such as hot water or electricity """
  resource: MeterResource

  """ Determines, if Meter is automatic or not. False by default. If set to True - prevents user with type "resident" from creating MeterReading. So MeterReadings only be acquired through external integration or adjusted by organization employee 
  """
  isAutomatic: Boolean

  """ Meter metadata. Can be used to store additional settings from external sources, such as billing integrations or mini apps 
  """
  meta: JSON

  """ Ref to the B2CApp which used to replace default integration with meter by resident's user in resident's app 
  """
  b2cApp: B2CApp

  """ Ref to B2BApp, which is used as a master system for this meter. Specified organization must connect this app. 
  """
  b2bApp: B2BApp
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MeterWhereInput {
  AND: [MeterWhereInput]
  OR: [MeterWhereInput]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  number: String
  number_not: String
  number_contains: String
  number_not_contains: String
  number_starts_with: String
  number_not_starts_with: String
  number_ends_with: String
  number_not_ends_with: String
  number_i: String
  number_not_i: String
  number_contains_i: String
  number_not_contains_i: String
  number_starts_with_i: String
  number_not_starts_with_i: String
  number_ends_with_i: String
  number_not_ends_with_i: String
  number_in: [String]
  number_not_in: [String]
  numberOfTariffs: Int
  numberOfTariffs_not: Int
  numberOfTariffs_lt: Int
  numberOfTariffs_lte: Int
  numberOfTariffs_gt: Int
  numberOfTariffs_gte: Int
  numberOfTariffs_in: [Int]
  numberOfTariffs_not_in: [Int]
  installationDate: String
  installationDate_not: String
  installationDate_lt: String
  installationDate_lte: String
  installationDate_gt: String
  installationDate_gte: String
  installationDate_in: [String]
  installationDate_not_in: [String]
  commissioningDate: String
  commissioningDate_not: String
  commissioningDate_lt: String
  commissioningDate_lte: String
  commissioningDate_gt: String
  commissioningDate_gte: String
  commissioningDate_in: [String]
  commissioningDate_not_in: [String]
  verificationDate: String
  verificationDate_not: String
  verificationDate_lt: String
  verificationDate_lte: String
  verificationDate_gt: String
  verificationDate_gte: String
  verificationDate_in: [String]
  verificationDate_not_in: [String]
  nextVerificationDate: String
  nextVerificationDate_not: String
  nextVerificationDate_lt: String
  nextVerificationDate_lte: String
  nextVerificationDate_gt: String
  nextVerificationDate_gte: String
  nextVerificationDate_in: [String]
  nextVerificationDate_not_in: [String]
  controlReadingsDate: String
  controlReadingsDate_not: String
  controlReadingsDate_lt: String
  controlReadingsDate_lte: String
  controlReadingsDate_gt: String
  controlReadingsDate_gte: String
  controlReadingsDate_in: [String]
  controlReadingsDate_not_in: [String]
  sealingDate: String
  sealingDate_not: String
  sealingDate_lt: String
  sealingDate_lte: String
  sealingDate_gt: String
  sealingDate_gte: String
  sealingDate_in: [String]
  sealingDate_not_in: [String]
  accountNumber: String
  accountNumber_not: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  accountNumber_i: String
  accountNumber_not_i: String
  accountNumber_contains_i: String
  accountNumber_not_contains_i: String
  accountNumber_starts_with_i: String
  accountNumber_not_starts_with_i: String
  accountNumber_ends_with_i: String
  accountNumber_not_ends_with_i: String
  accountNumber_in: [String]
  accountNumber_not_in: [String]
  unitName: String
  unitName_not: String
  unitName_contains: String
  unitName_not_contains: String
  unitName_starts_with: String
  unitName_not_starts_with: String
  unitName_ends_with: String
  unitName_not_ends_with: String
  unitName_i: String
  unitName_not_i: String
  unitName_contains_i: String
  unitName_not_contains_i: String
  unitName_starts_with_i: String
  unitName_not_starts_with_i: String
  unitName_ends_with_i: String
  unitName_not_ends_with_i: String
  unitName_in: [String]
  unitName_not_in: [String]
  unitType: String
  unitType_not: String
  unitType_in: [String]
  unitType_not_in: [String]
  place: String
  place_not: String
  place_contains: String
  place_not_contains: String
  place_starts_with: String
  place_not_starts_with: String
  place_ends_with: String
  place_not_ends_with: String
  place_i: String
  place_not_i: String
  place_contains_i: String
  place_not_contains_i: String
  place_starts_with_i: String
  place_not_starts_with_i: String
  place_ends_with_i: String
  place_not_ends_with_i: String
  place_in: [String]
  place_not_in: [String]
  resource: MeterResourceWhereInput
  resource_is_null: Boolean
  isAutomatic: Boolean
  isAutomatic_not: Boolean
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  b2cApp: B2CAppWhereInput
  b2cApp_is_null: Boolean
  b2bApp: B2BAppWhereInput
  b2bApp_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MeterWhereUniqueInput {
  id: ID!
}

enum SortMetersBy {
  organization_ASC
  organization_DESC
  property_ASC
  property_DESC
  number_ASC
  number_DESC
  numberOfTariffs_ASC
  numberOfTariffs_DESC
  installationDate_ASC
  installationDate_DESC
  commissioningDate_ASC
  commissioningDate_DESC
  verificationDate_ASC
  verificationDate_DESC
  nextVerificationDate_ASC
  nextVerificationDate_DESC
  controlReadingsDate_ASC
  controlReadingsDate_DESC
  sealingDate_ASC
  sealingDate_DESC
  accountNumber_ASC
  accountNumber_DESC
  unitName_ASC
  unitName_DESC
  unitType_ASC
  unitType_DESC
  place_ASC
  place_DESC
  resource_ASC
  resource_DESC
  isAutomatic_ASC
  isAutomatic_DESC
  b2cApp_ASC
  b2cApp_DESC
  b2bApp_ASC
  b2bApp_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MeterUpdateInput {
  organization: OrganizationRelateToOneInput
  property: PropertyRelateToOneInput
  number: String
  numberOfTariffs: Int
  installationDate: String
  commissioningDate: String
  verificationDate: String
  nextVerificationDate: String
  controlReadingsDate: String
  sealingDate: String
  accountNumber: String
  unitName: String
  unitType: String
  place: String
  resource: MeterResourceRelateToOneInput
  isAutomatic: Boolean
  meta: JSON
  b2cApp: B2CAppRelateToOneInput
  b2bApp: B2BAppRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MetersUpdateInput {
  id: ID!
  data: MeterUpdateInput
}

input MeterCreateInput {
  organization: OrganizationRelateToOneInput
  property: PropertyRelateToOneInput
  number: String
  numberOfTariffs: Int
  installationDate: String
  commissioningDate: String
  verificationDate: String
  nextVerificationDate: String
  controlReadingsDate: String
  sealingDate: String
  accountNumber: String
  unitName: String
  unitType: String
  place: String
  resource: MeterResourceRelateToOneInput
  isAutomatic: Boolean
  meta: JSON
  b2cApp: B2CAppRelateToOneInput
  b2bApp: B2BAppRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MetersCreateInput {
  data: MeterCreateInput
}

enum MeterReadingFilterTemplateHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MeterReadingFilterTemplateHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterReadingFilterTemplateHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MeterReadingFilterTemplateHistoryRecord List config, or
   3. As an alias to a 'name' field on the MeterReadingFilterTemplateHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MeterReadingFilterTemplateHistoryRecord List.
  """
  _label_: String
  name: String
  employee: String
  fields: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingFilterTemplateHistoryRecordWhereInput {
  AND: [MeterReadingFilterTemplateHistoryRecordWhereInput]
  OR: [MeterReadingFilterTemplateHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  employee: String
  employee_not: String
  employee_in: [String]
  employee_not_in: [String]
  fields: JSON
  fields_not: JSON
  fields_in: [JSON]
  fields_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MeterReadingFilterTemplateHistoryRecordHistoryActionType
  history_action_not: MeterReadingFilterTemplateHistoryRecordHistoryActionType
  history_action_in: [MeterReadingFilterTemplateHistoryRecordHistoryActionType]
  history_action_not_in: [MeterReadingFilterTemplateHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MeterReadingFilterTemplateHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMeterReadingFilterTemplateHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MeterReadingFilterTemplateHistoryRecordUpdateInput {
  name: String
  employee: String
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingFilterTemplateHistoryRecordsUpdateInput {
  id: ID!
  data: MeterReadingFilterTemplateHistoryRecordUpdateInput
}

input MeterReadingFilterTemplateHistoryRecordCreateInput {
  name: String
  employee: String
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MeterReadingFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input MeterReadingFilterTemplateHistoryRecordsCreateInput {
  data: MeterReadingFilterTemplateHistoryRecordCreateInput
}

type MeterReadingFilters {
  organization: [String]
  address: [String]
  accountNumber: String
  place: String
  number: String
  unitName: [String]
  resource: [String]
  clientName: String
  createdAt: [String]
  date: [String]
  verificationDate: [String]
  installationDate: [String]
  commissioningDate: [String]
  sealingDate: [String]
  controlReadingDate: [String]
}

""" Employee specific meter reading filter template """
type MeterReadingFilterTemplate {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MeterReadingFilterTemplate List config, or
   2. As an alias to the field set on 'labelField' in the MeterReadingFilterTemplate List config, or
   3. As an alias to a 'name' field on the MeterReadingFilterTemplate List (if one exists), or
   4. As an alias to the 'id' field on the MeterReadingFilterTemplate List.
  """
  _label_: String

  """ Meter reading filter template name """
  name: String

  """ Link to employee, who created this template """
  employee: OrganizationEmployee

  """ Filter that match the given template """
  fields: MeterReadingFilters
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MeterReadingFilterTemplateWhereInput {
  AND: [MeterReadingFilterTemplateWhereInput]
  OR: [MeterReadingFilterTemplateWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  employee: OrganizationEmployeeWhereInput
  employee_is_null: Boolean
  fields: JSON
  fields_not: JSON
  fields_in: [JSON]
  fields_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MeterReadingFilterTemplateWhereUniqueInput {
  id: ID!
}

enum SortMeterReadingFilterTemplatesBy {
  name_ASC
  name_DESC
  employee_ASC
  employee_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MeterReadingFilterTemplateUpdateInput {
  name: String
  employee: OrganizationEmployeeRelateToOneInput
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterReadingFilterTemplatesUpdateInput {
  id: ID!
  data: MeterReadingFilterTemplateUpdateInput
}

input MeterReadingFilterTemplateCreateInput {
  name: String
  employee: OrganizationEmployeeRelateToOneInput
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MeterReadingFilterTemplatesCreateInput {
  data: MeterReadingFilterTemplateCreateInput
}

enum ServiceSubscriptionHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ServiceSubscriptionHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ServiceSubscriptionHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ServiceSubscriptionHistoryRecord List config, or
   3. As an alias to a 'name' field on the ServiceSubscriptionHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ServiceSubscriptionHistoryRecord List.
  """
  _label_: String
  type: String
  isTrial: Boolean
  organization: String
  startAt: String
  finishAt: String
  unitsCount: Int
  unitPrice: String
  totalPrice: String
  currency: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ServiceSubscriptionHistoryRecordHistoryActionType
  history_id: String
}

input ServiceSubscriptionHistoryRecordWhereInput {
  AND: [ServiceSubscriptionHistoryRecordWhereInput]
  OR: [ServiceSubscriptionHistoryRecordWhereInput]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  isTrial: Boolean
  isTrial_not: Boolean
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  startAt: String
  startAt_not: String
  startAt_lt: String
  startAt_lte: String
  startAt_gt: String
  startAt_gte: String
  startAt_in: [String]
  startAt_not_in: [String]
  finishAt: String
  finishAt_not: String
  finishAt_lt: String
  finishAt_lte: String
  finishAt_gt: String
  finishAt_gte: String
  finishAt_in: [String]
  finishAt_not_in: [String]
  unitsCount: Int
  unitsCount_not: Int
  unitsCount_lt: Int
  unitsCount_lte: Int
  unitsCount_gt: Int
  unitsCount_gte: Int
  unitsCount_in: [Int]
  unitsCount_not_in: [Int]
  unitPrice: String
  unitPrice_not: String
  unitPrice_lt: String
  unitPrice_lte: String
  unitPrice_gt: String
  unitPrice_gte: String
  unitPrice_in: [String]
  unitPrice_not_in: [String]
  totalPrice: String
  totalPrice_not: String
  totalPrice_lt: String
  totalPrice_lte: String
  totalPrice_gt: String
  totalPrice_gte: String
  totalPrice_in: [String]
  totalPrice_not_in: [String]
  currency: String
  currency_not: String
  currency_contains: String
  currency_not_contains: String
  currency_starts_with: String
  currency_not_starts_with: String
  currency_ends_with: String
  currency_not_ends_with: String
  currency_i: String
  currency_not_i: String
  currency_contains_i: String
  currency_not_contains_i: String
  currency_starts_with_i: String
  currency_not_starts_with_i: String
  currency_ends_with_i: String
  currency_not_ends_with_i: String
  currency_in: [String]
  currency_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ServiceSubscriptionHistoryRecordHistoryActionType
  history_action_not: ServiceSubscriptionHistoryRecordHistoryActionType
  history_action_in: [ServiceSubscriptionHistoryRecordHistoryActionType]
  history_action_not_in: [ServiceSubscriptionHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ServiceSubscriptionHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortServiceSubscriptionHistoryRecordsBy {
  type_ASC
  type_DESC
  isTrial_ASC
  isTrial_DESC
  startAt_ASC
  startAt_DESC
  finishAt_ASC
  finishAt_DESC
  unitsCount_ASC
  unitsCount_DESC
  unitPrice_ASC
  unitPrice_DESC
  totalPrice_ASC
  totalPrice_DESC
  currency_ASC
  currency_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ServiceSubscriptionHistoryRecordUpdateInput {
  type: String
  isTrial: Boolean
  organization: String
  startAt: String
  finishAt: String
  unitsCount: Int
  unitPrice: String
  totalPrice: String
  currency: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ServiceSubscriptionHistoryRecordHistoryActionType
  history_id: String
}

input ServiceSubscriptionHistoryRecordsUpdateInput {
  id: ID!
  data: ServiceSubscriptionHistoryRecordUpdateInput
}

input ServiceSubscriptionHistoryRecordCreateInput {
  type: String
  isTrial: Boolean
  organization: String
  startAt: String
  finishAt: String
  unitsCount: Int
  unitPrice: String
  totalPrice: String
  currency: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ServiceSubscriptionHistoryRecordHistoryActionType
  history_id: String
}

input ServiceSubscriptionHistoryRecordsCreateInput {
  data: ServiceSubscriptionHistoryRecordCreateInput
}

enum ServiceSubscriptionTypeType {
  default
  sbbol
}

""" Availability time period of service features for client organization. Can be trial or payed. 
"""
type ServiceSubscription {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ServiceSubscription List config, or
   2. As an alias to the field set on 'labelField' in the ServiceSubscription List config, or
   3. As an alias to a 'name' field on the ServiceSubscription List (if one exists), or
   4. As an alias to the 'id' field on the ServiceSubscription List.
  """
  _label_: String

  """ System, from where subscription was created (our or external) """
  type: ServiceSubscriptionTypeType

  """ Trial mode of subscription """
  isTrial: Boolean

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ When subscription was started """
  startAt: String

  """ When subscription should be ended """
  finishAt: String

  """ How much units are payed for this subscription """
  unitsCount: Int

  """ How much one unit cost in Rubles for this subscription """
  unitPrice: String

  """ Total price of this subscription, calculated as unitCost * unitsPayed 
  """
  totalPrice: String

  """ Currency of values for all price fields """
  currency: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ServiceSubscriptionWhereInput {
  AND: [ServiceSubscriptionWhereInput]
  OR: [ServiceSubscriptionWhereInput]
  type: ServiceSubscriptionTypeType
  type_not: ServiceSubscriptionTypeType
  type_in: [ServiceSubscriptionTypeType]
  type_not_in: [ServiceSubscriptionTypeType]
  isTrial: Boolean
  isTrial_not: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  startAt: String
  startAt_not: String
  startAt_lt: String
  startAt_lte: String
  startAt_gt: String
  startAt_gte: String
  startAt_in: [String]
  startAt_not_in: [String]
  finishAt: String
  finishAt_not: String
  finishAt_lt: String
  finishAt_lte: String
  finishAt_gt: String
  finishAt_gte: String
  finishAt_in: [String]
  finishAt_not_in: [String]
  unitsCount: Int
  unitsCount_not: Int
  unitsCount_lt: Int
  unitsCount_lte: Int
  unitsCount_gt: Int
  unitsCount_gte: Int
  unitsCount_in: [Int]
  unitsCount_not_in: [Int]
  unitPrice: String
  unitPrice_not: String
  unitPrice_lt: String
  unitPrice_lte: String
  unitPrice_gt: String
  unitPrice_gte: String
  unitPrice_in: [String]
  unitPrice_not_in: [String]
  totalPrice: String
  totalPrice_not: String
  totalPrice_lt: String
  totalPrice_lte: String
  totalPrice_gt: String
  totalPrice_gte: String
  totalPrice_in: [String]
  totalPrice_not_in: [String]
  currency: String
  currency_not: String
  currency_contains: String
  currency_not_contains: String
  currency_starts_with: String
  currency_not_starts_with: String
  currency_ends_with: String
  currency_not_ends_with: String
  currency_i: String
  currency_not_i: String
  currency_contains_i: String
  currency_not_contains_i: String
  currency_starts_with_i: String
  currency_not_starts_with_i: String
  currency_ends_with_i: String
  currency_not_ends_with_i: String
  currency_in: [String]
  currency_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ServiceSubscriptionWhereUniqueInput {
  id: ID!
}

enum SortServiceSubscriptionsBy {
  type_ASC
  type_DESC
  isTrial_ASC
  isTrial_DESC
  organization_ASC
  organization_DESC
  startAt_ASC
  startAt_DESC
  finishAt_ASC
  finishAt_DESC
  unitsCount_ASC
  unitsCount_DESC
  unitPrice_ASC
  unitPrice_DESC
  totalPrice_ASC
  totalPrice_DESC
  currency_ASC
  currency_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ServiceSubscriptionUpdateInput {
  type: ServiceSubscriptionTypeType
  isTrial: Boolean
  organization: OrganizationRelateToOneInput
  startAt: String
  finishAt: String
  unitsCount: Int
  unitPrice: String
  totalPrice: String
  currency: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ServiceSubscriptionsUpdateInput {
  id: ID!
  data: ServiceSubscriptionUpdateInput
}

input ServiceSubscriptionCreateInput {
  type: ServiceSubscriptionTypeType
  isTrial: Boolean
  organization: OrganizationRelateToOneInput
  startAt: String
  finishAt: String
  unitsCount: Int
  unitPrice: String
  totalPrice: String
  currency: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ServiceSubscriptionsCreateInput {
  data: ServiceSubscriptionCreateInput
}

enum AcquiringIntegrationHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type AcquiringIntegrationHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AcquiringIntegrationHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the AcquiringIntegrationHistoryRecord List config, or
   3. As an alias to a 'name' field on the AcquiringIntegrationHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the AcquiringIntegrationHistoryRecord List.
  """
  _label_: String
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  isHidden: Boolean
  canGroupReceipts: Boolean
  hostUrl: String
  supportedBillingIntegrationsGroup: String
  explicitFeeDistributionSchema: JSON
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  contextDefaultStatus: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationHistoryRecordWhereInput {
  AND: [AcquiringIntegrationHistoryRecordWhereInput]
  OR: [AcquiringIntegrationHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: JSON
  logo_not: JSON
  logo_in: [JSON]
  logo_not_in: [JSON]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  partnerUrl: String
  partnerUrl_not: String
  partnerUrl_contains: String
  partnerUrl_not_contains: String
  partnerUrl_starts_with: String
  partnerUrl_not_starts_with: String
  partnerUrl_ends_with: String
  partnerUrl_not_ends_with: String
  partnerUrl_i: String
  partnerUrl_not_i: String
  partnerUrl_contains_i: String
  partnerUrl_not_contains_i: String
  partnerUrl_starts_with_i: String
  partnerUrl_not_starts_with_i: String
  partnerUrl_ends_with_i: String
  partnerUrl_not_ends_with_i: String
  partnerUrl_in: [String]
  partnerUrl_not_in: [String]
  detailedDescription: JSON
  detailedDescription_not: JSON
  detailedDescription_in: [JSON]
  detailedDescription_not_in: [JSON]
  appUrl: String
  appUrl_not: String
  appUrl_contains: String
  appUrl_not_contains: String
  appUrl_starts_with: String
  appUrl_not_starts_with: String
  appUrl_ends_with: String
  appUrl_not_ends_with: String
  appUrl_i: String
  appUrl_not_i: String
  appUrl_contains_i: String
  appUrl_not_contains_i: String
  appUrl_starts_with_i: String
  appUrl_not_starts_with_i: String
  appUrl_ends_with_i: String
  appUrl_not_ends_with_i: String
  appUrl_in: [String]
  appUrl_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean
  canGroupReceipts: Boolean
  canGroupReceipts_not: Boolean
  hostUrl: String
  hostUrl_not: String
  hostUrl_contains: String
  hostUrl_not_contains: String
  hostUrl_starts_with: String
  hostUrl_not_starts_with: String
  hostUrl_ends_with: String
  hostUrl_not_ends_with: String
  hostUrl_i: String
  hostUrl_not_i: String
  hostUrl_contains_i: String
  hostUrl_not_contains_i: String
  hostUrl_starts_with_i: String
  hostUrl_not_starts_with_i: String
  hostUrl_ends_with_i: String
  hostUrl_not_ends_with_i: String
  hostUrl_in: [String]
  hostUrl_not_in: [String]
  supportedBillingIntegrationsGroup: String
  supportedBillingIntegrationsGroup_not: String
  supportedBillingIntegrationsGroup_contains: String
  supportedBillingIntegrationsGroup_not_contains: String
  supportedBillingIntegrationsGroup_starts_with: String
  supportedBillingIntegrationsGroup_not_starts_with: String
  supportedBillingIntegrationsGroup_ends_with: String
  supportedBillingIntegrationsGroup_not_ends_with: String
  supportedBillingIntegrationsGroup_i: String
  supportedBillingIntegrationsGroup_not_i: String
  supportedBillingIntegrationsGroup_contains_i: String
  supportedBillingIntegrationsGroup_not_contains_i: String
  supportedBillingIntegrationsGroup_starts_with_i: String
  supportedBillingIntegrationsGroup_not_starts_with_i: String
  supportedBillingIntegrationsGroup_ends_with_i: String
  supportedBillingIntegrationsGroup_not_ends_with_i: String
  supportedBillingIntegrationsGroup_in: [String]
  supportedBillingIntegrationsGroup_not_in: [String]
  explicitFeeDistributionSchema: JSON
  explicitFeeDistributionSchema_not: JSON
  explicitFeeDistributionSchema_in: [JSON]
  explicitFeeDistributionSchema_not_in: [JSON]
  displayPriority: Int
  displayPriority_not: Int
  displayPriority_lt: Int
  displayPriority_lte: Int
  displayPriority_gt: Int
  displayPriority_gte: Int
  displayPriority_in: [Int]
  displayPriority_not_in: [Int]
  label: String
  label_not: String
  label_contains: String
  label_not_contains: String
  label_starts_with: String
  label_not_starts_with: String
  label_ends_with: String
  label_not_ends_with: String
  label_i: String
  label_not_i: String
  label_contains_i: String
  label_not_contains_i: String
  label_starts_with_i: String
  label_not_starts_with_i: String
  label_ends_with_i: String
  label_not_ends_with_i: String
  label_in: [String]
  label_not_in: [String]
  gallery: JSON
  gallery_not: JSON
  gallery_in: [JSON]
  gallery_not_in: [JSON]
  price: String
  price_not: String
  price_contains: String
  price_not_contains: String
  price_starts_with: String
  price_not_starts_with: String
  price_ends_with: String
  price_not_ends_with: String
  price_i: String
  price_not_i: String
  price_contains_i: String
  price_not_contains_i: String
  price_starts_with_i: String
  price_not_starts_with_i: String
  price_ends_with_i: String
  price_not_ends_with_i: String
  price_in: [String]
  price_not_in: [String]
  contextDefaultStatus: String
  contextDefaultStatus_not: String
  contextDefaultStatus_contains: String
  contextDefaultStatus_not_contains: String
  contextDefaultStatus_starts_with: String
  contextDefaultStatus_not_starts_with: String
  contextDefaultStatus_ends_with: String
  contextDefaultStatus_not_ends_with: String
  contextDefaultStatus_i: String
  contextDefaultStatus_not_i: String
  contextDefaultStatus_contains_i: String
  contextDefaultStatus_not_contains_i: String
  contextDefaultStatus_starts_with_i: String
  contextDefaultStatus_not_starts_with_i: String
  contextDefaultStatus_ends_with_i: String
  contextDefaultStatus_not_ends_with_i: String
  contextDefaultStatus_in: [String]
  contextDefaultStatus_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: AcquiringIntegrationHistoryRecordHistoryActionType
  history_action_not: AcquiringIntegrationHistoryRecordHistoryActionType
  history_action_in: [AcquiringIntegrationHistoryRecordHistoryActionType]
  history_action_not_in: [AcquiringIntegrationHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input AcquiringIntegrationHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortAcquiringIntegrationHistoryRecordsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  partnerUrl_ASC
  partnerUrl_DESC
  appUrl_ASC
  appUrl_DESC
  isHidden_ASC
  isHidden_DESC
  canGroupReceipts_ASC
  canGroupReceipts_DESC
  hostUrl_ASC
  hostUrl_DESC
  supportedBillingIntegrationsGroup_ASC
  supportedBillingIntegrationsGroup_DESC
  displayPriority_ASC
  displayPriority_DESC
  label_ASC
  label_DESC
  price_ASC
  price_DESC
  contextDefaultStatus_ASC
  contextDefaultStatus_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input AcquiringIntegrationHistoryRecordUpdateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  isHidden: Boolean
  canGroupReceipts: Boolean
  hostUrl: String
  supportedBillingIntegrationsGroup: String
  explicitFeeDistributionSchema: JSON
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  contextDefaultStatus: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationHistoryRecordsUpdateInput {
  id: ID!
  data: AcquiringIntegrationHistoryRecordUpdateInput
}

input AcquiringIntegrationHistoryRecordCreateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  isHidden: Boolean
  canGroupReceipts: Boolean
  hostUrl: String
  supportedBillingIntegrationsGroup: String
  explicitFeeDistributionSchema: JSON
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  contextDefaultStatus: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationHistoryRecordsCreateInput {
  data: AcquiringIntegrationHistoryRecordCreateInput
}

input AcquiringIntegrationAccessRightRelateToManyInput {
  create: [AcquiringIntegrationAccessRightCreateInput]
  connect: [AcquiringIntegrationAccessRightWhereUniqueInput]
  disconnect: [AcquiringIntegrationAccessRightWhereUniqueInput]
  disconnectAll: Boolean
}

type FeeDistributionField {
  recipient: String!
  percent: String!
  minAmount: String
  maxAmount: String
  category: String
}

input FeeDistributionFieldInput {
  recipient: String!
  percent: String!
  minAmount: String
  maxAmount: String
  category: String
}

""" Information about `acquiring component` which will generate `billing receipts` and `payments` 
"""
type AcquiringIntegration {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AcquiringIntegration List config, or
   2. As an alias to the field set on 'labelField' in the AcquiringIntegration List config, or
   3. As an alias to a 'name' field on the AcquiringIntegration List (if one exists), or
   4. As an alias to the 'id' field on the AcquiringIntegration List.
  """
  _label_: String

  """ Name of `acquiring component`, which is set up by developer """
  name: String

  """ Logo of app's company or app itself """
  logo: File

  """ Short description / catch phrase providing information about integration functionality. Will be shown on App's card 
  """
  shortDescription: String

  """ Developer company name """
  developer: String

  """ Link to the website of the developer company, where the user can find out detailed information about the partner 
  """
  partnerUrl: String

  """ Text describing app functionality, connection process and pricing in full detail. Written in markdown without html tags. Will be shown on app's page 
  """
  detailedDescription: String

  """ Url to app page, which is the app starting point and will be opened in iframe 
  """
  appUrl: String

  """ Indicates whether the integration or app is hidden inside the CRM. Used if integration is active by default or not ready to appear inside CRM 
  """
  isHidden: Boolean
  accessRights(where: AcquiringIntegrationAccessRightWhereInput, search: String, sortBy: [SortAcquiringIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegrationAccessRight!]!
  _accessRightsMeta(where: AcquiringIntegrationAccessRightWhereInput, search: String, sortBy: [SortAcquiringIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Can multiple receipts be united through this acquiring """
  canGroupReceipts: Boolean

  """ Url to acquiring integration service. Mobile devices will use it communicate with external acquiring. List of endpoints is the same for all of them. 
  """
  hostUrl: String

  """ Supported billing integrations group. Useful when you need to restrict this acquiring to accept payment only from certain billing. 
  """
  supportedBillingIntegrationsGroup: String

  """ Contains information about the default distribution of explicit fee. Each part is paid by the user on top of original amount if there is no part with the same name in the integration context. Otherwise, the part is ignored as it is paid by recipient 
  """
  explicitFeeDistributionSchema: [FeeDistributionField!]

  """ The number used to determine the position of the app among the others. App with higher priority appear earlier in "All" category, as well as in it's own category. Apps with the same priority are sorted from newest to oldest. The default value is 1. 
  """
  displayPriority: Int

  """ App can be marked with one of the following labels in order to visually stand out from other applications: [FREE, DISCOUNT, POPULAR, NEW] 
  """
  label: String

  """ Array containing links to promotional images, which will be shown to user on app's page 
  """
  gallery: [String!]

  """ String representing a base price of app. Usually it's something like "Free", "Individual", "$50 / year" 
  """
  price: String

  """ Status, which context will have by default after creation if no overwriting option provided 
  """
  contextDefaultStatus: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input AcquiringIntegrationWhereInput {
  AND: [AcquiringIntegrationWhereInput]
  OR: [AcquiringIntegrationWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: String
  logo_not: String
  logo_in: [String]
  logo_not_in: [String]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  partnerUrl: String
  partnerUrl_not: String
  partnerUrl_contains: String
  partnerUrl_not_contains: String
  partnerUrl_starts_with: String
  partnerUrl_not_starts_with: String
  partnerUrl_ends_with: String
  partnerUrl_not_ends_with: String
  partnerUrl_i: String
  partnerUrl_not_i: String
  partnerUrl_contains_i: String
  partnerUrl_not_contains_i: String
  partnerUrl_starts_with_i: String
  partnerUrl_not_starts_with_i: String
  partnerUrl_ends_with_i: String
  partnerUrl_not_ends_with_i: String
  partnerUrl_in: [String]
  partnerUrl_not_in: [String]
  detailedDescription: String
  detailedDescription_not: String
  detailedDescription_contains: String
  detailedDescription_not_contains: String
  detailedDescription_starts_with: String
  detailedDescription_not_starts_with: String
  detailedDescription_ends_with: String
  detailedDescription_not_ends_with: String
  detailedDescription_i: String
  detailedDescription_not_i: String
  detailedDescription_contains_i: String
  detailedDescription_not_contains_i: String
  detailedDescription_starts_with_i: String
  detailedDescription_not_starts_with_i: String
  detailedDescription_ends_with_i: String
  detailedDescription_not_ends_with_i: String
  detailedDescription_in: [String]
  detailedDescription_not_in: [String]
  appUrl: String
  appUrl_not: String
  appUrl_contains: String
  appUrl_not_contains: String
  appUrl_starts_with: String
  appUrl_not_starts_with: String
  appUrl_ends_with: String
  appUrl_not_ends_with: String
  appUrl_i: String
  appUrl_not_i: String
  appUrl_contains_i: String
  appUrl_not_contains_i: String
  appUrl_starts_with_i: String
  appUrl_not_starts_with_i: String
  appUrl_ends_with_i: String
  appUrl_not_ends_with_i: String
  appUrl_in: [String]
  appUrl_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean

  """ condition must be true for all nodes """
  accessRights_every: AcquiringIntegrationAccessRightWhereInput

  """ condition must be true for at least 1 node """
  accessRights_some: AcquiringIntegrationAccessRightWhereInput

  """ condition must be false for all nodes """
  accessRights_none: AcquiringIntegrationAccessRightWhereInput
  canGroupReceipts: Boolean
  canGroupReceipts_not: Boolean
  hostUrl: String
  hostUrl_not: String
  hostUrl_contains: String
  hostUrl_not_contains: String
  hostUrl_starts_with: String
  hostUrl_not_starts_with: String
  hostUrl_ends_with: String
  hostUrl_not_ends_with: String
  hostUrl_i: String
  hostUrl_not_i: String
  hostUrl_contains_i: String
  hostUrl_not_contains_i: String
  hostUrl_starts_with_i: String
  hostUrl_not_starts_with_i: String
  hostUrl_ends_with_i: String
  hostUrl_not_ends_with_i: String
  hostUrl_in: [String]
  hostUrl_not_in: [String]
  supportedBillingIntegrationsGroup: String
  supportedBillingIntegrationsGroup_not: String
  supportedBillingIntegrationsGroup_contains: String
  supportedBillingIntegrationsGroup_not_contains: String
  supportedBillingIntegrationsGroup_starts_with: String
  supportedBillingIntegrationsGroup_not_starts_with: String
  supportedBillingIntegrationsGroup_ends_with: String
  supportedBillingIntegrationsGroup_not_ends_with: String
  supportedBillingIntegrationsGroup_i: String
  supportedBillingIntegrationsGroup_not_i: String
  supportedBillingIntegrationsGroup_contains_i: String
  supportedBillingIntegrationsGroup_not_contains_i: String
  supportedBillingIntegrationsGroup_starts_with_i: String
  supportedBillingIntegrationsGroup_not_starts_with_i: String
  supportedBillingIntegrationsGroup_ends_with_i: String
  supportedBillingIntegrationsGroup_not_ends_with_i: String
  supportedBillingIntegrationsGroup_in: [String]
  supportedBillingIntegrationsGroup_not_in: [String]
  explicitFeeDistributionSchema: [FeeDistributionFieldInput!]
  explicitFeeDistributionSchema_not: [FeeDistributionFieldInput!]
  explicitFeeDistributionSchema_in: [[FeeDistributionFieldInput!]]
  explicitFeeDistributionSchema_not_in: [[FeeDistributionFieldInput!]]
  displayPriority: Int
  displayPriority_not: Int
  displayPriority_lt: Int
  displayPriority_lte: Int
  displayPriority_gt: Int
  displayPriority_gte: Int
  displayPriority_in: [Int]
  displayPriority_not_in: [Int]
  label: String
  label_not: String
  label_in: [String]
  label_not_in: [String]
  gallery: [String!]
  gallery_not: [String!]
  gallery_in: [[String!]]
  gallery_not_in: [[String!]]
  price: String
  price_not: String
  price_contains: String
  price_not_contains: String
  price_starts_with: String
  price_not_starts_with: String
  price_ends_with: String
  price_not_ends_with: String
  price_i: String
  price_not_i: String
  price_contains_i: String
  price_not_contains_i: String
  price_starts_with_i: String
  price_not_starts_with_i: String
  price_ends_with_i: String
  price_not_ends_with_i: String
  price_in: [String]
  price_not_in: [String]
  contextDefaultStatus: String
  contextDefaultStatus_not: String
  contextDefaultStatus_in: [String]
  contextDefaultStatus_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input AcquiringIntegrationWhereUniqueInput {
  id: ID!
}

enum SortAcquiringIntegrationsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  partnerUrl_ASC
  partnerUrl_DESC
  detailedDescription_ASC
  detailedDescription_DESC
  appUrl_ASC
  appUrl_DESC
  isHidden_ASC
  isHidden_DESC
  accessRights_ASC
  accessRights_DESC
  canGroupReceipts_ASC
  canGroupReceipts_DESC
  hostUrl_ASC
  hostUrl_DESC
  supportedBillingIntegrationsGroup_ASC
  supportedBillingIntegrationsGroup_DESC
  displayPriority_ASC
  displayPriority_DESC
  label_ASC
  label_DESC
  price_ASC
  price_DESC
  contextDefaultStatus_ASC
  contextDefaultStatus_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input AcquiringIntegrationUpdateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: String
  appUrl: String
  isHidden: Boolean
  accessRights: AcquiringIntegrationAccessRightRelateToManyInput
  canGroupReceipts: Boolean
  hostUrl: String
  supportedBillingIntegrationsGroup: String
  explicitFeeDistributionSchema: [FeeDistributionFieldInput!]
  displayPriority: Int
  label: String
  gallery: [String!]
  price: String
  contextDefaultStatus: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AcquiringIntegrationsUpdateInput {
  id: ID!
  data: AcquiringIntegrationUpdateInput
}

input AcquiringIntegrationCreateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: String
  appUrl: String
  isHidden: Boolean
  accessRights: AcquiringIntegrationAccessRightRelateToManyInput
  canGroupReceipts: Boolean
  hostUrl: String
  supportedBillingIntegrationsGroup: String
  explicitFeeDistributionSchema: [FeeDistributionFieldInput!]
  displayPriority: Int
  label: String
  gallery: [String!]
  price: String
  contextDefaultStatus: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AcquiringIntegrationsCreateInput {
  data: AcquiringIntegrationCreateInput
}

enum AcquiringIntegrationAccessRightHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type AcquiringIntegrationAccessRightHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AcquiringIntegrationAccessRightHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the AcquiringIntegrationAccessRightHistoryRecord List config, or
   3. As an alias to a 'name' field on the AcquiringIntegrationAccessRightHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the AcquiringIntegrationAccessRightHistoryRecord List.
  """
  _label_: String
  integration: String
  user: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationAccessRightHistoryRecordWhereInput {
  AND: [AcquiringIntegrationAccessRightHistoryRecordWhereInput]
  OR: [AcquiringIntegrationAccessRightHistoryRecordWhereInput]
  integration: String
  integration_not: String
  integration_in: [String]
  integration_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: AcquiringIntegrationAccessRightHistoryRecordHistoryActionType
  history_action_not: AcquiringIntegrationAccessRightHistoryRecordHistoryActionType
  history_action_in: [AcquiringIntegrationAccessRightHistoryRecordHistoryActionType]
  history_action_not_in: [AcquiringIntegrationAccessRightHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input AcquiringIntegrationAccessRightHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortAcquiringIntegrationAccessRightHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input AcquiringIntegrationAccessRightHistoryRecordUpdateInput {
  integration: String
  user: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationAccessRightHistoryRecordsUpdateInput {
  id: ID!
  data: AcquiringIntegrationAccessRightHistoryRecordUpdateInput
}

input AcquiringIntegrationAccessRightHistoryRecordCreateInput {
  integration: String
  user: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationAccessRightHistoryRecordsCreateInput {
  data: AcquiringIntegrationAccessRightHistoryRecordCreateInput
}

input AcquiringIntegrationRelateToOneInput {
  create: AcquiringIntegrationCreateInput
  connect: AcquiringIntegrationWhereUniqueInput
  disconnect: AcquiringIntegrationWhereUniqueInput
  disconnectAll: Boolean
}

""" Link between Acquiring integration and user, the existence of this connection means that this user has the rights to perform actions on behalf of the integration 
"""
type AcquiringIntegrationAccessRight {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AcquiringIntegrationAccessRight List config, or
   2. As an alias to the field set on 'labelField' in the AcquiringIntegrationAccessRight List config, or
   3. As an alias to a 'name' field on the AcquiringIntegrationAccessRight List (if one exists), or
   4. As an alias to the 'id' field on the AcquiringIntegrationAccessRight List.
  """
  _label_: String

  """ Acquiring integration. Determines way of user's payment """
  integration: AcquiringIntegration

  """ Link to user. Note, that user must be of "service" type """
  user: User
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input AcquiringIntegrationAccessRightWhereInput {
  AND: [AcquiringIntegrationAccessRightWhereInput]
  OR: [AcquiringIntegrationAccessRightWhereInput]
  integration: AcquiringIntegrationWhereInput
  integration_is_null: Boolean
  user: UserWhereInput
  user_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input AcquiringIntegrationAccessRightWhereUniqueInput {
  id: ID!
}

enum SortAcquiringIntegrationAccessRightsBy {
  integration_ASC
  integration_DESC
  user_ASC
  user_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input AcquiringIntegrationAccessRightUpdateInput {
  integration: AcquiringIntegrationRelateToOneInput
  user: UserRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AcquiringIntegrationAccessRightsUpdateInput {
  id: ID!
  data: AcquiringIntegrationAccessRightUpdateInput
}

input AcquiringIntegrationAccessRightCreateInput {
  integration: AcquiringIntegrationRelateToOneInput
  user: UserRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AcquiringIntegrationAccessRightsCreateInput {
  data: AcquiringIntegrationAccessRightCreateInput
}

enum AcquiringIntegrationContextHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type AcquiringIntegrationContextHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AcquiringIntegrationContextHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the AcquiringIntegrationContextHistoryRecord List config, or
   3. As an alias to a 'name' field on the AcquiringIntegrationContextHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the AcquiringIntegrationContextHistoryRecord List.
  """
  _label_: String
  integration: String
  organization: String
  settings: JSON
  state: JSON
  reason: String
  email: String
  recipient: JSON
  implicitFeeDistributionSchema: JSON
  status: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationContextHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationContextHistoryRecordWhereInput {
  AND: [AcquiringIntegrationContextHistoryRecordWhereInput]
  OR: [AcquiringIntegrationContextHistoryRecordWhereInput]
  integration: String
  integration_not: String
  integration_in: [String]
  integration_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  reason: String
  reason_not: String
  reason_contains: String
  reason_not_contains: String
  reason_starts_with: String
  reason_not_starts_with: String
  reason_ends_with: String
  reason_not_ends_with: String
  reason_i: String
  reason_not_i: String
  reason_contains_i: String
  reason_not_contains_i: String
  reason_starts_with_i: String
  reason_not_starts_with_i: String
  reason_ends_with_i: String
  reason_not_ends_with_i: String
  reason_in: [String]
  reason_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  recipient: JSON
  recipient_not: JSON
  recipient_in: [JSON]
  recipient_not_in: [JSON]
  implicitFeeDistributionSchema: JSON
  implicitFeeDistributionSchema_not: JSON
  implicitFeeDistributionSchema_in: [JSON]
  implicitFeeDistributionSchema_not_in: [JSON]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: AcquiringIntegrationContextHistoryRecordHistoryActionType
  history_action_not: AcquiringIntegrationContextHistoryRecordHistoryActionType
  history_action_in: [AcquiringIntegrationContextHistoryRecordHistoryActionType]
  history_action_not_in: [AcquiringIntegrationContextHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input AcquiringIntegrationContextHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortAcquiringIntegrationContextHistoryRecordsBy {
  reason_ASC
  reason_DESC
  email_ASC
  email_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input AcquiringIntegrationContextHistoryRecordUpdateInput {
  integration: String
  organization: String
  settings: JSON
  state: JSON
  reason: String
  email: String
  recipient: JSON
  implicitFeeDistributionSchema: JSON
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationContextHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationContextHistoryRecordsUpdateInput {
  id: ID!
  data: AcquiringIntegrationContextHistoryRecordUpdateInput
}

input AcquiringIntegrationContextHistoryRecordCreateInput {
  integration: String
  organization: String
  settings: JSON
  state: JSON
  reason: String
  email: String
  recipient: JSON
  implicitFeeDistributionSchema: JSON
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AcquiringIntegrationContextHistoryRecordHistoryActionType
  history_id: String
}

input AcquiringIntegrationContextHistoryRecordsCreateInput {
  data: AcquiringIntegrationContextHistoryRecordCreateInput
}

type RecipientField {
  name: String
  bankName: String
  territoryCode: String
  offsettingAccount: String
  tin: String!
  iec: String
  bic: String!
  bankAccount: String!
}

input RecipientFieldInput {
  name: String
  bankName: String
  territoryCode: String
  offsettingAccount: String
  tin: String!
  iec: String
  bic: String!
  bankAccount: String!
}

""" Object, which links `acquiring integration` with `service provider`, and stores additional data for it's proper work 
"""
type AcquiringIntegrationContext {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AcquiringIntegrationContext List config, or
   2. As an alias to the field set on 'labelField' in the AcquiringIntegrationContext List config, or
   3. As an alias to a 'name' field on the AcquiringIntegrationContext List (if one exists), or
   4. As an alias to the 'id' field on the AcquiringIntegrationContext List.
  """
  _label_: String

  """ Acquiring integration. Determines way of user's payment """
  integration: AcquiringIntegration

  """ Service provider (organization) """
  organization: Organization

  """ Settings that are required for acquiring to work properly. The data structure depends on the integration and defined here 
  """
  settings: JSON

  """ The current state of the integration process. Some integration need to store past state here, additional data and etc. 
  """
  state: JSON

  """ Contract number and date. Basis for invoicing """
  reason: String

  """ Acquiring payments report will be sent to this email """
  email: String

  """ Requisites from agreement. Are used for invoicing in case of not confirmed billing recipient in receipt 
  """
  recipient: RecipientField

  """ Contains information about the default distribution of implicit fee. Each part is paid by the recipient organization on deducted from payment amount. If part exists then explicit part with the same name from AcquiringIntegration.explicitFeeDistributionSchema is ignored 
  """
  implicitFeeDistributionSchema: [FeeDistributionField!]

  """ Status of AcquiringIntegration connection, Can be one of the following: ["InProgress", "Error", "Finished"]. If not specified explicitly on creation, uses default value from related AcquiringIntegration model 
  """
  status: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input AcquiringIntegrationContextWhereInput {
  AND: [AcquiringIntegrationContextWhereInput]
  OR: [AcquiringIntegrationContextWhereInput]
  integration: AcquiringIntegrationWhereInput
  integration_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  reason: String
  reason_not: String
  reason_contains: String
  reason_not_contains: String
  reason_starts_with: String
  reason_not_starts_with: String
  reason_ends_with: String
  reason_not_ends_with: String
  reason_i: String
  reason_not_i: String
  reason_contains_i: String
  reason_not_contains_i: String
  reason_starts_with_i: String
  reason_not_starts_with_i: String
  reason_ends_with_i: String
  reason_not_ends_with_i: String
  reason_in: [String]
  reason_not_in: [String]
  email: String
  email_not: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  email_i: String
  email_not_i: String
  email_contains_i: String
  email_not_contains_i: String
  email_starts_with_i: String
  email_not_starts_with_i: String
  email_ends_with_i: String
  email_not_ends_with_i: String
  email_in: [String]
  email_not_in: [String]
  recipient: RecipientFieldInput
  recipient_not: RecipientFieldInput
  recipient_in: [RecipientFieldInput]
  recipient_not_in: [RecipientFieldInput]
  implicitFeeDistributionSchema: [FeeDistributionFieldInput!]
  implicitFeeDistributionSchema_not: [FeeDistributionFieldInput!]
  implicitFeeDistributionSchema_in: [[FeeDistributionFieldInput!]]
  implicitFeeDistributionSchema_not_in: [[FeeDistributionFieldInput!]]
  status: String
  status_not: String
  status_in: [String]
  status_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input AcquiringIntegrationContextWhereUniqueInput {
  id: ID!
}

enum SortAcquiringIntegrationContextsBy {
  integration_ASC
  integration_DESC
  organization_ASC
  organization_DESC
  reason_ASC
  reason_DESC
  email_ASC
  email_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input AcquiringIntegrationContextUpdateInput {
  integration: AcquiringIntegrationRelateToOneInput
  organization: OrganizationRelateToOneInput
  settings: JSON
  state: JSON
  reason: String
  email: String
  recipient: RecipientFieldInput
  implicitFeeDistributionSchema: [FeeDistributionFieldInput!]
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AcquiringIntegrationContextsUpdateInput {
  id: ID!
  data: AcquiringIntegrationContextUpdateInput
}

input AcquiringIntegrationContextCreateInput {
  integration: AcquiringIntegrationRelateToOneInput
  organization: OrganizationRelateToOneInput
  settings: JSON
  state: JSON
  reason: String
  email: String
  recipient: RecipientFieldInput
  implicitFeeDistributionSchema: [FeeDistributionFieldInput!]
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AcquiringIntegrationContextsCreateInput {
  data: AcquiringIntegrationContextCreateInput
}

enum MultiPaymentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type MultiPaymentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MultiPaymentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the MultiPaymentHistoryRecord List config, or
   3. As an alias to a 'name' field on the MultiPaymentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the MultiPaymentHistoryRecord List.
  """
  _label_: String
  amount: JSON
  explicitFee: String
  explicitServiceCharge: String
  serviceFee: String
  implicitFee: String
  amountWithoutExplicitFee: String
  currencyCode: String
  withdrawnAt: String
  cardNumber: String
  paymentWay: String
  payerEmail: String
  serviceCategory: String
  transactionId: String
  importId: String
  meta: JSON
  status: String
  user: String
  integration: String
  recurrentPaymentContext: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MultiPaymentHistoryRecordHistoryActionType
  history_id: String
}

input MultiPaymentHistoryRecordWhereInput {
  AND: [MultiPaymentHistoryRecordWhereInput]
  OR: [MultiPaymentHistoryRecordWhereInput]
  amount: JSON
  amount_not: JSON
  amount_in: [JSON]
  amount_not_in: [JSON]
  explicitFee: String
  explicitFee_not: String
  explicitFee_lt: String
  explicitFee_lte: String
  explicitFee_gt: String
  explicitFee_gte: String
  explicitFee_in: [String]
  explicitFee_not_in: [String]
  explicitServiceCharge: String
  explicitServiceCharge_not: String
  explicitServiceCharge_lt: String
  explicitServiceCharge_lte: String
  explicitServiceCharge_gt: String
  explicitServiceCharge_gte: String
  explicitServiceCharge_in: [String]
  explicitServiceCharge_not_in: [String]
  serviceFee: String
  serviceFee_not: String
  serviceFee_lt: String
  serviceFee_lte: String
  serviceFee_gt: String
  serviceFee_gte: String
  serviceFee_in: [String]
  serviceFee_not_in: [String]
  implicitFee: String
  implicitFee_not: String
  implicitFee_lt: String
  implicitFee_lte: String
  implicitFee_gt: String
  implicitFee_gte: String
  implicitFee_in: [String]
  implicitFee_not_in: [String]
  amountWithoutExplicitFee: String
  amountWithoutExplicitFee_not: String
  amountWithoutExplicitFee_lt: String
  amountWithoutExplicitFee_lte: String
  amountWithoutExplicitFee_gt: String
  amountWithoutExplicitFee_gte: String
  amountWithoutExplicitFee_in: [String]
  amountWithoutExplicitFee_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_contains: String
  currencyCode_not_contains: String
  currencyCode_starts_with: String
  currencyCode_not_starts_with: String
  currencyCode_ends_with: String
  currencyCode_not_ends_with: String
  currencyCode_i: String
  currencyCode_not_i: String
  currencyCode_contains_i: String
  currencyCode_not_contains_i: String
  currencyCode_starts_with_i: String
  currencyCode_not_starts_with_i: String
  currencyCode_ends_with_i: String
  currencyCode_not_ends_with_i: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  withdrawnAt: String
  withdrawnAt_not: String
  withdrawnAt_lt: String
  withdrawnAt_lte: String
  withdrawnAt_gt: String
  withdrawnAt_gte: String
  withdrawnAt_in: [String]
  withdrawnAt_not_in: [String]
  cardNumber: String
  cardNumber_not: String
  cardNumber_contains: String
  cardNumber_not_contains: String
  cardNumber_starts_with: String
  cardNumber_not_starts_with: String
  cardNumber_ends_with: String
  cardNumber_not_ends_with: String
  cardNumber_i: String
  cardNumber_not_i: String
  cardNumber_contains_i: String
  cardNumber_not_contains_i: String
  cardNumber_starts_with_i: String
  cardNumber_not_starts_with_i: String
  cardNumber_ends_with_i: String
  cardNumber_not_ends_with_i: String
  cardNumber_in: [String]
  cardNumber_not_in: [String]
  paymentWay: String
  paymentWay_not: String
  paymentWay_contains: String
  paymentWay_not_contains: String
  paymentWay_starts_with: String
  paymentWay_not_starts_with: String
  paymentWay_ends_with: String
  paymentWay_not_ends_with: String
  paymentWay_i: String
  paymentWay_not_i: String
  paymentWay_contains_i: String
  paymentWay_not_contains_i: String
  paymentWay_starts_with_i: String
  paymentWay_not_starts_with_i: String
  paymentWay_ends_with_i: String
  paymentWay_not_ends_with_i: String
  paymentWay_in: [String]
  paymentWay_not_in: [String]
  payerEmail: String
  payerEmail_not: String
  payerEmail_contains: String
  payerEmail_not_contains: String
  payerEmail_starts_with: String
  payerEmail_not_starts_with: String
  payerEmail_ends_with: String
  payerEmail_not_ends_with: String
  payerEmail_i: String
  payerEmail_not_i: String
  payerEmail_contains_i: String
  payerEmail_not_contains_i: String
  payerEmail_starts_with_i: String
  payerEmail_not_starts_with_i: String
  payerEmail_ends_with_i: String
  payerEmail_not_ends_with_i: String
  payerEmail_in: [String]
  payerEmail_not_in: [String]
  serviceCategory: String
  serviceCategory_not: String
  serviceCategory_contains: String
  serviceCategory_not_contains: String
  serviceCategory_starts_with: String
  serviceCategory_not_starts_with: String
  serviceCategory_ends_with: String
  serviceCategory_not_ends_with: String
  serviceCategory_i: String
  serviceCategory_not_i: String
  serviceCategory_contains_i: String
  serviceCategory_not_contains_i: String
  serviceCategory_starts_with_i: String
  serviceCategory_not_starts_with_i: String
  serviceCategory_ends_with_i: String
  serviceCategory_not_ends_with_i: String
  serviceCategory_in: [String]
  serviceCategory_not_in: [String]
  transactionId: String
  transactionId_not: String
  transactionId_contains: String
  transactionId_not_contains: String
  transactionId_starts_with: String
  transactionId_not_starts_with: String
  transactionId_ends_with: String
  transactionId_not_ends_with: String
  transactionId_i: String
  transactionId_not_i: String
  transactionId_contains_i: String
  transactionId_not_contains_i: String
  transactionId_starts_with_i: String
  transactionId_not_starts_with_i: String
  transactionId_ends_with_i: String
  transactionId_not_ends_with_i: String
  transactionId_in: [String]
  transactionId_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  integration: String
  integration_not: String
  integration_in: [String]
  integration_not_in: [String]
  recurrentPaymentContext: String
  recurrentPaymentContext_not: String
  recurrentPaymentContext_in: [String]
  recurrentPaymentContext_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: MultiPaymentHistoryRecordHistoryActionType
  history_action_not: MultiPaymentHistoryRecordHistoryActionType
  history_action_in: [MultiPaymentHistoryRecordHistoryActionType]
  history_action_not_in: [MultiPaymentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input MultiPaymentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortMultiPaymentHistoryRecordsBy {
  explicitFee_ASC
  explicitFee_DESC
  explicitServiceCharge_ASC
  explicitServiceCharge_DESC
  serviceFee_ASC
  serviceFee_DESC
  implicitFee_ASC
  implicitFee_DESC
  amountWithoutExplicitFee_ASC
  amountWithoutExplicitFee_DESC
  currencyCode_ASC
  currencyCode_DESC
  withdrawnAt_ASC
  withdrawnAt_DESC
  cardNumber_ASC
  cardNumber_DESC
  paymentWay_ASC
  paymentWay_DESC
  payerEmail_ASC
  payerEmail_DESC
  serviceCategory_ASC
  serviceCategory_DESC
  transactionId_ASC
  transactionId_DESC
  importId_ASC
  importId_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input MultiPaymentHistoryRecordUpdateInput {
  amount: JSON
  explicitFee: String
  explicitServiceCharge: String
  serviceFee: String
  implicitFee: String
  amountWithoutExplicitFee: String
  currencyCode: String
  withdrawnAt: String
  cardNumber: String
  paymentWay: String
  payerEmail: String
  serviceCategory: String
  transactionId: String
  importId: String
  meta: JSON
  status: String
  user: String
  integration: String
  recurrentPaymentContext: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MultiPaymentHistoryRecordHistoryActionType
  history_id: String
}

input MultiPaymentHistoryRecordsUpdateInput {
  id: ID!
  data: MultiPaymentHistoryRecordUpdateInput
}

input MultiPaymentHistoryRecordCreateInput {
  amount: JSON
  explicitFee: String
  explicitServiceCharge: String
  serviceFee: String
  implicitFee: String
  amountWithoutExplicitFee: String
  currencyCode: String
  withdrawnAt: String
  cardNumber: String
  paymentWay: String
  payerEmail: String
  serviceCategory: String
  transactionId: String
  importId: String
  meta: JSON
  status: String
  user: String
  integration: String
  recurrentPaymentContext: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: MultiPaymentHistoryRecordHistoryActionType
  history_id: String
}

input MultiPaymentHistoryRecordsCreateInput {
  data: MultiPaymentHistoryRecordCreateInput
}

input PaymentRelateToManyInput {
  create: [PaymentCreateInput]
  connect: [PaymentWhereUniqueInput]
  disconnect: [PaymentWhereUniqueInput]
  disconnectAll: Boolean
}

input RecurrentPaymentContextRelateToOneInput {
  create: RecurrentPaymentContextCreateInput
  connect: RecurrentPaymentContextWhereUniqueInput
  disconnect: RecurrentPaymentContextWhereUniqueInput
  disconnectAll: Boolean
}

""" Information about resident's payment for single or multiple services/receipts 
"""
type MultiPayment {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the MultiPayment List config, or
   2. As an alias to the field set on 'labelField' in the MultiPayment List config, or
   3. As an alias to a 'name' field on the MultiPayment List (if one exists), or
   4. As an alias to the 'id' field on the MultiPayment List.
  """
  _label_: String

  """ Total amount of withdraw. amount = amountWithoutExplicitFee + explicitFee + explicitServiceCharge 
  """
  amount: String

  """ Amount of money which payer pays on top of initial "amount", which counts as fee for total "amount" 
  """
  explicitFee: String

  """ Amount of money which payer pays on top of initial "amount", which counts as internal service charge for all payments 
  """
  explicitServiceCharge: String

  """ The amount of money charged by service (Doma) for the provision of service after subtracting from it the shares of all participants in the process. Can be part of explicit fee, implicit fee or explicit service charge 
  """
  serviceFee: String

  """ Total amount of money charged to recipients from amountWithoutExplicitFee of multipayment as fee for transaction 
  """
  implicitFee: String

  """ The amount of money used to pay bills, initialized by resident. """
  amountWithoutExplicitFee: String

  """ Code of currency in ISO-4217 format """
  currencyCode: String

  """ Time of money withdraw (UTC) """
  withdrawnAt: String

  """ Number of the card (masked) from which the money was withdrawn. Needed for creating receipt 
  """
  cardNumber: String

  """ Payment way, such as `CARD` or `APPLE_PAY` """
  paymentWay: String

  """ Payer email address (optional). Can be used by support to find MultiPayment faster or to send digital receipt 
  """
  payerEmail: String

  """ Name of the payment document, such as `Квитанция`, `Штраф` """
  serviceCategory: String

  """ Transaction ID of money withdraw """
  transactionId: String

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String

  """ Additional acquiring-specific information """
  meta: JSON

  """ Status of multipayment. Can be: "CREATED", "DONE", "PROCESSING", "ERROR", "WITHDRAWN" 
  """
  status: String

  """ Link to user """
  user: User

  """ Link to all related payments """
  payments(where: PaymentWhereInput, search: String, sortBy: [SortPaymentsBy!], orderBy: String, first: Int, skip: Int): [Payment!]!
  _paymentsMeta(where: PaymentWhereInput, search: String, sortBy: [SortPaymentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Acquiring integration. Determines way of user's payment """
  integration: AcquiringIntegration

  """ Link to RecurrentPaymentContext """
  recurrentPaymentContext: RecurrentPaymentContext
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input MultiPaymentWhereInput {
  AND: [MultiPaymentWhereInput]
  OR: [MultiPaymentWhereInput]
  explicitFee: String
  explicitFee_not: String
  explicitFee_lt: String
  explicitFee_lte: String
  explicitFee_gt: String
  explicitFee_gte: String
  explicitFee_in: [String]
  explicitFee_not_in: [String]
  explicitServiceCharge: String
  explicitServiceCharge_not: String
  explicitServiceCharge_lt: String
  explicitServiceCharge_lte: String
  explicitServiceCharge_gt: String
  explicitServiceCharge_gte: String
  explicitServiceCharge_in: [String]
  explicitServiceCharge_not_in: [String]
  serviceFee: String
  serviceFee_not: String
  serviceFee_lt: String
  serviceFee_lte: String
  serviceFee_gt: String
  serviceFee_gte: String
  serviceFee_in: [String]
  serviceFee_not_in: [String]
  implicitFee: String
  implicitFee_not: String
  implicitFee_lt: String
  implicitFee_lte: String
  implicitFee_gt: String
  implicitFee_gte: String
  implicitFee_in: [String]
  implicitFee_not_in: [String]
  amountWithoutExplicitFee: String
  amountWithoutExplicitFee_not: String
  amountWithoutExplicitFee_lt: String
  amountWithoutExplicitFee_lte: String
  amountWithoutExplicitFee_gt: String
  amountWithoutExplicitFee_gte: String
  amountWithoutExplicitFee_in: [String]
  amountWithoutExplicitFee_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  withdrawnAt: String
  withdrawnAt_not: String
  withdrawnAt_lt: String
  withdrawnAt_lte: String
  withdrawnAt_gt: String
  withdrawnAt_gte: String
  withdrawnAt_in: [String]
  withdrawnAt_not_in: [String]
  cardNumber: String
  cardNumber_not: String
  cardNumber_contains: String
  cardNumber_not_contains: String
  cardNumber_starts_with: String
  cardNumber_not_starts_with: String
  cardNumber_ends_with: String
  cardNumber_not_ends_with: String
  cardNumber_i: String
  cardNumber_not_i: String
  cardNumber_contains_i: String
  cardNumber_not_contains_i: String
  cardNumber_starts_with_i: String
  cardNumber_not_starts_with_i: String
  cardNumber_ends_with_i: String
  cardNumber_not_ends_with_i: String
  cardNumber_in: [String]
  cardNumber_not_in: [String]
  paymentWay: String
  paymentWay_not: String
  paymentWay_in: [String]
  paymentWay_not_in: [String]
  payerEmail: String
  payerEmail_not: String
  payerEmail_contains: String
  payerEmail_not_contains: String
  payerEmail_starts_with: String
  payerEmail_not_starts_with: String
  payerEmail_ends_with: String
  payerEmail_not_ends_with: String
  payerEmail_i: String
  payerEmail_not_i: String
  payerEmail_contains_i: String
  payerEmail_not_contains_i: String
  payerEmail_starts_with_i: String
  payerEmail_not_starts_with_i: String
  payerEmail_ends_with_i: String
  payerEmail_not_ends_with_i: String
  payerEmail_in: [String]
  payerEmail_not_in: [String]
  serviceCategory: String
  serviceCategory_not: String
  serviceCategory_contains: String
  serviceCategory_not_contains: String
  serviceCategory_starts_with: String
  serviceCategory_not_starts_with: String
  serviceCategory_ends_with: String
  serviceCategory_not_ends_with: String
  serviceCategory_i: String
  serviceCategory_not_i: String
  serviceCategory_contains_i: String
  serviceCategory_not_contains_i: String
  serviceCategory_starts_with_i: String
  serviceCategory_not_starts_with_i: String
  serviceCategory_ends_with_i: String
  serviceCategory_not_ends_with_i: String
  serviceCategory_in: [String]
  serviceCategory_not_in: [String]
  transactionId: String
  transactionId_not: String
  transactionId_contains: String
  transactionId_not_contains: String
  transactionId_starts_with: String
  transactionId_not_starts_with: String
  transactionId_ends_with: String
  transactionId_not_ends_with: String
  transactionId_i: String
  transactionId_not_i: String
  transactionId_contains_i: String
  transactionId_not_contains_i: String
  transactionId_starts_with_i: String
  transactionId_not_starts_with_i: String
  transactionId_ends_with_i: String
  transactionId_not_ends_with_i: String
  transactionId_in: [String]
  transactionId_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  status: String
  status_not: String
  status_in: [String]
  status_not_in: [String]
  user: UserWhereInput
  user_is_null: Boolean

  """ condition must be true for all nodes """
  payments_every: PaymentWhereInput

  """ condition must be true for at least 1 node """
  payments_some: PaymentWhereInput

  """ condition must be false for all nodes """
  payments_none: PaymentWhereInput
  integration: AcquiringIntegrationWhereInput
  integration_is_null: Boolean
  recurrentPaymentContext: RecurrentPaymentContextWhereInput
  recurrentPaymentContext_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input MultiPaymentWhereUniqueInput {
  id: ID!
}

enum SortMultiPaymentsBy {
  explicitFee_ASC
  explicitFee_DESC
  explicitServiceCharge_ASC
  explicitServiceCharge_DESC
  serviceFee_ASC
  serviceFee_DESC
  implicitFee_ASC
  implicitFee_DESC
  amountWithoutExplicitFee_ASC
  amountWithoutExplicitFee_DESC
  currencyCode_ASC
  currencyCode_DESC
  withdrawnAt_ASC
  withdrawnAt_DESC
  cardNumber_ASC
  cardNumber_DESC
  paymentWay_ASC
  paymentWay_DESC
  payerEmail_ASC
  payerEmail_DESC
  serviceCategory_ASC
  serviceCategory_DESC
  transactionId_ASC
  transactionId_DESC
  importId_ASC
  importId_DESC
  status_ASC
  status_DESC
  user_ASC
  user_DESC
  payments_ASC
  payments_DESC
  integration_ASC
  integration_DESC
  recurrentPaymentContext_ASC
  recurrentPaymentContext_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input MultiPaymentUpdateInput {
  explicitFee: String
  explicitServiceCharge: String
  serviceFee: String
  implicitFee: String
  amountWithoutExplicitFee: String
  currencyCode: String
  withdrawnAt: String
  cardNumber: String
  paymentWay: String
  payerEmail: String
  serviceCategory: String
  transactionId: String
  importId: String
  meta: JSON
  status: String
  user: UserRelateToOneInput
  payments: PaymentRelateToManyInput
  integration: AcquiringIntegrationRelateToOneInput
  recurrentPaymentContext: RecurrentPaymentContextRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MultiPaymentsUpdateInput {
  id: ID!
  data: MultiPaymentUpdateInput
}

input MultiPaymentCreateInput {
  explicitFee: String
  explicitServiceCharge: String
  serviceFee: String
  implicitFee: String
  amountWithoutExplicitFee: String
  currencyCode: String
  withdrawnAt: String
  cardNumber: String
  paymentWay: String
  payerEmail: String
  serviceCategory: String
  transactionId: String
  importId: String
  meta: JSON
  status: String
  user: UserRelateToOneInput
  payments: PaymentRelateToManyInput
  integration: AcquiringIntegrationRelateToOneInput
  recurrentPaymentContext: RecurrentPaymentContextRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input MultiPaymentsCreateInput {
  data: MultiPaymentCreateInput
}

enum PaymentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type PaymentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PaymentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the PaymentHistoryRecord List config, or
   3. As an alias to a 'name' field on the PaymentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the PaymentHistoryRecord List.
  """
  _label_: String
  amount: String
  explicitFee: String
  explicitServiceCharge: String
  implicitFee: String
  serviceFee: String
  currencyCode: String
  advancedAt: String
  accountNumber: String
  period: String
  purpose: String
  receipt: String
  frozenReceipt: JSON
  multiPayment: String
  context: String
  organization: String
  status: String
  order: String
  recipientBic: String
  recipientBankAccount: String
  importId: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PaymentHistoryRecordHistoryActionType
  history_id: String
}

input PaymentHistoryRecordWhereInput {
  AND: [PaymentHistoryRecordWhereInput]
  OR: [PaymentHistoryRecordWhereInput]
  amount: String
  amount_not: String
  amount_lt: String
  amount_lte: String
  amount_gt: String
  amount_gte: String
  amount_in: [String]
  amount_not_in: [String]
  explicitFee: String
  explicitFee_not: String
  explicitFee_lt: String
  explicitFee_lte: String
  explicitFee_gt: String
  explicitFee_gte: String
  explicitFee_in: [String]
  explicitFee_not_in: [String]
  explicitServiceCharge: String
  explicitServiceCharge_not: String
  explicitServiceCharge_lt: String
  explicitServiceCharge_lte: String
  explicitServiceCharge_gt: String
  explicitServiceCharge_gte: String
  explicitServiceCharge_in: [String]
  explicitServiceCharge_not_in: [String]
  implicitFee: String
  implicitFee_not: String
  implicitFee_lt: String
  implicitFee_lte: String
  implicitFee_gt: String
  implicitFee_gte: String
  implicitFee_in: [String]
  implicitFee_not_in: [String]
  serviceFee: String
  serviceFee_not: String
  serviceFee_lt: String
  serviceFee_lte: String
  serviceFee_gt: String
  serviceFee_gte: String
  serviceFee_in: [String]
  serviceFee_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_contains: String
  currencyCode_not_contains: String
  currencyCode_starts_with: String
  currencyCode_not_starts_with: String
  currencyCode_ends_with: String
  currencyCode_not_ends_with: String
  currencyCode_i: String
  currencyCode_not_i: String
  currencyCode_contains_i: String
  currencyCode_not_contains_i: String
  currencyCode_starts_with_i: String
  currencyCode_not_starts_with_i: String
  currencyCode_ends_with_i: String
  currencyCode_not_ends_with_i: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  advancedAt: String
  advancedAt_not: String
  advancedAt_lt: String
  advancedAt_lte: String
  advancedAt_gt: String
  advancedAt_gte: String
  advancedAt_in: [String]
  advancedAt_not_in: [String]
  accountNumber: String
  accountNumber_not: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  accountNumber_i: String
  accountNumber_not_i: String
  accountNumber_contains_i: String
  accountNumber_not_contains_i: String
  accountNumber_starts_with_i: String
  accountNumber_not_starts_with_i: String
  accountNumber_ends_with_i: String
  accountNumber_not_ends_with_i: String
  accountNumber_in: [String]
  accountNumber_not_in: [String]
  period: String
  period_not: String
  period_lt: String
  period_lte: String
  period_gt: String
  period_gte: String
  period_in: [String]
  period_not_in: [String]
  purpose: String
  purpose_not: String
  purpose_contains: String
  purpose_not_contains: String
  purpose_starts_with: String
  purpose_not_starts_with: String
  purpose_ends_with: String
  purpose_not_ends_with: String
  purpose_i: String
  purpose_not_i: String
  purpose_contains_i: String
  purpose_not_contains_i: String
  purpose_starts_with_i: String
  purpose_not_starts_with_i: String
  purpose_ends_with_i: String
  purpose_not_ends_with_i: String
  purpose_in: [String]
  purpose_not_in: [String]
  receipt: String
  receipt_not: String
  receipt_in: [String]
  receipt_not_in: [String]
  frozenReceipt: JSON
  frozenReceipt_not: JSON
  frozenReceipt_in: [JSON]
  frozenReceipt_not_in: [JSON]
  multiPayment: String
  multiPayment_not: String
  multiPayment_in: [String]
  multiPayment_not_in: [String]
  context: String
  context_not: String
  context_in: [String]
  context_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  order: String
  order_not: String
  order_contains: String
  order_not_contains: String
  order_starts_with: String
  order_not_starts_with: String
  order_ends_with: String
  order_not_ends_with: String
  order_i: String
  order_not_i: String
  order_contains_i: String
  order_not_contains_i: String
  order_starts_with_i: String
  order_not_starts_with_i: String
  order_ends_with_i: String
  order_not_ends_with_i: String
  order_in: [String]
  order_not_in: [String]
  recipientBic: String
  recipientBic_not: String
  recipientBic_contains: String
  recipientBic_not_contains: String
  recipientBic_starts_with: String
  recipientBic_not_starts_with: String
  recipientBic_ends_with: String
  recipientBic_not_ends_with: String
  recipientBic_i: String
  recipientBic_not_i: String
  recipientBic_contains_i: String
  recipientBic_not_contains_i: String
  recipientBic_starts_with_i: String
  recipientBic_not_starts_with_i: String
  recipientBic_ends_with_i: String
  recipientBic_not_ends_with_i: String
  recipientBic_in: [String]
  recipientBic_not_in: [String]
  recipientBankAccount: String
  recipientBankAccount_not: String
  recipientBankAccount_contains: String
  recipientBankAccount_not_contains: String
  recipientBankAccount_starts_with: String
  recipientBankAccount_not_starts_with: String
  recipientBankAccount_ends_with: String
  recipientBankAccount_not_ends_with: String
  recipientBankAccount_i: String
  recipientBankAccount_not_i: String
  recipientBankAccount_contains_i: String
  recipientBankAccount_not_contains_i: String
  recipientBankAccount_starts_with_i: String
  recipientBankAccount_not_starts_with_i: String
  recipientBankAccount_ends_with_i: String
  recipientBankAccount_not_ends_with_i: String
  recipientBankAccount_in: [String]
  recipientBankAccount_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: PaymentHistoryRecordHistoryActionType
  history_action_not: PaymentHistoryRecordHistoryActionType
  history_action_in: [PaymentHistoryRecordHistoryActionType]
  history_action_not_in: [PaymentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input PaymentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortPaymentHistoryRecordsBy {
  amount_ASC
  amount_DESC
  explicitFee_ASC
  explicitFee_DESC
  explicitServiceCharge_ASC
  explicitServiceCharge_DESC
  implicitFee_ASC
  implicitFee_DESC
  serviceFee_ASC
  serviceFee_DESC
  currencyCode_ASC
  currencyCode_DESC
  advancedAt_ASC
  advancedAt_DESC
  accountNumber_ASC
  accountNumber_DESC
  period_ASC
  period_DESC
  purpose_ASC
  purpose_DESC
  status_ASC
  status_DESC
  order_ASC
  order_DESC
  recipientBic_ASC
  recipientBic_DESC
  recipientBankAccount_ASC
  recipientBankAccount_DESC
  importId_ASC
  importId_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input PaymentHistoryRecordUpdateInput {
  amount: String
  explicitFee: String
  explicitServiceCharge: String
  implicitFee: String
  serviceFee: String
  currencyCode: String
  advancedAt: String
  accountNumber: String
  period: String
  purpose: String
  receipt: String
  frozenReceipt: JSON
  multiPayment: String
  context: String
  organization: String
  status: String
  order: String
  recipientBic: String
  recipientBankAccount: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PaymentHistoryRecordHistoryActionType
  history_id: String
}

input PaymentHistoryRecordsUpdateInput {
  id: ID!
  data: PaymentHistoryRecordUpdateInput
}

input PaymentHistoryRecordCreateInput {
  amount: String
  explicitFee: String
  explicitServiceCharge: String
  implicitFee: String
  serviceFee: String
  currencyCode: String
  advancedAt: String
  accountNumber: String
  period: String
  purpose: String
  receipt: String
  frozenReceipt: JSON
  multiPayment: String
  context: String
  organization: String
  status: String
  order: String
  recipientBic: String
  recipientBankAccount: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PaymentHistoryRecordHistoryActionType
  history_id: String
}

input PaymentHistoryRecordsCreateInput {
  data: PaymentHistoryRecordCreateInput
}

input BillingReceiptRelateToOneInput {
  create: BillingReceiptCreateInput
  connect: BillingReceiptWhereUniqueInput
  disconnect: BillingReceiptWhereUniqueInput
  disconnectAll: Boolean
}

input MultiPaymentRelateToOneInput {
  create: MultiPaymentCreateInput
  connect: MultiPaymentWhereUniqueInput
  disconnect: MultiPaymentWhereUniqueInput
  disconnectAll: Boolean
}

""" Information about completed transaction from user to a specific organization 
"""
type Payment {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Payment List config, or
   2. As an alias to the field set on 'labelField' in the Payment List config, or
   3. As an alias to a 'name' field on the Payment List (if one exists), or
   4. As an alias to the 'id' field on the Payment List.
  """
  _label_: String

  """ Amount of money from MultiPayment.amountWithOutExplicitFee to pay for billing receipt 
  """
  amount: String

  """ Amount of money which payer pays on top of initial "amount", which counts as fee for every service which is not housing and communal services 
  """
  explicitFee: String

  """ Amount of money which payer pays on top of initial "amount", which counts as internal service charge for all payments from housing and communal services category 
  """
  explicitServiceCharge: String

  """ Amount of money which recipient pays from initial amount for transaction 
  """
  implicitFee: String

  """ The amount of money charged by our service for the provision of service after subtracting from it the shares of all participants in the process. Can be part of explicit fee, implicit fee or explicit service charge 
  """
  serviceFee: String

  """ Code of currency in ISO-4217 format """
  currencyCode: String

  """ Time at which money was advanced to recipient's account """
  advancedAt: String

  """ Payer's account number """
  accountNumber: String

  """ Period date: Generated on template <year>-<month>-01 """
  period: String

  """ Purpose of payment. Mostly used as title such as "Payment by agreement №123" 
  """
  purpose: String

  """ Link to a billing receipt that the user paid for. Can be null in cases of getting payments out of our system 
  """
  receipt: BillingReceipt

  """ Frozen billing receipt, used to resolving conflicts """
  frozenReceipt: JSON

  """ Link to a payment related MultiPayment. Required field to update, but initially created unlinked 
  """
  multiPayment: MultiPayment

  """ Acquiring context, which used to link organization and acquiring integration and provide storage for organization-acquiring-specific settings / state 
  """
  context: AcquiringIntegrationContext

  """ Direct link to organization, since acquiring context cannot be defined for some payments 
  """
  organization: Organization

  """ Status of payment. Can be: "CREATED", "PROCESSING", "DONE", "ERROR", "WITHDRAWN" 
  """
  status: String

  """ Payment order. A directive to a bank from a bank account holder instructing the bank to make a payment or series of payments to a third party 
  """
  order: String

  """ Bic of recipient organization, used for matching payments with receipts in case of multiple receipts per account + address 
  """
  recipientBic: String

  """ Bank account number of recipient organization, used for matching payments with receipts in case of multiple receipts per account + address 
  """
  recipientBankAccount: String

  """ Id of object in external service which represents current item. Mostly used for internal needs of integration services for matching our objects with theirs 
  """
  importId: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input PaymentWhereInput {
  AND: [PaymentWhereInput]
  OR: [PaymentWhereInput]
  amount: String
  amount_not: String
  amount_lt: String
  amount_lte: String
  amount_gt: String
  amount_gte: String
  amount_in: [String]
  amount_not_in: [String]
  explicitFee: String
  explicitFee_not: String
  explicitFee_lt: String
  explicitFee_lte: String
  explicitFee_gt: String
  explicitFee_gte: String
  explicitFee_in: [String]
  explicitFee_not_in: [String]
  explicitServiceCharge: String
  explicitServiceCharge_not: String
  explicitServiceCharge_lt: String
  explicitServiceCharge_lte: String
  explicitServiceCharge_gt: String
  explicitServiceCharge_gte: String
  explicitServiceCharge_in: [String]
  explicitServiceCharge_not_in: [String]
  implicitFee: String
  implicitFee_not: String
  implicitFee_lt: String
  implicitFee_lte: String
  implicitFee_gt: String
  implicitFee_gte: String
  implicitFee_in: [String]
  implicitFee_not_in: [String]
  serviceFee: String
  serviceFee_not: String
  serviceFee_lt: String
  serviceFee_lte: String
  serviceFee_gt: String
  serviceFee_gte: String
  serviceFee_in: [String]
  serviceFee_not_in: [String]
  currencyCode: String
  currencyCode_not: String
  currencyCode_in: [String]
  currencyCode_not_in: [String]
  advancedAt: String
  advancedAt_not: String
  advancedAt_lt: String
  advancedAt_lte: String
  advancedAt_gt: String
  advancedAt_gte: String
  advancedAt_in: [String]
  advancedAt_not_in: [String]
  accountNumber: String
  accountNumber_not: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  accountNumber_i: String
  accountNumber_not_i: String
  accountNumber_contains_i: String
  accountNumber_not_contains_i: String
  accountNumber_starts_with_i: String
  accountNumber_not_starts_with_i: String
  accountNumber_ends_with_i: String
  accountNumber_not_ends_with_i: String
  accountNumber_in: [String]
  accountNumber_not_in: [String]
  period: String
  period_not: String
  period_lt: String
  period_lte: String
  period_gt: String
  period_gte: String
  period_in: [String]
  period_not_in: [String]
  purpose: String
  purpose_not: String
  purpose_contains: String
  purpose_not_contains: String
  purpose_starts_with: String
  purpose_not_starts_with: String
  purpose_ends_with: String
  purpose_not_ends_with: String
  purpose_i: String
  purpose_not_i: String
  purpose_contains_i: String
  purpose_not_contains_i: String
  purpose_starts_with_i: String
  purpose_not_starts_with_i: String
  purpose_ends_with_i: String
  purpose_not_ends_with_i: String
  purpose_in: [String]
  purpose_not_in: [String]
  receipt: BillingReceiptWhereInput
  receipt_is_null: Boolean
  frozenReceipt: JSON
  frozenReceipt_not: JSON
  frozenReceipt_in: [JSON]
  frozenReceipt_not_in: [JSON]
  multiPayment: MultiPaymentWhereInput
  multiPayment_is_null: Boolean
  context: AcquiringIntegrationContextWhereInput
  context_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  status: String
  status_not: String
  status_in: [String]
  status_not_in: [String]
  order: String
  order_not: String
  order_contains: String
  order_not_contains: String
  order_starts_with: String
  order_not_starts_with: String
  order_ends_with: String
  order_not_ends_with: String
  order_i: String
  order_not_i: String
  order_contains_i: String
  order_not_contains_i: String
  order_starts_with_i: String
  order_not_starts_with_i: String
  order_ends_with_i: String
  order_not_ends_with_i: String
  order_in: [String]
  order_not_in: [String]
  recipientBic: String
  recipientBic_not: String
  recipientBic_contains: String
  recipientBic_not_contains: String
  recipientBic_starts_with: String
  recipientBic_not_starts_with: String
  recipientBic_ends_with: String
  recipientBic_not_ends_with: String
  recipientBic_i: String
  recipientBic_not_i: String
  recipientBic_contains_i: String
  recipientBic_not_contains_i: String
  recipientBic_starts_with_i: String
  recipientBic_not_starts_with_i: String
  recipientBic_ends_with_i: String
  recipientBic_not_ends_with_i: String
  recipientBic_in: [String]
  recipientBic_not_in: [String]
  recipientBankAccount: String
  recipientBankAccount_not: String
  recipientBankAccount_contains: String
  recipientBankAccount_not_contains: String
  recipientBankAccount_starts_with: String
  recipientBankAccount_not_starts_with: String
  recipientBankAccount_ends_with: String
  recipientBankAccount_not_ends_with: String
  recipientBankAccount_i: String
  recipientBankAccount_not_i: String
  recipientBankAccount_contains_i: String
  recipientBankAccount_not_contains_i: String
  recipientBankAccount_starts_with_i: String
  recipientBankAccount_not_starts_with_i: String
  recipientBankAccount_ends_with_i: String
  recipientBankAccount_not_ends_with_i: String
  recipientBankAccount_in: [String]
  recipientBankAccount_not_in: [String]
  importId: String
  importId_not: String
  importId_contains: String
  importId_not_contains: String
  importId_starts_with: String
  importId_not_starts_with: String
  importId_ends_with: String
  importId_not_ends_with: String
  importId_i: String
  importId_not_i: String
  importId_contains_i: String
  importId_not_contains_i: String
  importId_starts_with_i: String
  importId_not_starts_with_i: String
  importId_ends_with_i: String
  importId_not_ends_with_i: String
  importId_in: [String]
  importId_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input PaymentWhereUniqueInput {
  id: ID!
}

enum SortPaymentsBy {
  amount_ASC
  amount_DESC
  explicitFee_ASC
  explicitFee_DESC
  explicitServiceCharge_ASC
  explicitServiceCharge_DESC
  implicitFee_ASC
  implicitFee_DESC
  serviceFee_ASC
  serviceFee_DESC
  currencyCode_ASC
  currencyCode_DESC
  advancedAt_ASC
  advancedAt_DESC
  accountNumber_ASC
  accountNumber_DESC
  period_ASC
  period_DESC
  purpose_ASC
  purpose_DESC
  receipt_ASC
  receipt_DESC
  multiPayment_ASC
  multiPayment_DESC
  context_ASC
  context_DESC
  organization_ASC
  organization_DESC
  status_ASC
  status_DESC
  order_ASC
  order_DESC
  recipientBic_ASC
  recipientBic_DESC
  recipientBankAccount_ASC
  recipientBankAccount_DESC
  importId_ASC
  importId_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input PaymentUpdateInput {
  amount: String
  explicitFee: String
  explicitServiceCharge: String
  implicitFee: String
  serviceFee: String
  currencyCode: String
  advancedAt: String
  accountNumber: String
  period: String
  purpose: String
  receipt: BillingReceiptRelateToOneInput
  frozenReceipt: JSON
  multiPayment: MultiPaymentRelateToOneInput
  context: AcquiringIntegrationContextRelateToOneInput
  organization: OrganizationRelateToOneInput
  status: String
  order: String
  recipientBic: String
  recipientBankAccount: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PaymentsUpdateInput {
  id: ID!
  data: PaymentUpdateInput
}

input PaymentCreateInput {
  amount: String
  explicitFee: String
  explicitServiceCharge: String
  implicitFee: String
  serviceFee: String
  currencyCode: String
  advancedAt: String
  accountNumber: String
  period: String
  purpose: String
  receipt: BillingReceiptRelateToOneInput
  frozenReceipt: JSON
  multiPayment: MultiPaymentRelateToOneInput
  context: AcquiringIntegrationContextRelateToOneInput
  organization: OrganizationRelateToOneInput
  status: String
  order: String
  recipientBic: String
  recipientBankAccount: String
  importId: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PaymentsCreateInput {
  data: PaymentCreateInput
}

enum PaymentsFilterTemplateHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type PaymentsFilterTemplateHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PaymentsFilterTemplateHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the PaymentsFilterTemplateHistoryRecord List config, or
   3. As an alias to a 'name' field on the PaymentsFilterTemplateHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the PaymentsFilterTemplateHistoryRecord List.
  """
  _label_: String
  name: String
  employee: String
  fields: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PaymentsFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input PaymentsFilterTemplateHistoryRecordWhereInput {
  AND: [PaymentsFilterTemplateHistoryRecordWhereInput]
  OR: [PaymentsFilterTemplateHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  employee: String
  employee_not: String
  employee_in: [String]
  employee_not_in: [String]
  fields: JSON
  fields_not: JSON
  fields_in: [JSON]
  fields_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: PaymentsFilterTemplateHistoryRecordHistoryActionType
  history_action_not: PaymentsFilterTemplateHistoryRecordHistoryActionType
  history_action_in: [PaymentsFilterTemplateHistoryRecordHistoryActionType]
  history_action_not_in: [PaymentsFilterTemplateHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input PaymentsFilterTemplateHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortPaymentsFilterTemplateHistoryRecordsBy {
  name_ASC
  name_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input PaymentsFilterTemplateHistoryRecordUpdateInput {
  name: String
  employee: String
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PaymentsFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input PaymentsFilterTemplateHistoryRecordsUpdateInput {
  id: ID!
  data: PaymentsFilterTemplateHistoryRecordUpdateInput
}

input PaymentsFilterTemplateHistoryRecordCreateInput {
  name: String
  employee: String
  fields: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PaymentsFilterTemplateHistoryRecordHistoryActionType
  history_id: String
}

input PaymentsFilterTemplateHistoryRecordsCreateInput {
  data: PaymentsFilterTemplateHistoryRecordCreateInput
}

type PaymentsFilter {
  advancedAt: [String]
  accountNumber: String
  address: [String]
  type: [String]
  order: String
  status: [String]
}

input PaymentsFilterInput {
  advancedAt: [String]
  accountNumber: String
  address: [String]
  type: [String]
  order: String
  status: [String]
}

""" The payments filter preset """
type PaymentsFilterTemplate {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PaymentsFilterTemplate List config, or
   2. As an alias to the field set on 'labelField' in the PaymentsFilterTemplate List config, or
   3. As an alias to a 'name' field on the PaymentsFilterTemplate List (if one exists), or
   4. As an alias to the 'id' field on the PaymentsFilterTemplate List.
  """
  _label_: String

  """ Preset name """
  name: String

  """ Preset owner """
  employee: OrganizationEmployee

  """ Filter that match the given template """
  fields: PaymentsFilter
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input PaymentsFilterTemplateWhereInput {
  AND: [PaymentsFilterTemplateWhereInput]
  OR: [PaymentsFilterTemplateWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  employee: OrganizationEmployeeWhereInput
  employee_is_null: Boolean
  fields: PaymentsFilterInput
  fields_not: PaymentsFilterInput
  fields_in: [PaymentsFilterInput]
  fields_not_in: [PaymentsFilterInput]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input PaymentsFilterTemplateWhereUniqueInput {
  id: ID!
}

enum SortPaymentsFilterTemplatesBy {
  name_ASC
  name_DESC
  employee_ASC
  employee_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input PaymentsFilterTemplateUpdateInput {
  name: String
  employee: OrganizationEmployeeRelateToOneInput
  fields: PaymentsFilterInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PaymentsFilterTemplatesUpdateInput {
  id: ID!
  data: PaymentsFilterTemplateUpdateInput
}

input PaymentsFilterTemplateCreateInput {
  name: String
  employee: OrganizationEmployeeRelateToOneInput
  fields: PaymentsFilterInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PaymentsFilterTemplatesCreateInput {
  data: PaymentsFilterTemplateCreateInput
}

enum RecurrentPaymentContextHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type RecurrentPaymentContextHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the RecurrentPaymentContextHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the RecurrentPaymentContextHistoryRecord List config, or
   3. As an alias to a 'name' field on the RecurrentPaymentContextHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the RecurrentPaymentContextHistoryRecord List.
  """
  _label_: String
  enabled: Boolean
  limit: String
  autoPayReceipts: Boolean
  paymentDay: Int
  settings: JSON
  serviceConsumer: String
  billingCategory: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RecurrentPaymentContextHistoryRecordHistoryActionType
  history_id: String
}

input RecurrentPaymentContextHistoryRecordWhereInput {
  AND: [RecurrentPaymentContextHistoryRecordWhereInput]
  OR: [RecurrentPaymentContextHistoryRecordWhereInput]
  enabled: Boolean
  enabled_not: Boolean
  limit: String
  limit_not: String
  limit_lt: String
  limit_lte: String
  limit_gt: String
  limit_gte: String
  limit_in: [String]
  limit_not_in: [String]
  autoPayReceipts: Boolean
  autoPayReceipts_not: Boolean
  paymentDay: Int
  paymentDay_not: Int
  paymentDay_lt: Int
  paymentDay_lte: Int
  paymentDay_gt: Int
  paymentDay_gte: Int
  paymentDay_in: [Int]
  paymentDay_not_in: [Int]
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  serviceConsumer: String
  serviceConsumer_not: String
  serviceConsumer_in: [String]
  serviceConsumer_not_in: [String]
  billingCategory: String
  billingCategory_not: String
  billingCategory_in: [String]
  billingCategory_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: RecurrentPaymentContextHistoryRecordHistoryActionType
  history_action_not: RecurrentPaymentContextHistoryRecordHistoryActionType
  history_action_in: [RecurrentPaymentContextHistoryRecordHistoryActionType]
  history_action_not_in: [RecurrentPaymentContextHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input RecurrentPaymentContextHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortRecurrentPaymentContextHistoryRecordsBy {
  enabled_ASC
  enabled_DESC
  limit_ASC
  limit_DESC
  autoPayReceipts_ASC
  autoPayReceipts_DESC
  paymentDay_ASC
  paymentDay_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input RecurrentPaymentContextHistoryRecordUpdateInput {
  enabled: Boolean
  limit: String
  autoPayReceipts: Boolean
  paymentDay: Int
  settings: JSON
  serviceConsumer: String
  billingCategory: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RecurrentPaymentContextHistoryRecordHistoryActionType
  history_id: String
}

input RecurrentPaymentContextHistoryRecordsUpdateInput {
  id: ID!
  data: RecurrentPaymentContextHistoryRecordUpdateInput
}

input RecurrentPaymentContextHistoryRecordCreateInput {
  enabled: Boolean
  limit: String
  autoPayReceipts: Boolean
  paymentDay: Int
  settings: JSON
  serviceConsumer: String
  billingCategory: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RecurrentPaymentContextHistoryRecordHistoryActionType
  history_id: String
}

input RecurrentPaymentContextHistoryRecordsCreateInput {
  data: RecurrentPaymentContextHistoryRecordCreateInput
}

type SettingsField {
  cardId: String!
}

input SettingsFieldInput {
  cardId: String!
}

input ServiceConsumerRelateToOneInput {
  create: ServiceConsumerCreateInput
  connect: ServiceConsumerWhereUniqueInput
  disconnect: ServiceConsumerWhereUniqueInput
  disconnectAll: Boolean
}

""" Recurrent payments context configuration. Holding settings, limits and etc, configured by resident for background process that proceeding resident`s receipts on monthly basis. 
"""
type RecurrentPaymentContext {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the RecurrentPaymentContext List config, or
   2. As an alias to the field set on 'labelField' in the RecurrentPaymentContext List config, or
   3. As an alias to a 'name' field on the RecurrentPaymentContext List (if one exists), or
   4. As an alias to the 'id' field on the RecurrentPaymentContext List.
  """
  _label_: String

  """ Enable or Disable recurrent payment proceeding. """
  enabled: Boolean

  """ Maximal `toPay` amount of multi payment that can be proceeded. Otherwise payment should be interrupted. 
  """
  limit: String

  """ Pay for billing receipts right after they was created. Only one trigger should be configured: autoPayReceipts or paymentDay. 
  """
  autoPayReceipts: Boolean

  """ The day of month when resident`s receipts going to be proceeded. Only one trigger should be configured: autoPayReceipts or paymentDay. 
  """
  paymentDay: Int

  """ Settings. Should contain recurrent payment context configuration. """
  settings: SettingsField

  """ Link to ServiceConsumer """
  serviceConsumer: ServiceConsumer

  """ Link to BillingCategory """
  billingCategory: BillingCategory
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input RecurrentPaymentContextWhereInput {
  AND: [RecurrentPaymentContextWhereInput]
  OR: [RecurrentPaymentContextWhereInput]
  enabled: Boolean
  enabled_not: Boolean
  limit: String
  limit_not: String
  limit_lt: String
  limit_lte: String
  limit_gt: String
  limit_gte: String
  limit_in: [String]
  limit_not_in: [String]
  autoPayReceipts: Boolean
  autoPayReceipts_not: Boolean
  paymentDay: Int
  paymentDay_not: Int
  paymentDay_lt: Int
  paymentDay_lte: Int
  paymentDay_gt: Int
  paymentDay_gte: Int
  paymentDay_in: [Int]
  paymentDay_not_in: [Int]
  settings: SettingsFieldInput
  settings_not: SettingsFieldInput
  settings_in: [SettingsFieldInput]
  settings_not_in: [SettingsFieldInput]
  serviceConsumer: ServiceConsumerWhereInput
  serviceConsumer_is_null: Boolean
  billingCategory: BillingCategoryWhereInput
  billingCategory_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input RecurrentPaymentContextWhereUniqueInput {
  id: ID!
}

enum SortRecurrentPaymentContextsBy {
  enabled_ASC
  enabled_DESC
  limit_ASC
  limit_DESC
  autoPayReceipts_ASC
  autoPayReceipts_DESC
  paymentDay_ASC
  paymentDay_DESC
  serviceConsumer_ASC
  serviceConsumer_DESC
  billingCategory_ASC
  billingCategory_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input RecurrentPaymentContextUpdateInput {
  enabled: Boolean
  limit: String
  autoPayReceipts: Boolean
  paymentDay: Int
  settings: SettingsFieldInput
  serviceConsumer: ServiceConsumerRelateToOneInput
  billingCategory: BillingCategoryRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input RecurrentPaymentContextsUpdateInput {
  id: ID!
  data: RecurrentPaymentContextUpdateInput
}

input RecurrentPaymentContextCreateInput {
  enabled: Boolean
  limit: String
  autoPayReceipts: Boolean
  paymentDay: Int
  settings: SettingsFieldInput
  serviceConsumer: ServiceConsumerRelateToOneInput
  billingCategory: BillingCategoryRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input RecurrentPaymentContextsCreateInput {
  data: RecurrentPaymentContextCreateInput
}

enum RecurrentPaymentHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type RecurrentPaymentHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the RecurrentPaymentHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the RecurrentPaymentHistoryRecord List config, or
   3. As an alias to a 'name' field on the RecurrentPaymentHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the RecurrentPaymentHistoryRecord List.
  """
  _label_: String
  status: String
  payAfter: String
  tryCount: Int
  state: JSON
  billingReceipts: JSON
  recurrentPaymentContext: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RecurrentPaymentHistoryRecordHistoryActionType
  history_id: String
}

input RecurrentPaymentHistoryRecordWhereInput {
  AND: [RecurrentPaymentHistoryRecordWhereInput]
  OR: [RecurrentPaymentHistoryRecordWhereInput]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  payAfter: String
  payAfter_not: String
  payAfter_lt: String
  payAfter_lte: String
  payAfter_gt: String
  payAfter_gte: String
  payAfter_in: [String]
  payAfter_not_in: [String]
  tryCount: Int
  tryCount_not: Int
  tryCount_lt: Int
  tryCount_lte: Int
  tryCount_gt: Int
  tryCount_gte: Int
  tryCount_in: [Int]
  tryCount_not_in: [Int]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  billingReceipts: JSON
  billingReceipts_not: JSON
  billingReceipts_in: [JSON]
  billingReceipts_not_in: [JSON]
  recurrentPaymentContext: String
  recurrentPaymentContext_not: String
  recurrentPaymentContext_in: [String]
  recurrentPaymentContext_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: RecurrentPaymentHistoryRecordHistoryActionType
  history_action_not: RecurrentPaymentHistoryRecordHistoryActionType
  history_action_in: [RecurrentPaymentHistoryRecordHistoryActionType]
  history_action_not_in: [RecurrentPaymentHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input RecurrentPaymentHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortRecurrentPaymentHistoryRecordsBy {
  status_ASC
  status_DESC
  payAfter_ASC
  payAfter_DESC
  tryCount_ASC
  tryCount_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input RecurrentPaymentHistoryRecordUpdateInput {
  status: String
  payAfter: String
  tryCount: Int
  state: JSON
  billingReceipts: JSON
  recurrentPaymentContext: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RecurrentPaymentHistoryRecordHistoryActionType
  history_id: String
}

input RecurrentPaymentHistoryRecordsUpdateInput {
  id: ID!
  data: RecurrentPaymentHistoryRecordUpdateInput
}

input RecurrentPaymentHistoryRecordCreateInput {
  status: String
  payAfter: String
  tryCount: Int
  state: JSON
  billingReceipts: JSON
  recurrentPaymentContext: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: RecurrentPaymentHistoryRecordHistoryActionType
  history_id: String
}

input RecurrentPaymentHistoryRecordsCreateInput {
  data: RecurrentPaymentHistoryRecordCreateInput
}

enum RecurrentPaymentStatusType {
  CREATED
  PROCESSING
  DONE
  ERROR_NEED_RETRY
  ERROR
  CANCEL
}

type BillingReceiptsField {
  id: String!
}

input BillingReceiptsFieldInput {
  id: String!
}

""" Hold a snapshot of monthly payment data. Used by background recurrent payment process. 
"""
type RecurrentPayment {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the RecurrentPayment List config, or
   2. As an alias to the field set on 'labelField' in the RecurrentPayment List config, or
   3. As an alias to a 'name' field on the RecurrentPayment List (if one exists), or
   4. As an alias to the 'id' field on the RecurrentPayment List.
  """
  _label_: String

  """ Payment proceeding status """
  status: RecurrentPaymentStatusType

  """ Payment proceeding should start after date. """
  payAfter: String

  """ Count of proceeding tries. """
  tryCount: Int

  """ Hold current state of payment proceeding. """
  state: JSON

  """ Contains information about the distribution of a certain type of fee """
  billingReceipts: [BillingReceiptsField!]

  """ Link to RecurrentPaymentContext """
  recurrentPaymentContext: RecurrentPaymentContext
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input RecurrentPaymentWhereInput {
  AND: [RecurrentPaymentWhereInput]
  OR: [RecurrentPaymentWhereInput]
  status: RecurrentPaymentStatusType
  status_not: RecurrentPaymentStatusType
  status_in: [RecurrentPaymentStatusType]
  status_not_in: [RecurrentPaymentStatusType]
  payAfter: String
  payAfter_not: String
  payAfter_lt: String
  payAfter_lte: String
  payAfter_gt: String
  payAfter_gte: String
  payAfter_in: [String]
  payAfter_not_in: [String]
  tryCount: Int
  tryCount_not: Int
  tryCount_lt: Int
  tryCount_lte: Int
  tryCount_gt: Int
  tryCount_gte: Int
  tryCount_in: [Int]
  tryCount_not_in: [Int]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  billingReceipts: [BillingReceiptsFieldInput!]
  billingReceipts_not: [BillingReceiptsFieldInput!]
  billingReceipts_in: [[BillingReceiptsFieldInput!]]
  billingReceipts_not_in: [[BillingReceiptsFieldInput!]]
  recurrentPaymentContext: RecurrentPaymentContextWhereInput
  recurrentPaymentContext_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input RecurrentPaymentWhereUniqueInput {
  id: ID!
}

enum SortRecurrentPaymentsBy {
  status_ASC
  status_DESC
  payAfter_ASC
  payAfter_DESC
  tryCount_ASC
  tryCount_DESC
  recurrentPaymentContext_ASC
  recurrentPaymentContext_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input RecurrentPaymentUpdateInput {
  status: RecurrentPaymentStatusType
  payAfter: String
  tryCount: Int
  state: JSON
  billingReceipts: [BillingReceiptsFieldInput!]
  recurrentPaymentContext: RecurrentPaymentContextRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input RecurrentPaymentsUpdateInput {
  id: ID!
  data: RecurrentPaymentUpdateInput
}

input RecurrentPaymentCreateInput {
  status: RecurrentPaymentStatusType
  payAfter: String
  tryCount: Int
  state: JSON
  billingReceipts: [BillingReceiptsFieldInput!]
  recurrentPaymentContext: RecurrentPaymentContextRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input RecurrentPaymentsCreateInput {
  data: RecurrentPaymentCreateInput
}

enum B2BAppHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2BAppHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2BAppHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppHistoryRecord List.
  """
  _label_: String
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  isHidden: Boolean
  isGlobal: Boolean
  contextDefaultStatus: String
  category: String
  features: JSON
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppHistoryRecordWhereInput {
  AND: [B2BAppHistoryRecordWhereInput]
  OR: [B2BAppHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: JSON
  logo_not: JSON
  logo_in: [JSON]
  logo_not_in: [JSON]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  partnerUrl: String
  partnerUrl_not: String
  partnerUrl_contains: String
  partnerUrl_not_contains: String
  partnerUrl_starts_with: String
  partnerUrl_not_starts_with: String
  partnerUrl_ends_with: String
  partnerUrl_not_ends_with: String
  partnerUrl_i: String
  partnerUrl_not_i: String
  partnerUrl_contains_i: String
  partnerUrl_not_contains_i: String
  partnerUrl_starts_with_i: String
  partnerUrl_not_starts_with_i: String
  partnerUrl_ends_with_i: String
  partnerUrl_not_ends_with_i: String
  partnerUrl_in: [String]
  partnerUrl_not_in: [String]
  detailedDescription: JSON
  detailedDescription_not: JSON
  detailedDescription_in: [JSON]
  detailedDescription_not_in: [JSON]
  appUrl: String
  appUrl_not: String
  appUrl_contains: String
  appUrl_not_contains: String
  appUrl_starts_with: String
  appUrl_not_starts_with: String
  appUrl_ends_with: String
  appUrl_not_ends_with: String
  appUrl_i: String
  appUrl_not_i: String
  appUrl_contains_i: String
  appUrl_not_contains_i: String
  appUrl_starts_with_i: String
  appUrl_not_starts_with_i: String
  appUrl_ends_with_i: String
  appUrl_not_ends_with_i: String
  appUrl_in: [String]
  appUrl_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean
  isGlobal: Boolean
  isGlobal_not: Boolean
  contextDefaultStatus: String
  contextDefaultStatus_not: String
  contextDefaultStatus_contains: String
  contextDefaultStatus_not_contains: String
  contextDefaultStatus_starts_with: String
  contextDefaultStatus_not_starts_with: String
  contextDefaultStatus_ends_with: String
  contextDefaultStatus_not_ends_with: String
  contextDefaultStatus_i: String
  contextDefaultStatus_not_i: String
  contextDefaultStatus_contains_i: String
  contextDefaultStatus_not_contains_i: String
  contextDefaultStatus_starts_with_i: String
  contextDefaultStatus_not_starts_with_i: String
  contextDefaultStatus_ends_with_i: String
  contextDefaultStatus_not_ends_with_i: String
  contextDefaultStatus_in: [String]
  contextDefaultStatus_not_in: [String]
  category: String
  category_not: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  category_i: String
  category_not_i: String
  category_contains_i: String
  category_not_contains_i: String
  category_starts_with_i: String
  category_not_starts_with_i: String
  category_ends_with_i: String
  category_not_ends_with_i: String
  category_in: [String]
  category_not_in: [String]
  features: JSON
  features_not: JSON
  features_in: [JSON]
  features_not_in: [JSON]
  displayPriority: Int
  displayPriority_not: Int
  displayPriority_lt: Int
  displayPriority_lte: Int
  displayPriority_gt: Int
  displayPriority_gte: Int
  displayPriority_in: [Int]
  displayPriority_not_in: [Int]
  label: String
  label_not: String
  label_contains: String
  label_not_contains: String
  label_starts_with: String
  label_not_starts_with: String
  label_ends_with: String
  label_not_ends_with: String
  label_i: String
  label_not_i: String
  label_contains_i: String
  label_not_contains_i: String
  label_starts_with_i: String
  label_not_starts_with_i: String
  label_ends_with_i: String
  label_not_ends_with_i: String
  label_in: [String]
  label_not_in: [String]
  gallery: JSON
  gallery_not: JSON
  gallery_in: [JSON]
  gallery_not_in: [JSON]
  price: String
  price_not: String
  price_contains: String
  price_not_contains: String
  price_starts_with: String
  price_not_starts_with: String
  price_ends_with: String
  price_not_ends_with: String
  price_i: String
  price_not_i: String
  price_contains_i: String
  price_not_contains_i: String
  price_starts_with_i: String
  price_not_starts_with_i: String
  price_ends_with_i: String
  price_not_ends_with_i: String
  price_in: [String]
  price_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2BAppHistoryRecordHistoryActionType
  history_action_not: B2BAppHistoryRecordHistoryActionType
  history_action_in: [B2BAppHistoryRecordHistoryActionType]
  history_action_not_in: [B2BAppHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2BAppHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2BAppHistoryRecordsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  partnerUrl_ASC
  partnerUrl_DESC
  appUrl_ASC
  appUrl_DESC
  isHidden_ASC
  isHidden_DESC
  isGlobal_ASC
  isGlobal_DESC
  contextDefaultStatus_ASC
  contextDefaultStatus_DESC
  category_ASC
  category_DESC
  displayPriority_ASC
  displayPriority_DESC
  label_ASC
  label_DESC
  price_ASC
  price_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2BAppHistoryRecordUpdateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  isHidden: Boolean
  isGlobal: Boolean
  contextDefaultStatus: String
  category: String
  features: JSON
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppHistoryRecordsUpdateInput {
  id: ID!
  data: B2BAppHistoryRecordUpdateInput
}

input B2BAppHistoryRecordCreateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: JSON
  appUrl: String
  isHidden: Boolean
  isGlobal: Boolean
  contextDefaultStatus: String
  category: String
  features: JSON
  displayPriority: Int
  label: String
  gallery: JSON
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppHistoryRecordsCreateInput {
  data: B2BAppHistoryRecordCreateInput
}

input B2BAppAccessRightRelateToManyInput {
  create: [B2BAppAccessRightCreateInput]
  connect: [B2BAppAccessRightWhereUniqueInput]
  disconnect: [B2BAppAccessRightWhereUniqueInput]
  disconnectAll: Boolean
}

enum B2BAppGlobalFeature {
  PropertyMapGeneration
}

""" B2B app """
type B2BApp {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BApp List config, or
   2. As an alias to the field set on 'labelField' in the B2BApp List config, or
   3. As an alias to a 'name' field on the B2BApp List (if one exists), or
   4. As an alias to the 'id' field on the B2BApp List.
  """
  _label_: String

  """ Name of B2B App """
  name: String

  """ Logo of app's company or app itself """
  logo: File

  """ Short description / catch phrase providing information about integration functionality. Will be shown on App's card 
  """
  shortDescription: String

  """ Developer company name """
  developer: String

  """ Link to the website of the developer company, where the user can find out detailed information about the partner 
  """
  partnerUrl: String

  """ Text describing app functionality, connection process and pricing in full detail. Written in markdown without html tags. Will be shown on app's page 
  """
  detailedDescription: String

  """ Url to app page, which is the app starting point and will be opened in iframe 
  """
  appUrl: String

  """ Indicates whether the integration or app is hidden inside the CRM. Used if integration is active by default or not ready to appear inside CRM 
  """
  isHidden: Boolean

  """ Indicates whether the app is global or not. If so, then the application will be opened in hidden mode and receive various notifications from the condo. It's also possible to trigger some condo IFrame methods via global app outside of miniapps CRM section 
  """
  isGlobal: Boolean

  """ Status, which context will have by default after creation if no overwriting option provided 
  """
  contextDefaultStatus: String

  """ Category of app. Can be one of the following: ["DISPATCHING", "GIS", "SMART_HOME", "BUSINESS_DEVELOPMENT", "OTHER"] By default set to "OTHER" 
  """
  category: String

  """ Specifies set of service users, who can access app's contexts related as well as perform actions on behalf of the application 
  """
  accessRights(where: B2BAppAccessRightWhereInput, search: String, sortBy: [SortB2BAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): [B2BAppAccessRight!]!
  _accessRightsMeta(where: B2BAppAccessRightWhereInput, search: String, sortBy: [SortB2BAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ List of features that this global mini-app implements. Can be one or more of the following: [PropertyMapGeneration] 
  """
  features: [B2BAppGlobalFeature!]

  """ The number used to determine the position of the app among the others. App with higher priority appear earlier in "All" category, as well as in it's own category. Apps with the same priority are sorted from newest to oldest. The default value is 1. 
  """
  displayPriority: Int

  """ App can be marked with one of the following labels in order to visually stand out from other applications: [FREE, DISCOUNT, POPULAR, NEW] 
  """
  label: String

  """ Array containing links to promotional images, which will be shown to user on app's page 
  """
  gallery: [String!]

  """ String representing a base price of app. Usually it's something like "Free", "Individual", "$50 / year" 
  """
  price: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2BAppWhereInput {
  AND: [B2BAppWhereInput]
  OR: [B2BAppWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: String
  logo_not: String
  logo_in: [String]
  logo_not_in: [String]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  partnerUrl: String
  partnerUrl_not: String
  partnerUrl_contains: String
  partnerUrl_not_contains: String
  partnerUrl_starts_with: String
  partnerUrl_not_starts_with: String
  partnerUrl_ends_with: String
  partnerUrl_not_ends_with: String
  partnerUrl_i: String
  partnerUrl_not_i: String
  partnerUrl_contains_i: String
  partnerUrl_not_contains_i: String
  partnerUrl_starts_with_i: String
  partnerUrl_not_starts_with_i: String
  partnerUrl_ends_with_i: String
  partnerUrl_not_ends_with_i: String
  partnerUrl_in: [String]
  partnerUrl_not_in: [String]
  detailedDescription: String
  detailedDescription_not: String
  detailedDescription_contains: String
  detailedDescription_not_contains: String
  detailedDescription_starts_with: String
  detailedDescription_not_starts_with: String
  detailedDescription_ends_with: String
  detailedDescription_not_ends_with: String
  detailedDescription_i: String
  detailedDescription_not_i: String
  detailedDescription_contains_i: String
  detailedDescription_not_contains_i: String
  detailedDescription_starts_with_i: String
  detailedDescription_not_starts_with_i: String
  detailedDescription_ends_with_i: String
  detailedDescription_not_ends_with_i: String
  detailedDescription_in: [String]
  detailedDescription_not_in: [String]
  appUrl: String
  appUrl_not: String
  appUrl_contains: String
  appUrl_not_contains: String
  appUrl_starts_with: String
  appUrl_not_starts_with: String
  appUrl_ends_with: String
  appUrl_not_ends_with: String
  appUrl_i: String
  appUrl_not_i: String
  appUrl_contains_i: String
  appUrl_not_contains_i: String
  appUrl_starts_with_i: String
  appUrl_not_starts_with_i: String
  appUrl_ends_with_i: String
  appUrl_not_ends_with_i: String
  appUrl_in: [String]
  appUrl_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean
  isGlobal: Boolean
  isGlobal_not: Boolean
  contextDefaultStatus: String
  contextDefaultStatus_not: String
  contextDefaultStatus_in: [String]
  contextDefaultStatus_not_in: [String]
  category: String
  category_not: String
  category_in: [String]
  category_not_in: [String]

  """ condition must be true for all nodes """
  accessRights_every: B2BAppAccessRightWhereInput

  """ condition must be true for at least 1 node """
  accessRights_some: B2BAppAccessRightWhereInput

  """ condition must be false for all nodes """
  accessRights_none: B2BAppAccessRightWhereInput
  features: [B2BAppGlobalFeature!]
  features_not: [B2BAppGlobalFeature!]
  features_in: [[B2BAppGlobalFeature!]]
  features_not_in: [[B2BAppGlobalFeature!]]
  displayPriority: Int
  displayPriority_not: Int
  displayPriority_lt: Int
  displayPriority_lte: Int
  displayPriority_gt: Int
  displayPriority_gte: Int
  displayPriority_in: [Int]
  displayPriority_not_in: [Int]
  label: String
  label_not: String
  label_in: [String]
  label_not_in: [String]
  gallery: [String!]
  gallery_not: [String!]
  gallery_in: [[String!]]
  gallery_not_in: [[String!]]
  price: String
  price_not: String
  price_contains: String
  price_not_contains: String
  price_starts_with: String
  price_not_starts_with: String
  price_ends_with: String
  price_not_ends_with: String
  price_i: String
  price_not_i: String
  price_contains_i: String
  price_not_contains_i: String
  price_starts_with_i: String
  price_not_starts_with_i: String
  price_ends_with_i: String
  price_not_ends_with_i: String
  price_in: [String]
  price_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2BAppWhereUniqueInput {
  id: ID!
}

enum SortB2BAppsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  partnerUrl_ASC
  partnerUrl_DESC
  detailedDescription_ASC
  detailedDescription_DESC
  appUrl_ASC
  appUrl_DESC
  isHidden_ASC
  isHidden_DESC
  isGlobal_ASC
  isGlobal_DESC
  contextDefaultStatus_ASC
  contextDefaultStatus_DESC
  category_ASC
  category_DESC
  accessRights_ASC
  accessRights_DESC
  displayPriority_ASC
  displayPriority_DESC
  label_ASC
  label_DESC
  price_ASC
  price_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2BAppUpdateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: String
  appUrl: String
  isHidden: Boolean
  isGlobal: Boolean
  contextDefaultStatus: String
  category: String
  accessRights: B2BAppAccessRightRelateToManyInput
  features: [B2BAppGlobalFeature!]
  displayPriority: Int
  label: String
  gallery: [String!]
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppsUpdateInput {
  id: ID!
  data: B2BAppUpdateInput
}

input B2BAppCreateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  partnerUrl: String
  detailedDescription: String
  appUrl: String
  isHidden: Boolean
  isGlobal: Boolean
  contextDefaultStatus: String
  category: String
  accessRights: B2BAppAccessRightRelateToManyInput
  features: [B2BAppGlobalFeature!]
  displayPriority: Int
  label: String
  gallery: [String!]
  price: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppsCreateInput {
  data: B2BAppCreateInput
}

enum B2BAppContextHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2BAppContextHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppContextHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppContextHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2BAppContextHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppContextHistoryRecord List.
  """
  _label_: String
  app: String
  organization: String
  settings: JSON
  state: JSON
  status: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppContextHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppContextHistoryRecordWhereInput {
  AND: [B2BAppContextHistoryRecordWhereInput]
  OR: [B2BAppContextHistoryRecordWhereInput]
  app: String
  app_not: String
  app_in: [String]
  app_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  status: String
  status_not: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  status_i: String
  status_not_i: String
  status_contains_i: String
  status_not_contains_i: String
  status_starts_with_i: String
  status_not_starts_with_i: String
  status_ends_with_i: String
  status_not_ends_with_i: String
  status_in: [String]
  status_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2BAppContextHistoryRecordHistoryActionType
  history_action_not: B2BAppContextHistoryRecordHistoryActionType
  history_action_in: [B2BAppContextHistoryRecordHistoryActionType]
  history_action_not_in: [B2BAppContextHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2BAppContextHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2BAppContextHistoryRecordsBy {
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2BAppContextHistoryRecordUpdateInput {
  app: String
  organization: String
  settings: JSON
  state: JSON
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppContextHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppContextHistoryRecordsUpdateInput {
  id: ID!
  data: B2BAppContextHistoryRecordUpdateInput
}

input B2BAppContextHistoryRecordCreateInput {
  app: String
  organization: String
  settings: JSON
  state: JSON
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppContextHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppContextHistoryRecordsCreateInput {
  data: B2BAppContextHistoryRecordCreateInput
}

""" Object which connects B2B App and Organization. Used to determine if app is connected or not, and store settings / state of app for specific organization 
"""
type B2BAppContext {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppContext List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppContext List config, or
   3. As an alias to a 'name' field on the B2BAppContext List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppContext List.
  """
  _label_: String

  """ B2B App """
  app: B2BApp

  """ Organization """
  organization: Organization

  """ Settings that are required for specified app to work with specified organization. Filled by app's service account / support and can have any JSON structure 
  """
  settings: JSON

  """ State of B2B working progress with specified organization. Filled by app's service account and can have any JSON structure 
  """
  state: JSON

  """ Status of B2BApp connection, Can be one of the following: ["InProgress", "Error", "Finished"]. If not specified explicitly on creation, uses default value from related B2BApp model 
  """
  status: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2BAppContextWhereInput {
  AND: [B2BAppContextWhereInput]
  OR: [B2BAppContextWhereInput]
  app: B2BAppWhereInput
  app_is_null: Boolean
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  settings: JSON
  settings_not: JSON
  settings_in: [JSON]
  settings_not_in: [JSON]
  state: JSON
  state_not: JSON
  state_in: [JSON]
  state_not_in: [JSON]
  status: String
  status_not: String
  status_in: [String]
  status_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2BAppContextWhereUniqueInput {
  id: ID!
}

enum SortB2BAppContextsBy {
  app_ASC
  app_DESC
  organization_ASC
  organization_DESC
  status_ASC
  status_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2BAppContextUpdateInput {
  app: B2BAppRelateToOneInput
  organization: OrganizationRelateToOneInput
  settings: JSON
  state: JSON
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppContextsUpdateInput {
  id: ID!
  data: B2BAppContextUpdateInput
}

input B2BAppContextCreateInput {
  app: B2BAppRelateToOneInput
  organization: OrganizationRelateToOneInput
  settings: JSON
  state: JSON
  status: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppContextsCreateInput {
  data: B2BAppContextCreateInput
}

enum B2BAppAccessRightHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2BAppAccessRightHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppAccessRightHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppAccessRightHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2BAppAccessRightHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppAccessRightHistoryRecord List.
  """
  _label_: String
  user: String
  app: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppAccessRightHistoryRecordWhereInput {
  AND: [B2BAppAccessRightHistoryRecordWhereInput]
  OR: [B2BAppAccessRightHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  app: String
  app_not: String
  app_in: [String]
  app_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2BAppAccessRightHistoryRecordHistoryActionType
  history_action_not: B2BAppAccessRightHistoryRecordHistoryActionType
  history_action_in: [B2BAppAccessRightHistoryRecordHistoryActionType]
  history_action_not_in: [B2BAppAccessRightHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2BAppAccessRightHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2BAppAccessRightHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2BAppAccessRightHistoryRecordUpdateInput {
  user: String
  app: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppAccessRightHistoryRecordsUpdateInput {
  id: ID!
  data: B2BAppAccessRightHistoryRecordUpdateInput
}

input B2BAppAccessRightHistoryRecordCreateInput {
  user: String
  app: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppAccessRightHistoryRecordsCreateInput {
  data: B2BAppAccessRightHistoryRecordCreateInput
}

""" Link between service user and B2B App. The existence of this connection means that this user has the rights to perform actions on behalf of the integration 
"""
type B2BAppAccessRight {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppAccessRight List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppAccessRight List config, or
   3. As an alias to a 'name' field on the B2BAppAccessRight List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppAccessRight List.
  """
  _label_: String

  """ Link to user. Note, that user must be of "service" type """
  user: User

  """ Link to B2BApp.accessRights """
  app: B2BApp
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2BAppAccessRightWhereInput {
  AND: [B2BAppAccessRightWhereInput]
  OR: [B2BAppAccessRightWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  app: B2BAppWhereInput
  app_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2BAppAccessRightWhereUniqueInput {
  id: ID!
}

enum SortB2BAppAccessRightsBy {
  user_ASC
  user_DESC
  app_ASC
  app_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2BAppAccessRightUpdateInput {
  user: UserRelateToOneInput
  app: B2BAppRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppAccessRightsUpdateInput {
  id: ID!
  data: B2BAppAccessRightUpdateInput
}

input B2BAppAccessRightCreateInput {
  user: UserRelateToOneInput
  app: B2BAppRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppAccessRightsCreateInput {
  data: B2BAppAccessRightCreateInput
}

enum B2CAppHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2CAppHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2CAppHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppHistoryRecord List.
  """
  _label_: String
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  isHidden: Boolean
  colorSchema: JSON
  currentBuild: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppHistoryRecordWhereInput {
  AND: [B2CAppHistoryRecordWhereInput]
  OR: [B2CAppHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: JSON
  logo_not: JSON
  logo_in: [JSON]
  logo_not_in: [JSON]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean
  colorSchema: JSON
  colorSchema_not: JSON
  colorSchema_in: [JSON]
  colorSchema_not_in: [JSON]
  currentBuild: String
  currentBuild_not: String
  currentBuild_in: [String]
  currentBuild_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2CAppHistoryRecordHistoryActionType
  history_action_not: B2CAppHistoryRecordHistoryActionType
  history_action_in: [B2CAppHistoryRecordHistoryActionType]
  history_action_not_in: [B2CAppHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2CAppHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2CAppHistoryRecordsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  isHidden_ASC
  isHidden_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2CAppHistoryRecordUpdateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  isHidden: Boolean
  colorSchema: JSON
  currentBuild: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppHistoryRecordsUpdateInput {
  id: ID!
  data: B2CAppHistoryRecordUpdateInput
}

input B2CAppHistoryRecordCreateInput {
  name: String
  logo: JSON
  shortDescription: String
  developer: String
  isHidden: Boolean
  colorSchema: JSON
  currentBuild: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppHistoryRecordsCreateInput {
  data: B2CAppHistoryRecordCreateInput
}

type AppColorSchemaField {
  main: String!
  secondary: String!
}

input AppColorSchemaFieldInput {
  main: String!
  secondary: String!
}

input B2CAppBuildRelateToOneInput {
  create: B2CAppBuildCreateInput
  connect: B2CAppBuildWhereUniqueInput
  disconnect: B2CAppBuildWhereUniqueInput
  disconnectAll: Boolean
}

input B2CAppAccessRightRelateToManyInput {
  create: [B2CAppAccessRightCreateInput]
  connect: [B2CAppAccessRightWhereUniqueInput]
  disconnect: [B2CAppAccessRightWhereUniqueInput]
  disconnectAll: Boolean
}

""" B2C App """
type B2CApp {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CApp List config, or
   2. As an alias to the field set on 'labelField' in the B2CApp List config, or
   3. As an alias to a 'name' field on the B2CApp List (if one exists), or
   4. As an alias to the 'id' field on the B2CApp List.
  """
  _label_: String

  """ Name of B2C App """
  name: String

  """ Logo of app's company or app itself """
  logo: File

  """ Short description / catch phrase providing information about integration functionality. Will be shown on App's card 
  """
  shortDescription: String

  """ Developer company name """
  developer: String

  """ Indicates whether the integration or app is hidden inside the CRM. Used if integration is active by default or not ready to appear inside CRM 
  """
  isHidden: Boolean

  """ The color schema of the B2C application used to display it correctly. The main color is used for texts, icons etc. The secondary color is used for the background 
  """
  colorSchema: AppColorSchemaField

  """ Link to current active app build """
  currentBuild: B2CAppBuild

  """ Specifies set of service users, who can modify B2CAppProperties of the app as well as perform actions on behalf of the application 
  """
  accessRights(where: B2CAppAccessRightWhereInput, search: String, sortBy: [SortB2CAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): [B2CAppAccessRight!]!
  _accessRightsMeta(where: B2CAppAccessRightWhereInput, search: String, sortBy: [SortB2CAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2CAppWhereInput {
  AND: [B2CAppWhereInput]
  OR: [B2CAppWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  logo: String
  logo_not: String
  logo_in: [String]
  logo_not_in: [String]
  shortDescription: String
  shortDescription_not: String
  shortDescription_contains: String
  shortDescription_not_contains: String
  shortDescription_starts_with: String
  shortDescription_not_starts_with: String
  shortDescription_ends_with: String
  shortDescription_not_ends_with: String
  shortDescription_i: String
  shortDescription_not_i: String
  shortDescription_contains_i: String
  shortDescription_not_contains_i: String
  shortDescription_starts_with_i: String
  shortDescription_not_starts_with_i: String
  shortDescription_ends_with_i: String
  shortDescription_not_ends_with_i: String
  shortDescription_in: [String]
  shortDescription_not_in: [String]
  developer: String
  developer_not: String
  developer_contains: String
  developer_not_contains: String
  developer_starts_with: String
  developer_not_starts_with: String
  developer_ends_with: String
  developer_not_ends_with: String
  developer_i: String
  developer_not_i: String
  developer_contains_i: String
  developer_not_contains_i: String
  developer_starts_with_i: String
  developer_not_starts_with_i: String
  developer_ends_with_i: String
  developer_not_ends_with_i: String
  developer_in: [String]
  developer_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean
  colorSchema: AppColorSchemaFieldInput
  colorSchema_not: AppColorSchemaFieldInput
  colorSchema_in: [AppColorSchemaFieldInput]
  colorSchema_not_in: [AppColorSchemaFieldInput]
  currentBuild: B2CAppBuildWhereInput
  currentBuild_is_null: Boolean

  """ condition must be true for all nodes """
  accessRights_every: B2CAppAccessRightWhereInput

  """ condition must be true for at least 1 node """
  accessRights_some: B2CAppAccessRightWhereInput

  """ condition must be false for all nodes """
  accessRights_none: B2CAppAccessRightWhereInput
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2CAppWhereUniqueInput {
  id: ID!
}

enum SortB2CAppsBy {
  name_ASC
  name_DESC
  shortDescription_ASC
  shortDescription_DESC
  developer_ASC
  developer_DESC
  isHidden_ASC
  isHidden_DESC
  currentBuild_ASC
  currentBuild_DESC
  accessRights_ASC
  accessRights_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2CAppUpdateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  isHidden: Boolean
  colorSchema: AppColorSchemaFieldInput
  currentBuild: B2CAppBuildRelateToOneInput
  accessRights: B2CAppAccessRightRelateToManyInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppsUpdateInput {
  id: ID!
  data: B2CAppUpdateInput
}

input B2CAppCreateInput {
  name: String
  logo: Upload
  shortDescription: String
  developer: String
  isHidden: Boolean
  colorSchema: AppColorSchemaFieldInput
  currentBuild: B2CAppBuildRelateToOneInput
  accessRights: B2CAppAccessRightRelateToManyInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppsCreateInput {
  data: B2CAppCreateInput
}

enum B2CAppAccessRightHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2CAppAccessRightHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppAccessRightHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppAccessRightHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2CAppAccessRightHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppAccessRightHistoryRecord List.
  """
  _label_: String
  user: String
  app: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppAccessRightHistoryRecordWhereInput {
  AND: [B2CAppAccessRightHistoryRecordWhereInput]
  OR: [B2CAppAccessRightHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  app: String
  app_not: String
  app_in: [String]
  app_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2CAppAccessRightHistoryRecordHistoryActionType
  history_action_not: B2CAppAccessRightHistoryRecordHistoryActionType
  history_action_in: [B2CAppAccessRightHistoryRecordHistoryActionType]
  history_action_not_in: [B2CAppAccessRightHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2CAppAccessRightHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2CAppAccessRightHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2CAppAccessRightHistoryRecordUpdateInput {
  user: String
  app: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppAccessRightHistoryRecordsUpdateInput {
  id: ID!
  data: B2CAppAccessRightHistoryRecordUpdateInput
}

input B2CAppAccessRightHistoryRecordCreateInput {
  user: String
  app: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppAccessRightHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppAccessRightHistoryRecordsCreateInput {
  data: B2CAppAccessRightHistoryRecordCreateInput
}

""" Link between service user and B2C App. The existence of this connection means that this user has the rights to perform actions on behalf of the integration and modify some B2CApp-related models 
"""
type B2CAppAccessRight {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppAccessRight List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppAccessRight List config, or
   3. As an alias to a 'name' field on the B2CAppAccessRight List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppAccessRight List.
  """
  _label_: String

  """ Link to user. Note, that user must be of "service" type """
  user: User

  """ Link to B2BApp.accessRights """
  app: B2CApp
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2CAppAccessRightWhereInput {
  AND: [B2CAppAccessRightWhereInput]
  OR: [B2CAppAccessRightWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  app: B2CAppWhereInput
  app_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2CAppAccessRightWhereUniqueInput {
  id: ID!
}

enum SortB2CAppAccessRightsBy {
  user_ASC
  user_DESC
  app_ASC
  app_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2CAppAccessRightUpdateInput {
  user: UserRelateToOneInput
  app: B2CAppRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppAccessRightsUpdateInput {
  id: ID!
  data: B2CAppAccessRightUpdateInput
}

input B2CAppAccessRightCreateInput {
  user: UserRelateToOneInput
  app: B2CAppRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppAccessRightsCreateInput {
  data: B2CAppAccessRightCreateInput
}

enum B2CAppBuildHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2CAppBuildHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppBuildHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppBuildHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2CAppBuildHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppBuildHistoryRecord List.
  """
  _label_: String
  app: String
  version: String
  data: JSON
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppBuildHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppBuildHistoryRecordWhereInput {
  AND: [B2CAppBuildHistoryRecordWhereInput]
  OR: [B2CAppBuildHistoryRecordWhereInput]
  app: String
  app_not: String
  app_in: [String]
  app_not_in: [String]
  version: String
  version_not: String
  version_contains: String
  version_not_contains: String
  version_starts_with: String
  version_not_starts_with: String
  version_ends_with: String
  version_not_ends_with: String
  version_i: String
  version_not_i: String
  version_contains_i: String
  version_not_contains_i: String
  version_starts_with_i: String
  version_not_starts_with_i: String
  version_ends_with_i: String
  version_not_ends_with_i: String
  version_in: [String]
  version_not_in: [String]
  data: JSON
  data_not: JSON
  data_in: [JSON]
  data_not_in: [JSON]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2CAppBuildHistoryRecordHistoryActionType
  history_action_not: B2CAppBuildHistoryRecordHistoryActionType
  history_action_in: [B2CAppBuildHistoryRecordHistoryActionType]
  history_action_not_in: [B2CAppBuildHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2CAppBuildHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2CAppBuildHistoryRecordsBy {
  version_ASC
  version_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2CAppBuildHistoryRecordUpdateInput {
  app: String
  version: String
  data: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppBuildHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppBuildHistoryRecordsUpdateInput {
  id: ID!
  data: B2CAppBuildHistoryRecordUpdateInput
}

input B2CAppBuildHistoryRecordCreateInput {
  app: String
  version: String
  data: JSON
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppBuildHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppBuildHistoryRecordsCreateInput {
  data: B2CAppBuildHistoryRecordCreateInput
}

""" Cordova build of B2C Application """
type B2CAppBuild {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppBuild List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppBuild List config, or
   3. As an alias to a 'name' field on the B2CAppBuild List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppBuild List.
  """
  _label_: String

  """ Link to B2C application """
  app: B2CApp

  """ Version of build which used to control builds inside B2CApp model """
  version: String

  """ B2C app cordova build compressed to single .zip file """
  data: File
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2CAppBuildWhereInput {
  AND: [B2CAppBuildWhereInput]
  OR: [B2CAppBuildWhereInput]
  app: B2CAppWhereInput
  app_is_null: Boolean
  version: String
  version_not: String
  version_contains: String
  version_not_contains: String
  version_starts_with: String
  version_not_starts_with: String
  version_ends_with: String
  version_not_ends_with: String
  version_i: String
  version_not_i: String
  version_contains_i: String
  version_not_contains_i: String
  version_starts_with_i: String
  version_not_starts_with_i: String
  version_ends_with_i: String
  version_not_ends_with_i: String
  version_in: [String]
  version_not_in: [String]
  data: String
  data_not: String
  data_in: [String]
  data_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2CAppBuildWhereUniqueInput {
  id: ID!
}

enum SortB2CAppBuildsBy {
  app_ASC
  app_DESC
  version_ASC
  version_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2CAppBuildUpdateInput {
  app: B2CAppRelateToOneInput
  version: String
  data: Upload
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppBuildsUpdateInput {
  id: ID!
  data: B2CAppBuildUpdateInput
}

input B2CAppBuildCreateInput {
  app: B2CAppRelateToOneInput
  version: String
  data: Upload
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppBuildsCreateInput {
  data: B2CAppBuildCreateInput
}

enum B2CAppPropertyHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2CAppPropertyHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppPropertyHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppPropertyHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2CAppPropertyHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppPropertyHistoryRecord List.
  """
  _label_: String
  app: String
  address: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppPropertyHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppPropertyHistoryRecordWhereInput {
  AND: [B2CAppPropertyHistoryRecordWhereInput]
  OR: [B2CAppPropertyHistoryRecordWhereInput]
  app: String
  app_not: String
  app_in: [String]
  app_not_in: [String]
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2CAppPropertyHistoryRecordHistoryActionType
  history_action_not: B2CAppPropertyHistoryRecordHistoryActionType
  history_action_in: [B2CAppPropertyHistoryRecordHistoryActionType]
  history_action_not_in: [B2CAppPropertyHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2CAppPropertyHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2CAppPropertyHistoryRecordsBy {
  address_ASC
  address_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2CAppPropertyHistoryRecordUpdateInput {
  app: String
  address: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppPropertyHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppPropertyHistoryRecordsUpdateInput {
  id: ID!
  data: B2CAppPropertyHistoryRecordUpdateInput
}

input B2CAppPropertyHistoryRecordCreateInput {
  app: String
  address: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2CAppPropertyHistoryRecordHistoryActionType
  history_id: String
}

input B2CAppPropertyHistoryRecordsCreateInput {
  data: B2CAppPropertyHistoryRecordCreateInput
}

""" Link between specific home address and B2C App. used to filter B2C applications that can be run on a specific address 
"""
type B2CAppProperty {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2CAppProperty List config, or
   2. As an alias to the field set on 'labelField' in the B2CAppProperty List config, or
   3. As an alias to a 'name' field on the B2CAppProperty List (if one exists), or
   4. As an alias to the 'id' field on the B2CAppProperty List.
  """
  _label_: String

  """ Link to B2C App """
  app: B2CApp

  """ Property address. Must match the address lookup service with case accuracy 
  """
  address: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2CAppPropertyWhereInput {
  AND: [B2CAppPropertyWhereInput]
  OR: [B2CAppPropertyWhereInput]
  app: B2CAppWhereInput
  app_is_null: Boolean
  address: String
  address_not: String
  address_contains: String
  address_not_contains: String
  address_starts_with: String
  address_not_starts_with: String
  address_ends_with: String
  address_not_ends_with: String
  address_i: String
  address_not_i: String
  address_contains_i: String
  address_not_contains_i: String
  address_starts_with_i: String
  address_not_starts_with_i: String
  address_ends_with_i: String
  address_not_ends_with_i: String
  address_in: [String]
  address_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2CAppPropertyWhereUniqueInput {
  id: ID!
}

enum SortB2CAppPropertiesBy {
  app_ASC
  app_DESC
  address_ASC
  address_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2CAppPropertyUpdateInput {
  app: B2CAppRelateToOneInput
  address: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppPropertiesUpdateInput {
  id: ID!
  data: B2CAppPropertyUpdateInput
}

input B2CAppPropertyCreateInput {
  app: B2CAppRelateToOneInput
  address: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2CAppPropertiesCreateInput {
  data: B2CAppPropertyCreateInput
}

enum B2BAppPromoBlockHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type B2BAppPromoBlockHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppPromoBlockHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppPromoBlockHistoryRecord List config, or
   3. As an alias to a 'name' field on the B2BAppPromoBlockHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppPromoBlockHistoryRecord List.
  """
  _label_: String
  title: String
  subtitle: String
  textVariant: String
  backgroundColor: String
  backgroundImage: JSON
  targetUrl: String
  external: Boolean
  priority: Int
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppPromoBlockHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppPromoBlockHistoryRecordWhereInput {
  AND: [B2BAppPromoBlockHistoryRecordWhereInput]
  OR: [B2BAppPromoBlockHistoryRecordWhereInput]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  subtitle: String
  subtitle_not: String
  subtitle_contains: String
  subtitle_not_contains: String
  subtitle_starts_with: String
  subtitle_not_starts_with: String
  subtitle_ends_with: String
  subtitle_not_ends_with: String
  subtitle_i: String
  subtitle_not_i: String
  subtitle_contains_i: String
  subtitle_not_contains_i: String
  subtitle_starts_with_i: String
  subtitle_not_starts_with_i: String
  subtitle_ends_with_i: String
  subtitle_not_ends_with_i: String
  subtitle_in: [String]
  subtitle_not_in: [String]
  textVariant: String
  textVariant_not: String
  textVariant_contains: String
  textVariant_not_contains: String
  textVariant_starts_with: String
  textVariant_not_starts_with: String
  textVariant_ends_with: String
  textVariant_not_ends_with: String
  textVariant_i: String
  textVariant_not_i: String
  textVariant_contains_i: String
  textVariant_not_contains_i: String
  textVariant_starts_with_i: String
  textVariant_not_starts_with_i: String
  textVariant_ends_with_i: String
  textVariant_not_ends_with_i: String
  textVariant_in: [String]
  textVariant_not_in: [String]
  backgroundColor: String
  backgroundColor_not: String
  backgroundColor_contains: String
  backgroundColor_not_contains: String
  backgroundColor_starts_with: String
  backgroundColor_not_starts_with: String
  backgroundColor_ends_with: String
  backgroundColor_not_ends_with: String
  backgroundColor_i: String
  backgroundColor_not_i: String
  backgroundColor_contains_i: String
  backgroundColor_not_contains_i: String
  backgroundColor_starts_with_i: String
  backgroundColor_not_starts_with_i: String
  backgroundColor_ends_with_i: String
  backgroundColor_not_ends_with_i: String
  backgroundColor_in: [String]
  backgroundColor_not_in: [String]
  backgroundImage: JSON
  backgroundImage_not: JSON
  backgroundImage_in: [JSON]
  backgroundImage_not_in: [JSON]
  targetUrl: String
  targetUrl_not: String
  targetUrl_contains: String
  targetUrl_not_contains: String
  targetUrl_starts_with: String
  targetUrl_not_starts_with: String
  targetUrl_ends_with: String
  targetUrl_not_ends_with: String
  targetUrl_i: String
  targetUrl_not_i: String
  targetUrl_contains_i: String
  targetUrl_not_contains_i: String
  targetUrl_starts_with_i: String
  targetUrl_not_starts_with_i: String
  targetUrl_ends_with_i: String
  targetUrl_not_ends_with_i: String
  targetUrl_in: [String]
  targetUrl_not_in: [String]
  external: Boolean
  external_not: Boolean
  priority: Int
  priority_not: Int
  priority_lt: Int
  priority_lte: Int
  priority_gt: Int
  priority_gte: Int
  priority_in: [Int]
  priority_not_in: [Int]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: B2BAppPromoBlockHistoryRecordHistoryActionType
  history_action_not: B2BAppPromoBlockHistoryRecordHistoryActionType
  history_action_in: [B2BAppPromoBlockHistoryRecordHistoryActionType]
  history_action_not_in: [B2BAppPromoBlockHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input B2BAppPromoBlockHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortB2BAppPromoBlockHistoryRecordsBy {
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  textVariant_ASC
  textVariant_DESC
  backgroundColor_ASC
  backgroundColor_DESC
  targetUrl_ASC
  targetUrl_DESC
  external_ASC
  external_DESC
  priority_ASC
  priority_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input B2BAppPromoBlockHistoryRecordUpdateInput {
  title: String
  subtitle: String
  textVariant: String
  backgroundColor: String
  backgroundImage: JSON
  targetUrl: String
  external: Boolean
  priority: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppPromoBlockHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppPromoBlockHistoryRecordsUpdateInput {
  id: ID!
  data: B2BAppPromoBlockHistoryRecordUpdateInput
}

input B2BAppPromoBlockHistoryRecordCreateInput {
  title: String
  subtitle: String
  textVariant: String
  backgroundColor: String
  backgroundImage: JSON
  targetUrl: String
  external: Boolean
  priority: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: B2BAppPromoBlockHistoryRecordHistoryActionType
  history_id: String
}

input B2BAppPromoBlockHistoryRecordsCreateInput {
  data: B2BAppPromoBlockHistoryRecordCreateInput
}

enum B2BAppPromoBlockTextVariantType {
  BLACK
  WHITE
}

""" Promotion banner which appears in "Miniapps" section of CRM. Used to promote B2BApps, discounts, collaborations and so on 
"""
type B2BAppPromoBlock {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the B2BAppPromoBlock List config, or
   2. As an alias to the field set on 'labelField' in the B2BAppPromoBlock List config, or
   3. As an alias to a 'name' field on the B2BAppPromoBlock List (if one exists), or
   4. As an alias to the 'id' field on the B2BAppPromoBlock List.
  """
  _label_: String

  """ Title of promotion banner. Main catch phrase is placed here. Must contain no more than 27 characters per line (including spaces) and no more than 2 lines in total. 
  """
  title: String

  """ Secondary text of promotion banner. Some additional info goes here. Must contain no more than 40 characters per line (including spaces) and no more than 2 lines in total. 
  """
  subtitle: String

  """ Variant of texts inside block. Can be one of the following: [BLACK, WHITE] 
  """
  textVariant: B2BAppPromoBlockTextVariantType

  """ Background color of promo block. Can be hex code or linear gradient. """
  backgroundColor: String

  """ PNG image which appears next to text on large devices """
  backgroundImage: File

  """ Link to the resource that this B2BAppPromoBlock promotes """
  targetUrl: String

  """ Determines whether the banner leads to an external resource or not. If external, interaction with block will lead to new tab. Otherwise user will stay in current tab 
  """
  external: Boolean

  """ The number used to determine the position of the block among the others. Blocks with higher priority appear earlier. Blocks with the same priority are sorted from newest to oldest. The default value is 1. 
  """
  priority: Int
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input B2BAppPromoBlockWhereInput {
  AND: [B2BAppPromoBlockWhereInput]
  OR: [B2BAppPromoBlockWhereInput]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  subtitle: String
  subtitle_not: String
  subtitle_contains: String
  subtitle_not_contains: String
  subtitle_starts_with: String
  subtitle_not_starts_with: String
  subtitle_ends_with: String
  subtitle_not_ends_with: String
  subtitle_i: String
  subtitle_not_i: String
  subtitle_contains_i: String
  subtitle_not_contains_i: String
  subtitle_starts_with_i: String
  subtitle_not_starts_with_i: String
  subtitle_ends_with_i: String
  subtitle_not_ends_with_i: String
  subtitle_in: [String]
  subtitle_not_in: [String]
  textVariant: B2BAppPromoBlockTextVariantType
  textVariant_not: B2BAppPromoBlockTextVariantType
  textVariant_in: [B2BAppPromoBlockTextVariantType]
  textVariant_not_in: [B2BAppPromoBlockTextVariantType]
  backgroundColor: String
  backgroundColor_not: String
  backgroundColor_contains: String
  backgroundColor_not_contains: String
  backgroundColor_starts_with: String
  backgroundColor_not_starts_with: String
  backgroundColor_ends_with: String
  backgroundColor_not_ends_with: String
  backgroundColor_i: String
  backgroundColor_not_i: String
  backgroundColor_contains_i: String
  backgroundColor_not_contains_i: String
  backgroundColor_starts_with_i: String
  backgroundColor_not_starts_with_i: String
  backgroundColor_ends_with_i: String
  backgroundColor_not_ends_with_i: String
  backgroundColor_in: [String]
  backgroundColor_not_in: [String]
  backgroundImage: String
  backgroundImage_not: String
  backgroundImage_in: [String]
  backgroundImage_not_in: [String]
  targetUrl: String
  targetUrl_not: String
  targetUrl_contains: String
  targetUrl_not_contains: String
  targetUrl_starts_with: String
  targetUrl_not_starts_with: String
  targetUrl_ends_with: String
  targetUrl_not_ends_with: String
  targetUrl_i: String
  targetUrl_not_i: String
  targetUrl_contains_i: String
  targetUrl_not_contains_i: String
  targetUrl_starts_with_i: String
  targetUrl_not_starts_with_i: String
  targetUrl_ends_with_i: String
  targetUrl_not_ends_with_i: String
  targetUrl_in: [String]
  targetUrl_not_in: [String]
  external: Boolean
  external_not: Boolean
  priority: Int
  priority_not: Int
  priority_lt: Int
  priority_lte: Int
  priority_gt: Int
  priority_gte: Int
  priority_in: [Int]
  priority_not_in: [Int]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input B2BAppPromoBlockWhereUniqueInput {
  id: ID!
}

enum SortB2BAppPromoBlocksBy {
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  textVariant_ASC
  textVariant_DESC
  backgroundColor_ASC
  backgroundColor_DESC
  targetUrl_ASC
  targetUrl_DESC
  external_ASC
  external_DESC
  priority_ASC
  priority_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input B2BAppPromoBlockUpdateInput {
  title: String
  subtitle: String
  textVariant: B2BAppPromoBlockTextVariantType
  backgroundColor: String
  backgroundImage: Upload
  targetUrl: String
  external: Boolean
  priority: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppPromoBlocksUpdateInput {
  id: ID!
  data: B2BAppPromoBlockUpdateInput
}

input B2BAppPromoBlockCreateInput {
  title: String
  subtitle: String
  textVariant: B2BAppPromoBlockTextVariantType
  backgroundColor: String
  backgroundImage: Upload
  targetUrl: String
  external: Boolean
  priority: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input B2BAppPromoBlocksCreateInput {
  data: B2BAppPromoBlockCreateInput
}

enum ExternalReportHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type ExternalReportHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ExternalReportHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the ExternalReportHistoryRecord List config, or
   3. As an alias to a 'name' field on the ExternalReportHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the ExternalReportHistoryRecord List.
  """
  _label_: String
  type: String
  title: String
  description: String
  meta: JSON
  organization: String
  isHidden: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ExternalReportHistoryRecordHistoryActionType
  history_id: String
}

input ExternalReportHistoryRecordWhereInput {
  AND: [ExternalReportHistoryRecordWhereInput]
  OR: [ExternalReportHistoryRecordWhereInput]
  type: String
  type_not: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  type_i: String
  type_not_i: String
  type_contains_i: String
  type_not_contains_i: String
  type_starts_with_i: String
  type_not_starts_with_i: String
  type_ends_with_i: String
  type_not_ends_with_i: String
  type_in: [String]
  type_not_in: [String]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  isHidden: Boolean
  isHidden_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: ExternalReportHistoryRecordHistoryActionType
  history_action_not: ExternalReportHistoryRecordHistoryActionType
  history_action_in: [ExternalReportHistoryRecordHistoryActionType]
  history_action_not_in: [ExternalReportHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input ExternalReportHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortExternalReportHistoryRecordsBy {
  type_ASC
  type_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  isHidden_ASC
  isHidden_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input ExternalReportHistoryRecordUpdateInput {
  type: String
  title: String
  description: String
  meta: JSON
  organization: String
  isHidden: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ExternalReportHistoryRecordHistoryActionType
  history_id: String
}

input ExternalReportHistoryRecordsUpdateInput {
  id: ID!
  data: ExternalReportHistoryRecordUpdateInput
}

input ExternalReportHistoryRecordCreateInput {
  type: String
  title: String
  description: String
  meta: JSON
  organization: String
  isHidden: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: ExternalReportHistoryRecordHistoryActionType
  history_id: String
}

input ExternalReportHistoryRecordsCreateInput {
  data: ExternalReportHistoryRecordCreateInput
}

enum ExternalReportTypeType {
  metabase
}

""" External report for analytics section that could be displayed with iframe 
"""
type ExternalReport {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the ExternalReport List config, or
   2. As an alias to the field set on 'labelField' in the ExternalReport List config, or
   3. As an alias to a 'name' field on the ExternalReport List (if one exists), or
   4. As an alias to the 'id' field on the ExternalReport List.
  """
  _label_: String

  """ Type of external report. Way to determine logic of url building process 
  """
  type: ExternalReportTypeType

  """ Report card title text """
  title: String

  """ Report card description """
  description: String

  """ Meta data for building iframe link. For example, external id or custom options that required at specified type of report 
  """
  meta: JSON

  """ Ref to the organization. If this ref is null the object is common for all organizations 
  """
  organization: Organization

  """ Indicates visibility of concrete external report at ui """
  isHidden: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input ExternalReportWhereInput {
  AND: [ExternalReportWhereInput]
  OR: [ExternalReportWhereInput]
  type: ExternalReportTypeType
  type_not: ExternalReportTypeType
  type_in: [ExternalReportTypeType]
  type_not_in: [ExternalReportTypeType]
  title: String
  title_not: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  title_i: String
  title_not_i: String
  title_contains_i: String
  title_not_contains_i: String
  title_starts_with_i: String
  title_not_starts_with_i: String
  title_ends_with_i: String
  title_not_ends_with_i: String
  title_in: [String]
  title_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  meta: JSON
  meta_not: JSON
  meta_in: [JSON]
  meta_not_in: [JSON]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  isHidden: Boolean
  isHidden_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input ExternalReportWhereUniqueInput {
  id: ID!
}

enum SortExternalReportsBy {
  type_ASC
  type_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  organization_ASC
  organization_DESC
  isHidden_ASC
  isHidden_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input ExternalReportUpdateInput {
  type: ExternalReportTypeType
  title: String
  description: String
  meta: JSON
  organization: OrganizationRelateToOneInput
  isHidden: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ExternalReportsUpdateInput {
  id: ID!
  data: ExternalReportUpdateInput
}

input ExternalReportCreateInput {
  type: ExternalReportTypeType
  title: String
  description: String
  meta: JSON
  organization: OrganizationRelateToOneInput
  isHidden: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input ExternalReportsCreateInput {
  data: ExternalReportCreateInput
}

enum PropertyScopeHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type PropertyScopeHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyScopeHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the PropertyScopeHistoryRecord List config, or
   3. As an alias to a 'name' field on the PropertyScopeHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the PropertyScopeHistoryRecord List.
  """
  _label_: String
  name: String
  organization: String
  hasAllProperties: Boolean
  hasAllEmployees: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopeHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopeHistoryRecordWhereInput {
  AND: [PropertyScopeHistoryRecordWhereInput]
  OR: [PropertyScopeHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  organization: String
  organization_not: String
  organization_in: [String]
  organization_not_in: [String]
  hasAllProperties: Boolean
  hasAllProperties_not: Boolean
  hasAllEmployees: Boolean
  hasAllEmployees_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: PropertyScopeHistoryRecordHistoryActionType
  history_action_not: PropertyScopeHistoryRecordHistoryActionType
  history_action_in: [PropertyScopeHistoryRecordHistoryActionType]
  history_action_not_in: [PropertyScopeHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input PropertyScopeHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortPropertyScopeHistoryRecordsBy {
  name_ASC
  name_DESC
  hasAllProperties_ASC
  hasAllProperties_DESC
  hasAllEmployees_ASC
  hasAllEmployees_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input PropertyScopeHistoryRecordUpdateInput {
  name: String
  organization: String
  hasAllProperties: Boolean
  hasAllEmployees: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopeHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopeHistoryRecordsUpdateInput {
  id: ID!
  data: PropertyScopeHistoryRecordUpdateInput
}

input PropertyScopeHistoryRecordCreateInput {
  name: String
  organization: String
  hasAllProperties: Boolean
  hasAllEmployees: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopeHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopeHistoryRecordsCreateInput {
  data: PropertyScopeHistoryRecordCreateInput
}

""" A set of properties that limits the visibility of the organization's objects to the specified employees 
"""
type PropertyScope {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyScope List config, or
   2. As an alias to the field set on 'labelField' in the PropertyScope List config, or
   3. As an alias to a 'name' field on the PropertyScope List (if one exists), or
   4. As an alias to the 'id' field on the PropertyScope List.
  """
  _label_: String

  """ The name of the zone that limits the visibility of employees by properties 
  """
  name: String
  nameNonLocalized: String

  """ Ref to the organization. The object will be deleted if the organization ceases to exist 
  """
  organization: Organization

  """ True if PropertyScope includes all properties in organization """
  hasAllProperties: Boolean

  """ True if PropertyScope includes all employees in organization """
  hasAllEmployees: Boolean
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input PropertyScopeWhereInput {
  AND: [PropertyScopeWhereInput]
  OR: [PropertyScopeWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  organization: OrganizationWhereInput
  organization_is_null: Boolean
  hasAllProperties: Boolean
  hasAllProperties_not: Boolean
  hasAllEmployees: Boolean
  hasAllEmployees_not: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input PropertyScopeWhereUniqueInput {
  id: ID!
}

enum SortPropertyScopesBy {
  name_ASC
  name_DESC
  organization_ASC
  organization_DESC
  hasAllProperties_ASC
  hasAllProperties_DESC
  hasAllEmployees_ASC
  hasAllEmployees_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input PropertyScopeUpdateInput {
  name: String
  organization: OrganizationRelateToOneInput
  hasAllProperties: Boolean
  hasAllEmployees: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertyScopesUpdateInput {
  id: ID!
  data: PropertyScopeUpdateInput
}

input PropertyScopeCreateInput {
  name: String
  organization: OrganizationRelateToOneInput
  hasAllProperties: Boolean
  hasAllEmployees: Boolean
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertyScopesCreateInput {
  data: PropertyScopeCreateInput
}

enum PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type PropertyScopeOrganizationEmployeeHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyScopeOrganizationEmployeeHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the PropertyScopeOrganizationEmployeeHistoryRecord List config, or
   3. As an alias to a 'name' field on the PropertyScopeOrganizationEmployeeHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the PropertyScopeOrganizationEmployeeHistoryRecord List.
  """
  _label_: String
  propertyScope: String
  employee: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopeOrganizationEmployeeHistoryRecordWhereInput {
  AND: [PropertyScopeOrganizationEmployeeHistoryRecordWhereInput]
  OR: [PropertyScopeOrganizationEmployeeHistoryRecordWhereInput]
  propertyScope: String
  propertyScope_not: String
  propertyScope_in: [String]
  propertyScope_not_in: [String]
  employee: String
  employee_not: String
  employee_in: [String]
  employee_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType
  history_action_not: PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType
  history_action_in: [PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType]
  history_action_not_in: [PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input PropertyScopeOrganizationEmployeeHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortPropertyScopeOrganizationEmployeeHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input PropertyScopeOrganizationEmployeeHistoryRecordUpdateInput {
  propertyScope: String
  employee: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopeOrganizationEmployeeHistoryRecordsUpdateInput {
  id: ID!
  data: PropertyScopeOrganizationEmployeeHistoryRecordUpdateInput
}

input PropertyScopeOrganizationEmployeeHistoryRecordCreateInput {
  propertyScope: String
  employee: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopeOrganizationEmployeeHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopeOrganizationEmployeeHistoryRecordsCreateInput {
  data: PropertyScopeOrganizationEmployeeHistoryRecordCreateInput
}

input PropertyScopeRelateToOneInput {
  create: PropertyScopeCreateInput
  connect: PropertyScopeWhereUniqueInput
  disconnect: PropertyScopeWhereUniqueInput
  disconnectAll: Boolean
}

""" Many-to-many relationship between PropertyScope and OrganizationEmployee 
"""
type PropertyScopeOrganizationEmployee {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyScopeOrganizationEmployee List config, or
   2. As an alias to the field set on 'labelField' in the PropertyScopeOrganizationEmployee List config, or
   3. As an alias to a 'name' field on the PropertyScopeOrganizationEmployee List (if one exists), or
   4. As an alias to the 'id' field on the PropertyScopeOrganizationEmployee List.
  """
  _label_: String

  """ Property scope which has an employee """
  propertyScope: PropertyScope

  """ An employee who is in the property scope """
  employee: OrganizationEmployee
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input PropertyScopeOrganizationEmployeeWhereInput {
  AND: [PropertyScopeOrganizationEmployeeWhereInput]
  OR: [PropertyScopeOrganizationEmployeeWhereInput]
  propertyScope: PropertyScopeWhereInput
  propertyScope_is_null: Boolean
  employee: OrganizationEmployeeWhereInput
  employee_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input PropertyScopeOrganizationEmployeeWhereUniqueInput {
  id: ID!
}

enum SortPropertyScopeOrganizationEmployeesBy {
  propertyScope_ASC
  propertyScope_DESC
  employee_ASC
  employee_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input PropertyScopeOrganizationEmployeeUpdateInput {
  propertyScope: PropertyScopeRelateToOneInput
  employee: OrganizationEmployeeRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertyScopeOrganizationEmployeesUpdateInput {
  id: ID!
  data: PropertyScopeOrganizationEmployeeUpdateInput
}

input PropertyScopeOrganizationEmployeeCreateInput {
  propertyScope: PropertyScopeRelateToOneInput
  employee: OrganizationEmployeeRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertyScopeOrganizationEmployeesCreateInput {
  data: PropertyScopeOrganizationEmployeeCreateInput
}

enum PropertyScopePropertyHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type PropertyScopePropertyHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyScopePropertyHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the PropertyScopePropertyHistoryRecord List config, or
   3. As an alias to a 'name' field on the PropertyScopePropertyHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the PropertyScopePropertyHistoryRecord List.
  """
  _label_: String
  propertyScope: String
  property: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopePropertyHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopePropertyHistoryRecordWhereInput {
  AND: [PropertyScopePropertyHistoryRecordWhereInput]
  OR: [PropertyScopePropertyHistoryRecordWhereInput]
  propertyScope: String
  propertyScope_not: String
  propertyScope_in: [String]
  propertyScope_not_in: [String]
  property: String
  property_not: String
  property_in: [String]
  property_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: PropertyScopePropertyHistoryRecordHistoryActionType
  history_action_not: PropertyScopePropertyHistoryRecordHistoryActionType
  history_action_in: [PropertyScopePropertyHistoryRecordHistoryActionType]
  history_action_not_in: [PropertyScopePropertyHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input PropertyScopePropertyHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortPropertyScopePropertyHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input PropertyScopePropertyHistoryRecordUpdateInput {
  propertyScope: String
  property: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopePropertyHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopePropertyHistoryRecordsUpdateInput {
  id: ID!
  data: PropertyScopePropertyHistoryRecordUpdateInput
}

input PropertyScopePropertyHistoryRecordCreateInput {
  propertyScope: String
  property: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: PropertyScopePropertyHistoryRecordHistoryActionType
  history_id: String
}

input PropertyScopePropertyHistoryRecordsCreateInput {
  data: PropertyScopePropertyHistoryRecordCreateInput
}

""" Many-to-many relationship between PropertyScope and Property """
type PropertyScopeProperty {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the PropertyScopeProperty List config, or
   2. As an alias to the field set on 'labelField' in the PropertyScopeProperty List config, or
   3. As an alias to a 'name' field on the PropertyScopeProperty List (if one exists), or
   4. As an alias to the 'id' field on the PropertyScopeProperty List.
  """
  _label_: String

  """ Property scope which has a property """
  propertyScope: PropertyScope

  """ A property which is in the property scope """
  property: Property
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input PropertyScopePropertyWhereInput {
  AND: [PropertyScopePropertyWhereInput]
  OR: [PropertyScopePropertyWhereInput]
  propertyScope: PropertyScopeWhereInput
  propertyScope_is_null: Boolean
  property: PropertyWhereInput
  property_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input PropertyScopePropertyWhereUniqueInput {
  id: ID!
}

enum SortPropertyScopePropertiesBy {
  propertyScope_ASC
  propertyScope_DESC
  property_ASC
  property_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input PropertyScopePropertyUpdateInput {
  propertyScope: PropertyScopeRelateToOneInput
  property: PropertyRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertyScopePropertiesUpdateInput {
  id: ID!
  data: PropertyScopePropertyUpdateInput
}

input PropertyScopePropertyCreateInput {
  propertyScope: PropertyScopeRelateToOneInput
  property: PropertyRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input PropertyScopePropertiesCreateInput {
  data: PropertyScopePropertyCreateInput
}

enum AssigneeScopeHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type AssigneeScopeHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AssigneeScopeHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the AssigneeScopeHistoryRecord List config, or
   3. As an alias to a 'name' field on the AssigneeScopeHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the AssigneeScopeHistoryRecord List.
  """
  _label_: String
  user: String
  ticket: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AssigneeScopeHistoryRecordHistoryActionType
  history_id: String
}

input AssigneeScopeHistoryRecordWhereInput {
  AND: [AssigneeScopeHistoryRecordWhereInput]
  OR: [AssigneeScopeHistoryRecordWhereInput]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  ticket: String
  ticket_not: String
  ticket_in: [String]
  ticket_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: AssigneeScopeHistoryRecordHistoryActionType
  history_action_not: AssigneeScopeHistoryRecordHistoryActionType
  history_action_in: [AssigneeScopeHistoryRecordHistoryActionType]
  history_action_not_in: [AssigneeScopeHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input AssigneeScopeHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortAssigneeScopeHistoryRecordsBy {
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input AssigneeScopeHistoryRecordUpdateInput {
  user: String
  ticket: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AssigneeScopeHistoryRecordHistoryActionType
  history_id: String
}

input AssigneeScopeHistoryRecordsUpdateInput {
  id: ID!
  data: AssigneeScopeHistoryRecordUpdateInput
}

input AssigneeScopeHistoryRecordCreateInput {
  user: String
  ticket: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: AssigneeScopeHistoryRecordHistoryActionType
  history_id: String
}

input AssigneeScopeHistoryRecordsCreateInput {
  data: AssigneeScopeHistoryRecordCreateInput
}

"""
 Ticket where user is assignee or executor.
Records are updated automatically: if the user has been assigned to the ticket, an entry appears.
If the user was removed from the assignment to the ticket, the record is marked deletedAt.
It is used to track the availability of the ticket for viewing in the technician mobile application. 
"""
type AssigneeScope {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the AssigneeScope List config, or
   2. As an alias to the field set on 'labelField' in the AssigneeScope List config, or
   3. As an alias to a 'name' field on the AssigneeScope List (if one exists), or
   4. As an alias to the 'id' field on the AssigneeScope List.
  """
  _label_: String

  """ The user who is assigned to the ticket """
  user: User

  """ The ticket in which the user is assigned as executor or assignee """
  ticket: Ticket
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input AssigneeScopeWhereInput {
  AND: [AssigneeScopeWhereInput]
  OR: [AssigneeScopeWhereInput]
  user: UserWhereInput
  user_is_null: Boolean
  ticket: TicketWhereInput
  ticket_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input AssigneeScopeWhereUniqueInput {
  id: ID!
}

enum SortAssigneeScopesBy {
  user_ASC
  user_DESC
  ticket_ASC
  ticket_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input AssigneeScopeUpdateInput {
  user: UserRelateToOneInput
  ticket: TicketRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AssigneeScopesUpdateInput {
  id: ID!
  data: AssigneeScopeUpdateInput
}

input AssigneeScopeCreateInput {
  user: UserRelateToOneInput
  ticket: TicketRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input AssigneeScopesCreateInput {
  data: AssigneeScopeCreateInput
}

enum WebhookHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type WebhookHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the WebhookHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the WebhookHistoryRecord List config, or
   3. As an alias to a 'name' field on the WebhookHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the WebhookHistoryRecord List.
  """
  _label_: String
  name: String
  description: String
  url: String
  user: String
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: WebhookHistoryRecordHistoryActionType
  history_id: String
}

input WebhookHistoryRecordWhereInput {
  AND: [WebhookHistoryRecordWhereInput]
  OR: [WebhookHistoryRecordWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  url: String
  url_not: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  url_i: String
  url_not_i: String
  url_contains_i: String
  url_not_contains_i: String
  url_starts_with_i: String
  url_not_starts_with_i: String
  url_ends_with_i: String
  url_not_ends_with_i: String
  url_in: [String]
  url_not_in: [String]
  user: String
  user_not: String
  user_in: [String]
  user_not_in: [String]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: WebhookHistoryRecordHistoryActionType
  history_action_not: WebhookHistoryRecordHistoryActionType
  history_action_in: [WebhookHistoryRecordHistoryActionType]
  history_action_not_in: [WebhookHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input WebhookHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortWebhookHistoryRecordsBy {
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input WebhookHistoryRecordUpdateInput {
  name: String
  description: String
  url: String
  user: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: WebhookHistoryRecordHistoryActionType
  history_id: String
}

input WebhookHistoryRecordsUpdateInput {
  id: ID!
  data: WebhookHistoryRecordUpdateInput
}

input WebhookHistoryRecordCreateInput {
  name: String
  description: String
  url: String
  user: String
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: WebhookHistoryRecordHistoryActionType
  history_id: String
}

input WebhookHistoryRecordsCreateInput {
  data: WebhookHistoryRecordCreateInput
}

""" Webhooks are a way that the APP can send automated web callback with some messages to other apps or system to inform them about any updates. How does it work: 1. When objects are created or changed, we make requests to the GraphQL API to get data on behalf of the specified user; 2. Then we send the data to remote url. Webhook model contains basic configuration of integration, such as external server url, name, encryption parameters and so on. 
"""
type Webhook {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the Webhook List config, or
   2. As an alias to the field set on 'labelField' in the Webhook List config, or
   3. As an alias to a 'name' field on the Webhook List (if one exists), or
   4. As an alias to the 'id' field on the Webhook List.
  """
  _label_: String

  """ Short name used to distinguish this hook from others. Usually it's the name of the integration 
  """
  name: String

  """ Any other details that reveal the purpose of this hook """
  description: String

  """ Webhook target URL to which requests will be sent """
  url: String

  """ The user on whose behalf a request is being made to the GraphQL API to prepare webhook data 
  """
  user: User
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input WebhookWhereInput {
  AND: [WebhookWhereInput]
  OR: [WebhookWhereInput]
  name: String
  name_not: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  name_i: String
  name_not_i: String
  name_contains_i: String
  name_not_contains_i: String
  name_starts_with_i: String
  name_not_starts_with_i: String
  name_ends_with_i: String
  name_not_ends_with_i: String
  name_in: [String]
  name_not_in: [String]
  description: String
  description_not: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  description_i: String
  description_not_i: String
  description_contains_i: String
  description_not_contains_i: String
  description_starts_with_i: String
  description_not_starts_with_i: String
  description_ends_with_i: String
  description_not_ends_with_i: String
  description_in: [String]
  description_not_in: [String]
  url: String
  url_not: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  url_i: String
  url_not_i: String
  url_contains_i: String
  url_not_contains_i: String
  url_starts_with_i: String
  url_not_starts_with_i: String
  url_ends_with_i: String
  url_not_ends_with_i: String
  url_in: [String]
  url_not_in: [String]
  user: UserWhereInput
  user_is_null: Boolean
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input WebhookWhereUniqueInput {
  id: ID!
}

enum SortWebhooksBy {
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  user_ASC
  user_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input WebhookUpdateInput {
  name: String
  description: String
  url: String
  user: UserRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input WebhooksUpdateInput {
  id: ID!
  data: WebhookUpdateInput
}

input WebhookCreateInput {
  name: String
  description: String
  url: String
  user: UserRelateToOneInput
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input WebhooksCreateInput {
  data: WebhookCreateInput
}

enum WebhookSubscriptionHistoryRecordHistoryActionType {
  c
  u
  d
}

""" A keystone list """
type WebhookSubscriptionHistoryRecord {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the WebhookSubscriptionHistoryRecord List config, or
   2. As an alias to the field set on 'labelField' in the WebhookSubscriptionHistoryRecord List config, or
   3. As an alias to a 'name' field on the WebhookSubscriptionHistoryRecord List (if one exists), or
   4. As an alias to the 'id' field on the WebhookSubscriptionHistoryRecord List.
  """
  _label_: String
  webhook: String
  url: String
  syncedAt: String
  syncedAmount: Int
  failuresCount: Int
  model: String
  fields: String
  filters: JSON
  maxPackSize: Int
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: WebhookSubscriptionHistoryRecordHistoryActionType
  history_id: String
}

input WebhookSubscriptionHistoryRecordWhereInput {
  AND: [WebhookSubscriptionHistoryRecordWhereInput]
  OR: [WebhookSubscriptionHistoryRecordWhereInput]
  webhook: String
  webhook_not: String
  webhook_in: [String]
  webhook_not_in: [String]
  url: String
  url_not: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  url_i: String
  url_not_i: String
  url_contains_i: String
  url_not_contains_i: String
  url_starts_with_i: String
  url_not_starts_with_i: String
  url_ends_with_i: String
  url_not_ends_with_i: String
  url_in: [String]
  url_not_in: [String]
  syncedAt: String
  syncedAt_not: String
  syncedAt_lt: String
  syncedAt_lte: String
  syncedAt_gt: String
  syncedAt_gte: String
  syncedAt_in: [String]
  syncedAt_not_in: [String]
  syncedAmount: Int
  syncedAmount_not: Int
  syncedAmount_lt: Int
  syncedAmount_lte: Int
  syncedAmount_gt: Int
  syncedAmount_gte: Int
  syncedAmount_in: [Int]
  syncedAmount_not_in: [Int]
  failuresCount: Int
  failuresCount_not: Int
  failuresCount_lt: Int
  failuresCount_lte: Int
  failuresCount_gt: Int
  failuresCount_gte: Int
  failuresCount_in: [Int]
  failuresCount_not_in: [Int]
  model: String
  model_not: String
  model_contains: String
  model_not_contains: String
  model_starts_with: String
  model_not_starts_with: String
  model_ends_with: String
  model_not_ends_with: String
  model_i: String
  model_not_i: String
  model_contains_i: String
  model_not_contains_i: String
  model_starts_with_i: String
  model_not_starts_with_i: String
  model_ends_with_i: String
  model_not_ends_with_i: String
  model_in: [String]
  model_not_in: [String]
  fields: String
  fields_not: String
  fields_contains: String
  fields_not_contains: String
  fields_starts_with: String
  fields_not_starts_with: String
  fields_ends_with: String
  fields_not_ends_with: String
  fields_i: String
  fields_not_i: String
  fields_contains_i: String
  fields_not_contains_i: String
  fields_starts_with_i: String
  fields_not_starts_with_i: String
  fields_ends_with_i: String
  fields_not_ends_with_i: String
  fields_in: [String]
  fields_not_in: [String]
  filters: JSON
  filters_not: JSON
  filters_in: [JSON]
  filters_not_in: [JSON]
  maxPackSize: Int
  maxPackSize_not: Int
  maxPackSize_lt: Int
  maxPackSize_lte: Int
  maxPackSize_gt: Int
  maxPackSize_gte: Int
  maxPackSize_in: [Int]
  maxPackSize_not_in: [Int]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: String
  createdBy_not: String
  createdBy_in: [String]
  createdBy_not_in: [String]
  updatedBy: String
  updatedBy_not: String
  updatedBy_in: [String]
  updatedBy_not_in: [String]
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: JSON
  newId_not: JSON
  newId_in: [JSON]
  newId_not_in: [JSON]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: JSON
  sender_not: JSON
  sender_in: [JSON]
  sender_not_in: [JSON]
  history_date: String
  history_date_not: String
  history_date_lt: String
  history_date_lte: String
  history_date_gt: String
  history_date_gte: String
  history_date_in: [String]
  history_date_not_in: [String]
  history_action: WebhookSubscriptionHistoryRecordHistoryActionType
  history_action_not: WebhookSubscriptionHistoryRecordHistoryActionType
  history_action_in: [WebhookSubscriptionHistoryRecordHistoryActionType]
  history_action_not_in: [WebhookSubscriptionHistoryRecordHistoryActionType]
  history_id: String
  history_id_not: String
  history_id_in: [String]
  history_id_not_in: [String]
}

input WebhookSubscriptionHistoryRecordWhereUniqueInput {
  id: ID!
}

enum SortWebhookSubscriptionHistoryRecordsBy {
  url_ASC
  url_DESC
  syncedAt_ASC
  syncedAt_DESC
  syncedAmount_ASC
  syncedAmount_DESC
  failuresCount_ASC
  failuresCount_DESC
  model_ASC
  model_DESC
  fields_ASC
  fields_DESC
  maxPackSize_ASC
  maxPackSize_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
  history_date_ASC
  history_date_DESC
  history_action_ASC
  history_action_DESC
}

input WebhookSubscriptionHistoryRecordUpdateInput {
  webhook: String
  url: String
  syncedAt: String
  syncedAmount: Int
  failuresCount: Int
  model: String
  fields: String
  filters: JSON
  maxPackSize: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: WebhookSubscriptionHistoryRecordHistoryActionType
  history_id: String
}

input WebhookSubscriptionHistoryRecordsUpdateInput {
  id: ID!
  data: WebhookSubscriptionHistoryRecordUpdateInput
}

input WebhookSubscriptionHistoryRecordCreateInput {
  webhook: String
  url: String
  syncedAt: String
  syncedAmount: Int
  failuresCount: Int
  model: String
  fields: String
  filters: JSON
  maxPackSize: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: String
  updatedBy: String
  deletedAt: String
  newId: JSON
  dv: Int
  sender: JSON
  history_date: String
  history_action: WebhookSubscriptionHistoryRecordHistoryActionType
  history_id: String
}

input WebhookSubscriptionHistoryRecordsCreateInput {
  data: WebhookSubscriptionHistoryRecordCreateInput
}

input WebhookRelateToOneInput {
  create: WebhookCreateInput
  connect: WebhookWhereUniqueInput
  disconnect: WebhookWhereUniqueInput
  disconnectAll: Boolean
}

""" Determines which models the WebHook will be subscribed to. When model changes subscription task will be triggered to resolve changed data and send a webhook 
"""
type WebhookSubscription {
  """
  This virtual field will be resolved in one of the following ways (in this order):
   1. Execution of 'labelResolver' set on the WebhookSubscription List config, or
   2. As an alias to the field set on 'labelField' in the WebhookSubscription List config, or
   3. As an alias to a 'name' field on the WebhookSubscription List (if one exists), or
   4. As an alias to the 'id' field on the WebhookSubscription List.
  """
  _label_: String

  """ Link to a webhook containing information about integration """
  webhook: Webhook

  """ Webhook target URL to which requests will be sent. Overrides url from webhook relation. Used in case when you need to send specific model to a separate url 
  """
  url: String

  """ The time was the data was last synced. At the next synchronization, only objects that have changed since that time will be sent. 
  """
  syncedAt: String

  """ The number of objects successfully delivered by webhooks. On successful synchronization, the syncedAt field is updated and syncedAmount becomes 0. If the remote server fails, syncedAt will not be updated, and syncedAmount will increment to the number of successfully delivered objects. 
  """
  syncedAmount: Int

  """ The number of consecutive failures to send webhooks to a remote server. Field value is automatically incremented when the specified url is unavailable or the server response was not ok, but no more than once per hour. Field value is automatically reset to 0 when the remote server is successfully reached (syncedAt or syncedAmount changed), or can be manually reset by support. As soon as the counter reaches the value 10, which is interpreted as the unavailability of the external service for at least 10 hours, the webhook will stop being sent to this url. In this case, you will need to manually reset the counter via support to resume sending. 
  """
  failuresCount: Int

  """ The data model (schema) that the webhook is subscribed to """
  model: String

  """ String representing list of model fields in graphql-query format. Exactly the fields specified here will be sent by the webhook. Correct examples: "field1 field2 { subfield }", "{ field1 relation { subfield } }" 
  """
  fields: String

  """ Filters which is stored in JSON and used to filter models sent by the webhook. Examples of filters can be found in ModelWhereInput GQL type, where Model is name of your model 
  """
  filters: JSON

  """ The maximum number of objects that the server can send in one request. The default is 100, and maxPackSize cannot be set beyond this value. In most cases, you do not need to override this field, but it is recommended to lower this value for requests with a large number of related fields or in case of external restrictions of the server accepting webhooks. 
  """
  maxPackSize: Int
  id: ID!
  v: Int
  createdAt: String
  updatedAt: String

  """ Identifies a user, which has created this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  createdBy: User

  """ Identifies a user, which has updated this record. It is a technical connection, that can represent real users, as well as automated systems (bots, scripts). This field should not participate in business logic. 
  """
  updatedBy: User
  deletedAt: String
  newId: String

  """ Data structure Version """
  dv: Int

  """ Client-side device identification used for the anti-fraud detection. Example `{ dv: 1, fingerprint: 'VaxSw2aXZa'}`. Where the `fingerprint` should be the same for the same devices and it's not linked to the user ID. It's the device ID like browser / mobile application / remote system 
  """
  sender: SenderField
}

input WebhookSubscriptionWhereInput {
  AND: [WebhookSubscriptionWhereInput]
  OR: [WebhookSubscriptionWhereInput]
  webhook: WebhookWhereInput
  webhook_is_null: Boolean
  url: String
  url_not: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  url_i: String
  url_not_i: String
  url_contains_i: String
  url_not_contains_i: String
  url_starts_with_i: String
  url_not_starts_with_i: String
  url_ends_with_i: String
  url_not_ends_with_i: String
  url_in: [String]
  url_not_in: [String]
  syncedAt: String
  syncedAt_not: String
  syncedAt_lt: String
  syncedAt_lte: String
  syncedAt_gt: String
  syncedAt_gte: String
  syncedAt_in: [String]
  syncedAt_not_in: [String]
  syncedAmount: Int
  syncedAmount_not: Int
  syncedAmount_lt: Int
  syncedAmount_lte: Int
  syncedAmount_gt: Int
  syncedAmount_gte: Int
  syncedAmount_in: [Int]
  syncedAmount_not_in: [Int]
  failuresCount: Int
  failuresCount_not: Int
  failuresCount_lt: Int
  failuresCount_lte: Int
  failuresCount_gt: Int
  failuresCount_gte: Int
  failuresCount_in: [Int]
  failuresCount_not_in: [Int]
  model: String
  model_not: String
  model_in: [String]
  model_not_in: [String]
  fields: String
  fields_not: String
  fields_contains: String
  fields_not_contains: String
  fields_starts_with: String
  fields_not_starts_with: String
  fields_ends_with: String
  fields_not_ends_with: String
  fields_i: String
  fields_not_i: String
  fields_contains_i: String
  fields_not_contains_i: String
  fields_starts_with_i: String
  fields_not_starts_with_i: String
  fields_ends_with_i: String
  fields_not_ends_with_i: String
  fields_in: [String]
  fields_not_in: [String]
  filters: JSON
  filters_not: JSON
  filters_in: [JSON]
  filters_not_in: [JSON]
  maxPackSize: Int
  maxPackSize_not: Int
  maxPackSize_lt: Int
  maxPackSize_lte: Int
  maxPackSize_gt: Int
  maxPackSize_gte: Int
  maxPackSize_in: [Int]
  maxPackSize_not_in: [Int]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  v: Int
  v_not: Int
  v_lt: Int
  v_lte: Int
  v_gt: Int
  v_gte: Int
  v_in: [Int]
  v_not_in: [Int]
  createdAt: String
  createdAt_not: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdAt_in: [String]
  createdAt_not_in: [String]
  updatedAt: String
  updatedAt_not: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedAt_in: [String]
  updatedAt_not_in: [String]
  createdBy: UserWhereInput
  createdBy_is_null: Boolean
  updatedBy: UserWhereInput
  updatedBy_is_null: Boolean
  deletedAt: String
  deletedAt_not: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedAt_in: [String]
  deletedAt_not_in: [String]
  newId: String
  newId_not: String
  newId_in: [String]
  newId_not_in: [String]
  dv: Int
  dv_not: Int
  dv_lt: Int
  dv_lte: Int
  dv_gt: Int
  dv_gte: Int
  dv_in: [Int]
  dv_not_in: [Int]
  sender: SenderFieldInput
  sender_not: SenderFieldInput
  sender_in: [SenderFieldInput]
  sender_not_in: [SenderFieldInput]
}

input WebhookSubscriptionWhereUniqueInput {
  id: ID!
}

enum SortWebhookSubscriptionsBy {
  webhook_ASC
  webhook_DESC
  url_ASC
  url_DESC
  syncedAt_ASC
  syncedAt_DESC
  syncedAmount_ASC
  syncedAmount_DESC
  failuresCount_ASC
  failuresCount_DESC
  model_ASC
  model_DESC
  fields_ASC
  fields_DESC
  maxPackSize_ASC
  maxPackSize_DESC
  id_ASC
  id_DESC
  v_ASC
  v_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
  deletedAt_ASC
  deletedAt_DESC
  dv_ASC
  dv_DESC
}

input WebhookSubscriptionUpdateInput {
  webhook: WebhookRelateToOneInput
  url: String
  syncedAt: String
  syncedAmount: Int
  failuresCount: Int
  model: String
  fields: String
  filters: JSON
  maxPackSize: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input WebhookSubscriptionsUpdateInput {
  id: ID!
  data: WebhookSubscriptionUpdateInput
}

input WebhookSubscriptionCreateInput {
  webhook: WebhookRelateToOneInput
  url: String
  syncedAt: String
  syncedAmount: Int
  failuresCount: Int
  model: String
  fields: String
  filters: JSON
  maxPackSize: Int
  v: Int
  createdAt: String
  updatedAt: String
  createdBy: UserRelateToOneInput
  updatedBy: UserRelateToOneInput
  deletedAt: String
  newId: String
  dv: Int
  sender: SenderFieldInput
}

input WebhookSubscriptionsCreateInput {
  data: WebhookSubscriptionCreateInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type _ListAccess {
  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'create' operations.
  NOTE: 'create' can only return a Boolean.
  It is not possible to specify a declarative Where clause for this
  operation
  """
  create: Boolean

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'read' operations.
  """
  read: JSON

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'update' operations.
  """
  update: JSON

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'delete' operations.
  """
  delete: JSON

  """
  Access Control settings for the currently logged in (or anonymous)
  user when performing 'auth' operations.
  """
  auth: JSON
}

type _ListQueries {
  """Single-item query name"""
  item: String

  """All-items query name"""
  list: String

  """List metadata query name"""
  meta: String
}

type _ListMutations {
  """Create mutation name"""
  create: String

  """Create many mutation name"""
  createMany: String

  """Update mutation name"""
  update: String

  """Update many mutation name"""
  updateMany: String

  """Delete mutation name"""
  delete: String

  """Delete many mutation name"""
  deleteMany: String
}

type _ListInputTypes {
  """Input type for matching multiple items"""
  whereInput: String

  """Input type for matching a unique item"""
  whereUniqueInput: String

  """Create mutation input type name"""
  createInput: String

  """Create many mutation input type name"""
  createManyInput: String

  """Update mutation name input"""
  updateInput: String

  """Update many mutation name input"""
  updateManyInput: String
}

type _ListSchemaFields {
  """The path of the field in its list"""
  path: String

  """The name of the field in its list"""
  name: String @deprecated(reason: "Use `path` instead")

  """The field type (ie, Checkbox, Text, etc)"""
  type: String
}

type _ListSchemaRelatedFields {
  """The typename as used in GraphQL queries"""
  type: String

  """A list of GraphQL field names"""
  fields: [String]
}

type _ListSchema {
  """The typename as used in GraphQL queries"""
  type: String

  """
  Top level GraphQL query names which either return this type, or
  provide aggregate information about this type
  """
  queries: _ListQueries

  """Top-level GraphQL mutation names"""
  mutations: _ListMutations

  """Top-level GraphQL input types"""
  inputTypes: _ListInputTypes

  """Information about fields defined on this list"""
  fields(where: _ListSchemaFieldsInput): [_ListSchemaFields]

  """
  Information about fields on other types which return this type, or
  provide aggregate information about this type
  """
  relatedFields: [_ListSchemaRelatedFields]
}

type _ListMeta {
  """The Keystone list key"""
  key: String

  """The Keystone List name"""
  name: String @deprecated(reason: "Use `key` instead")

  """The list's user-facing description"""
  description: String

  """The list's display name in the Admin UI"""
  label: String

  """The list's singular display name"""
  singular: String

  """The list's plural display name"""
  plural: String

  """The list's data path"""
  path: String

  """Access control configuration for the currently authenticated request"""
  access: _ListAccess

  """Information on the generated GraphQL schema"""
  schema: _ListSchema
}

type _QueryMeta {
  count: Int
}

input _ksListsMetaInput {
  key: String

  """Whether this is an auxiliary helper list"""
  auxiliary: Boolean
}

input _ListSchemaFieldsInput {
  type: String
}

input RegisterNewUserInput {
  dv: Int!
  sender: SenderFieldInput!
  name: String!
  password: String!
  confirmPhoneActionToken: String
  email: String
  phone: String
  meta: JSON
}

input AuthenticateUserWithPhoneAndPasswordInput {
  phone: String!
  password: String!
}

type AuthenticateUserWithPhoneAndPasswordOutput {
  item: User
  token: String!
}

input CheckPasswordRecoveryTokenInput {
  token: String!
}

type CheckPasswordRecoveryTokenOutput {
  status: String!
}

input StartPasswordRecoveryInput {
  phone: String!
  sender: SenderFieldInput!
  dv: Int!
}

type StartPasswordRecoveryOutput {
  status: String!
}

input ChangePasswordWithTokenInput {
  token: String!
  password: String!
  sender: SenderFieldInput!
  dv: Int!
}

type ChangePasswordWithTokenOutput {
  status: String!
  phone: String!
}

input GetPhoneByConfirmPhoneActionTokenInput {
  token: String!
  captcha: String!
}

type GetPhoneByConfirmPhoneActionTokenOutput {
  phone: String!
  isPhoneVerified: Boolean!
}

input StartConfirmPhoneActionInput {
  dv: Int!
  sender: SenderFieldInput!
  captcha: String!
  phone: String!
}

type StartConfirmPhoneActionOutput {
  token: String!
}

input ResendConfirmPhoneActionSmsInput {
  dv: Int!
  sender: SenderFieldInput!
  captcha: String!
  token: String!
}

type ResendConfirmPhoneActionSmsOutput {
  status: String!
}

input CompleteConfirmPhoneActionInput {
  dv: Int!
  sender: SenderFieldInput!
  captcha: String!
  token: String!
  smsCode: Int!
}

type CompleteConfirmPhoneActionOutput {
  status: String!
}

input SigninResidentUserInput {
  dv: Int!
  sender: SenderFieldInput!
  token: String!
}

type SigninResidentUserOutput {
  user: User
  token: String!
}

input ChangePhoneNumberResidentUserInput {
  dv: Int!
  sender: SenderFieldInput!
  token: String!
}

type ChangePhoneNumberResidentUserOutput {
  status: String!
}

input SigninAsUserInput {
  dv: Int!
  sender: SenderFieldInput!
  id: ID!
}

type SigninAsUserOutput {
  user: User
  token: String!
}

input RegisterNewServiceUserInput {
  dv: Int!
  sender: SenderFieldInput!
  name: String!
  email: String!
  meta: JSON
}

type RegisterNewServiceUserOutput {
  id: ID!
  email: String!
  password: String!
}

enum SendMessageToSupportLang {
  ru
  en
}

input SendMessageToSupportInput {
  dv: Int!
  sender: SenderFieldInput!
  text: String!
  emailFrom: String
  attachments: [Upload]
  os: String!
  appVersion: String!
  lang: SendMessageToSupportLang!
  meta: JSON!
}

type SendMessageToSupportOutput {
  id: String!
  status: String!
}

input ResetUserInput {
  dv: Int!
  sender: SenderFieldInput!
  user: UserWhereUniqueInput!
}

type ResetUserOutput {
  status: String!
}

input RegisterNewOrganizationInput {
  dv: Int!
  sender: SenderFieldInput!
  country: String!
  name: String!
  tin: String!
  description: String
  meta: JSON!
  avatar: Upload
}

input InviteNewOrganizationEmployeeInput {
  dv: Int!
  sender: SenderFieldInput!
  organization: OrganizationWhereUniqueInput!
  email: String
  phone: String!
  name: String
  role: OrganizationEmployeeRoleWhereUniqueInput!
  position: String
  specializations: [TicketCategoryClassifierWhereUniqueInput]
  hasAllSpecializations: Boolean
}

input ReInviteOrganizationEmployeeInput {
  dv: Int!
  sender: SenderFieldInput!
  organization: OrganizationWhereUniqueInput!
  email: String
  phone: String!
}

input AcceptOrRejectOrganizationInviteInput {
  dv: Int!
  sender: SenderFieldInput!
  isRejected: Boolean
  isAccepted: Boolean
}

input CheckPropertyWithAddressExistInput {
  address: String!
  addressMeta: AddressMetaFieldInput!
}

type CheckPropertyWithAddressExistOutput {
  isFound: Boolean!
}

input ExportPropertiesToExcelInput {
  where: PropertyWhereInput!
  sortBy: [SortPropertiesBy!]
}

type ExportPropertiesToExcelOutput {
  status: String!
  linkToFile: String!
}

input ResidentBillingReceiptWhereInput {
  AND: [ResidentBillingReceiptWhereInput]
  OR: [ResidentBillingReceiptWhereInput]
  id: ID
  id_not: ID
  id_in: [ID]
  id_not_in: [ID]
  period: String
  period_not: String
  period_contains: String
  period_not_contains: String
  period_starts_with: String
  period_not_starts_with: String
  period_ends_with: String
  period_not_ends_with: String
  period_i: String
  period_not_i: String
  period_contains_i: String
  period_not_contains_i: String
  period_starts_with_i: String
  period_not_starts_with_i: String
  period_ends_with_i: String
  period_not_ends_with_i: String
  toPay: String
  toPay_not: String
  toPay_contains: String
  toPay_not_contains: String
  toPay_starts_with: String
  toPay_not_starts_with: String
  toPay_ends_with: String
  toPay_not_ends_with: String
  toPay_i: String
  toPay_not_i: String
  toPay_contains_i: String
  toPay_not_contains_i: String
  toPay_starts_with_i: String
  toPay_not_starts_with_i: String
  toPay_ends_with_i: String
  toPay_not_ends_with_i: String
  printableNumber: String
  printableNumber_not: String
  printableNumber_contains: String
  printableNumber_not_contains: String
  printableNumber_starts_with: String
  printableNumber_not_starts_with: String
  printableNumber_ends_with: String
  printableNumber_not_ends_with: String
  printableNumber_i: String
  printableNumber_not_i: String
  printableNumber_contains_i: String
  printableNumber_not_contains_i: String
  printableNumber_starts_with_i: String
  printableNumber_not_starts_with_i: String
  printableNumber_ends_with_i: String
  printableNumber_not_ends_with_i: String
  serviceConsumer: ServiceConsumerWhereInput
  serviceConsumer_is_null: Boolean
}

enum SortResidentBillingReceiptsBy {
  id_ASC
  id_DESC
  period_ASC
  period_DESC
  toPay_ASC
  toPay_DESC
  printableNumber_ASC
  printableNumber_DESC
  serviceConsumer_ASC
  serviceConsumer_DESC
}

type ResidentBillingReceiptOutput {
  dv: String!
  recipient: BillingReceiptsRecipientField!
  id: ID!
  period: String!
  toPay: String!
  paid: String!
  explicitFee: String!
  printableNumber: String
  toPayDetails: BillingReceiptToPayDetailsField
  services: [BillingReceiptServiceField!]
  serviceConsumer: ServiceConsumer!
  currencyCode: String!
  category: BillingCategory!
  isPayable: Boolean!
}

input RegisterBillingReceiptInput {
  importId: String!
  address: String!
  normalizedAddress: String
  accountNumber: String!
  unitName: String!
  unitType: String!
  fullName: String
  toPay: String!
  toPayDetails: BillingReceiptServiceToPayDetailsFieldInput
  services: [BillingReceiptServiceFieldInput]
  month: Int!
  year: Int!
  category: BillingCategoryWhereUniqueInput!
  tin: String!
  routingNumber: String!
  bankAccount: String!
  tinMeta: JSON
  routingNumberMeta: JSON
  raw: JSON
}

input RegisterBillingReceiptsInput {
  dv: Int!
  sender: SenderFieldInput!
  context: BillingIntegrationOrganizationContextWhereUniqueInput
  receipts: [RegisterBillingReceiptInput!]!
}

input CreateBankAccountRequestInput {
  dv: Int!
  sender: JSON!
  organizationId: ID!
  propertyId: ID!
}

type CreateBankAccountRequestOutput {
  status: String!
  id: ID!
}

input ShareTicketInput {
  sender: SenderFieldInput!
  employees: [ID!]!
  ticketId: ID!
}

type ShareTicketOutput {
  status: String!
}

input PredictTicketClassificationInput {
  details: String!
}

input ExportIncidentsToExcelInput {
  dv: Int!
  sender: SenderFieldInput!
  where: IncidentWhereInput!
  sortBy: [SortIncidentsBy!]
  timeZone: String
}

type ExportIncidentsToExcelOutput {
  status: String!
  linkToFile: String!
}

enum SendMessageLang {
  ru
  en
}

input SendMessageToInput {
  user: UserWhereUniqueInput
  email: String
  phone: String
  remoteClient: RemoteClientWhereInput
}

enum SendMessageType {
  INVITE_NEW_EMPLOYEE
  DIRTY_INVITE_NEW_EMPLOYEE_SMS
  DIRTY_INVITE_NEW_EMPLOYEE_EMAIL
  REGISTER_NEW_USER
  RESET_PASSWORD
  SMS_VERIFY
  SHARE_TICKET
  DEVELOPER_IMPORTANT_NOTE_TYPE
  CUSTOMER_IMPORTANT_NOTE_TYPE
  MESSAGE_FORWARDED_TO_SUPPORT
  TICKET_ASSIGNEE_CONNECTED
  TICKET_EXECUTOR_CONNECTED
  TRACK_TICKET_IN_DOMA_APP
  TICKET_STATUS_OPENED
  TICKET_STATUS_IN_PROGRESS
  TICKET_STATUS_COMPLETED
  TICKET_STATUS_RETURNED
  TICKET_STATUS_DECLINED
  TICKET_COMMENT_ADDED
  METER_VERIFICATION_DATE_REMINDER
  METER_SUBMIT_READINGS_REMINDER
  METER_VERIFICATION_DATE_EXPIRED
  RESIDENT_ADD_BILLING_ACCOUNT
  BILLING_RECEIPT_AVAILABLE
  BILLING_RECEIPT_AVAILABLE_NO_ACCOUNT
  BILLING_RECEIPT_ADDED
  BILLING_RECEIPT_ADDED_WITH_DEBT
  BILLING_RECEIPT_ADDED_WITH_NO_DEBT
  RESIDENT_UPGRADE_APP
  STAFF_UPGRADE_APP
  BANK_ACCOUNT_CREATION_REQUEST
  CUSTOM_CONTENT_MESSAGE
  CUSTOM_CONTENT_MESSAGE_PUSH
  CUSTOM_CONTENT_MESSAGE_EMAIL
  CUSTOM_CONTENT_MESSAGE_SMS
  VOIP_INCOMING_CALL_MESSAGE
}

input SendMessageInput {
  dv: Int!
  sender: SenderFieldInput!
  to: SendMessageToInput!
  emailFrom: String
  type: SendMessageType!
  lang: SendMessageLang!
  meta: JSON!
  organization: OrganizationWhereUniqueInput
  uniqKey: String
}

type SendMessageOutput {
  status: String!
  id: String!
  isDuplicateMessage: Boolean
}

input ResendMessageInput {
  dv: Int!
  sender: SenderFieldInput!
  message: MessageWhereUniqueInput
}

type ResendMessageOutput {
  status: String!
  id: String!
}

enum PushTransportType {
  firebase
  apple
  huawei
}

enum DevicePlatformType {
  android
  ios
  web
}

enum PushType {
  default
  silent_data
}

input SyncRemoteClientInput {
  dv: Int!
  sender: SenderFieldInput!
  deviceId: String!
  appId: String!
  pushToken: String
  pushTransport: PushTransportType
  devicePlatform: DevicePlatformType
  pushType: PushType
  meta: JSON
  pushTokenVoIP: String
  pushTransportVoIP: PushTransportType
  pushTypeVoIP: PushType
}

input DisconnectUserFromRemoteClientInput {
  dv: Int!
  sender: SenderFieldInput!
  deviceId: String!
  appId: String!
}

type DisconnectUserFromRemoteClientOutput {
  status: String!
}

input SetMessageStatusInput {
  dv: Int!
  sender: SenderFieldInput!
  message: MessageWhereUniqueInput!
  deliveredAt: String
  readAt: String
}

type SetMessageStatusOutput {
  id: ID!
  status: String!
}

input ExportContactsToExcelInput {
  dv: Int!
  sender: SenderFieldInput!
  where: ContactWhereInput!
  sortBy: [SortContactsBy!]
}

type ExportContactsToExcelOutput {
  status: String!
  linkToFile: String!
}

input RegisterResidentInput {
  dv: Int!
  sender: SenderFieldInput!
  address: String!
  addressMeta: AddressMetaFieldInput!
  unitName: String!
  unitType: BuildingUnitSubType
}

input RegisterServiceConsumerInputExtra {
  paymentCategory: String
}

input RegisterServiceConsumerInput {
  dv: Int!
  sender: SenderFieldInput!
  residentId: ID!
  accountNumber: String!
  organizationId: ID!
  extra: RegisterServiceConsumerInputExtra
}

enum OnBoardingType {
  ADMINISTRATOR
}

input CreateOnBoardingInput {
  dv: Int!
  sender: JSON!
  type: OnBoardingType
  userId: ID!
}

input ExportMeterReadingsInput {
  dv: Int!
  sender: SenderFieldInput!
  where: MeterReadingWhereInput!
  sortBy: [SortMeterReadingsBy!]
  timeZone: String!
}

type ExportMeterReadingsOutput {
  status: String!
  linkToFile: String!
}

input RegisterMultiPaymentServiceConsumerInput {
  serviceConsumer: ServiceConsumerWhereUniqueInput!
  receipts: [BillingReceiptWhereUniqueInput!]!
}

input RegisterMultiPaymentInput {
  dv: Int!
  sender: SenderFieldInput!
  groupedReceipts: [RegisterMultiPaymentServiceConsumerInput!]!
  recurrentPaymentContext: RecurrentPaymentContextWhereUniqueInput
}

type RegisterMultiPaymentOutput {
  dv: Int!
  multiPaymentId: String!
  webViewUrl: String!
  feeCalculationUrl: String!
  directPaymentUrl: String!
  getCardTokensUrl: String!
}

input ExportPaymentsToExcelInput {
  dv: Int!
  sender: SenderFieldInput!
  where: PaymentWhereInput!
  sortBy: [SortPaymentsBy!]
  timeZone: String!
}

type ExportPaymentsToExcelOutput {
  status: String!
  linkToFile: String!
}

input RegisterMultiPaymentForOneReceiptInput {
  dv: Int!
  sender: SenderFieldInput!
  receipt: BillingReceiptWhereUniqueInput!
  acquiringIntegrationContext: AcquiringIntegrationContextWhereUniqueInput!
}

type RegisterMultiPaymentForOneReceiptOutput {
  dv: Int!
  multiPaymentId: String!
  webViewUrl: String!
  feeCalculationUrl: String!
  directPaymentUrl: String!
  anonymousPaymentUrl: String!
}

input RegisterMultiPaymentVirtualReceiptRecipientInput {
  routingNumber: String!
  bankAccount: String!
  accountNumber: String!
}

input RegisterMultiPaymentVirtualReceiptInput {
  currencyCode: String!
  amount: String!
  period: String!
  recipient: RegisterMultiPaymentVirtualReceiptRecipientInput!
}

input RegisterMultiPaymentForVirtualReceiptInput {
  dv: Int!
  sender: SenderFieldInput!
  receipt: RegisterMultiPaymentVirtualReceiptInput!
  acquiringIntegrationContext: AcquiringIntegrationContextWhereUniqueInput!
}

type RegisterMultiPaymentForVirtualReceiptOutput {
  dv: Int!
  multiPaymentId: String!
  webViewUrl: String!
  feeCalculationUrl: String!
  directPaymentUrl: String!
  anonymousPaymentUrl: String!
}

input GeneratePaymentLinkCallbacksInput {
  successUrl: String!
  failureUrl: String!
}

input GeneratePaymentLinkReceiptDataInput {
  currencyCode: String!
  amount: String!
  periodYear: Int!
  periodMonth: Int!
  accountNumber: String!
}

input GeneratePaymentLinkInput {
  dv: Int!
  sender: SenderFieldInput!
  receipt: BillingReceiptWhereUniqueInput
  receiptData: GeneratePaymentLinkReceiptDataInput
  acquiringIntegrationContext: AcquiringIntegrationContextWhereUniqueInput!
  callbacks: GeneratePaymentLinkCallbacksInput!
}

type GeneratePaymentLinkOutput {
  dv: Int!
  paymentUrl: String!
}

type PaymentsSumOutput {
  sum: String!
}

enum AppType {
  BILLING
  ACQUIRING
  B2B
}

enum AppCategory {
  ACCRUALS_AND_PAYMENTS
  DISPATCHING
  GIS
  SMART_HOME
  BUSINESS_DEVELOPMENT
  OTHER
}

input AllMiniAppsWhereInput {
  connected: Boolean
  id_not: String
  category: String
}

input AllMiniAppsInput {
  dv: Int!
  sender: SenderFieldInput!
  organization: OrganizationWhereUniqueInput!
  search: String
  where: AllMiniAppsWhereInput
}

type MiniAppOutput {
  id: ID!
  type: AppType!
  connected: Boolean!
  name: String!
  shortDescription: String!
  category: AppCategory!
  logo: String
  label: String
}

enum TicketReportPeriodType {
  calendarWeek
  month
  quarter
  year
}

input TicketReportWidgetInput {
  periodType: TicketReportPeriodType!
  offset: Int
  userOrganizationId: String!
}

type TicketReportData {
  statusName: String!
  currentValue: Int!
  growth: Float!
  statusType: TicketStatusTypeType!
}

type TicketReportWidgetOutput {
  data: [TicketReportData!]
}

enum TicketAnalyticsGroupBy {
  day
  week
  month
  status
  property
  categoryClassifier
  executor
  assignee
}

input TicketAnalyticsReportInput {
  where: TicketWhereInput!
  groupBy: [TicketAnalyticsGroupBy!]
  nullReplaces: TicketAnalyticsNullReplaces!
}

type TicketLabel {
  label: String!
  color: String!
  value: String!
}

type TicketAnalyticsReportOutput {
  groups: [TicketGroupedCounter!]
  ticketLabels: [TicketLabel]
}

type TicketGroupedCounter {
  count: Int!
  status: String
  property: String
  dayGroup: String!
  categoryClassifier: String
  executor: String
  assignee: String
}

input TicketAnalyticsNullReplaces {
  categoryClassifier: String!
  executor: String!
  assignee: String!
}

input ExportTicketAnalyticsToExcelTranslates {
  property: String
  assignee: String
  executor: String
  categoryClassifier: String
}

input ExportTicketAnalyticsToExcelInput {
  where: TicketWhereInput!
  groupBy: [TicketAnalyticsGroupBy!]
  translates: ExportTicketAnalyticsToExcelTranslates!
  nullReplaces: TicketAnalyticsNullReplaces!
}

type ExportTicketAnalyticsToExcelOutput {
  link: String!
}

input GetExternalReportIframeUrlInput {
  dv: Int!
  sender: JSON!
  id: ID!
  organizationId: ID!
}

type GetExternalReportIframeUrlOutput {
  title: String!
  iframeUrl: String
}

input ExportPropertyScopeToExcelInput {
  dv: Int!
  sender: SenderFieldInput!
  where: PropertyScopeWhereInput!
  sortBy: [SortPropertyScopesBy!]
}

type ExportPropertyScopeToExcelOutput {
  status: String!
  linkToFile: String!
}

type unauthenticateUserOutput {
  """
  `true` when unauthentication succeeds.
  NOTE: unauthentication always succeeds when the request has an invalid or missing authentication token.
  """
  success: Boolean
}

type authenticateUserOutput {
  """ Used to make subsequent authenticated requests by setting this token in a header: 'Authorization: Bearer <token>'. 
  """
  token: String

  """ Retrieve information on the newly authenticated User here. """
  item: User
}

type Query {
  """ Search for all UserHistoryRecord items which match the where clause. """
  allUserHistoryRecords(where: UserHistoryRecordWhereInput, search: String, sortBy: [SortUserHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [UserHistoryRecord]

  """ Search for the UserHistoryRecord item with the matching ID. """
  UserHistoryRecord(where: UserHistoryRecordWhereUniqueInput!): UserHistoryRecord

  """ Perform a meta-query on all UserHistoryRecord items which match the where clause. 
  """
  _allUserHistoryRecordsMeta(where: UserHistoryRecordWhereInput, search: String, sortBy: [SortUserHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the UserHistoryRecord list. """
  _UserHistoryRecordsMeta: _ListMeta

  """ Search for all User items which match the where clause. """
  allUsers(where: UserWhereInput, search: String, sortBy: [SortUsersBy!], orderBy: String, first: Int, skip: Int): [User]

  """ Search for the User item with the matching ID. """
  User(where: UserWhereUniqueInput!): User

  """ Perform a meta-query on all User items which match the where clause. """
  _allUsersMeta(where: UserWhereInput, search: String, sortBy: [SortUsersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the User list. """
  _UsersMeta: _ListMeta

  """ Search for all ForgotPasswordActionHistoryRecord items which match the where clause. 
  """
  allForgotPasswordActionHistoryRecords(where: ForgotPasswordActionHistoryRecordWhereInput, search: String, sortBy: [SortForgotPasswordActionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ForgotPasswordActionHistoryRecord]

  """ Search for the ForgotPasswordActionHistoryRecord item with the matching ID. 
  """
  ForgotPasswordActionHistoryRecord(where: ForgotPasswordActionHistoryRecordWhereUniqueInput!): ForgotPasswordActionHistoryRecord

  """ Perform a meta-query on all ForgotPasswordActionHistoryRecord items which match the where clause. 
  """
  _allForgotPasswordActionHistoryRecordsMeta(where: ForgotPasswordActionHistoryRecordWhereInput, search: String, sortBy: [SortForgotPasswordActionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ForgotPasswordActionHistoryRecord list. 
  """
  _ForgotPasswordActionHistoryRecordsMeta: _ListMeta

  """ Search for all ForgotPasswordAction items which match the where clause. 
  """
  allForgotPasswordActions(where: ForgotPasswordActionWhereInput, search: String, sortBy: [SortForgotPasswordActionsBy!], orderBy: String, first: Int, skip: Int): [ForgotPasswordAction]

  """ Search for the ForgotPasswordAction item with the matching ID. """
  ForgotPasswordAction(where: ForgotPasswordActionWhereUniqueInput!): ForgotPasswordAction

  """ Perform a meta-query on all ForgotPasswordAction items which match the where clause. 
  """
  _allForgotPasswordActionsMeta(where: ForgotPasswordActionWhereInput, search: String, sortBy: [SortForgotPasswordActionsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ForgotPasswordAction list. """
  _ForgotPasswordActionsMeta: _ListMeta

  """ Search for all ConfirmPhoneActionHistoryRecord items which match the where clause. 
  """
  allConfirmPhoneActionHistoryRecords(where: ConfirmPhoneActionHistoryRecordWhereInput, search: String, sortBy: [SortConfirmPhoneActionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ConfirmPhoneActionHistoryRecord]

  """ Search for the ConfirmPhoneActionHistoryRecord item with the matching ID. 
  """
  ConfirmPhoneActionHistoryRecord(where: ConfirmPhoneActionHistoryRecordWhereUniqueInput!): ConfirmPhoneActionHistoryRecord

  """ Perform a meta-query on all ConfirmPhoneActionHistoryRecord items which match the where clause. 
  """
  _allConfirmPhoneActionHistoryRecordsMeta(where: ConfirmPhoneActionHistoryRecordWhereInput, search: String, sortBy: [SortConfirmPhoneActionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ConfirmPhoneActionHistoryRecord list. """
  _ConfirmPhoneActionHistoryRecordsMeta: _ListMeta

  """ Search for all ConfirmPhoneAction items which match the where clause. 
  """
  allConfirmPhoneActions(where: ConfirmPhoneActionWhereInput, search: String, sortBy: [SortConfirmPhoneActionsBy!], orderBy: String, first: Int, skip: Int): [ConfirmPhoneAction]

  """ Search for the ConfirmPhoneAction item with the matching ID. """
  ConfirmPhoneAction(where: ConfirmPhoneActionWhereUniqueInput!): ConfirmPhoneAction

  """ Perform a meta-query on all ConfirmPhoneAction items which match the where clause. 
  """
  _allConfirmPhoneActionsMeta(where: ConfirmPhoneActionWhereInput, search: String, sortBy: [SortConfirmPhoneActionsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ConfirmPhoneAction list. """
  _ConfirmPhoneActionsMeta: _ListMeta

  """ Search for all OidcClientHistoryRecord items which match the where clause. 
  """
  allOidcClientHistoryRecords(where: OidcClientHistoryRecordWhereInput, search: String, sortBy: [SortOidcClientHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OidcClientHistoryRecord]

  """ Search for the OidcClientHistoryRecord item with the matching ID. """
  OidcClientHistoryRecord(where: OidcClientHistoryRecordWhereUniqueInput!): OidcClientHistoryRecord

  """ Perform a meta-query on all OidcClientHistoryRecord items which match the where clause. 
  """
  _allOidcClientHistoryRecordsMeta(where: OidcClientHistoryRecordWhereInput, search: String, sortBy: [SortOidcClientHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OidcClientHistoryRecord list. """
  _OidcClientHistoryRecordsMeta: _ListMeta

  """ Search for all OidcClient items which match the where clause. """
  allOidcClients(where: OidcClientWhereInput, search: String, sortBy: [SortOidcClientsBy!], orderBy: String, first: Int, skip: Int): [OidcClient]

  """ Search for the OidcClient item with the matching ID. """
  OidcClient(where: OidcClientWhereUniqueInput!): OidcClient

  """ Perform a meta-query on all OidcClient items which match the where clause. 
  """
  _allOidcClientsMeta(where: OidcClientWhereInput, search: String, sortBy: [SortOidcClientsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OidcClient list. """
  _OidcClientsMeta: _ListMeta

  """ Search for all UserExternalIdentityHistoryRecord items which match the where clause. 
  """
  allUserExternalIdentityHistoryRecords(where: UserExternalIdentityHistoryRecordWhereInput, search: String, sortBy: [SortUserExternalIdentityHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [UserExternalIdentityHistoryRecord]

  """ Search for the UserExternalIdentityHistoryRecord item with the matching ID. 
  """
  UserExternalIdentityHistoryRecord(where: UserExternalIdentityHistoryRecordWhereUniqueInput!): UserExternalIdentityHistoryRecord

  """ Perform a meta-query on all UserExternalIdentityHistoryRecord items which match the where clause. 
  """
  _allUserExternalIdentityHistoryRecordsMeta(where: UserExternalIdentityHistoryRecordWhereInput, search: String, sortBy: [SortUserExternalIdentityHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the UserExternalIdentityHistoryRecord list. 
  """
  _UserExternalIdentityHistoryRecordsMeta: _ListMeta

  """ Search for all UserExternalIdentity items which match the where clause. 
  """
  allUserExternalIdentities(where: UserExternalIdentityWhereInput, search: String, sortBy: [SortUserExternalIdentitiesBy!], orderBy: String, first: Int, skip: Int): [UserExternalIdentity]

  """ Search for the UserExternalIdentity item with the matching ID. """
  UserExternalIdentity(where: UserExternalIdentityWhereUniqueInput!): UserExternalIdentity

  """ Perform a meta-query on all UserExternalIdentity items which match the where clause. 
  """
  _allUserExternalIdentitiesMeta(where: UserExternalIdentityWhereInput, search: String, sortBy: [SortUserExternalIdentitiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the UserExternalIdentity list. """
  _UserExternalIdentitiesMeta: _ListMeta

  """ Search for all OrganizationHistoryRecord items which match the where clause. 
  """
  allOrganizationHistoryRecords(where: OrganizationHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OrganizationHistoryRecord]

  """ Search for the OrganizationHistoryRecord item with the matching ID. """
  OrganizationHistoryRecord(where: OrganizationHistoryRecordWhereUniqueInput!): OrganizationHistoryRecord

  """ Perform a meta-query on all OrganizationHistoryRecord items which match the where clause. 
  """
  _allOrganizationHistoryRecordsMeta(where: OrganizationHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationHistoryRecord list. """
  _OrganizationHistoryRecordsMeta: _ListMeta

  """ Search for all Organization items which match the where clause. """
  allOrganizations(where: OrganizationWhereInput, search: String, sortBy: [SortOrganizationsBy!], orderBy: String, first: Int, skip: Int): [Organization]

  """ Search for the Organization item with the matching ID. """
  Organization(where: OrganizationWhereUniqueInput!): Organization

  """ Perform a meta-query on all Organization items which match the where clause. 
  """
  _allOrganizationsMeta(where: OrganizationWhereInput, search: String, sortBy: [SortOrganizationsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Organization list. """
  _OrganizationsMeta: _ListMeta

  """ Search for all OrganizationEmployeeHistoryRecord items which match the where clause. 
  """
  allOrganizationEmployeeHistoryRecords(where: OrganizationEmployeeHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationEmployeeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployeeHistoryRecord]

  """ Search for the OrganizationEmployeeHistoryRecord item with the matching ID. 
  """
  OrganizationEmployeeHistoryRecord(where: OrganizationEmployeeHistoryRecordWhereUniqueInput!): OrganizationEmployeeHistoryRecord

  """ Perform a meta-query on all OrganizationEmployeeHistoryRecord items which match the where clause. 
  """
  _allOrganizationEmployeeHistoryRecordsMeta(where: OrganizationEmployeeHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationEmployeeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationEmployeeHistoryRecord list. 
  """
  _OrganizationEmployeeHistoryRecordsMeta: _ListMeta

  """ Search for all OrganizationEmployee items which match the where clause. 
  """
  allOrganizationEmployees(where: OrganizationEmployeeWhereInput, search: String, sortBy: [SortOrganizationEmployeesBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployee]

  """ Search for the OrganizationEmployee item with the matching ID. """
  OrganizationEmployee(where: OrganizationEmployeeWhereUniqueInput!): OrganizationEmployee

  """ Perform a meta-query on all OrganizationEmployee items which match the where clause. 
  """
  _allOrganizationEmployeesMeta(where: OrganizationEmployeeWhereInput, search: String, sortBy: [SortOrganizationEmployeesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationEmployee list. """
  _OrganizationEmployeesMeta: _ListMeta

  """ Search for all OrganizationEmployeeRoleHistoryRecord items which match the where clause. 
  """
  allOrganizationEmployeeRoleHistoryRecords(where: OrganizationEmployeeRoleHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationEmployeeRoleHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployeeRoleHistoryRecord]

  """ Search for the OrganizationEmployeeRoleHistoryRecord item with the matching ID. 
  """
  OrganizationEmployeeRoleHistoryRecord(where: OrganizationEmployeeRoleHistoryRecordWhereUniqueInput!): OrganizationEmployeeRoleHistoryRecord

  """ Perform a meta-query on all OrganizationEmployeeRoleHistoryRecord items which match the where clause. 
  """
  _allOrganizationEmployeeRoleHistoryRecordsMeta(where: OrganizationEmployeeRoleHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationEmployeeRoleHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationEmployeeRoleHistoryRecord list. 
  """
  _OrganizationEmployeeRoleHistoryRecordsMeta: _ListMeta

  """ Search for all OrganizationEmployeeRole items which match the where clause. 
  """
  allOrganizationEmployeeRoles(where: OrganizationEmployeeRoleWhereInput, search: String, sortBy: [SortOrganizationEmployeeRolesBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployeeRole]

  """ Search for the OrganizationEmployeeRole item with the matching ID. """
  OrganizationEmployeeRole(where: OrganizationEmployeeRoleWhereUniqueInput!): OrganizationEmployeeRole

  """ Perform a meta-query on all OrganizationEmployeeRole items which match the where clause. 
  """
  _allOrganizationEmployeeRolesMeta(where: OrganizationEmployeeRoleWhereInput, search: String, sortBy: [SortOrganizationEmployeeRolesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationEmployeeRole list. """
  _OrganizationEmployeeRolesMeta: _ListMeta

  """ Search for all OrganizationLinkHistoryRecord items which match the where clause. 
  """
  allOrganizationLinkHistoryRecords(where: OrganizationLinkHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationLinkHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OrganizationLinkHistoryRecord]

  """ Search for the OrganizationLinkHistoryRecord item with the matching ID. 
  """
  OrganizationLinkHistoryRecord(where: OrganizationLinkHistoryRecordWhereUniqueInput!): OrganizationLinkHistoryRecord

  """ Perform a meta-query on all OrganizationLinkHistoryRecord items which match the where clause. 
  """
  _allOrganizationLinkHistoryRecordsMeta(where: OrganizationLinkHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationLinkHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationLinkHistoryRecord list. """
  _OrganizationLinkHistoryRecordsMeta: _ListMeta

  """ Search for all OrganizationLink items which match the where clause. """
  allOrganizationLinks(where: OrganizationLinkWhereInput, search: String, sortBy: [SortOrganizationLinksBy!], orderBy: String, first: Int, skip: Int): [OrganizationLink]

  """ Search for the OrganizationLink item with the matching ID. """
  OrganizationLink(where: OrganizationLinkWhereUniqueInput!): OrganizationLink

  """ Perform a meta-query on all OrganizationLink items which match the where clause. 
  """
  _allOrganizationLinksMeta(where: OrganizationLinkWhereInput, search: String, sortBy: [SortOrganizationLinksBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationLink list. """
  _OrganizationLinksMeta: _ListMeta

  """ Search for all OrganizationEmployeeSpecializationHistoryRecord items which match the where clause. 
  """
  allOrganizationEmployeeSpecializationHistoryRecords(where: OrganizationEmployeeSpecializationHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationEmployeeSpecializationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployeeSpecializationHistoryRecord]

  """ Search for the OrganizationEmployeeSpecializationHistoryRecord item with the matching ID. 
  """
  OrganizationEmployeeSpecializationHistoryRecord(where: OrganizationEmployeeSpecializationHistoryRecordWhereUniqueInput!): OrganizationEmployeeSpecializationHistoryRecord

  """ Perform a meta-query on all OrganizationEmployeeSpecializationHistoryRecord items which match the where clause. 
  """
  _allOrganizationEmployeeSpecializationHistoryRecordsMeta(where: OrganizationEmployeeSpecializationHistoryRecordWhereInput, search: String, sortBy: [SortOrganizationEmployeeSpecializationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationEmployeeSpecializationHistoryRecord list. 
  """
  _OrganizationEmployeeSpecializationHistoryRecordsMeta: _ListMeta

  """ Search for all OrganizationEmployeeSpecialization items which match the where clause. 
  """
  allOrganizationEmployeeSpecializations(where: OrganizationEmployeeSpecializationWhereInput, search: String, sortBy: [SortOrganizationEmployeeSpecializationsBy!], orderBy: String, first: Int, skip: Int): [OrganizationEmployeeSpecialization]

  """ Search for the OrganizationEmployeeSpecialization item with the matching ID. 
  """
  OrganizationEmployeeSpecialization(where: OrganizationEmployeeSpecializationWhereUniqueInput!): OrganizationEmployeeSpecialization

  """ Perform a meta-query on all OrganizationEmployeeSpecialization items which match the where clause. 
  """
  _allOrganizationEmployeeSpecializationsMeta(where: OrganizationEmployeeSpecializationWhereInput, search: String, sortBy: [SortOrganizationEmployeeSpecializationsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OrganizationEmployeeSpecialization list. 
  """
  _OrganizationEmployeeSpecializationsMeta: _ListMeta

  """ Search for all PropertyHistoryRecord items which match the where clause. 
  """
  allPropertyHistoryRecords(where: PropertyHistoryRecordWhereInput, search: String, sortBy: [SortPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [PropertyHistoryRecord]

  """ Search for the PropertyHistoryRecord item with the matching ID. """
  PropertyHistoryRecord(where: PropertyHistoryRecordWhereUniqueInput!): PropertyHistoryRecord

  """ Perform a meta-query on all PropertyHistoryRecord items which match the where clause. 
  """
  _allPropertyHistoryRecordsMeta(where: PropertyHistoryRecordWhereInput, search: String, sortBy: [SortPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyHistoryRecord list. """
  _PropertyHistoryRecordsMeta: _ListMeta

  """ Search for all Property items which match the where clause. """
  allProperties(where: PropertyWhereInput, search: String, sortBy: [SortPropertiesBy!], orderBy: String, first: Int, skip: Int): [Property]

  """ Search for the Property item with the matching ID. """
  Property(where: PropertyWhereUniqueInput!): Property

  """ Perform a meta-query on all Property items which match the where clause. 
  """
  _allPropertiesMeta(where: PropertyWhereInput, search: String, sortBy: [SortPropertiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Property list. """
  _PropertiesMeta: _ListMeta

  """ Search for all BillingIntegrationHistoryRecord items which match the where clause. 
  """
  allBillingIntegrationHistoryRecords(where: BillingIntegrationHistoryRecordWhereInput, search: String, sortBy: [SortBillingIntegrationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationHistoryRecord]

  """ Search for the BillingIntegrationHistoryRecord item with the matching ID. 
  """
  BillingIntegrationHistoryRecord(where: BillingIntegrationHistoryRecordWhereUniqueInput!): BillingIntegrationHistoryRecord

  """ Perform a meta-query on all BillingIntegrationHistoryRecord items which match the where clause. 
  """
  _allBillingIntegrationHistoryRecordsMeta(where: BillingIntegrationHistoryRecordWhereInput, search: String, sortBy: [SortBillingIntegrationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegrationHistoryRecord list. """
  _BillingIntegrationHistoryRecordsMeta: _ListMeta

  """ Search for all BillingIntegration items which match the where clause. 
  """
  allBillingIntegrations(where: BillingIntegrationWhereInput, search: String, sortBy: [SortBillingIntegrationsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegration]

  """ Search for the BillingIntegration item with the matching ID. """
  BillingIntegration(where: BillingIntegrationWhereUniqueInput!): BillingIntegration

  """ Perform a meta-query on all BillingIntegration items which match the where clause. 
  """
  _allBillingIntegrationsMeta(where: BillingIntegrationWhereInput, search: String, sortBy: [SortBillingIntegrationsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegration list. """
  _BillingIntegrationsMeta: _ListMeta

  """ Search for all BillingIntegrationAccessRightHistoryRecord items which match the where clause. 
  """
  allBillingIntegrationAccessRightHistoryRecords(where: BillingIntegrationAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortBillingIntegrationAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationAccessRightHistoryRecord]

  """ Search for the BillingIntegrationAccessRightHistoryRecord item with the matching ID. 
  """
  BillingIntegrationAccessRightHistoryRecord(where: BillingIntegrationAccessRightHistoryRecordWhereUniqueInput!): BillingIntegrationAccessRightHistoryRecord

  """ Perform a meta-query on all BillingIntegrationAccessRightHistoryRecord items which match the where clause. 
  """
  _allBillingIntegrationAccessRightHistoryRecordsMeta(where: BillingIntegrationAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortBillingIntegrationAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegrationAccessRightHistoryRecord list. 
  """
  _BillingIntegrationAccessRightHistoryRecordsMeta: _ListMeta

  """ Search for all BillingIntegrationAccessRight items which match the where clause. 
  """
  allBillingIntegrationAccessRights(where: BillingIntegrationAccessRightWhereInput, search: String, sortBy: [SortBillingIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationAccessRight]

  """ Search for the BillingIntegrationAccessRight item with the matching ID. 
  """
  BillingIntegrationAccessRight(where: BillingIntegrationAccessRightWhereUniqueInput!): BillingIntegrationAccessRight

  """ Perform a meta-query on all BillingIntegrationAccessRight items which match the where clause. 
  """
  _allBillingIntegrationAccessRightsMeta(where: BillingIntegrationAccessRightWhereInput, search: String, sortBy: [SortBillingIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegrationAccessRight list. """
  _BillingIntegrationAccessRightsMeta: _ListMeta

  """ Search for all BillingIntegrationOrganizationContextHistoryRecord items which match the where clause. 
  """
  allBillingIntegrationOrganizationContextHistoryRecords(where: BillingIntegrationOrganizationContextHistoryRecordWhereInput, search: String, sortBy: [SortBillingIntegrationOrganizationContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationOrganizationContextHistoryRecord]

  """ Search for the BillingIntegrationOrganizationContextHistoryRecord item with the matching ID. 
  """
  BillingIntegrationOrganizationContextHistoryRecord(where: BillingIntegrationOrganizationContextHistoryRecordWhereUniqueInput!): BillingIntegrationOrganizationContextHistoryRecord

  """ Perform a meta-query on all BillingIntegrationOrganizationContextHistoryRecord items which match the where clause. 
  """
  _allBillingIntegrationOrganizationContextHistoryRecordsMeta(where: BillingIntegrationOrganizationContextHistoryRecordWhereInput, search: String, sortBy: [SortBillingIntegrationOrganizationContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegrationOrganizationContextHistoryRecord list. 
  """
  _BillingIntegrationOrganizationContextHistoryRecordsMeta: _ListMeta

  """ Search for all BillingIntegrationOrganizationContext items which match the where clause. 
  """
  allBillingIntegrationOrganizationContexts(where: BillingIntegrationOrganizationContextWhereInput, search: String, sortBy: [SortBillingIntegrationOrganizationContextsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationOrganizationContext]

  """ Search for the BillingIntegrationOrganizationContext item with the matching ID. 
  """
  BillingIntegrationOrganizationContext(where: BillingIntegrationOrganizationContextWhereUniqueInput!): BillingIntegrationOrganizationContext

  """ Perform a meta-query on all BillingIntegrationOrganizationContext items which match the where clause. 
  """
  _allBillingIntegrationOrganizationContextsMeta(where: BillingIntegrationOrganizationContextWhereInput, search: String, sortBy: [SortBillingIntegrationOrganizationContextsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegrationOrganizationContext list. 
  """
  _BillingIntegrationOrganizationContextsMeta: _ListMeta

  """ Search for all BillingIntegrationLog items which match the where clause. 
  """
  allBillingIntegrationLogs(where: BillingIntegrationLogWhereInput, search: String, sortBy: [SortBillingIntegrationLogsBy!], orderBy: String, first: Int, skip: Int): [BillingIntegrationLog]

  """ Search for the BillingIntegrationLog item with the matching ID. """
  BillingIntegrationLog(where: BillingIntegrationLogWhereUniqueInput!): BillingIntegrationLog

  """ Perform a meta-query on all BillingIntegrationLog items which match the where clause. 
  """
  _allBillingIntegrationLogsMeta(where: BillingIntegrationLogWhereInput, search: String, sortBy: [SortBillingIntegrationLogsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingIntegrationLog list. """
  _BillingIntegrationLogsMeta: _ListMeta

  """ Search for all BillingPropertyHistoryRecord items which match the where clause. 
  """
  allBillingPropertyHistoryRecords(where: BillingPropertyHistoryRecordWhereInput, search: String, sortBy: [SortBillingPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingPropertyHistoryRecord]

  """ Search for the BillingPropertyHistoryRecord item with the matching ID. 
  """
  BillingPropertyHistoryRecord(where: BillingPropertyHistoryRecordWhereUniqueInput!): BillingPropertyHistoryRecord

  """ Perform a meta-query on all BillingPropertyHistoryRecord items which match the where clause. 
  """
  _allBillingPropertyHistoryRecordsMeta(where: BillingPropertyHistoryRecordWhereInput, search: String, sortBy: [SortBillingPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingPropertyHistoryRecord list. """
  _BillingPropertyHistoryRecordsMeta: _ListMeta

  """ Search for all BillingProperty items which match the where clause. """
  allBillingProperties(where: BillingPropertyWhereInput, search: String, sortBy: [SortBillingPropertiesBy!], orderBy: String, first: Int, skip: Int): [BillingProperty]

  """ Search for the BillingProperty item with the matching ID. """
  BillingProperty(where: BillingPropertyWhereUniqueInput!): BillingProperty

  """ Perform a meta-query on all BillingProperty items which match the where clause. 
  """
  _allBillingPropertiesMeta(where: BillingPropertyWhereInput, search: String, sortBy: [SortBillingPropertiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingProperty list. """
  _BillingPropertiesMeta: _ListMeta

  """ Search for all BillingAccountHistoryRecord items which match the where clause. 
  """
  allBillingAccountHistoryRecords(where: BillingAccountHistoryRecordWhereInput, search: String, sortBy: [SortBillingAccountHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingAccountHistoryRecord]

  """ Search for the BillingAccountHistoryRecord item with the matching ID. 
  """
  BillingAccountHistoryRecord(where: BillingAccountHistoryRecordWhereUniqueInput!): BillingAccountHistoryRecord

  """ Perform a meta-query on all BillingAccountHistoryRecord items which match the where clause. 
  """
  _allBillingAccountHistoryRecordsMeta(where: BillingAccountHistoryRecordWhereInput, search: String, sortBy: [SortBillingAccountHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingAccountHistoryRecord list. """
  _BillingAccountHistoryRecordsMeta: _ListMeta

  """ Search for all BillingAccount items which match the where clause. """
  allBillingAccounts(where: BillingAccountWhereInput, search: String, sortBy: [SortBillingAccountsBy!], orderBy: String, first: Int, skip: Int): [BillingAccount]

  """ Search for the BillingAccount item with the matching ID. """
  BillingAccount(where: BillingAccountWhereUniqueInput!): BillingAccount

  """ Perform a meta-query on all BillingAccount items which match the where clause. 
  """
  _allBillingAccountsMeta(where: BillingAccountWhereInput, search: String, sortBy: [SortBillingAccountsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingAccount list. """
  _BillingAccountsMeta: _ListMeta

  """ Search for all BillingMeterResourceHistoryRecord items which match the where clause. 
  """
  allBillingMeterResourceHistoryRecords(where: BillingMeterResourceHistoryRecordWhereInput, search: String, sortBy: [SortBillingMeterResourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingMeterResourceHistoryRecord]

  """ Search for the BillingMeterResourceHistoryRecord item with the matching ID. 
  """
  BillingMeterResourceHistoryRecord(where: BillingMeterResourceHistoryRecordWhereUniqueInput!): BillingMeterResourceHistoryRecord

  """ Perform a meta-query on all BillingMeterResourceHistoryRecord items which match the where clause. 
  """
  _allBillingMeterResourceHistoryRecordsMeta(where: BillingMeterResourceHistoryRecordWhereInput, search: String, sortBy: [SortBillingMeterResourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingMeterResourceHistoryRecord list. 
  """
  _BillingMeterResourceHistoryRecordsMeta: _ListMeta

  """ Search for all BillingMeterResource items which match the where clause. 
  """
  allBillingMeterResources(where: BillingMeterResourceWhereInput, search: String, sortBy: [SortBillingMeterResourcesBy!], orderBy: String, first: Int, skip: Int): [BillingMeterResource]

  """ Search for the BillingMeterResource item with the matching ID. """
  BillingMeterResource(where: BillingMeterResourceWhereUniqueInput!): BillingMeterResource

  """ Perform a meta-query on all BillingMeterResource items which match the where clause. 
  """
  _allBillingMeterResourcesMeta(where: BillingMeterResourceWhereInput, search: String, sortBy: [SortBillingMeterResourcesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingMeterResource list. """
  _BillingMeterResourcesMeta: _ListMeta

  """ Search for all BillingAccountMeterHistoryRecord items which match the where clause. 
  """
  allBillingAccountMeterHistoryRecords(where: BillingAccountMeterHistoryRecordWhereInput, search: String, sortBy: [SortBillingAccountMeterHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingAccountMeterHistoryRecord]

  """ Search for the BillingAccountMeterHistoryRecord item with the matching ID. 
  """
  BillingAccountMeterHistoryRecord(where: BillingAccountMeterHistoryRecordWhereUniqueInput!): BillingAccountMeterHistoryRecord

  """ Perform a meta-query on all BillingAccountMeterHistoryRecord items which match the where clause. 
  """
  _allBillingAccountMeterHistoryRecordsMeta(where: BillingAccountMeterHistoryRecordWhereInput, search: String, sortBy: [SortBillingAccountMeterHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingAccountMeterHistoryRecord list. 
  """
  _BillingAccountMeterHistoryRecordsMeta: _ListMeta

  """ Search for all BillingAccountMeter items which match the where clause. 
  """
  allBillingAccountMeters(where: BillingAccountMeterWhereInput, search: String, sortBy: [SortBillingAccountMetersBy!], orderBy: String, first: Int, skip: Int): [BillingAccountMeter]

  """ Search for the BillingAccountMeter item with the matching ID. """
  BillingAccountMeter(where: BillingAccountMeterWhereUniqueInput!): BillingAccountMeter

  """ Perform a meta-query on all BillingAccountMeter items which match the where clause. 
  """
  _allBillingAccountMetersMeta(where: BillingAccountMeterWhereInput, search: String, sortBy: [SortBillingAccountMetersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingAccountMeter list. """
  _BillingAccountMetersMeta: _ListMeta

  """ Search for all BillingAccountMeterReadingHistoryRecord items which match the where clause. 
  """
  allBillingAccountMeterReadingHistoryRecords(where: BillingAccountMeterReadingHistoryRecordWhereInput, search: String, sortBy: [SortBillingAccountMeterReadingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingAccountMeterReadingHistoryRecord]

  """ Search for the BillingAccountMeterReadingHistoryRecord item with the matching ID. 
  """
  BillingAccountMeterReadingHistoryRecord(where: BillingAccountMeterReadingHistoryRecordWhereUniqueInput!): BillingAccountMeterReadingHistoryRecord

  """ Perform a meta-query on all BillingAccountMeterReadingHistoryRecord items which match the where clause. 
  """
  _allBillingAccountMeterReadingHistoryRecordsMeta(where: BillingAccountMeterReadingHistoryRecordWhereInput, search: String, sortBy: [SortBillingAccountMeterReadingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingAccountMeterReadingHistoryRecord list. 
  """
  _BillingAccountMeterReadingHistoryRecordsMeta: _ListMeta

  """ Search for all BillingAccountMeterReading items which match the where clause. 
  """
  allBillingAccountMeterReadings(where: BillingAccountMeterReadingWhereInput, search: String, sortBy: [SortBillingAccountMeterReadingsBy!], orderBy: String, first: Int, skip: Int): [BillingAccountMeterReading]

  """ Search for the BillingAccountMeterReading item with the matching ID. """
  BillingAccountMeterReading(where: BillingAccountMeterReadingWhereUniqueInput!): BillingAccountMeterReading

  """ Perform a meta-query on all BillingAccountMeterReading items which match the where clause. 
  """
  _allBillingAccountMeterReadingsMeta(where: BillingAccountMeterReadingWhereInput, search: String, sortBy: [SortBillingAccountMeterReadingsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingAccountMeterReading list. """
  _BillingAccountMeterReadingsMeta: _ListMeta

  """ Search for all BillingReceiptHistoryRecord items which match the where clause. 
  """
  allBillingReceiptHistoryRecords(where: BillingReceiptHistoryRecordWhereInput, search: String, sortBy: [SortBillingReceiptHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingReceiptHistoryRecord]

  """ Search for the BillingReceiptHistoryRecord item with the matching ID. 
  """
  BillingReceiptHistoryRecord(where: BillingReceiptHistoryRecordWhereUniqueInput!): BillingReceiptHistoryRecord

  """ Perform a meta-query on all BillingReceiptHistoryRecord items which match the where clause. 
  """
  _allBillingReceiptHistoryRecordsMeta(where: BillingReceiptHistoryRecordWhereInput, search: String, sortBy: [SortBillingReceiptHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingReceiptHistoryRecord list. """
  _BillingReceiptHistoryRecordsMeta: _ListMeta

  """ Search for all BillingReceipt items which match the where clause. """
  allBillingReceipts(where: BillingReceiptWhereInput, search: String, sortBy: [SortBillingReceiptsBy!], orderBy: String, first: Int, skip: Int): [BillingReceipt]

  """ Search for the BillingReceipt item with the matching ID. """
  BillingReceipt(where: BillingReceiptWhereUniqueInput!): BillingReceipt

  """ Perform a meta-query on all BillingReceipt items which match the where clause. 
  """
  _allBillingReceiptsMeta(where: BillingReceiptWhereInput, search: String, sortBy: [SortBillingReceiptsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingReceipt list. """
  _BillingReceiptsMeta: _ListMeta

  """ Search for all BillingRecipientHistoryRecord items which match the where clause. 
  """
  allBillingRecipientHistoryRecords(where: BillingRecipientHistoryRecordWhereInput, search: String, sortBy: [SortBillingRecipientHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingRecipientHistoryRecord]

  """ Search for the BillingRecipientHistoryRecord item with the matching ID. 
  """
  BillingRecipientHistoryRecord(where: BillingRecipientHistoryRecordWhereUniqueInput!): BillingRecipientHistoryRecord

  """ Perform a meta-query on all BillingRecipientHistoryRecord items which match the where clause. 
  """
  _allBillingRecipientHistoryRecordsMeta(where: BillingRecipientHistoryRecordWhereInput, search: String, sortBy: [SortBillingRecipientHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingRecipientHistoryRecord list. """
  _BillingRecipientHistoryRecordsMeta: _ListMeta

  """ Search for all BillingRecipient items which match the where clause. """
  allBillingRecipients(where: BillingRecipientWhereInput, search: String, sortBy: [SortBillingRecipientsBy!], orderBy: String, first: Int, skip: Int): [BillingRecipient]

  """ Search for the BillingRecipient item with the matching ID. """
  BillingRecipient(where: BillingRecipientWhereUniqueInput!): BillingRecipient

  """ Perform a meta-query on all BillingRecipient items which match the where clause. 
  """
  _allBillingRecipientsMeta(where: BillingRecipientWhereInput, search: String, sortBy: [SortBillingRecipientsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingRecipient list. """
  _BillingRecipientsMeta: _ListMeta

  """ Search for all BillingCategoryHistoryRecord items which match the where clause. 
  """
  allBillingCategoryHistoryRecords(where: BillingCategoryHistoryRecordWhereInput, search: String, sortBy: [SortBillingCategoryHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BillingCategoryHistoryRecord]

  """ Search for the BillingCategoryHistoryRecord item with the matching ID. 
  """
  BillingCategoryHistoryRecord(where: BillingCategoryHistoryRecordWhereUniqueInput!): BillingCategoryHistoryRecord

  """ Perform a meta-query on all BillingCategoryHistoryRecord items which match the where clause. 
  """
  _allBillingCategoryHistoryRecordsMeta(where: BillingCategoryHistoryRecordWhereInput, search: String, sortBy: [SortBillingCategoryHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingCategoryHistoryRecord list. """
  _BillingCategoryHistoryRecordsMeta: _ListMeta

  """ Search for all BillingCategory items which match the where clause. """
  allBillingCategories(where: BillingCategoryWhereInput, search: String, sortBy: [SortBillingCategoriesBy!], orderBy: String, first: Int, skip: Int): [BillingCategory]

  """ Search for the BillingCategory item with the matching ID. """
  BillingCategory(where: BillingCategoryWhereUniqueInput!): BillingCategory

  """ Perform a meta-query on all BillingCategory items which match the where clause. 
  """
  _allBillingCategoriesMeta(where: BillingCategoryWhereInput, search: String, sortBy: [SortBillingCategoriesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BillingCategory list. """
  _BillingCategoriesMeta: _ListMeta

  """ Search for all BankAccountHistoryRecord items which match the where clause. 
  """
  allBankAccountHistoryRecords(where: BankAccountHistoryRecordWhereInput, search: String, sortBy: [SortBankAccountHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankAccountHistoryRecord]

  """ Search for the BankAccountHistoryRecord item with the matching ID. """
  BankAccountHistoryRecord(where: BankAccountHistoryRecordWhereUniqueInput!): BankAccountHistoryRecord

  """ Perform a meta-query on all BankAccountHistoryRecord items which match the where clause. 
  """
  _allBankAccountHistoryRecordsMeta(where: BankAccountHistoryRecordWhereInput, search: String, sortBy: [SortBankAccountHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankAccountHistoryRecord list. """
  _BankAccountHistoryRecordsMeta: _ListMeta

  """ Search for all BankAccount items which match the where clause. """
  allBankAccounts(where: BankAccountWhereInput, search: String, sortBy: [SortBankAccountsBy!], orderBy: String, first: Int, skip: Int): [BankAccount]

  """ Search for the BankAccount item with the matching ID. """
  BankAccount(where: BankAccountWhereUniqueInput!): BankAccount

  """ Perform a meta-query on all BankAccount items which match the where clause. 
  """
  _allBankAccountsMeta(where: BankAccountWhereInput, search: String, sortBy: [SortBankAccountsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankAccount list. """
  _BankAccountsMeta: _ListMeta

  """ Search for all BankCategoryHistoryRecord items which match the where clause. 
  """
  allBankCategoryHistoryRecords(where: BankCategoryHistoryRecordWhereInput, search: String, sortBy: [SortBankCategoryHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankCategoryHistoryRecord]

  """ Search for the BankCategoryHistoryRecord item with the matching ID. """
  BankCategoryHistoryRecord(where: BankCategoryHistoryRecordWhereUniqueInput!): BankCategoryHistoryRecord

  """ Perform a meta-query on all BankCategoryHistoryRecord items which match the where clause. 
  """
  _allBankCategoryHistoryRecordsMeta(where: BankCategoryHistoryRecordWhereInput, search: String, sortBy: [SortBankCategoryHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankCategoryHistoryRecord list. """
  _BankCategoryHistoryRecordsMeta: _ListMeta

  """ Search for all BankCategory items which match the where clause. """
  allBankCategories(where: BankCategoryWhereInput, search: String, sortBy: [SortBankCategoriesBy!], orderBy: String, first: Int, skip: Int): [BankCategory]

  """ Search for the BankCategory item with the matching ID. """
  BankCategory(where: BankCategoryWhereUniqueInput!): BankCategory

  """ Perform a meta-query on all BankCategory items which match the where clause. 
  """
  _allBankCategoriesMeta(where: BankCategoryWhereInput, search: String, sortBy: [SortBankCategoriesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankCategory list. """
  _BankCategoriesMeta: _ListMeta

  """ Search for all BankCostItemHistoryRecord items which match the where clause. 
  """
  allBankCostItemHistoryRecords(where: BankCostItemHistoryRecordWhereInput, search: String, sortBy: [SortBankCostItemHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankCostItemHistoryRecord]

  """ Search for the BankCostItemHistoryRecord item with the matching ID. """
  BankCostItemHistoryRecord(where: BankCostItemHistoryRecordWhereUniqueInput!): BankCostItemHistoryRecord

  """ Perform a meta-query on all BankCostItemHistoryRecord items which match the where clause. 
  """
  _allBankCostItemHistoryRecordsMeta(where: BankCostItemHistoryRecordWhereInput, search: String, sortBy: [SortBankCostItemHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankCostItemHistoryRecord list. """
  _BankCostItemHistoryRecordsMeta: _ListMeta

  """ Search for all BankCostItem items which match the where clause. """
  allBankCostItems(where: BankCostItemWhereInput, search: String, sortBy: [SortBankCostItemsBy!], orderBy: String, first: Int, skip: Int): [BankCostItem]

  """ Search for the BankCostItem item with the matching ID. """
  BankCostItem(where: BankCostItemWhereUniqueInput!): BankCostItem

  """ Perform a meta-query on all BankCostItem items which match the where clause. 
  """
  _allBankCostItemsMeta(where: BankCostItemWhereInput, search: String, sortBy: [SortBankCostItemsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankCostItem list. """
  _BankCostItemsMeta: _ListMeta

  """ Search for all BankContractorAccountHistoryRecord items which match the where clause. 
  """
  allBankContractorAccountHistoryRecords(where: BankContractorAccountHistoryRecordWhereInput, search: String, sortBy: [SortBankContractorAccountHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankContractorAccountHistoryRecord]

  """ Search for the BankContractorAccountHistoryRecord item with the matching ID. 
  """
  BankContractorAccountHistoryRecord(where: BankContractorAccountHistoryRecordWhereUniqueInput!): BankContractorAccountHistoryRecord

  """ Perform a meta-query on all BankContractorAccountHistoryRecord items which match the where clause. 
  """
  _allBankContractorAccountHistoryRecordsMeta(where: BankContractorAccountHistoryRecordWhereInput, search: String, sortBy: [SortBankContractorAccountHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankContractorAccountHistoryRecord list. 
  """
  _BankContractorAccountHistoryRecordsMeta: _ListMeta

  """ Search for all BankContractorAccount items which match the where clause. 
  """
  allBankContractorAccounts(where: BankContractorAccountWhereInput, search: String, sortBy: [SortBankContractorAccountsBy!], orderBy: String, first: Int, skip: Int): [BankContractorAccount]

  """ Search for the BankContractorAccount item with the matching ID. """
  BankContractorAccount(where: BankContractorAccountWhereUniqueInput!): BankContractorAccount

  """ Perform a meta-query on all BankContractorAccount items which match the where clause. 
  """
  _allBankContractorAccountsMeta(where: BankContractorAccountWhereInput, search: String, sortBy: [SortBankContractorAccountsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankContractorAccount list. """
  _BankContractorAccountsMeta: _ListMeta

  """ Search for all BankIntegrationHistoryRecord items which match the where clause. 
  """
  allBankIntegrationHistoryRecords(where: BankIntegrationHistoryRecordWhereInput, search: String, sortBy: [SortBankIntegrationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankIntegrationHistoryRecord]

  """ Search for the BankIntegrationHistoryRecord item with the matching ID. 
  """
  BankIntegrationHistoryRecord(where: BankIntegrationHistoryRecordWhereUniqueInput!): BankIntegrationHistoryRecord

  """ Perform a meta-query on all BankIntegrationHistoryRecord items which match the where clause. 
  """
  _allBankIntegrationHistoryRecordsMeta(where: BankIntegrationHistoryRecordWhereInput, search: String, sortBy: [SortBankIntegrationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankIntegrationHistoryRecord list. """
  _BankIntegrationHistoryRecordsMeta: _ListMeta

  """ Search for all BankIntegration items which match the where clause. """
  allBankIntegrations(where: BankIntegrationWhereInput, search: String, sortBy: [SortBankIntegrationsBy!], orderBy: String, first: Int, skip: Int): [BankIntegration]

  """ Search for the BankIntegration item with the matching ID. """
  BankIntegration(where: BankIntegrationWhereUniqueInput!): BankIntegration

  """ Perform a meta-query on all BankIntegration items which match the where clause. 
  """
  _allBankIntegrationsMeta(where: BankIntegrationWhereInput, search: String, sortBy: [SortBankIntegrationsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankIntegration list. """
  _BankIntegrationsMeta: _ListMeta

  """ Search for all BankIntegrationContextHistoryRecord items which match the where clause. 
  """
  allBankIntegrationContextHistoryRecords(where: BankIntegrationContextHistoryRecordWhereInput, search: String, sortBy: [SortBankIntegrationContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankIntegrationContextHistoryRecord]

  """ Search for the BankIntegrationContextHistoryRecord item with the matching ID. 
  """
  BankIntegrationContextHistoryRecord(where: BankIntegrationContextHistoryRecordWhereUniqueInput!): BankIntegrationContextHistoryRecord

  """ Perform a meta-query on all BankIntegrationContextHistoryRecord items which match the where clause. 
  """
  _allBankIntegrationContextHistoryRecordsMeta(where: BankIntegrationContextHistoryRecordWhereInput, search: String, sortBy: [SortBankIntegrationContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankIntegrationContextHistoryRecord list. 
  """
  _BankIntegrationContextHistoryRecordsMeta: _ListMeta

  """ Search for all BankIntegrationContext items which match the where clause. 
  """
  allBankIntegrationContexts(where: BankIntegrationContextWhereInput, search: String, sortBy: [SortBankIntegrationContextsBy!], orderBy: String, first: Int, skip: Int): [BankIntegrationContext]

  """ Search for the BankIntegrationContext item with the matching ID. """
  BankIntegrationContext(where: BankIntegrationContextWhereUniqueInput!): BankIntegrationContext

  """ Perform a meta-query on all BankIntegrationContext items which match the where clause. 
  """
  _allBankIntegrationContextsMeta(where: BankIntegrationContextWhereInput, search: String, sortBy: [SortBankIntegrationContextsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankIntegrationContext list. """
  _BankIntegrationContextsMeta: _ListMeta

  """ Search for all BankTransactionHistoryRecord items which match the where clause. 
  """
  allBankTransactionHistoryRecords(where: BankTransactionHistoryRecordWhereInput, search: String, sortBy: [SortBankTransactionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [BankTransactionHistoryRecord]

  """ Search for the BankTransactionHistoryRecord item with the matching ID. 
  """
  BankTransactionHistoryRecord(where: BankTransactionHistoryRecordWhereUniqueInput!): BankTransactionHistoryRecord

  """ Perform a meta-query on all BankTransactionHistoryRecord items which match the where clause. 
  """
  _allBankTransactionHistoryRecordsMeta(where: BankTransactionHistoryRecordWhereInput, search: String, sortBy: [SortBankTransactionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankTransactionHistoryRecord list. """
  _BankTransactionHistoryRecordsMeta: _ListMeta

  """ Search for all BankTransaction items which match the where clause. """
  allBankTransactions(where: BankTransactionWhereInput, search: String, sortBy: [SortBankTransactionsBy!], orderBy: String, first: Int, skip: Int): [BankTransaction]

  """ Search for the BankTransaction item with the matching ID. """
  BankTransaction(where: BankTransactionWhereUniqueInput!): BankTransaction

  """ Perform a meta-query on all BankTransaction items which match the where clause. 
  """
  _allBankTransactionsMeta(where: BankTransactionWhereInput, search: String, sortBy: [SortBankTransactionsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the BankTransaction list. """
  _BankTransactionsMeta: _ListMeta

  """ Search for all TicketHistoryRecord items which match the where clause. 
  """
  allTicketHistoryRecords(where: TicketHistoryRecordWhereInput, search: String, sortBy: [SortTicketHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketHistoryRecord]

  """ Search for the TicketHistoryRecord item with the matching ID. """
  TicketHistoryRecord(where: TicketHistoryRecordWhereUniqueInput!): TicketHistoryRecord

  """ Perform a meta-query on all TicketHistoryRecord items which match the where clause. 
  """
  _allTicketHistoryRecordsMeta(where: TicketHistoryRecordWhereInput, search: String, sortBy: [SortTicketHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketHistoryRecord list. """
  _TicketHistoryRecordsMeta: _ListMeta

  """ Search for all Ticket items which match the where clause. """
  allTickets(where: TicketWhereInput, search: String, sortBy: [SortTicketsBy!], orderBy: String, first: Int, skip: Int): [Ticket]

  """ Search for the Ticket item with the matching ID. """
  Ticket(where: TicketWhereUniqueInput!): Ticket

  """ Perform a meta-query on all Ticket items which match the where clause. 
  """
  _allTicketsMeta(where: TicketWhereInput, search: String, sortBy: [SortTicketsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Ticket list. """
  _TicketsMeta: _ListMeta

  """ Search for all TicketSourceHistoryRecord items which match the where clause. 
  """
  allTicketSourceHistoryRecords(where: TicketSourceHistoryRecordWhereInput, search: String, sortBy: [SortTicketSourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketSourceHistoryRecord]

  """ Search for the TicketSourceHistoryRecord item with the matching ID. """
  TicketSourceHistoryRecord(where: TicketSourceHistoryRecordWhereUniqueInput!): TicketSourceHistoryRecord

  """ Perform a meta-query on all TicketSourceHistoryRecord items which match the where clause. 
  """
  _allTicketSourceHistoryRecordsMeta(where: TicketSourceHistoryRecordWhereInput, search: String, sortBy: [SortTicketSourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketSourceHistoryRecord list. """
  _TicketSourceHistoryRecordsMeta: _ListMeta

  """ Search for all TicketSource items which match the where clause. """
  allTicketSources(where: TicketSourceWhereInput, search: String, sortBy: [SortTicketSourcesBy!], orderBy: String, first: Int, skip: Int): [TicketSource]

  """ Search for the TicketSource item with the matching ID. """
  TicketSource(where: TicketSourceWhereUniqueInput!): TicketSource

  """ Perform a meta-query on all TicketSource items which match the where clause. 
  """
  _allTicketSourcesMeta(where: TicketSourceWhereInput, search: String, sortBy: [SortTicketSourcesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketSource list. """
  _TicketSourcesMeta: _ListMeta

  """ Search for all TicketStatusHistoryRecord items which match the where clause. 
  """
  allTicketStatusHistoryRecords(where: TicketStatusHistoryRecordWhereInput, search: String, sortBy: [SortTicketStatusHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketStatusHistoryRecord]

  """ Search for the TicketStatusHistoryRecord item with the matching ID. """
  TicketStatusHistoryRecord(where: TicketStatusHistoryRecordWhereUniqueInput!): TicketStatusHistoryRecord

  """ Perform a meta-query on all TicketStatusHistoryRecord items which match the where clause. 
  """
  _allTicketStatusHistoryRecordsMeta(where: TicketStatusHistoryRecordWhereInput, search: String, sortBy: [SortTicketStatusHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketStatusHistoryRecord list. """
  _TicketStatusHistoryRecordsMeta: _ListMeta

  """ Search for all TicketStatus items which match the where clause. """
  allTicketStatuses(where: TicketStatusWhereInput, search: String, sortBy: [SortTicketStatusesBy!], orderBy: String, first: Int, skip: Int): [TicketStatus]

  """ Search for the TicketStatus item with the matching ID. """
  TicketStatus(where: TicketStatusWhereUniqueInput!): TicketStatus

  """ Perform a meta-query on all TicketStatus items which match the where clause. 
  """
  _allTicketStatusesMeta(where: TicketStatusWhereInput, search: String, sortBy: [SortTicketStatusesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketStatus list. """
  _TicketStatusesMeta: _ListMeta

  """ Search for all TicketFileHistoryRecord items which match the where clause. 
  """
  allTicketFileHistoryRecords(where: TicketFileHistoryRecordWhereInput, search: String, sortBy: [SortTicketFileHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketFileHistoryRecord]

  """ Search for the TicketFileHistoryRecord item with the matching ID. """
  TicketFileHistoryRecord(where: TicketFileHistoryRecordWhereUniqueInput!): TicketFileHistoryRecord

  """ Perform a meta-query on all TicketFileHistoryRecord items which match the where clause. 
  """
  _allTicketFileHistoryRecordsMeta(where: TicketFileHistoryRecordWhereInput, search: String, sortBy: [SortTicketFileHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketFileHistoryRecord list. """
  _TicketFileHistoryRecordsMeta: _ListMeta

  """ Search for all TicketFile items which match the where clause. """
  allTicketFiles(where: TicketFileWhereInput, search: String, sortBy: [SortTicketFilesBy!], orderBy: String, first: Int, skip: Int): [TicketFile]

  """ Search for the TicketFile item with the matching ID. """
  TicketFile(where: TicketFileWhereUniqueInput!): TicketFile

  """ Perform a meta-query on all TicketFile items which match the where clause. 
  """
  _allTicketFilesMeta(where: TicketFileWhereInput, search: String, sortBy: [SortTicketFilesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketFile list. """
  _TicketFilesMeta: _ListMeta

  """ Search for all TicketChange items which match the where clause. """
  allTicketChanges(where: TicketChangeWhereInput, search: String, sortBy: [SortTicketChangesBy!], orderBy: String, first: Int, skip: Int): [TicketChange]

  """ Search for the TicketChange item with the matching ID. """
  TicketChange(where: TicketChangeWhereUniqueInput!): TicketChange

  """ Perform a meta-query on all TicketChange items which match the where clause. 
  """
  _allTicketChangesMeta(where: TicketChangeWhereInput, search: String, sortBy: [SortTicketChangesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketChange list. """
  _TicketChangesMeta: _ListMeta

  """ Search for all TicketCommentHistoryRecord items which match the where clause. 
  """
  allTicketCommentHistoryRecords(where: TicketCommentHistoryRecordWhereInput, search: String, sortBy: [SortTicketCommentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketCommentHistoryRecord]

  """ Search for the TicketCommentHistoryRecord item with the matching ID. """
  TicketCommentHistoryRecord(where: TicketCommentHistoryRecordWhereUniqueInput!): TicketCommentHistoryRecord

  """ Perform a meta-query on all TicketCommentHistoryRecord items which match the where clause. 
  """
  _allTicketCommentHistoryRecordsMeta(where: TicketCommentHistoryRecordWhereInput, search: String, sortBy: [SortTicketCommentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCommentHistoryRecord list. """
  _TicketCommentHistoryRecordsMeta: _ListMeta

  """ Search for all TicketComment items which match the where clause. """
  allTicketComments(where: TicketCommentWhereInput, search: String, sortBy: [SortTicketCommentsBy!], orderBy: String, first: Int, skip: Int): [TicketComment]

  """ Search for the TicketComment item with the matching ID. """
  TicketComment(where: TicketCommentWhereUniqueInput!): TicketComment

  """ Perform a meta-query on all TicketComment items which match the where clause. 
  """
  _allTicketCommentsMeta(where: TicketCommentWhereInput, search: String, sortBy: [SortTicketCommentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketComment list. """
  _TicketCommentsMeta: _ListMeta

  """ Search for all TicketPlaceClassifierHistoryRecord items which match the where clause. 
  """
  allTicketPlaceClassifierHistoryRecords(where: TicketPlaceClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketPlaceClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketPlaceClassifierHistoryRecord]

  """ Search for the TicketPlaceClassifierHistoryRecord item with the matching ID. 
  """
  TicketPlaceClassifierHistoryRecord(where: TicketPlaceClassifierHistoryRecordWhereUniqueInput!): TicketPlaceClassifierHistoryRecord

  """ Perform a meta-query on all TicketPlaceClassifierHistoryRecord items which match the where clause. 
  """
  _allTicketPlaceClassifierHistoryRecordsMeta(where: TicketPlaceClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketPlaceClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketPlaceClassifierHistoryRecord list. 
  """
  _TicketPlaceClassifierHistoryRecordsMeta: _ListMeta

  """ Search for all TicketPlaceClassifier items which match the where clause. 
  """
  allTicketPlaceClassifiers(where: TicketPlaceClassifierWhereInput, search: String, sortBy: [SortTicketPlaceClassifiersBy!], orderBy: String, first: Int, skip: Int): [TicketPlaceClassifier]

  """ Search for the TicketPlaceClassifier item with the matching ID. """
  TicketPlaceClassifier(where: TicketPlaceClassifierWhereUniqueInput!): TicketPlaceClassifier

  """ Perform a meta-query on all TicketPlaceClassifier items which match the where clause. 
  """
  _allTicketPlaceClassifiersMeta(where: TicketPlaceClassifierWhereInput, search: String, sortBy: [SortTicketPlaceClassifiersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketPlaceClassifier list. """
  _TicketPlaceClassifiersMeta: _ListMeta

  """ Search for all TicketCategoryClassifierHistoryRecord items which match the where clause. 
  """
  allTicketCategoryClassifierHistoryRecords(where: TicketCategoryClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketCategoryClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketCategoryClassifierHistoryRecord]

  """ Search for the TicketCategoryClassifierHistoryRecord item with the matching ID. 
  """
  TicketCategoryClassifierHistoryRecord(where: TicketCategoryClassifierHistoryRecordWhereUniqueInput!): TicketCategoryClassifierHistoryRecord

  """ Perform a meta-query on all TicketCategoryClassifierHistoryRecord items which match the where clause. 
  """
  _allTicketCategoryClassifierHistoryRecordsMeta(where: TicketCategoryClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketCategoryClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCategoryClassifierHistoryRecord list. 
  """
  _TicketCategoryClassifierHistoryRecordsMeta: _ListMeta

  """ Search for all TicketCategoryClassifier items which match the where clause. 
  """
  allTicketCategoryClassifiers(where: TicketCategoryClassifierWhereInput, search: String, sortBy: [SortTicketCategoryClassifiersBy!], orderBy: String, first: Int, skip: Int): [TicketCategoryClassifier]

  """ Search for the TicketCategoryClassifier item with the matching ID. """
  TicketCategoryClassifier(where: TicketCategoryClassifierWhereUniqueInput!): TicketCategoryClassifier

  """ Perform a meta-query on all TicketCategoryClassifier items which match the where clause. 
  """
  _allTicketCategoryClassifiersMeta(where: TicketCategoryClassifierWhereInput, search: String, sortBy: [SortTicketCategoryClassifiersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCategoryClassifier list. """
  _TicketCategoryClassifiersMeta: _ListMeta

  """ Search for all TicketProblemClassifierHistoryRecord items which match the where clause. 
  """
  allTicketProblemClassifierHistoryRecords(where: TicketProblemClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketProblemClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketProblemClassifierHistoryRecord]

  """ Search for the TicketProblemClassifierHistoryRecord item with the matching ID. 
  """
  TicketProblemClassifierHistoryRecord(where: TicketProblemClassifierHistoryRecordWhereUniqueInput!): TicketProblemClassifierHistoryRecord

  """ Perform a meta-query on all TicketProblemClassifierHistoryRecord items which match the where clause. 
  """
  _allTicketProblemClassifierHistoryRecordsMeta(where: TicketProblemClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketProblemClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketProblemClassifierHistoryRecord list. 
  """
  _TicketProblemClassifierHistoryRecordsMeta: _ListMeta

  """ Search for all TicketProblemClassifier items which match the where clause. 
  """
  allTicketProblemClassifiers(where: TicketProblemClassifierWhereInput, search: String, sortBy: [SortTicketProblemClassifiersBy!], orderBy: String, first: Int, skip: Int): [TicketProblemClassifier]

  """ Search for the TicketProblemClassifier item with the matching ID. """
  TicketProblemClassifier(where: TicketProblemClassifierWhereUniqueInput!): TicketProblemClassifier

  """ Perform a meta-query on all TicketProblemClassifier items which match the where clause. 
  """
  _allTicketProblemClassifiersMeta(where: TicketProblemClassifierWhereInput, search: String, sortBy: [SortTicketProblemClassifiersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketProblemClassifier list. """
  _TicketProblemClassifiersMeta: _ListMeta

  """ Search for all TicketClassifierHistoryRecord items which match the where clause. 
  """
  allTicketClassifierHistoryRecords(where: TicketClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketClassifierHistoryRecord]

  """ Search for the TicketClassifierHistoryRecord item with the matching ID. 
  """
  TicketClassifierHistoryRecord(where: TicketClassifierHistoryRecordWhereUniqueInput!): TicketClassifierHistoryRecord

  """ Perform a meta-query on all TicketClassifierHistoryRecord items which match the where clause. 
  """
  _allTicketClassifierHistoryRecordsMeta(where: TicketClassifierHistoryRecordWhereInput, search: String, sortBy: [SortTicketClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketClassifierHistoryRecord list. """
  _TicketClassifierHistoryRecordsMeta: _ListMeta

  """ Search for all TicketClassifier items which match the where clause. """
  allTicketClassifiers(where: TicketClassifierWhereInput, search: String, sortBy: [SortTicketClassifiersBy!], orderBy: String, first: Int, skip: Int): [TicketClassifier]

  """ Search for the TicketClassifier item with the matching ID. """
  TicketClassifier(where: TicketClassifierWhereUniqueInput!): TicketClassifier

  """ Perform a meta-query on all TicketClassifier items which match the where clause. 
  """
  _allTicketClassifiersMeta(where: TicketClassifierWhereInput, search: String, sortBy: [SortTicketClassifiersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketClassifier list. """
  _TicketClassifiersMeta: _ListMeta

  """ Search for all TicketFilterTemplateHistoryRecord items which match the where clause. 
  """
  allTicketFilterTemplateHistoryRecords(where: TicketFilterTemplateHistoryRecordWhereInput, search: String, sortBy: [SortTicketFilterTemplateHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketFilterTemplateHistoryRecord]

  """ Search for the TicketFilterTemplateHistoryRecord item with the matching ID. 
  """
  TicketFilterTemplateHistoryRecord(where: TicketFilterTemplateHistoryRecordWhereUniqueInput!): TicketFilterTemplateHistoryRecord

  """ Perform a meta-query on all TicketFilterTemplateHistoryRecord items which match the where clause. 
  """
  _allTicketFilterTemplateHistoryRecordsMeta(where: TicketFilterTemplateHistoryRecordWhereInput, search: String, sortBy: [SortTicketFilterTemplateHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketFilterTemplateHistoryRecord list. 
  """
  _TicketFilterTemplateHistoryRecordsMeta: _ListMeta

  """ Search for all TicketFilterTemplate items which match the where clause. 
  """
  allTicketFilterTemplates(where: TicketFilterTemplateWhereInput, search: String, sortBy: [SortTicketFilterTemplatesBy!], orderBy: String, first: Int, skip: Int): [TicketFilterTemplate]

  """ Search for the TicketFilterTemplate item with the matching ID. """
  TicketFilterTemplate(where: TicketFilterTemplateWhereUniqueInput!): TicketFilterTemplate

  """ Perform a meta-query on all TicketFilterTemplate items which match the where clause. 
  """
  _allTicketFilterTemplatesMeta(where: TicketFilterTemplateWhereInput, search: String, sortBy: [SortTicketFilterTemplatesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketFilterTemplate list. """
  _TicketFilterTemplatesMeta: _ListMeta

  """ Search for all TicketCommentFileHistoryRecord items which match the where clause. 
  """
  allTicketCommentFileHistoryRecords(where: TicketCommentFileHistoryRecordWhereInput, search: String, sortBy: [SortTicketCommentFileHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketCommentFileHistoryRecord]

  """ Search for the TicketCommentFileHistoryRecord item with the matching ID. 
  """
  TicketCommentFileHistoryRecord(where: TicketCommentFileHistoryRecordWhereUniqueInput!): TicketCommentFileHistoryRecord

  """ Perform a meta-query on all TicketCommentFileHistoryRecord items which match the where clause. 
  """
  _allTicketCommentFileHistoryRecordsMeta(where: TicketCommentFileHistoryRecordWhereInput, search: String, sortBy: [SortTicketCommentFileHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCommentFileHistoryRecord list. """
  _TicketCommentFileHistoryRecordsMeta: _ListMeta

  """ Search for all TicketCommentFile items which match the where clause. """
  allTicketCommentFiles(where: TicketCommentFileWhereInput, search: String, sortBy: [SortTicketCommentFilesBy!], orderBy: String, first: Int, skip: Int): [TicketCommentFile]

  """ Search for the TicketCommentFile item with the matching ID. """
  TicketCommentFile(where: TicketCommentFileWhereUniqueInput!): TicketCommentFile

  """ Perform a meta-query on all TicketCommentFile items which match the where clause. 
  """
  _allTicketCommentFilesMeta(where: TicketCommentFileWhereInput, search: String, sortBy: [SortTicketCommentFilesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCommentFile list. """
  _TicketCommentFilesMeta: _ListMeta

  """ Search for all TicketCommentsTimeHistoryRecord items which match the where clause. 
  """
  allTicketCommentsTimeHistoryRecords(where: TicketCommentsTimeHistoryRecordWhereInput, search: String, sortBy: [SortTicketCommentsTimeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketCommentsTimeHistoryRecord]

  """ Search for the TicketCommentsTimeHistoryRecord item with the matching ID. 
  """
  TicketCommentsTimeHistoryRecord(where: TicketCommentsTimeHistoryRecordWhereUniqueInput!): TicketCommentsTimeHistoryRecord

  """ Perform a meta-query on all TicketCommentsTimeHistoryRecord items which match the where clause. 
  """
  _allTicketCommentsTimeHistoryRecordsMeta(where: TicketCommentsTimeHistoryRecordWhereInput, search: String, sortBy: [SortTicketCommentsTimeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCommentsTimeHistoryRecord list. """
  _TicketCommentsTimeHistoryRecordsMeta: _ListMeta

  """ Search for all TicketCommentsTime items which match the where clause. 
  """
  allTicketCommentsTimes(where: TicketCommentsTimeWhereInput, search: String, sortBy: [SortTicketCommentsTimesBy!], orderBy: String, first: Int, skip: Int): [TicketCommentsTime]

  """ Search for the TicketCommentsTime item with the matching ID. """
  TicketCommentsTime(where: TicketCommentsTimeWhereUniqueInput!): TicketCommentsTime

  """ Perform a meta-query on all TicketCommentsTime items which match the where clause. 
  """
  _allTicketCommentsTimesMeta(where: TicketCommentsTimeWhereInput, search: String, sortBy: [SortTicketCommentsTimesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketCommentsTime list. """
  _TicketCommentsTimesMeta: _ListMeta

  """ Search for all UserTicketCommentReadTimeHistoryRecord items which match the where clause. 
  """
  allUserTicketCommentReadTimeHistoryRecords(where: UserTicketCommentReadTimeHistoryRecordWhereInput, search: String, sortBy: [SortUserTicketCommentReadTimeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [UserTicketCommentReadTimeHistoryRecord]

  """ Search for the UserTicketCommentReadTimeHistoryRecord item with the matching ID. 
  """
  UserTicketCommentReadTimeHistoryRecord(where: UserTicketCommentReadTimeHistoryRecordWhereUniqueInput!): UserTicketCommentReadTimeHistoryRecord

  """ Perform a meta-query on all UserTicketCommentReadTimeHistoryRecord items which match the where clause. 
  """
  _allUserTicketCommentReadTimeHistoryRecordsMeta(where: UserTicketCommentReadTimeHistoryRecordWhereInput, search: String, sortBy: [SortUserTicketCommentReadTimeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the UserTicketCommentReadTimeHistoryRecord list. 
  """
  _UserTicketCommentReadTimeHistoryRecordsMeta: _ListMeta

  """ Search for all UserTicketCommentReadTime items which match the where clause. 
  """
  allUserTicketCommentReadTimes(where: UserTicketCommentReadTimeWhereInput, search: String, sortBy: [SortUserTicketCommentReadTimesBy!], orderBy: String, first: Int, skip: Int): [UserTicketCommentReadTime]

  """ Search for the UserTicketCommentReadTime item with the matching ID. """
  UserTicketCommentReadTime(where: UserTicketCommentReadTimeWhereUniqueInput!): UserTicketCommentReadTime

  """ Perform a meta-query on all UserTicketCommentReadTime items which match the where clause. 
  """
  _allUserTicketCommentReadTimesMeta(where: UserTicketCommentReadTimeWhereInput, search: String, sortBy: [SortUserTicketCommentReadTimesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the UserTicketCommentReadTime list. """
  _UserTicketCommentReadTimesMeta: _ListMeta

  """ Search for all TicketPropertyHintHistoryRecord items which match the where clause. 
  """
  allTicketPropertyHintHistoryRecords(where: TicketPropertyHintHistoryRecordWhereInput, search: String, sortBy: [SortTicketPropertyHintHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketPropertyHintHistoryRecord]

  """ Search for the TicketPropertyHintHistoryRecord item with the matching ID. 
  """
  TicketPropertyHintHistoryRecord(where: TicketPropertyHintHistoryRecordWhereUniqueInput!): TicketPropertyHintHistoryRecord

  """ Perform a meta-query on all TicketPropertyHintHistoryRecord items which match the where clause. 
  """
  _allTicketPropertyHintHistoryRecordsMeta(where: TicketPropertyHintHistoryRecordWhereInput, search: String, sortBy: [SortTicketPropertyHintHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketPropertyHintHistoryRecord list. """
  _TicketPropertyHintHistoryRecordsMeta: _ListMeta

  """ Search for all TicketPropertyHint items which match the where clause. 
  """
  allTicketPropertyHints(where: TicketPropertyHintWhereInput, search: String, sortBy: [SortTicketPropertyHintsBy!], orderBy: String, first: Int, skip: Int): [TicketPropertyHint]

  """ Search for the TicketPropertyHint item with the matching ID. """
  TicketPropertyHint(where: TicketPropertyHintWhereUniqueInput!): TicketPropertyHint

  """ Perform a meta-query on all TicketPropertyHint items which match the where clause. 
  """
  _allTicketPropertyHintsMeta(where: TicketPropertyHintWhereInput, search: String, sortBy: [SortTicketPropertyHintsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketPropertyHint list. """
  _TicketPropertyHintsMeta: _ListMeta

  """ Search for all TicketPropertyHintPropertyHistoryRecord items which match the where clause. 
  """
  allTicketPropertyHintPropertyHistoryRecords(where: TicketPropertyHintPropertyHistoryRecordWhereInput, search: String, sortBy: [SortTicketPropertyHintPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketPropertyHintPropertyHistoryRecord]

  """ Search for the TicketPropertyHintPropertyHistoryRecord item with the matching ID. 
  """
  TicketPropertyHintPropertyHistoryRecord(where: TicketPropertyHintPropertyHistoryRecordWhereUniqueInput!): TicketPropertyHintPropertyHistoryRecord

  """ Perform a meta-query on all TicketPropertyHintPropertyHistoryRecord items which match the where clause. 
  """
  _allTicketPropertyHintPropertyHistoryRecordsMeta(where: TicketPropertyHintPropertyHistoryRecordWhereInput, search: String, sortBy: [SortTicketPropertyHintPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketPropertyHintPropertyHistoryRecord list. 
  """
  _TicketPropertyHintPropertyHistoryRecordsMeta: _ListMeta

  """ Search for all TicketPropertyHintProperty items which match the where clause. 
  """
  allTicketPropertyHintProperties(where: TicketPropertyHintPropertyWhereInput, search: String, sortBy: [SortTicketPropertyHintPropertiesBy!], orderBy: String, first: Int, skip: Int): [TicketPropertyHintProperty]

  """ Search for the TicketPropertyHintProperty item with the matching ID. """
  TicketPropertyHintProperty(where: TicketPropertyHintPropertyWhereUniqueInput!): TicketPropertyHintProperty

  """ Perform a meta-query on all TicketPropertyHintProperty items which match the where clause. 
  """
  _allTicketPropertyHintPropertiesMeta(where: TicketPropertyHintPropertyWhereInput, search: String, sortBy: [SortTicketPropertyHintPropertiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketPropertyHintProperty list. """
  _TicketPropertyHintPropertiesMeta: _ListMeta

  """ Search for all TicketExportTaskHistoryRecord items which match the where clause. 
  """
  allTicketExportTaskHistoryRecords(where: TicketExportTaskHistoryRecordWhereInput, search: String, sortBy: [SortTicketExportTaskHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketExportTaskHistoryRecord]

  """ Search for the TicketExportTaskHistoryRecord item with the matching ID. 
  """
  TicketExportTaskHistoryRecord(where: TicketExportTaskHistoryRecordWhereUniqueInput!): TicketExportTaskHistoryRecord

  """ Perform a meta-query on all TicketExportTaskHistoryRecord items which match the where clause. 
  """
  _allTicketExportTaskHistoryRecordsMeta(where: TicketExportTaskHistoryRecordWhereInput, search: String, sortBy: [SortTicketExportTaskHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketExportTaskHistoryRecord list. """
  _TicketExportTaskHistoryRecordsMeta: _ListMeta

  """ Search for all TicketExportTask items which match the where clause. """
  allTicketExportTasks(where: TicketExportTaskWhereInput, search: String, sortBy: [SortTicketExportTasksBy!], orderBy: String, first: Int, skip: Int): [TicketExportTask]

  """ Search for the TicketExportTask item with the matching ID. """
  TicketExportTask(where: TicketExportTaskWhereUniqueInput!): TicketExportTask

  """ Perform a meta-query on all TicketExportTask items which match the where clause. 
  """
  _allTicketExportTasksMeta(where: TicketExportTaskWhereInput, search: String, sortBy: [SortTicketExportTasksBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketExportTask list. """
  _TicketExportTasksMeta: _ListMeta

  """ Search for all TicketOrganizationSettingHistoryRecord items which match the where clause. 
  """
  allTicketOrganizationSettingHistoryRecords(where: TicketOrganizationSettingHistoryRecordWhereInput, search: String, sortBy: [SortTicketOrganizationSettingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [TicketOrganizationSettingHistoryRecord]

  """ Search for the TicketOrganizationSettingHistoryRecord item with the matching ID. 
  """
  TicketOrganizationSettingHistoryRecord(where: TicketOrganizationSettingHistoryRecordWhereUniqueInput!): TicketOrganizationSettingHistoryRecord

  """ Perform a meta-query on all TicketOrganizationSettingHistoryRecord items which match the where clause. 
  """
  _allTicketOrganizationSettingHistoryRecordsMeta(where: TicketOrganizationSettingHistoryRecordWhereInput, search: String, sortBy: [SortTicketOrganizationSettingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketOrganizationSettingHistoryRecord list. 
  """
  _TicketOrganizationSettingHistoryRecordsMeta: _ListMeta

  """ Search for all TicketOrganizationSetting items which match the where clause. 
  """
  allTicketOrganizationSettings(where: TicketOrganizationSettingWhereInput, search: String, sortBy: [SortTicketOrganizationSettingsBy!], orderBy: String, first: Int, skip: Int): [TicketOrganizationSetting]

  """ Search for the TicketOrganizationSetting item with the matching ID. """
  TicketOrganizationSetting(where: TicketOrganizationSettingWhereUniqueInput!): TicketOrganizationSetting

  """ Perform a meta-query on all TicketOrganizationSetting items which match the where clause. 
  """
  _allTicketOrganizationSettingsMeta(where: TicketOrganizationSettingWhereInput, search: String, sortBy: [SortTicketOrganizationSettingsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the TicketOrganizationSetting list. """
  _TicketOrganizationSettingsMeta: _ListMeta

  """ Search for all IncidentHistoryRecord items which match the where clause. 
  """
  allIncidentHistoryRecords(where: IncidentHistoryRecordWhereInput, search: String, sortBy: [SortIncidentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [IncidentHistoryRecord]

  """ Search for the IncidentHistoryRecord item with the matching ID. """
  IncidentHistoryRecord(where: IncidentHistoryRecordWhereUniqueInput!): IncidentHistoryRecord

  """ Perform a meta-query on all IncidentHistoryRecord items which match the where clause. 
  """
  _allIncidentHistoryRecordsMeta(where: IncidentHistoryRecordWhereInput, search: String, sortBy: [SortIncidentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentHistoryRecord list. """
  _IncidentHistoryRecordsMeta: _ListMeta

  """ Search for all Incident items which match the where clause. """
  allIncidents(where: IncidentWhereInput, search: String, sortBy: [SortIncidentsBy!], orderBy: String, first: Int, skip: Int): [Incident]

  """ Search for the Incident item with the matching ID. """
  Incident(where: IncidentWhereUniqueInput!): Incident

  """ Perform a meta-query on all Incident items which match the where clause. 
  """
  _allIncidentsMeta(where: IncidentWhereInput, search: String, sortBy: [SortIncidentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Incident list. """
  _IncidentsMeta: _ListMeta

  """ Search for all IncidentChange items which match the where clause. """
  allIncidentChanges(where: IncidentChangeWhereInput, search: String, sortBy: [SortIncidentChangesBy!], orderBy: String, first: Int, skip: Int): [IncidentChange]

  """ Search for the IncidentChange item with the matching ID. """
  IncidentChange(where: IncidentChangeWhereUniqueInput!): IncidentChange

  """ Perform a meta-query on all IncidentChange items which match the where clause. 
  """
  _allIncidentChangesMeta(where: IncidentChangeWhereInput, search: String, sortBy: [SortIncidentChangesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentChange list. """
  _IncidentChangesMeta: _ListMeta

  """ Search for all IncidentPropertyHistoryRecord items which match the where clause. 
  """
  allIncidentPropertyHistoryRecords(where: IncidentPropertyHistoryRecordWhereInput, search: String, sortBy: [SortIncidentPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [IncidentPropertyHistoryRecord]

  """ Search for the IncidentPropertyHistoryRecord item with the matching ID. 
  """
  IncidentPropertyHistoryRecord(where: IncidentPropertyHistoryRecordWhereUniqueInput!): IncidentPropertyHistoryRecord

  """ Perform a meta-query on all IncidentPropertyHistoryRecord items which match the where clause. 
  """
  _allIncidentPropertyHistoryRecordsMeta(where: IncidentPropertyHistoryRecordWhereInput, search: String, sortBy: [SortIncidentPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentPropertyHistoryRecord list. """
  _IncidentPropertyHistoryRecordsMeta: _ListMeta

  """ Search for all IncidentProperty items which match the where clause. """
  allIncidentProperties(where: IncidentPropertyWhereInput, search: String, sortBy: [SortIncidentPropertiesBy!], orderBy: String, first: Int, skip: Int): [IncidentProperty]

  """ Search for the IncidentProperty item with the matching ID. """
  IncidentProperty(where: IncidentPropertyWhereUniqueInput!): IncidentProperty

  """ Perform a meta-query on all IncidentProperty items which match the where clause. 
  """
  _allIncidentPropertiesMeta(where: IncidentPropertyWhereInput, search: String, sortBy: [SortIncidentPropertiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentProperty list. """
  _IncidentPropertiesMeta: _ListMeta

  """ Search for all IncidentClassifierHistoryRecord items which match the where clause. 
  """
  allIncidentClassifierHistoryRecords(where: IncidentClassifierHistoryRecordWhereInput, search: String, sortBy: [SortIncidentClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [IncidentClassifierHistoryRecord]

  """ Search for the IncidentClassifierHistoryRecord item with the matching ID. 
  """
  IncidentClassifierHistoryRecord(where: IncidentClassifierHistoryRecordWhereUniqueInput!): IncidentClassifierHistoryRecord

  """ Perform a meta-query on all IncidentClassifierHistoryRecord items which match the where clause. 
  """
  _allIncidentClassifierHistoryRecordsMeta(where: IncidentClassifierHistoryRecordWhereInput, search: String, sortBy: [SortIncidentClassifierHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentClassifierHistoryRecord list. """
  _IncidentClassifierHistoryRecordsMeta: _ListMeta

  """ Search for all IncidentClassifier items which match the where clause. 
  """
  allIncidentClassifiers(where: IncidentClassifierWhereInput, search: String, sortBy: [SortIncidentClassifiersBy!], orderBy: String, first: Int, skip: Int): [IncidentClassifier]

  """ Search for the IncidentClassifier item with the matching ID. """
  IncidentClassifier(where: IncidentClassifierWhereUniqueInput!): IncidentClassifier

  """ Perform a meta-query on all IncidentClassifier items which match the where clause. 
  """
  _allIncidentClassifiersMeta(where: IncidentClassifierWhereInput, search: String, sortBy: [SortIncidentClassifiersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentClassifier list. """
  _IncidentClassifiersMeta: _ListMeta

  """ Search for all IncidentClassifierIncidentHistoryRecord items which match the where clause. 
  """
  allIncidentClassifierIncidentHistoryRecords(where: IncidentClassifierIncidentHistoryRecordWhereInput, search: String, sortBy: [SortIncidentClassifierIncidentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [IncidentClassifierIncidentHistoryRecord]

  """ Search for the IncidentClassifierIncidentHistoryRecord item with the matching ID. 
  """
  IncidentClassifierIncidentHistoryRecord(where: IncidentClassifierIncidentHistoryRecordWhereUniqueInput!): IncidentClassifierIncidentHistoryRecord

  """ Perform a meta-query on all IncidentClassifierIncidentHistoryRecord items which match the where clause. 
  """
  _allIncidentClassifierIncidentHistoryRecordsMeta(where: IncidentClassifierIncidentHistoryRecordWhereInput, search: String, sortBy: [SortIncidentClassifierIncidentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentClassifierIncidentHistoryRecord list. 
  """
  _IncidentClassifierIncidentHistoryRecordsMeta: _ListMeta

  """ Search for all IncidentClassifierIncident items which match the where clause. 
  """
  allIncidentClassifierIncidents(where: IncidentClassifierIncidentWhereInput, search: String, sortBy: [SortIncidentClassifierIncidentsBy!], orderBy: String, first: Int, skip: Int): [IncidentClassifierIncident]

  """ Search for the IncidentClassifierIncident item with the matching ID. """
  IncidentClassifierIncident(where: IncidentClassifierIncidentWhereUniqueInput!): IncidentClassifierIncident

  """ Perform a meta-query on all IncidentClassifierIncident items which match the where clause. 
  """
  _allIncidentClassifierIncidentsMeta(where: IncidentClassifierIncidentWhereInput, search: String, sortBy: [SortIncidentClassifierIncidentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the IncidentClassifierIncident list. """
  _IncidentClassifierIncidentsMeta: _ListMeta

  """ Search for all MessageHistoryRecord items which match the where clause. 
  """
  allMessageHistoryRecords(where: MessageHistoryRecordWhereInput, search: String, sortBy: [SortMessageHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MessageHistoryRecord]

  """ Search for the MessageHistoryRecord item with the matching ID. """
  MessageHistoryRecord(where: MessageHistoryRecordWhereUniqueInput!): MessageHistoryRecord

  """ Perform a meta-query on all MessageHistoryRecord items which match the where clause. 
  """
  _allMessageHistoryRecordsMeta(where: MessageHistoryRecordWhereInput, search: String, sortBy: [SortMessageHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageHistoryRecord list. """
  _MessageHistoryRecordsMeta: _ListMeta

  """ Search for all Message items which match the where clause. """
  allMessages(where: MessageWhereInput, search: String, sortBy: [SortMessagesBy!], orderBy: String, first: Int, skip: Int): [Message]

  """ Search for the Message item with the matching ID. """
  Message(where: MessageWhereUniqueInput!): Message

  """ Perform a meta-query on all Message items which match the where clause. 
  """
  _allMessagesMeta(where: MessageWhereInput, search: String, sortBy: [SortMessagesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Message list. """
  _MessagesMeta: _ListMeta

  """ Search for all RemoteClientHistoryRecord items which match the where clause. 
  """
  allRemoteClientHistoryRecords(where: RemoteClientHistoryRecordWhereInput, search: String, sortBy: [SortRemoteClientHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [RemoteClientHistoryRecord]

  """ Search for the RemoteClientHistoryRecord item with the matching ID. """
  RemoteClientHistoryRecord(where: RemoteClientHistoryRecordWhereUniqueInput!): RemoteClientHistoryRecord

  """ Perform a meta-query on all RemoteClientHistoryRecord items which match the where clause. 
  """
  _allRemoteClientHistoryRecordsMeta(where: RemoteClientHistoryRecordWhereInput, search: String, sortBy: [SortRemoteClientHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the RemoteClientHistoryRecord list. """
  _RemoteClientHistoryRecordsMeta: _ListMeta

  """ Search for all RemoteClient items which match the where clause. """
  allRemoteClients(where: RemoteClientWhereInput, search: String, sortBy: [SortRemoteClientsBy!], orderBy: String, first: Int, skip: Int): [RemoteClient]

  """ Search for the RemoteClient item with the matching ID. """
  RemoteClient(where: RemoteClientWhereUniqueInput!): RemoteClient

  """ Perform a meta-query on all RemoteClient items which match the where clause. 
  """
  _allRemoteClientsMeta(where: RemoteClientWhereInput, search: String, sortBy: [SortRemoteClientsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the RemoteClient list. """
  _RemoteClientsMeta: _ListMeta

  """ Search for all MessageUserBlackListHistoryRecord items which match the where clause. 
  """
  allMessageUserBlackListHistoryRecords(where: MessageUserBlackListHistoryRecordWhereInput, search: String, sortBy: [SortMessageUserBlackListHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MessageUserBlackListHistoryRecord]

  """ Search for the MessageUserBlackListHistoryRecord item with the matching ID. 
  """
  MessageUserBlackListHistoryRecord(where: MessageUserBlackListHistoryRecordWhereUniqueInput!): MessageUserBlackListHistoryRecord

  """ Perform a meta-query on all MessageUserBlackListHistoryRecord items which match the where clause. 
  """
  _allMessageUserBlackListHistoryRecordsMeta(where: MessageUserBlackListHistoryRecordWhereInput, search: String, sortBy: [SortMessageUserBlackListHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageUserBlackListHistoryRecord list. 
  """
  _MessageUserBlackListHistoryRecordsMeta: _ListMeta

  """ Search for all MessageUserBlackList items which match the where clause. 
  """
  allMessageUserBlackLists(where: MessageUserBlackListWhereInput, search: String, sortBy: [SortMessageUserBlackListsBy!], orderBy: String, first: Int, skip: Int): [MessageUserBlackList]

  """ Search for the MessageUserBlackList item with the matching ID. """
  MessageUserBlackList(where: MessageUserBlackListWhereUniqueInput!): MessageUserBlackList

  """ Perform a meta-query on all MessageUserBlackList items which match the where clause. 
  """
  _allMessageUserBlackListsMeta(where: MessageUserBlackListWhereInput, search: String, sortBy: [SortMessageUserBlackListsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageUserBlackList list. """
  _MessageUserBlackListsMeta: _ListMeta

  """ Search for all MessageOrganizationBlackListHistoryRecord items which match the where clause. 
  """
  allMessageOrganizationBlackListHistoryRecords(where: MessageOrganizationBlackListHistoryRecordWhereInput, search: String, sortBy: [SortMessageOrganizationBlackListHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MessageOrganizationBlackListHistoryRecord]

  """ Search for the MessageOrganizationBlackListHistoryRecord item with the matching ID. 
  """
  MessageOrganizationBlackListHistoryRecord(where: MessageOrganizationBlackListHistoryRecordWhereUniqueInput!): MessageOrganizationBlackListHistoryRecord

  """ Perform a meta-query on all MessageOrganizationBlackListHistoryRecord items which match the where clause. 
  """
  _allMessageOrganizationBlackListHistoryRecordsMeta(where: MessageOrganizationBlackListHistoryRecordWhereInput, search: String, sortBy: [SortMessageOrganizationBlackListHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageOrganizationBlackListHistoryRecord list. 
  """
  _MessageOrganizationBlackListHistoryRecordsMeta: _ListMeta

  """ Search for all MessageOrganizationBlackList items which match the where clause. 
  """
  allMessageOrganizationBlackLists(where: MessageOrganizationBlackListWhereInput, search: String, sortBy: [SortMessageOrganizationBlackListsBy!], orderBy: String, first: Int, skip: Int): [MessageOrganizationBlackList]

  """ Search for the MessageOrganizationBlackList item with the matching ID. 
  """
  MessageOrganizationBlackList(where: MessageOrganizationBlackListWhereUniqueInput!): MessageOrganizationBlackList

  """ Perform a meta-query on all MessageOrganizationBlackList items which match the where clause. 
  """
  _allMessageOrganizationBlackListsMeta(where: MessageOrganizationBlackListWhereInput, search: String, sortBy: [SortMessageOrganizationBlackListsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageOrganizationBlackList list. """
  _MessageOrganizationBlackListsMeta: _ListMeta

  """ Search for all MessageBatchHistoryRecord items which match the where clause. 
  """
  allMessageBatchHistoryRecords(where: MessageBatchHistoryRecordWhereInput, search: String, sortBy: [SortMessageBatchHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MessageBatchHistoryRecord]

  """ Search for the MessageBatchHistoryRecord item with the matching ID. """
  MessageBatchHistoryRecord(where: MessageBatchHistoryRecordWhereUniqueInput!): MessageBatchHistoryRecord

  """ Perform a meta-query on all MessageBatchHistoryRecord items which match the where clause. 
  """
  _allMessageBatchHistoryRecordsMeta(where: MessageBatchHistoryRecordWhereInput, search: String, sortBy: [SortMessageBatchHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageBatchHistoryRecord list. """
  _MessageBatchHistoryRecordsMeta: _ListMeta

  """ Search for all MessageBatch items which match the where clause. """
  allMessageBatches(where: MessageBatchWhereInput, search: String, sortBy: [SortMessageBatchesBy!], orderBy: String, first: Int, skip: Int): [MessageBatch]

  """ Search for the MessageBatch item with the matching ID. """
  MessageBatch(where: MessageBatchWhereUniqueInput!): MessageBatch

  """ Perform a meta-query on all MessageBatch items which match the where clause. 
  """
  _allMessageBatchesMeta(where: MessageBatchWhereInput, search: String, sortBy: [SortMessageBatchesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MessageBatch list. """
  _MessageBatchesMeta: _ListMeta

  """ Search for all ContactHistoryRecord items which match the where clause. 
  """
  allContactHistoryRecords(where: ContactHistoryRecordWhereInput, search: String, sortBy: [SortContactHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ContactHistoryRecord]

  """ Search for the ContactHistoryRecord item with the matching ID. """
  ContactHistoryRecord(where: ContactHistoryRecordWhereUniqueInput!): ContactHistoryRecord

  """ Perform a meta-query on all ContactHistoryRecord items which match the where clause. 
  """
  _allContactHistoryRecordsMeta(where: ContactHistoryRecordWhereInput, search: String, sortBy: [SortContactHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ContactHistoryRecord list. """
  _ContactHistoryRecordsMeta: _ListMeta

  """ Search for all Contact items which match the where clause. """
  allContacts(where: ContactWhereInput, search: String, sortBy: [SortContactsBy!], orderBy: String, first: Int, skip: Int): [Contact]

  """ Search for the Contact item with the matching ID. """
  Contact(where: ContactWhereUniqueInput!): Contact

  """ Perform a meta-query on all Contact items which match the where clause. 
  """
  _allContactsMeta(where: ContactWhereInput, search: String, sortBy: [SortContactsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Contact list. """
  _ContactsMeta: _ListMeta

  """ Search for all ContactRoleHistoryRecord items which match the where clause. 
  """
  allContactRoleHistoryRecords(where: ContactRoleHistoryRecordWhereInput, search: String, sortBy: [SortContactRoleHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ContactRoleHistoryRecord]

  """ Search for the ContactRoleHistoryRecord item with the matching ID. """
  ContactRoleHistoryRecord(where: ContactRoleHistoryRecordWhereUniqueInput!): ContactRoleHistoryRecord

  """ Perform a meta-query on all ContactRoleHistoryRecord items which match the where clause. 
  """
  _allContactRoleHistoryRecordsMeta(where: ContactRoleHistoryRecordWhereInput, search: String, sortBy: [SortContactRoleHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ContactRoleHistoryRecord list. """
  _ContactRoleHistoryRecordsMeta: _ListMeta

  """ Search for all ContactRole items which match the where clause. """
  allContactRoles(where: ContactRoleWhereInput, search: String, sortBy: [SortContactRolesBy!], orderBy: String, first: Int, skip: Int): [ContactRole]

  """ Search for the ContactRole item with the matching ID. """
  ContactRole(where: ContactRoleWhereUniqueInput!): ContactRole

  """ Perform a meta-query on all ContactRole items which match the where clause. 
  """
  _allContactRolesMeta(where: ContactRoleWhereInput, search: String, sortBy: [SortContactRolesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ContactRole list. """
  _ContactRolesMeta: _ListMeta

  """ Search for all ResidentHistoryRecord items which match the where clause. 
  """
  allResidentHistoryRecords(where: ResidentHistoryRecordWhereInput, search: String, sortBy: [SortResidentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ResidentHistoryRecord]

  """ Search for the ResidentHistoryRecord item with the matching ID. """
  ResidentHistoryRecord(where: ResidentHistoryRecordWhereUniqueInput!): ResidentHistoryRecord

  """ Perform a meta-query on all ResidentHistoryRecord items which match the where clause. 
  """
  _allResidentHistoryRecordsMeta(where: ResidentHistoryRecordWhereInput, search: String, sortBy: [SortResidentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ResidentHistoryRecord list. """
  _ResidentHistoryRecordsMeta: _ListMeta

  """ Search for all Resident items which match the where clause. """
  allResidents(where: ResidentWhereInput, search: String, sortBy: [SortResidentsBy!], orderBy: String, first: Int, skip: Int): [Resident]

  """ Search for the Resident item with the matching ID. """
  Resident(where: ResidentWhereUniqueInput!): Resident

  """ Perform a meta-query on all Resident items which match the where clause. 
  """
  _allResidentsMeta(where: ResidentWhereInput, search: String, sortBy: [SortResidentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Resident list. """
  _ResidentsMeta: _ListMeta

  """ Search for all ServiceConsumerHistoryRecord items which match the where clause. 
  """
  allServiceConsumerHistoryRecords(where: ServiceConsumerHistoryRecordWhereInput, search: String, sortBy: [SortServiceConsumerHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ServiceConsumerHistoryRecord]

  """ Search for the ServiceConsumerHistoryRecord item with the matching ID. 
  """
  ServiceConsumerHistoryRecord(where: ServiceConsumerHistoryRecordWhereUniqueInput!): ServiceConsumerHistoryRecord

  """ Perform a meta-query on all ServiceConsumerHistoryRecord items which match the where clause. 
  """
  _allServiceConsumerHistoryRecordsMeta(where: ServiceConsumerHistoryRecordWhereInput, search: String, sortBy: [SortServiceConsumerHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ServiceConsumerHistoryRecord list. """
  _ServiceConsumerHistoryRecordsMeta: _ListMeta

  """ Search for all ServiceConsumer items which match the where clause. """
  allServiceConsumers(where: ServiceConsumerWhereInput, search: String, sortBy: [SortServiceConsumersBy!], orderBy: String, first: Int, skip: Int): [ServiceConsumer]

  """ Search for the ServiceConsumer item with the matching ID. """
  ServiceConsumer(where: ServiceConsumerWhereUniqueInput!): ServiceConsumer

  """ Perform a meta-query on all ServiceConsumer items which match the where clause. 
  """
  _allServiceConsumersMeta(where: ServiceConsumerWhereInput, search: String, sortBy: [SortServiceConsumersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ServiceConsumer list. """
  _ServiceConsumersMeta: _ListMeta

  """ Search for all OnBoardingHistoryRecord items which match the where clause. 
  """
  allOnBoardingHistoryRecords(where: OnBoardingHistoryRecordWhereInput, search: String, sortBy: [SortOnBoardingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OnBoardingHistoryRecord]

  """ Search for the OnBoardingHistoryRecord item with the matching ID. """
  OnBoardingHistoryRecord(where: OnBoardingHistoryRecordWhereUniqueInput!): OnBoardingHistoryRecord

  """ Perform a meta-query on all OnBoardingHistoryRecord items which match the where clause. 
  """
  _allOnBoardingHistoryRecordsMeta(where: OnBoardingHistoryRecordWhereInput, search: String, sortBy: [SortOnBoardingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OnBoardingHistoryRecord list. """
  _OnBoardingHistoryRecordsMeta: _ListMeta

  """ Search for all OnBoarding items which match the where clause. """
  allOnBoardings(where: OnBoardingWhereInput, search: String, sortBy: [SortOnBoardingsBy!], orderBy: String, first: Int, skip: Int): [OnBoarding]

  """ Search for the OnBoarding item with the matching ID. """
  OnBoarding(where: OnBoardingWhereUniqueInput!): OnBoarding

  """ Perform a meta-query on all OnBoarding items which match the where clause. 
  """
  _allOnBoardingsMeta(where: OnBoardingWhereInput, search: String, sortBy: [SortOnBoardingsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OnBoarding list. """
  _OnBoardingsMeta: _ListMeta

  """ Search for all OnBoardingStepHistoryRecord items which match the where clause. 
  """
  allOnBoardingStepHistoryRecords(where: OnBoardingStepHistoryRecordWhereInput, search: String, sortBy: [SortOnBoardingStepHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [OnBoardingStepHistoryRecord]

  """ Search for the OnBoardingStepHistoryRecord item with the matching ID. 
  """
  OnBoardingStepHistoryRecord(where: OnBoardingStepHistoryRecordWhereUniqueInput!): OnBoardingStepHistoryRecord

  """ Perform a meta-query on all OnBoardingStepHistoryRecord items which match the where clause. 
  """
  _allOnBoardingStepHistoryRecordsMeta(where: OnBoardingStepHistoryRecordWhereInput, search: String, sortBy: [SortOnBoardingStepHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OnBoardingStepHistoryRecord list. """
  _OnBoardingStepHistoryRecordsMeta: _ListMeta

  """ Search for all OnBoardingStep items which match the where clause. """
  allOnBoardingSteps(where: OnBoardingStepWhereInput, search: String, sortBy: [SortOnBoardingStepsBy!], orderBy: String, first: Int, skip: Int): [OnBoardingStep]

  """ Search for the OnBoardingStep item with the matching ID. """
  OnBoardingStep(where: OnBoardingStepWhereUniqueInput!): OnBoardingStep

  """ Perform a meta-query on all OnBoardingStep items which match the where clause. 
  """
  _allOnBoardingStepsMeta(where: OnBoardingStepWhereInput, search: String, sortBy: [SortOnBoardingStepsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the OnBoardingStep list. """
  _OnBoardingStepsMeta: _ListMeta

  """ Search for all MeterResourceHistoryRecord items which match the where clause. 
  """
  allMeterResourceHistoryRecords(where: MeterResourceHistoryRecordWhereInput, search: String, sortBy: [SortMeterResourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MeterResourceHistoryRecord]

  """ Search for the MeterResourceHistoryRecord item with the matching ID. """
  MeterResourceHistoryRecord(where: MeterResourceHistoryRecordWhereUniqueInput!): MeterResourceHistoryRecord

  """ Perform a meta-query on all MeterResourceHistoryRecord items which match the where clause. 
  """
  _allMeterResourceHistoryRecordsMeta(where: MeterResourceHistoryRecordWhereInput, search: String, sortBy: [SortMeterResourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterResourceHistoryRecord list. """
  _MeterResourceHistoryRecordsMeta: _ListMeta

  """ Search for all MeterResource items which match the where clause. """
  allMeterResources(where: MeterResourceWhereInput, search: String, sortBy: [SortMeterResourcesBy!], orderBy: String, first: Int, skip: Int): [MeterResource]

  """ Search for the MeterResource item with the matching ID. """
  MeterResource(where: MeterResourceWhereUniqueInput!): MeterResource

  """ Perform a meta-query on all MeterResource items which match the where clause. 
  """
  _allMeterResourcesMeta(where: MeterResourceWhereInput, search: String, sortBy: [SortMeterResourcesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterResource list. """
  _MeterResourcesMeta: _ListMeta

  """ Search for all MeterReadingSourceHistoryRecord items which match the where clause. 
  """
  allMeterReadingSourceHistoryRecords(where: MeterReadingSourceHistoryRecordWhereInput, search: String, sortBy: [SortMeterReadingSourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MeterReadingSourceHistoryRecord]

  """ Search for the MeterReadingSourceHistoryRecord item with the matching ID. 
  """
  MeterReadingSourceHistoryRecord(where: MeterReadingSourceHistoryRecordWhereUniqueInput!): MeterReadingSourceHistoryRecord

  """ Perform a meta-query on all MeterReadingSourceHistoryRecord items which match the where clause. 
  """
  _allMeterReadingSourceHistoryRecordsMeta(where: MeterReadingSourceHistoryRecordWhereInput, search: String, sortBy: [SortMeterReadingSourceHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterReadingSourceHistoryRecord list. """
  _MeterReadingSourceHistoryRecordsMeta: _ListMeta

  """ Search for all MeterReadingSource items which match the where clause. 
  """
  allMeterReadingSources(where: MeterReadingSourceWhereInput, search: String, sortBy: [SortMeterReadingSourcesBy!], orderBy: String, first: Int, skip: Int): [MeterReadingSource]

  """ Search for the MeterReadingSource item with the matching ID. """
  MeterReadingSource(where: MeterReadingSourceWhereUniqueInput!): MeterReadingSource

  """ Perform a meta-query on all MeterReadingSource items which match the where clause. 
  """
  _allMeterReadingSourcesMeta(where: MeterReadingSourceWhereInput, search: String, sortBy: [SortMeterReadingSourcesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterReadingSource list. """
  _MeterReadingSourcesMeta: _ListMeta

  """ Search for all MeterReadingHistoryRecord items which match the where clause. 
  """
  allMeterReadingHistoryRecords(where: MeterReadingHistoryRecordWhereInput, search: String, sortBy: [SortMeterReadingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MeterReadingHistoryRecord]

  """ Search for the MeterReadingHistoryRecord item with the matching ID. """
  MeterReadingHistoryRecord(where: MeterReadingHistoryRecordWhereUniqueInput!): MeterReadingHistoryRecord

  """ Perform a meta-query on all MeterReadingHistoryRecord items which match the where clause. 
  """
  _allMeterReadingHistoryRecordsMeta(where: MeterReadingHistoryRecordWhereInput, search: String, sortBy: [SortMeterReadingHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterReadingHistoryRecord list. """
  _MeterReadingHistoryRecordsMeta: _ListMeta

  """ Search for all MeterReading items which match the where clause. """
  allMeterReadings(where: MeterReadingWhereInput, search: String, sortBy: [SortMeterReadingsBy!], orderBy: String, first: Int, skip: Int): [MeterReading]

  """ Search for the MeterReading item with the matching ID. """
  MeterReading(where: MeterReadingWhereUniqueInput!): MeterReading

  """ Perform a meta-query on all MeterReading items which match the where clause. 
  """
  _allMeterReadingsMeta(where: MeterReadingWhereInput, search: String, sortBy: [SortMeterReadingsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterReading list. """
  _MeterReadingsMeta: _ListMeta

  """ Search for all MeterHistoryRecord items which match the where clause. 
  """
  allMeterHistoryRecords(where: MeterHistoryRecordWhereInput, search: String, sortBy: [SortMeterHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MeterHistoryRecord]

  """ Search for the MeterHistoryRecord item with the matching ID. """
  MeterHistoryRecord(where: MeterHistoryRecordWhereUniqueInput!): MeterHistoryRecord

  """ Perform a meta-query on all MeterHistoryRecord items which match the where clause. 
  """
  _allMeterHistoryRecordsMeta(where: MeterHistoryRecordWhereInput, search: String, sortBy: [SortMeterHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterHistoryRecord list. """
  _MeterHistoryRecordsMeta: _ListMeta

  """ Search for all Meter items which match the where clause. """
  allMeters(where: MeterWhereInput, search: String, sortBy: [SortMetersBy!], orderBy: String, first: Int, skip: Int): [Meter]

  """ Search for the Meter item with the matching ID. """
  Meter(where: MeterWhereUniqueInput!): Meter

  """ Perform a meta-query on all Meter items which match the where clause. 
  """
  _allMetersMeta(where: MeterWhereInput, search: String, sortBy: [SortMetersBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Meter list. """
  _MetersMeta: _ListMeta

  """ Search for all MeterReadingFilterTemplateHistoryRecord items which match the where clause. 
  """
  allMeterReadingFilterTemplateHistoryRecords(where: MeterReadingFilterTemplateHistoryRecordWhereInput, search: String, sortBy: [SortMeterReadingFilterTemplateHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MeterReadingFilterTemplateHistoryRecord]

  """ Search for the MeterReadingFilterTemplateHistoryRecord item with the matching ID. 
  """
  MeterReadingFilterTemplateHistoryRecord(where: MeterReadingFilterTemplateHistoryRecordWhereUniqueInput!): MeterReadingFilterTemplateHistoryRecord

  """ Perform a meta-query on all MeterReadingFilterTemplateHistoryRecord items which match the where clause. 
  """
  _allMeterReadingFilterTemplateHistoryRecordsMeta(where: MeterReadingFilterTemplateHistoryRecordWhereInput, search: String, sortBy: [SortMeterReadingFilterTemplateHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterReadingFilterTemplateHistoryRecord list. 
  """
  _MeterReadingFilterTemplateHistoryRecordsMeta: _ListMeta

  """ Search for all MeterReadingFilterTemplate items which match the where clause. 
  """
  allMeterReadingFilterTemplates(where: MeterReadingFilterTemplateWhereInput, search: String, sortBy: [SortMeterReadingFilterTemplatesBy!], orderBy: String, first: Int, skip: Int): [MeterReadingFilterTemplate]

  """ Search for the MeterReadingFilterTemplate item with the matching ID. """
  MeterReadingFilterTemplate(where: MeterReadingFilterTemplateWhereUniqueInput!): MeterReadingFilterTemplate

  """ Perform a meta-query on all MeterReadingFilterTemplate items which match the where clause. 
  """
  _allMeterReadingFilterTemplatesMeta(where: MeterReadingFilterTemplateWhereInput, search: String, sortBy: [SortMeterReadingFilterTemplatesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MeterReadingFilterTemplate list. """
  _MeterReadingFilterTemplatesMeta: _ListMeta

  """ Search for all ServiceSubscriptionHistoryRecord items which match the where clause. 
  """
  allServiceSubscriptionHistoryRecords(where: ServiceSubscriptionHistoryRecordWhereInput, search: String, sortBy: [SortServiceSubscriptionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ServiceSubscriptionHistoryRecord]

  """ Search for the ServiceSubscriptionHistoryRecord item with the matching ID. 
  """
  ServiceSubscriptionHistoryRecord(where: ServiceSubscriptionHistoryRecordWhereUniqueInput!): ServiceSubscriptionHistoryRecord

  """ Perform a meta-query on all ServiceSubscriptionHistoryRecord items which match the where clause. 
  """
  _allServiceSubscriptionHistoryRecordsMeta(where: ServiceSubscriptionHistoryRecordWhereInput, search: String, sortBy: [SortServiceSubscriptionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ServiceSubscriptionHistoryRecord list. 
  """
  _ServiceSubscriptionHistoryRecordsMeta: _ListMeta

  """ Search for all ServiceSubscription items which match the where clause. 
  """
  allServiceSubscriptions(where: ServiceSubscriptionWhereInput, search: String, sortBy: [SortServiceSubscriptionsBy!], orderBy: String, first: Int, skip: Int): [ServiceSubscription]

  """ Search for the ServiceSubscription item with the matching ID. """
  ServiceSubscription(where: ServiceSubscriptionWhereUniqueInput!): ServiceSubscription

  """ Perform a meta-query on all ServiceSubscription items which match the where clause. 
  """
  _allServiceSubscriptionsMeta(where: ServiceSubscriptionWhereInput, search: String, sortBy: [SortServiceSubscriptionsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ServiceSubscription list. """
  _ServiceSubscriptionsMeta: _ListMeta

  """ Search for all AcquiringIntegrationHistoryRecord items which match the where clause. 
  """
  allAcquiringIntegrationHistoryRecords(where: AcquiringIntegrationHistoryRecordWhereInput, search: String, sortBy: [SortAcquiringIntegrationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegrationHistoryRecord]

  """ Search for the AcquiringIntegrationHistoryRecord item with the matching ID. 
  """
  AcquiringIntegrationHistoryRecord(where: AcquiringIntegrationHistoryRecordWhereUniqueInput!): AcquiringIntegrationHistoryRecord

  """ Perform a meta-query on all AcquiringIntegrationHistoryRecord items which match the where clause. 
  """
  _allAcquiringIntegrationHistoryRecordsMeta(where: AcquiringIntegrationHistoryRecordWhereInput, search: String, sortBy: [SortAcquiringIntegrationHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AcquiringIntegrationHistoryRecord list. 
  """
  _AcquiringIntegrationHistoryRecordsMeta: _ListMeta

  """ Search for all AcquiringIntegration items which match the where clause. 
  """
  allAcquiringIntegrations(where: AcquiringIntegrationWhereInput, search: String, sortBy: [SortAcquiringIntegrationsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegration]

  """ Search for the AcquiringIntegration item with the matching ID. """
  AcquiringIntegration(where: AcquiringIntegrationWhereUniqueInput!): AcquiringIntegration

  """ Perform a meta-query on all AcquiringIntegration items which match the where clause. 
  """
  _allAcquiringIntegrationsMeta(where: AcquiringIntegrationWhereInput, search: String, sortBy: [SortAcquiringIntegrationsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AcquiringIntegration list. """
  _AcquiringIntegrationsMeta: _ListMeta

  """ Search for all AcquiringIntegrationAccessRightHistoryRecord items which match the where clause. 
  """
  allAcquiringIntegrationAccessRightHistoryRecords(where: AcquiringIntegrationAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortAcquiringIntegrationAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegrationAccessRightHistoryRecord]

  """ Search for the AcquiringIntegrationAccessRightHistoryRecord item with the matching ID. 
  """
  AcquiringIntegrationAccessRightHistoryRecord(where: AcquiringIntegrationAccessRightHistoryRecordWhereUniqueInput!): AcquiringIntegrationAccessRightHistoryRecord

  """ Perform a meta-query on all AcquiringIntegrationAccessRightHistoryRecord items which match the where clause. 
  """
  _allAcquiringIntegrationAccessRightHistoryRecordsMeta(where: AcquiringIntegrationAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortAcquiringIntegrationAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AcquiringIntegrationAccessRightHistoryRecord list. 
  """
  _AcquiringIntegrationAccessRightHistoryRecordsMeta: _ListMeta

  """ Search for all AcquiringIntegrationAccessRight items which match the where clause. 
  """
  allAcquiringIntegrationAccessRights(where: AcquiringIntegrationAccessRightWhereInput, search: String, sortBy: [SortAcquiringIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegrationAccessRight]

  """ Search for the AcquiringIntegrationAccessRight item with the matching ID. 
  """
  AcquiringIntegrationAccessRight(where: AcquiringIntegrationAccessRightWhereUniqueInput!): AcquiringIntegrationAccessRight

  """ Perform a meta-query on all AcquiringIntegrationAccessRight items which match the where clause. 
  """
  _allAcquiringIntegrationAccessRightsMeta(where: AcquiringIntegrationAccessRightWhereInput, search: String, sortBy: [SortAcquiringIntegrationAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AcquiringIntegrationAccessRight list. """
  _AcquiringIntegrationAccessRightsMeta: _ListMeta

  """ Search for all AcquiringIntegrationContextHistoryRecord items which match the where clause. 
  """
  allAcquiringIntegrationContextHistoryRecords(where: AcquiringIntegrationContextHistoryRecordWhereInput, search: String, sortBy: [SortAcquiringIntegrationContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegrationContextHistoryRecord]

  """ Search for the AcquiringIntegrationContextHistoryRecord item with the matching ID. 
  """
  AcquiringIntegrationContextHistoryRecord(where: AcquiringIntegrationContextHistoryRecordWhereUniqueInput!): AcquiringIntegrationContextHistoryRecord

  """ Perform a meta-query on all AcquiringIntegrationContextHistoryRecord items which match the where clause. 
  """
  _allAcquiringIntegrationContextHistoryRecordsMeta(where: AcquiringIntegrationContextHistoryRecordWhereInput, search: String, sortBy: [SortAcquiringIntegrationContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AcquiringIntegrationContextHistoryRecord list. 
  """
  _AcquiringIntegrationContextHistoryRecordsMeta: _ListMeta

  """ Search for all AcquiringIntegrationContext items which match the where clause. 
  """
  allAcquiringIntegrationContexts(where: AcquiringIntegrationContextWhereInput, search: String, sortBy: [SortAcquiringIntegrationContextsBy!], orderBy: String, first: Int, skip: Int): [AcquiringIntegrationContext]

  """ Search for the AcquiringIntegrationContext item with the matching ID. 
  """
  AcquiringIntegrationContext(where: AcquiringIntegrationContextWhereUniqueInput!): AcquiringIntegrationContext

  """ Perform a meta-query on all AcquiringIntegrationContext items which match the where clause. 
  """
  _allAcquiringIntegrationContextsMeta(where: AcquiringIntegrationContextWhereInput, search: String, sortBy: [SortAcquiringIntegrationContextsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AcquiringIntegrationContext list. """
  _AcquiringIntegrationContextsMeta: _ListMeta

  """ Search for all MultiPaymentHistoryRecord items which match the where clause. 
  """
  allMultiPaymentHistoryRecords(where: MultiPaymentHistoryRecordWhereInput, search: String, sortBy: [SortMultiPaymentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [MultiPaymentHistoryRecord]

  """ Search for the MultiPaymentHistoryRecord item with the matching ID. """
  MultiPaymentHistoryRecord(where: MultiPaymentHistoryRecordWhereUniqueInput!): MultiPaymentHistoryRecord

  """ Perform a meta-query on all MultiPaymentHistoryRecord items which match the where clause. 
  """
  _allMultiPaymentHistoryRecordsMeta(where: MultiPaymentHistoryRecordWhereInput, search: String, sortBy: [SortMultiPaymentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MultiPaymentHistoryRecord list. """
  _MultiPaymentHistoryRecordsMeta: _ListMeta

  """ Search for all MultiPayment items which match the where clause. """
  allMultiPayments(where: MultiPaymentWhereInput, search: String, sortBy: [SortMultiPaymentsBy!], orderBy: String, first: Int, skip: Int): [MultiPayment]

  """ Search for the MultiPayment item with the matching ID. """
  MultiPayment(where: MultiPaymentWhereUniqueInput!): MultiPayment

  """ Perform a meta-query on all MultiPayment items which match the where clause. 
  """
  _allMultiPaymentsMeta(where: MultiPaymentWhereInput, search: String, sortBy: [SortMultiPaymentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the MultiPayment list. """
  _MultiPaymentsMeta: _ListMeta

  """ Search for all PaymentHistoryRecord items which match the where clause. 
  """
  allPaymentHistoryRecords(where: PaymentHistoryRecordWhereInput, search: String, sortBy: [SortPaymentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [PaymentHistoryRecord]

  """ Search for the PaymentHistoryRecord item with the matching ID. """
  PaymentHistoryRecord(where: PaymentHistoryRecordWhereUniqueInput!): PaymentHistoryRecord

  """ Perform a meta-query on all PaymentHistoryRecord items which match the where clause. 
  """
  _allPaymentHistoryRecordsMeta(where: PaymentHistoryRecordWhereInput, search: String, sortBy: [SortPaymentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PaymentHistoryRecord list. """
  _PaymentHistoryRecordsMeta: _ListMeta

  """ Search for all Payment items which match the where clause. """
  allPayments(where: PaymentWhereInput, search: String, sortBy: [SortPaymentsBy!], orderBy: String, first: Int, skip: Int): [Payment]

  """ Search for the Payment item with the matching ID. """
  Payment(where: PaymentWhereUniqueInput!): Payment

  """ Perform a meta-query on all Payment items which match the where clause. 
  """
  _allPaymentsMeta(where: PaymentWhereInput, search: String, sortBy: [SortPaymentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Payment list. """
  _PaymentsMeta: _ListMeta

  """ Search for all PaymentsFilterTemplateHistoryRecord items which match the where clause. 
  """
  allPaymentsFilterTemplateHistoryRecords(where: PaymentsFilterTemplateHistoryRecordWhereInput, search: String, sortBy: [SortPaymentsFilterTemplateHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [PaymentsFilterTemplateHistoryRecord]

  """ Search for the PaymentsFilterTemplateHistoryRecord item with the matching ID. 
  """
  PaymentsFilterTemplateHistoryRecord(where: PaymentsFilterTemplateHistoryRecordWhereUniqueInput!): PaymentsFilterTemplateHistoryRecord

  """ Perform a meta-query on all PaymentsFilterTemplateHistoryRecord items which match the where clause. 
  """
  _allPaymentsFilterTemplateHistoryRecordsMeta(where: PaymentsFilterTemplateHistoryRecordWhereInput, search: String, sortBy: [SortPaymentsFilterTemplateHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PaymentsFilterTemplateHistoryRecord list. 
  """
  _PaymentsFilterTemplateHistoryRecordsMeta: _ListMeta

  """ Search for all PaymentsFilterTemplate items which match the where clause. 
  """
  allPaymentsFilterTemplates(where: PaymentsFilterTemplateWhereInput, search: String, sortBy: [SortPaymentsFilterTemplatesBy!], orderBy: String, first: Int, skip: Int): [PaymentsFilterTemplate]

  """ Search for the PaymentsFilterTemplate item with the matching ID. """
  PaymentsFilterTemplate(where: PaymentsFilterTemplateWhereUniqueInput!): PaymentsFilterTemplate

  """ Perform a meta-query on all PaymentsFilterTemplate items which match the where clause. 
  """
  _allPaymentsFilterTemplatesMeta(where: PaymentsFilterTemplateWhereInput, search: String, sortBy: [SortPaymentsFilterTemplatesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PaymentsFilterTemplate list. """
  _PaymentsFilterTemplatesMeta: _ListMeta

  """ Search for all RecurrentPaymentContextHistoryRecord items which match the where clause. 
  """
  allRecurrentPaymentContextHistoryRecords(where: RecurrentPaymentContextHistoryRecordWhereInput, search: String, sortBy: [SortRecurrentPaymentContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [RecurrentPaymentContextHistoryRecord]

  """ Search for the RecurrentPaymentContextHistoryRecord item with the matching ID. 
  """
  RecurrentPaymentContextHistoryRecord(where: RecurrentPaymentContextHistoryRecordWhereUniqueInput!): RecurrentPaymentContextHistoryRecord

  """ Perform a meta-query on all RecurrentPaymentContextHistoryRecord items which match the where clause. 
  """
  _allRecurrentPaymentContextHistoryRecordsMeta(where: RecurrentPaymentContextHistoryRecordWhereInput, search: String, sortBy: [SortRecurrentPaymentContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the RecurrentPaymentContextHistoryRecord list. 
  """
  _RecurrentPaymentContextHistoryRecordsMeta: _ListMeta

  """ Search for all RecurrentPaymentContext items which match the where clause. 
  """
  allRecurrentPaymentContexts(where: RecurrentPaymentContextWhereInput, search: String, sortBy: [SortRecurrentPaymentContextsBy!], orderBy: String, first: Int, skip: Int): [RecurrentPaymentContext]

  """ Search for the RecurrentPaymentContext item with the matching ID. """
  RecurrentPaymentContext(where: RecurrentPaymentContextWhereUniqueInput!): RecurrentPaymentContext

  """ Perform a meta-query on all RecurrentPaymentContext items which match the where clause. 
  """
  _allRecurrentPaymentContextsMeta(where: RecurrentPaymentContextWhereInput, search: String, sortBy: [SortRecurrentPaymentContextsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the RecurrentPaymentContext list. """
  _RecurrentPaymentContextsMeta: _ListMeta

  """ Search for all RecurrentPaymentHistoryRecord items which match the where clause. 
  """
  allRecurrentPaymentHistoryRecords(where: RecurrentPaymentHistoryRecordWhereInput, search: String, sortBy: [SortRecurrentPaymentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [RecurrentPaymentHistoryRecord]

  """ Search for the RecurrentPaymentHistoryRecord item with the matching ID. 
  """
  RecurrentPaymentHistoryRecord(where: RecurrentPaymentHistoryRecordWhereUniqueInput!): RecurrentPaymentHistoryRecord

  """ Perform a meta-query on all RecurrentPaymentHistoryRecord items which match the where clause. 
  """
  _allRecurrentPaymentHistoryRecordsMeta(where: RecurrentPaymentHistoryRecordWhereInput, search: String, sortBy: [SortRecurrentPaymentHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the RecurrentPaymentHistoryRecord list. """
  _RecurrentPaymentHistoryRecordsMeta: _ListMeta

  """ Search for all RecurrentPayment items which match the where clause. """
  allRecurrentPayments(where: RecurrentPaymentWhereInput, search: String, sortBy: [SortRecurrentPaymentsBy!], orderBy: String, first: Int, skip: Int): [RecurrentPayment]

  """ Search for the RecurrentPayment item with the matching ID. """
  RecurrentPayment(where: RecurrentPaymentWhereUniqueInput!): RecurrentPayment

  """ Perform a meta-query on all RecurrentPayment items which match the where clause. 
  """
  _allRecurrentPaymentsMeta(where: RecurrentPaymentWhereInput, search: String, sortBy: [SortRecurrentPaymentsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the RecurrentPayment list. """
  _RecurrentPaymentsMeta: _ListMeta

  """ Search for all B2BAppHistoryRecord items which match the where clause. 
  """
  allB2BAppHistoryRecords(where: B2BAppHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2BAppHistoryRecord]

  """ Search for the B2BAppHistoryRecord item with the matching ID. """
  B2BAppHistoryRecord(where: B2BAppHistoryRecordWhereUniqueInput!): B2BAppHistoryRecord

  """ Perform a meta-query on all B2BAppHistoryRecord items which match the where clause. 
  """
  _allB2BAppHistoryRecordsMeta(where: B2BAppHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppHistoryRecord list. """
  _B2BAppHistoryRecordsMeta: _ListMeta

  """ Search for all B2BApp items which match the where clause. """
  allB2BApps(where: B2BAppWhereInput, search: String, sortBy: [SortB2BAppsBy!], orderBy: String, first: Int, skip: Int): [B2BApp]

  """ Search for the B2BApp item with the matching ID. """
  B2BApp(where: B2BAppWhereUniqueInput!): B2BApp

  """ Perform a meta-query on all B2BApp items which match the where clause. 
  """
  _allB2BAppsMeta(where: B2BAppWhereInput, search: String, sortBy: [SortB2BAppsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BApp list. """
  _B2BAppsMeta: _ListMeta

  """ Search for all B2BAppContextHistoryRecord items which match the where clause. 
  """
  allB2BAppContextHistoryRecords(where: B2BAppContextHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2BAppContextHistoryRecord]

  """ Search for the B2BAppContextHistoryRecord item with the matching ID. """
  B2BAppContextHistoryRecord(where: B2BAppContextHistoryRecordWhereUniqueInput!): B2BAppContextHistoryRecord

  """ Perform a meta-query on all B2BAppContextHistoryRecord items which match the where clause. 
  """
  _allB2BAppContextHistoryRecordsMeta(where: B2BAppContextHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppContextHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppContextHistoryRecord list. """
  _B2BAppContextHistoryRecordsMeta: _ListMeta

  """ Search for all B2BAppContext items which match the where clause. """
  allB2BAppContexts(where: B2BAppContextWhereInput, search: String, sortBy: [SortB2BAppContextsBy!], orderBy: String, first: Int, skip: Int): [B2BAppContext]

  """ Search for the B2BAppContext item with the matching ID. """
  B2BAppContext(where: B2BAppContextWhereUniqueInput!): B2BAppContext

  """ Perform a meta-query on all B2BAppContext items which match the where clause. 
  """
  _allB2BAppContextsMeta(where: B2BAppContextWhereInput, search: String, sortBy: [SortB2BAppContextsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppContext list. """
  _B2BAppContextsMeta: _ListMeta

  """ Search for all B2BAppAccessRightHistoryRecord items which match the where clause. 
  """
  allB2BAppAccessRightHistoryRecords(where: B2BAppAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2BAppAccessRightHistoryRecord]

  """ Search for the B2BAppAccessRightHistoryRecord item with the matching ID. 
  """
  B2BAppAccessRightHistoryRecord(where: B2BAppAccessRightHistoryRecordWhereUniqueInput!): B2BAppAccessRightHistoryRecord

  """ Perform a meta-query on all B2BAppAccessRightHistoryRecord items which match the where clause. 
  """
  _allB2BAppAccessRightHistoryRecordsMeta(where: B2BAppAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppAccessRightHistoryRecord list. """
  _B2BAppAccessRightHistoryRecordsMeta: _ListMeta

  """ Search for all B2BAppAccessRight items which match the where clause. """
  allB2BAppAccessRights(where: B2BAppAccessRightWhereInput, search: String, sortBy: [SortB2BAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): [B2BAppAccessRight]

  """ Search for the B2BAppAccessRight item with the matching ID. """
  B2BAppAccessRight(where: B2BAppAccessRightWhereUniqueInput!): B2BAppAccessRight

  """ Perform a meta-query on all B2BAppAccessRight items which match the where clause. 
  """
  _allB2BAppAccessRightsMeta(where: B2BAppAccessRightWhereInput, search: String, sortBy: [SortB2BAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppAccessRight list. """
  _B2BAppAccessRightsMeta: _ListMeta

  """ Search for all B2CAppHistoryRecord items which match the where clause. 
  """
  allB2CAppHistoryRecords(where: B2CAppHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2CAppHistoryRecord]

  """ Search for the B2CAppHistoryRecord item with the matching ID. """
  B2CAppHistoryRecord(where: B2CAppHistoryRecordWhereUniqueInput!): B2CAppHistoryRecord

  """ Perform a meta-query on all B2CAppHistoryRecord items which match the where clause. 
  """
  _allB2CAppHistoryRecordsMeta(where: B2CAppHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppHistoryRecord list. """
  _B2CAppHistoryRecordsMeta: _ListMeta

  """ Search for all B2CApp items which match the where clause. """
  allB2CApps(where: B2CAppWhereInput, search: String, sortBy: [SortB2CAppsBy!], orderBy: String, first: Int, skip: Int): [B2CApp]

  """ Search for the B2CApp item with the matching ID. """
  B2CApp(where: B2CAppWhereUniqueInput!): B2CApp

  """ Perform a meta-query on all B2CApp items which match the where clause. 
  """
  _allB2CAppsMeta(where: B2CAppWhereInput, search: String, sortBy: [SortB2CAppsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CApp list. """
  _B2CAppsMeta: _ListMeta

  """ Search for all B2CAppAccessRightHistoryRecord items which match the where clause. 
  """
  allB2CAppAccessRightHistoryRecords(where: B2CAppAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2CAppAccessRightHistoryRecord]

  """ Search for the B2CAppAccessRightHistoryRecord item with the matching ID. 
  """
  B2CAppAccessRightHistoryRecord(where: B2CAppAccessRightHistoryRecordWhereUniqueInput!): B2CAppAccessRightHistoryRecord

  """ Perform a meta-query on all B2CAppAccessRightHistoryRecord items which match the where clause. 
  """
  _allB2CAppAccessRightHistoryRecordsMeta(where: B2CAppAccessRightHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppAccessRightHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppAccessRightHistoryRecord list. """
  _B2CAppAccessRightHistoryRecordsMeta: _ListMeta

  """ Search for all B2CAppAccessRight items which match the where clause. """
  allB2CAppAccessRights(where: B2CAppAccessRightWhereInput, search: String, sortBy: [SortB2CAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): [B2CAppAccessRight]

  """ Search for the B2CAppAccessRight item with the matching ID. """
  B2CAppAccessRight(where: B2CAppAccessRightWhereUniqueInput!): B2CAppAccessRight

  """ Perform a meta-query on all B2CAppAccessRight items which match the where clause. 
  """
  _allB2CAppAccessRightsMeta(where: B2CAppAccessRightWhereInput, search: String, sortBy: [SortB2CAppAccessRightsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppAccessRight list. """
  _B2CAppAccessRightsMeta: _ListMeta

  """ Search for all B2CAppBuildHistoryRecord items which match the where clause. 
  """
  allB2CAppBuildHistoryRecords(where: B2CAppBuildHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppBuildHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2CAppBuildHistoryRecord]

  """ Search for the B2CAppBuildHistoryRecord item with the matching ID. """
  B2CAppBuildHistoryRecord(where: B2CAppBuildHistoryRecordWhereUniqueInput!): B2CAppBuildHistoryRecord

  """ Perform a meta-query on all B2CAppBuildHistoryRecord items which match the where clause. 
  """
  _allB2CAppBuildHistoryRecordsMeta(where: B2CAppBuildHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppBuildHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppBuildHistoryRecord list. """
  _B2CAppBuildHistoryRecordsMeta: _ListMeta

  """ Search for all B2CAppBuild items which match the where clause. """
  allB2CAppBuilds(where: B2CAppBuildWhereInput, search: String, sortBy: [SortB2CAppBuildsBy!], orderBy: String, first: Int, skip: Int): [B2CAppBuild]

  """ Search for the B2CAppBuild item with the matching ID. """
  B2CAppBuild(where: B2CAppBuildWhereUniqueInput!): B2CAppBuild

  """ Perform a meta-query on all B2CAppBuild items which match the where clause. 
  """
  _allB2CAppBuildsMeta(where: B2CAppBuildWhereInput, search: String, sortBy: [SortB2CAppBuildsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppBuild list. """
  _B2CAppBuildsMeta: _ListMeta

  """ Search for all B2CAppPropertyHistoryRecord items which match the where clause. 
  """
  allB2CAppPropertyHistoryRecords(where: B2CAppPropertyHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2CAppPropertyHistoryRecord]

  """ Search for the B2CAppPropertyHistoryRecord item with the matching ID. 
  """
  B2CAppPropertyHistoryRecord(where: B2CAppPropertyHistoryRecordWhereUniqueInput!): B2CAppPropertyHistoryRecord

  """ Perform a meta-query on all B2CAppPropertyHistoryRecord items which match the where clause. 
  """
  _allB2CAppPropertyHistoryRecordsMeta(where: B2CAppPropertyHistoryRecordWhereInput, search: String, sortBy: [SortB2CAppPropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppPropertyHistoryRecord list. """
  _B2CAppPropertyHistoryRecordsMeta: _ListMeta

  """ Search for all B2CAppProperty items which match the where clause. """
  allB2CAppProperties(where: B2CAppPropertyWhereInput, search: String, sortBy: [SortB2CAppPropertiesBy!], orderBy: String, first: Int, skip: Int): [B2CAppProperty]

  """ Search for the B2CAppProperty item with the matching ID. """
  B2CAppProperty(where: B2CAppPropertyWhereUniqueInput!): B2CAppProperty

  """ Perform a meta-query on all B2CAppProperty items which match the where clause. 
  """
  _allB2CAppPropertiesMeta(where: B2CAppPropertyWhereInput, search: String, sortBy: [SortB2CAppPropertiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2CAppProperty list. """
  _B2CAppPropertiesMeta: _ListMeta

  """ Search for all B2BAppPromoBlockHistoryRecord items which match the where clause. 
  """
  allB2BAppPromoBlockHistoryRecords(where: B2BAppPromoBlockHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppPromoBlockHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [B2BAppPromoBlockHistoryRecord]

  """ Search for the B2BAppPromoBlockHistoryRecord item with the matching ID. 
  """
  B2BAppPromoBlockHistoryRecord(where: B2BAppPromoBlockHistoryRecordWhereUniqueInput!): B2BAppPromoBlockHistoryRecord

  """ Perform a meta-query on all B2BAppPromoBlockHistoryRecord items which match the where clause. 
  """
  _allB2BAppPromoBlockHistoryRecordsMeta(where: B2BAppPromoBlockHistoryRecordWhereInput, search: String, sortBy: [SortB2BAppPromoBlockHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppPromoBlockHistoryRecord list. """
  _B2BAppPromoBlockHistoryRecordsMeta: _ListMeta

  """ Search for all B2BAppPromoBlock items which match the where clause. """
  allB2BAppPromoBlocks(where: B2BAppPromoBlockWhereInput, search: String, sortBy: [SortB2BAppPromoBlocksBy!], orderBy: String, first: Int, skip: Int): [B2BAppPromoBlock]

  """ Search for the B2BAppPromoBlock item with the matching ID. """
  B2BAppPromoBlock(where: B2BAppPromoBlockWhereUniqueInput!): B2BAppPromoBlock

  """ Perform a meta-query on all B2BAppPromoBlock items which match the where clause. 
  """
  _allB2BAppPromoBlocksMeta(where: B2BAppPromoBlockWhereInput, search: String, sortBy: [SortB2BAppPromoBlocksBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the B2BAppPromoBlock list. """
  _B2BAppPromoBlocksMeta: _ListMeta

  """ Search for all ExternalReportHistoryRecord items which match the where clause. 
  """
  allExternalReportHistoryRecords(where: ExternalReportHistoryRecordWhereInput, search: String, sortBy: [SortExternalReportHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [ExternalReportHistoryRecord]

  """ Search for the ExternalReportHistoryRecord item with the matching ID. 
  """
  ExternalReportHistoryRecord(where: ExternalReportHistoryRecordWhereUniqueInput!): ExternalReportHistoryRecord

  """ Perform a meta-query on all ExternalReportHistoryRecord items which match the where clause. 
  """
  _allExternalReportHistoryRecordsMeta(where: ExternalReportHistoryRecordWhereInput, search: String, sortBy: [SortExternalReportHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ExternalReportHistoryRecord list. """
  _ExternalReportHistoryRecordsMeta: _ListMeta

  """ Search for all ExternalReport items which match the where clause. """
  allExternalReports(where: ExternalReportWhereInput, search: String, sortBy: [SortExternalReportsBy!], orderBy: String, first: Int, skip: Int): [ExternalReport]

  """ Search for the ExternalReport item with the matching ID. """
  ExternalReport(where: ExternalReportWhereUniqueInput!): ExternalReport

  """ Perform a meta-query on all ExternalReport items which match the where clause. 
  """
  _allExternalReportsMeta(where: ExternalReportWhereInput, search: String, sortBy: [SortExternalReportsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the ExternalReport list. """
  _ExternalReportsMeta: _ListMeta

  """ Search for all PropertyScopeHistoryRecord items which match the where clause. 
  """
  allPropertyScopeHistoryRecords(where: PropertyScopeHistoryRecordWhereInput, search: String, sortBy: [SortPropertyScopeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [PropertyScopeHistoryRecord]

  """ Search for the PropertyScopeHistoryRecord item with the matching ID. """
  PropertyScopeHistoryRecord(where: PropertyScopeHistoryRecordWhereUniqueInput!): PropertyScopeHistoryRecord

  """ Perform a meta-query on all PropertyScopeHistoryRecord items which match the where clause. 
  """
  _allPropertyScopeHistoryRecordsMeta(where: PropertyScopeHistoryRecordWhereInput, search: String, sortBy: [SortPropertyScopeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyScopeHistoryRecord list. """
  _PropertyScopeHistoryRecordsMeta: _ListMeta

  """ Search for all PropertyScope items which match the where clause. """
  allPropertyScopes(where: PropertyScopeWhereInput, search: String, sortBy: [SortPropertyScopesBy!], orderBy: String, first: Int, skip: Int): [PropertyScope]

  """ Search for the PropertyScope item with the matching ID. """
  PropertyScope(where: PropertyScopeWhereUniqueInput!): PropertyScope

  """ Perform a meta-query on all PropertyScope items which match the where clause. 
  """
  _allPropertyScopesMeta(where: PropertyScopeWhereInput, search: String, sortBy: [SortPropertyScopesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyScope list. """
  _PropertyScopesMeta: _ListMeta

  """ Search for all PropertyScopeOrganizationEmployeeHistoryRecord items which match the where clause. 
  """
  allPropertyScopeOrganizationEmployeeHistoryRecords(where: PropertyScopeOrganizationEmployeeHistoryRecordWhereInput, search: String, sortBy: [SortPropertyScopeOrganizationEmployeeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [PropertyScopeOrganizationEmployeeHistoryRecord]

  """ Search for the PropertyScopeOrganizationEmployeeHistoryRecord item with the matching ID. 
  """
  PropertyScopeOrganizationEmployeeHistoryRecord(where: PropertyScopeOrganizationEmployeeHistoryRecordWhereUniqueInput!): PropertyScopeOrganizationEmployeeHistoryRecord

  """ Perform a meta-query on all PropertyScopeOrganizationEmployeeHistoryRecord items which match the where clause. 
  """
  _allPropertyScopeOrganizationEmployeeHistoryRecordsMeta(where: PropertyScopeOrganizationEmployeeHistoryRecordWhereInput, search: String, sortBy: [SortPropertyScopeOrganizationEmployeeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyScopeOrganizationEmployeeHistoryRecord list. 
  """
  _PropertyScopeOrganizationEmployeeHistoryRecordsMeta: _ListMeta

  """ Search for all PropertyScopeOrganizationEmployee items which match the where clause. 
  """
  allPropertyScopeOrganizationEmployees(where: PropertyScopeOrganizationEmployeeWhereInput, search: String, sortBy: [SortPropertyScopeOrganizationEmployeesBy!], orderBy: String, first: Int, skip: Int): [PropertyScopeOrganizationEmployee]

  """ Search for the PropertyScopeOrganizationEmployee item with the matching ID. 
  """
  PropertyScopeOrganizationEmployee(where: PropertyScopeOrganizationEmployeeWhereUniqueInput!): PropertyScopeOrganizationEmployee

  """ Perform a meta-query on all PropertyScopeOrganizationEmployee items which match the where clause. 
  """
  _allPropertyScopeOrganizationEmployeesMeta(where: PropertyScopeOrganizationEmployeeWhereInput, search: String, sortBy: [SortPropertyScopeOrganizationEmployeesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyScopeOrganizationEmployee list. 
  """
  _PropertyScopeOrganizationEmployeesMeta: _ListMeta

  """ Search for all PropertyScopePropertyHistoryRecord items which match the where clause. 
  """
  allPropertyScopePropertyHistoryRecords(where: PropertyScopePropertyHistoryRecordWhereInput, search: String, sortBy: [SortPropertyScopePropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [PropertyScopePropertyHistoryRecord]

  """ Search for the PropertyScopePropertyHistoryRecord item with the matching ID. 
  """
  PropertyScopePropertyHistoryRecord(where: PropertyScopePropertyHistoryRecordWhereUniqueInput!): PropertyScopePropertyHistoryRecord

  """ Perform a meta-query on all PropertyScopePropertyHistoryRecord items which match the where clause. 
  """
  _allPropertyScopePropertyHistoryRecordsMeta(where: PropertyScopePropertyHistoryRecordWhereInput, search: String, sortBy: [SortPropertyScopePropertyHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyScopePropertyHistoryRecord list. 
  """
  _PropertyScopePropertyHistoryRecordsMeta: _ListMeta

  """ Search for all PropertyScopeProperty items which match the where clause. 
  """
  allPropertyScopeProperties(where: PropertyScopePropertyWhereInput, search: String, sortBy: [SortPropertyScopePropertiesBy!], orderBy: String, first: Int, skip: Int): [PropertyScopeProperty]

  """ Search for the PropertyScopeProperty item with the matching ID. """
  PropertyScopeProperty(where: PropertyScopePropertyWhereUniqueInput!): PropertyScopeProperty

  """ Perform a meta-query on all PropertyScopeProperty items which match the where clause. 
  """
  _allPropertyScopePropertiesMeta(where: PropertyScopePropertyWhereInput, search: String, sortBy: [SortPropertyScopePropertiesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the PropertyScopeProperty list. """
  _PropertyScopePropertiesMeta: _ListMeta

  """ Search for all AssigneeScopeHistoryRecord items which match the where clause. 
  """
  allAssigneeScopeHistoryRecords(where: AssigneeScopeHistoryRecordWhereInput, search: String, sortBy: [SortAssigneeScopeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [AssigneeScopeHistoryRecord]

  """ Search for the AssigneeScopeHistoryRecord item with the matching ID. """
  AssigneeScopeHistoryRecord(where: AssigneeScopeHistoryRecordWhereUniqueInput!): AssigneeScopeHistoryRecord

  """ Perform a meta-query on all AssigneeScopeHistoryRecord items which match the where clause. 
  """
  _allAssigneeScopeHistoryRecordsMeta(where: AssigneeScopeHistoryRecordWhereInput, search: String, sortBy: [SortAssigneeScopeHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AssigneeScopeHistoryRecord list. """
  _AssigneeScopeHistoryRecordsMeta: _ListMeta

  """ Search for all AssigneeScope items which match the where clause. """
  allAssigneeScopes(where: AssigneeScopeWhereInput, search: String, sortBy: [SortAssigneeScopesBy!], orderBy: String, first: Int, skip: Int): [AssigneeScope]

  """ Search for the AssigneeScope item with the matching ID. """
  AssigneeScope(where: AssigneeScopeWhereUniqueInput!): AssigneeScope

  """ Perform a meta-query on all AssigneeScope items which match the where clause. 
  """
  _allAssigneeScopesMeta(where: AssigneeScopeWhereInput, search: String, sortBy: [SortAssigneeScopesBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the AssigneeScope list. """
  _AssigneeScopesMeta: _ListMeta

  """ Search for all WebhookHistoryRecord items which match the where clause. 
  """
  allWebhookHistoryRecords(where: WebhookHistoryRecordWhereInput, search: String, sortBy: [SortWebhookHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [WebhookHistoryRecord]

  """ Search for the WebhookHistoryRecord item with the matching ID. """
  WebhookHistoryRecord(where: WebhookHistoryRecordWhereUniqueInput!): WebhookHistoryRecord

  """ Perform a meta-query on all WebhookHistoryRecord items which match the where clause. 
  """
  _allWebhookHistoryRecordsMeta(where: WebhookHistoryRecordWhereInput, search: String, sortBy: [SortWebhookHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the WebhookHistoryRecord list. """
  _WebhookHistoryRecordsMeta: _ListMeta

  """ Search for all Webhook items which match the where clause. """
  allWebhooks(where: WebhookWhereInput, search: String, sortBy: [SortWebhooksBy!], orderBy: String, first: Int, skip: Int): [Webhook]

  """ Search for the Webhook item with the matching ID. """
  Webhook(where: WebhookWhereUniqueInput!): Webhook

  """ Perform a meta-query on all Webhook items which match the where clause. 
  """
  _allWebhooksMeta(where: WebhookWhereInput, search: String, sortBy: [SortWebhooksBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the Webhook list. """
  _WebhooksMeta: _ListMeta

  """ Search for all WebhookSubscriptionHistoryRecord items which match the where clause. 
  """
  allWebhookSubscriptionHistoryRecords(where: WebhookSubscriptionHistoryRecordWhereInput, search: String, sortBy: [SortWebhookSubscriptionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): [WebhookSubscriptionHistoryRecord]

  """ Search for the WebhookSubscriptionHistoryRecord item with the matching ID. 
  """
  WebhookSubscriptionHistoryRecord(where: WebhookSubscriptionHistoryRecordWhereUniqueInput!): WebhookSubscriptionHistoryRecord

  """ Perform a meta-query on all WebhookSubscriptionHistoryRecord items which match the where clause. 
  """
  _allWebhookSubscriptionHistoryRecordsMeta(where: WebhookSubscriptionHistoryRecordWhereInput, search: String, sortBy: [SortWebhookSubscriptionHistoryRecordsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the WebhookSubscriptionHistoryRecord list. 
  """
  _WebhookSubscriptionHistoryRecordsMeta: _ListMeta

  """ Search for all WebhookSubscription items which match the where clause. 
  """
  allWebhookSubscriptions(where: WebhookSubscriptionWhereInput, search: String, sortBy: [SortWebhookSubscriptionsBy!], orderBy: String, first: Int, skip: Int): [WebhookSubscription]

  """ Search for the WebhookSubscription item with the matching ID. """
  WebhookSubscription(where: WebhookSubscriptionWhereUniqueInput!): WebhookSubscription

  """ Perform a meta-query on all WebhookSubscription items which match the where clause. 
  """
  _allWebhookSubscriptionsMeta(where: WebhookSubscriptionWhereInput, search: String, sortBy: [SortWebhookSubscriptionsBy!], orderBy: String, first: Int, skip: Int): _QueryMeta

  """ Retrieve the meta-data for the WebhookSubscription list. """
  _WebhookSubscriptionsMeta: _ListMeta

  """ Retrieve the meta-data for all lists. """
  _ksListsMeta(where: _ksListsMetaInput): [_ListMeta]

  """
  Tells, whether specified password recovery token is exists and not expired
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "checkPasswordRecoveryToken",
    "variable": [
      "data",
      "token"
    ],
    "code": "BAD_USER_INPUT",
    "type": "TOKEN_NOT_FOUND",
    "message": "Unable to find non-expired token",
    "messageForUser": "api.user.checkPasswordRecoveryToken.TOKEN_NOT_FOUND"
  }`
  """
  checkPasswordRecoveryToken(data: CheckPasswordRecoveryTokenInput!): CheckPasswordRecoveryTokenOutput

  """
  Returns phone number information from ConfirmPhoneAction, that matches provided search conditions
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "variable": [
      "data",
      "captcha"
    ],
    "code": "BAD_USER_INPUT",
    "type": "CAPTCHA_CHECK_FAILED",
    "message": "Failed to check CAPTCHA",
    "messageForUser": "api.user.CAPTCHA_CHECK_FAILED"
  }`
  
  `{
    "variable": [
      "data",
      "token"
    ],
    "code": "BAD_USER_INPUT",
    "type": "UNABLE_TO_FIND_CONFIRM_PHONE_ACTION",
    "message": "Confirm phone action was expired or it could not be found. Try to initiate phone confirmation again",
    "messageForUser": "api.user.UNABLE_TO_FIND_CONFIRM_PHONE_ACTION"
  }`
  """
  getPhoneByConfirmPhoneActionToken(data: GetPhoneByConfirmPhoneActionTokenInput!): GetPhoneByConfirmPhoneActionTokenOutput

  """
  Tells, whether a Property with given address exists in condo database
  
  In specified address string a part up to building will be taken into account. So, it will make no sense when something more precise, like apartment number, will be specified.
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "query": "checkPropertyWithAddressExist",
    "variable": [
      "data",
      "addressMeta",
      "dv"
    ],
    "code": "BAD_USER_INPUT",
    "type": "DV_VERSION_MISMATCH",
    "message": "Version number value {dv} is incorrect"
  }`
  
  `{
    "query": "checkPropertyWithAddressExist",
    "variable": [
      "data",
      "addressMeta",
      "flatType"
    ],
    "code": "BAD_USER_INPUT",
    "type": "FLAT_WITHOUT_FLAT_TYPE",
    "message": "Flat type is not specified"
  }`
  """
  checkPropertyWithAddressExist(data: CheckPropertyWithAddressExistInput!): CheckPropertyWithAddressExistOutput
  exportPropertiesToExcel(data: ExportPropertiesToExcelInput!): ExportPropertiesToExcelOutput
  allResidentBillingReceipts(where: ResidentBillingReceiptWhereInput, first: Int, skip: Int, sortBy: [SortResidentBillingReceiptsBy!]): [ResidentBillingReceiptOutput]
  predictTicketClassification(data: PredictTicketClassificationInput!): TicketClassifier
  exportIncidentsToExcel(data: ExportIncidentsToExcelInput!): ExportIncidentsToExcelOutput
  exportContactsToExcel(data: ExportContactsToExcelInput!): ExportContactsToExcelOutput
  exportMeterReadings(data: ExportMeterReadingsInput!): ExportMeterReadingsOutput
  exportPaymentsToExcel(data: ExportPaymentsToExcelInput!): ExportPaymentsToExcelOutput
  generatePaymentLink(data: GeneratePaymentLinkInput!): GeneratePaymentLinkOutput
  _allPaymentsSum(where: PaymentWhereInput!): PaymentsSumOutput
  allMiniApps(data: AllMiniAppsInput!): [MiniAppOutput!]
  ticketReportWidgetData(data: TicketReportWidgetInput!): TicketReportWidgetOutput
  ticketAnalyticsReport(data: TicketAnalyticsReportInput): TicketAnalyticsReportOutput
  exportTicketAnalyticsToExcel(data: ExportTicketAnalyticsToExcelInput): ExportTicketAnalyticsToExcelOutput
  getExternalReportIframeUrl(data: GetExternalReportIframeUrlInput!): GetExternalReportIframeUrlOutput
  exportPropertyScopesToExcel(data: ExportPropertyScopeToExcelInput!): ExportPropertyScopeToExcelOutput

  """The version of the Keystone application serving this API."""
  appVersion: String
  authenticatedUser: User
}

type Mutation {
  """ Create a single UserHistoryRecord item. """
  createUserHistoryRecord(data: UserHistoryRecordCreateInput): UserHistoryRecord

  """ Create multiple UserHistoryRecord items. """
  createUserHistoryRecords(data: [UserHistoryRecordsCreateInput]): [UserHistoryRecord]

  """ Update a single UserHistoryRecord item by ID. """
  updateUserHistoryRecord(id: ID!, data: UserHistoryRecordUpdateInput): UserHistoryRecord

  """ Update multiple UserHistoryRecord items by ID. """
  updateUserHistoryRecords(data: [UserHistoryRecordsUpdateInput]): [UserHistoryRecord]

  """ Delete a single UserHistoryRecord item by ID. """
  deleteUserHistoryRecord(id: ID!): UserHistoryRecord

  """ Delete multiple UserHistoryRecord items by ID. """
  deleteUserHistoryRecords(ids: [ID!]): [UserHistoryRecord]

  """ Create a single User item. """
  createUser(data: UserCreateInput): User

  """ Create multiple User items. """
  createUsers(data: [UsersCreateInput]): [User]

  """ Update a single User item by ID. """
  updateUser(id: ID!, data: UserUpdateInput): User

  """ Update multiple User items by ID. """
  updateUsers(data: [UsersUpdateInput]): [User]

  """ Delete a single User item by ID. """
  deleteUser(id: ID!): User

  """ Delete multiple User items by ID. """
  deleteUsers(ids: [ID!]): [User]

  """ Create a single ForgotPasswordActionHistoryRecord item. """
  createForgotPasswordActionHistoryRecord(data: ForgotPasswordActionHistoryRecordCreateInput): ForgotPasswordActionHistoryRecord

  """ Create multiple ForgotPasswordActionHistoryRecord items. """
  createForgotPasswordActionHistoryRecords(data: [ForgotPasswordActionHistoryRecordsCreateInput]): [ForgotPasswordActionHistoryRecord]

  """ Update a single ForgotPasswordActionHistoryRecord item by ID. """
  updateForgotPasswordActionHistoryRecord(id: ID!, data: ForgotPasswordActionHistoryRecordUpdateInput): ForgotPasswordActionHistoryRecord

  """ Update multiple ForgotPasswordActionHistoryRecord items by ID. """
  updateForgotPasswordActionHistoryRecords(data: [ForgotPasswordActionHistoryRecordsUpdateInput]): [ForgotPasswordActionHistoryRecord]

  """ Delete a single ForgotPasswordActionHistoryRecord item by ID. """
  deleteForgotPasswordActionHistoryRecord(id: ID!): ForgotPasswordActionHistoryRecord

  """ Delete multiple ForgotPasswordActionHistoryRecord items by ID. """
  deleteForgotPasswordActionHistoryRecords(ids: [ID!]): [ForgotPasswordActionHistoryRecord]

  """ Create a single ForgotPasswordAction item. """
  createForgotPasswordAction(data: ForgotPasswordActionCreateInput): ForgotPasswordAction

  """ Create multiple ForgotPasswordAction items. """
  createForgotPasswordActions(data: [ForgotPasswordActionsCreateInput]): [ForgotPasswordAction]

  """ Update a single ForgotPasswordAction item by ID. """
  updateForgotPasswordAction(id: ID!, data: ForgotPasswordActionUpdateInput): ForgotPasswordAction

  """ Update multiple ForgotPasswordAction items by ID. """
  updateForgotPasswordActions(data: [ForgotPasswordActionsUpdateInput]): [ForgotPasswordAction]

  """ Delete a single ForgotPasswordAction item by ID. """
  deleteForgotPasswordAction(id: ID!): ForgotPasswordAction

  """ Delete multiple ForgotPasswordAction items by ID. """
  deleteForgotPasswordActions(ids: [ID!]): [ForgotPasswordAction]

  """ Create a single ConfirmPhoneActionHistoryRecord item. """
  createConfirmPhoneActionHistoryRecord(data: ConfirmPhoneActionHistoryRecordCreateInput): ConfirmPhoneActionHistoryRecord

  """ Create multiple ConfirmPhoneActionHistoryRecord items. """
  createConfirmPhoneActionHistoryRecords(data: [ConfirmPhoneActionHistoryRecordsCreateInput]): [ConfirmPhoneActionHistoryRecord]

  """ Update a single ConfirmPhoneActionHistoryRecord item by ID. """
  updateConfirmPhoneActionHistoryRecord(id: ID!, data: ConfirmPhoneActionHistoryRecordUpdateInput): ConfirmPhoneActionHistoryRecord

  """ Update multiple ConfirmPhoneActionHistoryRecord items by ID. """
  updateConfirmPhoneActionHistoryRecords(data: [ConfirmPhoneActionHistoryRecordsUpdateInput]): [ConfirmPhoneActionHistoryRecord]

  """ Delete a single ConfirmPhoneActionHistoryRecord item by ID. """
  deleteConfirmPhoneActionHistoryRecord(id: ID!): ConfirmPhoneActionHistoryRecord

  """ Delete multiple ConfirmPhoneActionHistoryRecord items by ID. """
  deleteConfirmPhoneActionHistoryRecords(ids: [ID!]): [ConfirmPhoneActionHistoryRecord]

  """ Create a single ConfirmPhoneAction item. """
  createConfirmPhoneAction(data: ConfirmPhoneActionCreateInput): ConfirmPhoneAction

  """ Create multiple ConfirmPhoneAction items. """
  createConfirmPhoneActions(data: [ConfirmPhoneActionsCreateInput]): [ConfirmPhoneAction]

  """ Update a single ConfirmPhoneAction item by ID. """
  updateConfirmPhoneAction(id: ID!, data: ConfirmPhoneActionUpdateInput): ConfirmPhoneAction

  """ Update multiple ConfirmPhoneAction items by ID. """
  updateConfirmPhoneActions(data: [ConfirmPhoneActionsUpdateInput]): [ConfirmPhoneAction]

  """ Delete a single ConfirmPhoneAction item by ID. """
  deleteConfirmPhoneAction(id: ID!): ConfirmPhoneAction

  """ Delete multiple ConfirmPhoneAction items by ID. """
  deleteConfirmPhoneActions(ids: [ID!]): [ConfirmPhoneAction]

  """ Create a single OidcClientHistoryRecord item. """
  createOidcClientHistoryRecord(data: OidcClientHistoryRecordCreateInput): OidcClientHistoryRecord

  """ Create multiple OidcClientHistoryRecord items. """
  createOidcClientHistoryRecords(data: [OidcClientHistoryRecordsCreateInput]): [OidcClientHistoryRecord]

  """ Update a single OidcClientHistoryRecord item by ID. """
  updateOidcClientHistoryRecord(id: ID!, data: OidcClientHistoryRecordUpdateInput): OidcClientHistoryRecord

  """ Update multiple OidcClientHistoryRecord items by ID. """
  updateOidcClientHistoryRecords(data: [OidcClientHistoryRecordsUpdateInput]): [OidcClientHistoryRecord]

  """ Delete a single OidcClientHistoryRecord item by ID. """
  deleteOidcClientHistoryRecord(id: ID!): OidcClientHistoryRecord

  """ Delete multiple OidcClientHistoryRecord items by ID. """
  deleteOidcClientHistoryRecords(ids: [ID!]): [OidcClientHistoryRecord]

  """ Create a single OidcClient item. """
  createOidcClient(data: OidcClientCreateInput): OidcClient

  """ Create multiple OidcClient items. """
  createOidcClients(data: [OidcClientsCreateInput]): [OidcClient]

  """ Update a single OidcClient item by ID. """
  updateOidcClient(id: ID!, data: OidcClientUpdateInput): OidcClient

  """ Update multiple OidcClient items by ID. """
  updateOidcClients(data: [OidcClientsUpdateInput]): [OidcClient]

  """ Delete a single OidcClient item by ID. """
  deleteOidcClient(id: ID!): OidcClient

  """ Delete multiple OidcClient items by ID. """
  deleteOidcClients(ids: [ID!]): [OidcClient]

  """ Create a single UserExternalIdentityHistoryRecord item. """
  createUserExternalIdentityHistoryRecord(data: UserExternalIdentityHistoryRecordCreateInput): UserExternalIdentityHistoryRecord

  """ Create multiple UserExternalIdentityHistoryRecord items. """
  createUserExternalIdentityHistoryRecords(data: [UserExternalIdentityHistoryRecordsCreateInput]): [UserExternalIdentityHistoryRecord]

  """ Update a single UserExternalIdentityHistoryRecord item by ID. """
  updateUserExternalIdentityHistoryRecord(id: ID!, data: UserExternalIdentityHistoryRecordUpdateInput): UserExternalIdentityHistoryRecord

  """ Update multiple UserExternalIdentityHistoryRecord items by ID. """
  updateUserExternalIdentityHistoryRecords(data: [UserExternalIdentityHistoryRecordsUpdateInput]): [UserExternalIdentityHistoryRecord]

  """ Delete a single UserExternalIdentityHistoryRecord item by ID. """
  deleteUserExternalIdentityHistoryRecord(id: ID!): UserExternalIdentityHistoryRecord

  """ Delete multiple UserExternalIdentityHistoryRecord items by ID. """
  deleteUserExternalIdentityHistoryRecords(ids: [ID!]): [UserExternalIdentityHistoryRecord]

  """ Create a single UserExternalIdentity item. """
  createUserExternalIdentity(data: UserExternalIdentityCreateInput): UserExternalIdentity

  """ Create multiple UserExternalIdentity items. """
  createUserExternalIdentities(data: [UserExternalIdentitiesCreateInput]): [UserExternalIdentity]

  """ Update a single UserExternalIdentity item by ID. """
  updateUserExternalIdentity(id: ID!, data: UserExternalIdentityUpdateInput): UserExternalIdentity

  """ Update multiple UserExternalIdentity items by ID. """
  updateUserExternalIdentities(data: [UserExternalIdentitiesUpdateInput]): [UserExternalIdentity]

  """ Delete a single UserExternalIdentity item by ID. """
  deleteUserExternalIdentity(id: ID!): UserExternalIdentity

  """ Delete multiple UserExternalIdentity items by ID. """
  deleteUserExternalIdentities(ids: [ID!]): [UserExternalIdentity]

  """ Create a single OrganizationHistoryRecord item. """
  createOrganizationHistoryRecord(data: OrganizationHistoryRecordCreateInput): OrganizationHistoryRecord

  """ Create multiple OrganizationHistoryRecord items. """
  createOrganizationHistoryRecords(data: [OrganizationHistoryRecordsCreateInput]): [OrganizationHistoryRecord]

  """ Update a single OrganizationHistoryRecord item by ID. """
  updateOrganizationHistoryRecord(id: ID!, data: OrganizationHistoryRecordUpdateInput): OrganizationHistoryRecord

  """ Update multiple OrganizationHistoryRecord items by ID. """
  updateOrganizationHistoryRecords(data: [OrganizationHistoryRecordsUpdateInput]): [OrganizationHistoryRecord]

  """ Delete a single OrganizationHistoryRecord item by ID. """
  deleteOrganizationHistoryRecord(id: ID!): OrganizationHistoryRecord

  """ Delete multiple OrganizationHistoryRecord items by ID. """
  deleteOrganizationHistoryRecords(ids: [ID!]): [OrganizationHistoryRecord]

  """ Create a single Organization item. """
  createOrganization(data: OrganizationCreateInput): Organization

  """ Create multiple Organization items. """
  createOrganizations(data: [OrganizationsCreateInput]): [Organization]

  """ Update a single Organization item by ID. """
  updateOrganization(id: ID!, data: OrganizationUpdateInput): Organization

  """ Update multiple Organization items by ID. """
  updateOrganizations(data: [OrganizationsUpdateInput]): [Organization]

  """ Delete a single Organization item by ID. """
  deleteOrganization(id: ID!): Organization

  """ Delete multiple Organization items by ID. """
  deleteOrganizations(ids: [ID!]): [Organization]

  """ Create a single OrganizationEmployeeHistoryRecord item. """
  createOrganizationEmployeeHistoryRecord(data: OrganizationEmployeeHistoryRecordCreateInput): OrganizationEmployeeHistoryRecord

  """ Create multiple OrganizationEmployeeHistoryRecord items. """
  createOrganizationEmployeeHistoryRecords(data: [OrganizationEmployeeHistoryRecordsCreateInput]): [OrganizationEmployeeHistoryRecord]

  """ Update a single OrganizationEmployeeHistoryRecord item by ID. """
  updateOrganizationEmployeeHistoryRecord(id: ID!, data: OrganizationEmployeeHistoryRecordUpdateInput): OrganizationEmployeeHistoryRecord

  """ Update multiple OrganizationEmployeeHistoryRecord items by ID. """
  updateOrganizationEmployeeHistoryRecords(data: [OrganizationEmployeeHistoryRecordsUpdateInput]): [OrganizationEmployeeHistoryRecord]

  """ Delete a single OrganizationEmployeeHistoryRecord item by ID. """
  deleteOrganizationEmployeeHistoryRecord(id: ID!): OrganizationEmployeeHistoryRecord

  """ Delete multiple OrganizationEmployeeHistoryRecord items by ID. """
  deleteOrganizationEmployeeHistoryRecords(ids: [ID!]): [OrganizationEmployeeHistoryRecord]

  """ Create a single OrganizationEmployee item. """
  createOrganizationEmployee(data: OrganizationEmployeeCreateInput): OrganizationEmployee

  """ Create multiple OrganizationEmployee items. """
  createOrganizationEmployees(data: [OrganizationEmployeesCreateInput]): [OrganizationEmployee]

  """ Update a single OrganizationEmployee item by ID. """
  updateOrganizationEmployee(id: ID!, data: OrganizationEmployeeUpdateInput): OrganizationEmployee

  """ Update multiple OrganizationEmployee items by ID. """
  updateOrganizationEmployees(data: [OrganizationEmployeesUpdateInput]): [OrganizationEmployee]

  """ Delete a single OrganizationEmployee item by ID. """
  deleteOrganizationEmployee(id: ID!): OrganizationEmployee

  """ Delete multiple OrganizationEmployee items by ID. """
  deleteOrganizationEmployees(ids: [ID!]): [OrganizationEmployee]

  """ Create a single OrganizationEmployeeRoleHistoryRecord item. """
  createOrganizationEmployeeRoleHistoryRecord(data: OrganizationEmployeeRoleHistoryRecordCreateInput): OrganizationEmployeeRoleHistoryRecord

  """ Create multiple OrganizationEmployeeRoleHistoryRecord items. """
  createOrganizationEmployeeRoleHistoryRecords(data: [OrganizationEmployeeRoleHistoryRecordsCreateInput]): [OrganizationEmployeeRoleHistoryRecord]

  """ Update a single OrganizationEmployeeRoleHistoryRecord item by ID. """
  updateOrganizationEmployeeRoleHistoryRecord(id: ID!, data: OrganizationEmployeeRoleHistoryRecordUpdateInput): OrganizationEmployeeRoleHistoryRecord

  """ Update multiple OrganizationEmployeeRoleHistoryRecord items by ID. """
  updateOrganizationEmployeeRoleHistoryRecords(data: [OrganizationEmployeeRoleHistoryRecordsUpdateInput]): [OrganizationEmployeeRoleHistoryRecord]

  """ Delete a single OrganizationEmployeeRoleHistoryRecord item by ID. """
  deleteOrganizationEmployeeRoleHistoryRecord(id: ID!): OrganizationEmployeeRoleHistoryRecord

  """ Delete multiple OrganizationEmployeeRoleHistoryRecord items by ID. """
  deleteOrganizationEmployeeRoleHistoryRecords(ids: [ID!]): [OrganizationEmployeeRoleHistoryRecord]

  """ Create a single OrganizationEmployeeRole item. """
  createOrganizationEmployeeRole(data: OrganizationEmployeeRoleCreateInput): OrganizationEmployeeRole

  """ Create multiple OrganizationEmployeeRole items. """
  createOrganizationEmployeeRoles(data: [OrganizationEmployeeRolesCreateInput]): [OrganizationEmployeeRole]

  """ Update a single OrganizationEmployeeRole item by ID. """
  updateOrganizationEmployeeRole(id: ID!, data: OrganizationEmployeeRoleUpdateInput): OrganizationEmployeeRole

  """ Update multiple OrganizationEmployeeRole items by ID. """
  updateOrganizationEmployeeRoles(data: [OrganizationEmployeeRolesUpdateInput]): [OrganizationEmployeeRole]

  """ Delete a single OrganizationEmployeeRole item by ID. """
  deleteOrganizationEmployeeRole(id: ID!): OrganizationEmployeeRole

  """ Delete multiple OrganizationEmployeeRole items by ID. """
  deleteOrganizationEmployeeRoles(ids: [ID!]): [OrganizationEmployeeRole]

  """ Create a single OrganizationLinkHistoryRecord item. """
  createOrganizationLinkHistoryRecord(data: OrganizationLinkHistoryRecordCreateInput): OrganizationLinkHistoryRecord

  """ Create multiple OrganizationLinkHistoryRecord items. """
  createOrganizationLinkHistoryRecords(data: [OrganizationLinkHistoryRecordsCreateInput]): [OrganizationLinkHistoryRecord]

  """ Update a single OrganizationLinkHistoryRecord item by ID. """
  updateOrganizationLinkHistoryRecord(id: ID!, data: OrganizationLinkHistoryRecordUpdateInput): OrganizationLinkHistoryRecord

  """ Update multiple OrganizationLinkHistoryRecord items by ID. """
  updateOrganizationLinkHistoryRecords(data: [OrganizationLinkHistoryRecordsUpdateInput]): [OrganizationLinkHistoryRecord]

  """ Delete a single OrganizationLinkHistoryRecord item by ID. """
  deleteOrganizationLinkHistoryRecord(id: ID!): OrganizationLinkHistoryRecord

  """ Delete multiple OrganizationLinkHistoryRecord items by ID. """
  deleteOrganizationLinkHistoryRecords(ids: [ID!]): [OrganizationLinkHistoryRecord]

  """ Create a single OrganizationLink item. """
  createOrganizationLink(data: OrganizationLinkCreateInput): OrganizationLink

  """ Create multiple OrganizationLink items. """
  createOrganizationLinks(data: [OrganizationLinksCreateInput]): [OrganizationLink]

  """ Update a single OrganizationLink item by ID. """
  updateOrganizationLink(id: ID!, data: OrganizationLinkUpdateInput): OrganizationLink

  """ Update multiple OrganizationLink items by ID. """
  updateOrganizationLinks(data: [OrganizationLinksUpdateInput]): [OrganizationLink]

  """ Delete a single OrganizationLink item by ID. """
  deleteOrganizationLink(id: ID!): OrganizationLink

  """ Delete multiple OrganizationLink items by ID. """
  deleteOrganizationLinks(ids: [ID!]): [OrganizationLink]

  """ Create a single OrganizationEmployeeSpecializationHistoryRecord item. 
  """
  createOrganizationEmployeeSpecializationHistoryRecord(data: OrganizationEmployeeSpecializationHistoryRecordCreateInput): OrganizationEmployeeSpecializationHistoryRecord

  """ Create multiple OrganizationEmployeeSpecializationHistoryRecord items. 
  """
  createOrganizationEmployeeSpecializationHistoryRecords(data: [OrganizationEmployeeSpecializationHistoryRecordsCreateInput]): [OrganizationEmployeeSpecializationHistoryRecord]

  """ Update a single OrganizationEmployeeSpecializationHistoryRecord item by ID. 
  """
  updateOrganizationEmployeeSpecializationHistoryRecord(id: ID!, data: OrganizationEmployeeSpecializationHistoryRecordUpdateInput): OrganizationEmployeeSpecializationHistoryRecord

  """ Update multiple OrganizationEmployeeSpecializationHistoryRecord items by ID. 
  """
  updateOrganizationEmployeeSpecializationHistoryRecords(data: [OrganizationEmployeeSpecializationHistoryRecordsUpdateInput]): [OrganizationEmployeeSpecializationHistoryRecord]

  """ Delete a single OrganizationEmployeeSpecializationHistoryRecord item by ID. 
  """
  deleteOrganizationEmployeeSpecializationHistoryRecord(id: ID!): OrganizationEmployeeSpecializationHistoryRecord

  """ Delete multiple OrganizationEmployeeSpecializationHistoryRecord items by ID. 
  """
  deleteOrganizationEmployeeSpecializationHistoryRecords(ids: [ID!]): [OrganizationEmployeeSpecializationHistoryRecord]

  """ Create a single OrganizationEmployeeSpecialization item. """
  createOrganizationEmployeeSpecialization(data: OrganizationEmployeeSpecializationCreateInput): OrganizationEmployeeSpecialization

  """ Create multiple OrganizationEmployeeSpecialization items. """
  createOrganizationEmployeeSpecializations(data: [OrganizationEmployeeSpecializationsCreateInput]): [OrganizationEmployeeSpecialization]

  """ Update a single OrganizationEmployeeSpecialization item by ID. """
  updateOrganizationEmployeeSpecialization(id: ID!, data: OrganizationEmployeeSpecializationUpdateInput): OrganizationEmployeeSpecialization

  """ Update multiple OrganizationEmployeeSpecialization items by ID. """
  updateOrganizationEmployeeSpecializations(data: [OrganizationEmployeeSpecializationsUpdateInput]): [OrganizationEmployeeSpecialization]

  """ Delete a single OrganizationEmployeeSpecialization item by ID. """
  deleteOrganizationEmployeeSpecialization(id: ID!): OrganizationEmployeeSpecialization

  """ Delete multiple OrganizationEmployeeSpecialization items by ID. """
  deleteOrganizationEmployeeSpecializations(ids: [ID!]): [OrganizationEmployeeSpecialization]

  """ Create a single PropertyHistoryRecord item. """
  createPropertyHistoryRecord(data: PropertyHistoryRecordCreateInput): PropertyHistoryRecord

  """ Create multiple PropertyHistoryRecord items. """
  createPropertyHistoryRecords(data: [PropertyHistoryRecordsCreateInput]): [PropertyHistoryRecord]

  """ Update a single PropertyHistoryRecord item by ID. """
  updatePropertyHistoryRecord(id: ID!, data: PropertyHistoryRecordUpdateInput): PropertyHistoryRecord

  """ Update multiple PropertyHistoryRecord items by ID. """
  updatePropertyHistoryRecords(data: [PropertyHistoryRecordsUpdateInput]): [PropertyHistoryRecord]

  """ Delete a single PropertyHistoryRecord item by ID. """
  deletePropertyHistoryRecord(id: ID!): PropertyHistoryRecord

  """ Delete multiple PropertyHistoryRecord items by ID. """
  deletePropertyHistoryRecords(ids: [ID!]): [PropertyHistoryRecord]

  """ Create a single Property item. """
  createProperty(data: PropertyCreateInput): Property

  """ Create multiple Property items. """
  createProperties(data: [PropertiesCreateInput]): [Property]

  """ Update a single Property item by ID. """
  updateProperty(id: ID!, data: PropertyUpdateInput): Property

  """ Update multiple Property items by ID. """
  updateProperties(data: [PropertiesUpdateInput]): [Property]

  """ Delete a single Property item by ID. """
  deleteProperty(id: ID!): Property

  """ Delete multiple Property items by ID. """
  deleteProperties(ids: [ID!]): [Property]

  """ Create a single BillingIntegrationHistoryRecord item. """
  createBillingIntegrationHistoryRecord(data: BillingIntegrationHistoryRecordCreateInput): BillingIntegrationHistoryRecord

  """ Create multiple BillingIntegrationHistoryRecord items. """
  createBillingIntegrationHistoryRecords(data: [BillingIntegrationHistoryRecordsCreateInput]): [BillingIntegrationHistoryRecord]

  """ Update a single BillingIntegrationHistoryRecord item by ID. """
  updateBillingIntegrationHistoryRecord(id: ID!, data: BillingIntegrationHistoryRecordUpdateInput): BillingIntegrationHistoryRecord

  """ Update multiple BillingIntegrationHistoryRecord items by ID. """
  updateBillingIntegrationHistoryRecords(data: [BillingIntegrationHistoryRecordsUpdateInput]): [BillingIntegrationHistoryRecord]

  """ Delete a single BillingIntegrationHistoryRecord item by ID. """
  deleteBillingIntegrationHistoryRecord(id: ID!): BillingIntegrationHistoryRecord

  """ Delete multiple BillingIntegrationHistoryRecord items by ID. """
  deleteBillingIntegrationHistoryRecords(ids: [ID!]): [BillingIntegrationHistoryRecord]

  """ Create a single BillingIntegration item. """
  createBillingIntegration(data: BillingIntegrationCreateInput): BillingIntegration

  """ Create multiple BillingIntegration items. """
  createBillingIntegrations(data: [BillingIntegrationsCreateInput]): [BillingIntegration]

  """ Update a single BillingIntegration item by ID. """
  updateBillingIntegration(id: ID!, data: BillingIntegrationUpdateInput): BillingIntegration

  """ Update multiple BillingIntegration items by ID. """
  updateBillingIntegrations(data: [BillingIntegrationsUpdateInput]): [BillingIntegration]

  """ Delete a single BillingIntegration item by ID. """
  deleteBillingIntegration(id: ID!): BillingIntegration

  """ Delete multiple BillingIntegration items by ID. """
  deleteBillingIntegrations(ids: [ID!]): [BillingIntegration]

  """ Create a single BillingIntegrationAccessRightHistoryRecord item. """
  createBillingIntegrationAccessRightHistoryRecord(data: BillingIntegrationAccessRightHistoryRecordCreateInput): BillingIntegrationAccessRightHistoryRecord

  """ Create multiple BillingIntegrationAccessRightHistoryRecord items. """
  createBillingIntegrationAccessRightHistoryRecords(data: [BillingIntegrationAccessRightHistoryRecordsCreateInput]): [BillingIntegrationAccessRightHistoryRecord]

  """ Update a single BillingIntegrationAccessRightHistoryRecord item by ID. 
  """
  updateBillingIntegrationAccessRightHistoryRecord(id: ID!, data: BillingIntegrationAccessRightHistoryRecordUpdateInput): BillingIntegrationAccessRightHistoryRecord

  """ Update multiple BillingIntegrationAccessRightHistoryRecord items by ID. 
  """
  updateBillingIntegrationAccessRightHistoryRecords(data: [BillingIntegrationAccessRightHistoryRecordsUpdateInput]): [BillingIntegrationAccessRightHistoryRecord]

  """ Delete a single BillingIntegrationAccessRightHistoryRecord item by ID. 
  """
  deleteBillingIntegrationAccessRightHistoryRecord(id: ID!): BillingIntegrationAccessRightHistoryRecord

  """ Delete multiple BillingIntegrationAccessRightHistoryRecord items by ID. 
  """
  deleteBillingIntegrationAccessRightHistoryRecords(ids: [ID!]): [BillingIntegrationAccessRightHistoryRecord]

  """ Create a single BillingIntegrationAccessRight item. """
  createBillingIntegrationAccessRight(data: BillingIntegrationAccessRightCreateInput): BillingIntegrationAccessRight

  """ Create multiple BillingIntegrationAccessRight items. """
  createBillingIntegrationAccessRights(data: [BillingIntegrationAccessRightsCreateInput]): [BillingIntegrationAccessRight]

  """ Update a single BillingIntegrationAccessRight item by ID. """
  updateBillingIntegrationAccessRight(id: ID!, data: BillingIntegrationAccessRightUpdateInput): BillingIntegrationAccessRight

  """ Update multiple BillingIntegrationAccessRight items by ID. """
  updateBillingIntegrationAccessRights(data: [BillingIntegrationAccessRightsUpdateInput]): [BillingIntegrationAccessRight]

  """ Delete a single BillingIntegrationAccessRight item by ID. """
  deleteBillingIntegrationAccessRight(id: ID!): BillingIntegrationAccessRight

  """ Delete multiple BillingIntegrationAccessRight items by ID. """
  deleteBillingIntegrationAccessRights(ids: [ID!]): [BillingIntegrationAccessRight]

  """ Create a single BillingIntegrationOrganizationContextHistoryRecord item. 
  """
  createBillingIntegrationOrganizationContextHistoryRecord(data: BillingIntegrationOrganizationContextHistoryRecordCreateInput): BillingIntegrationOrganizationContextHistoryRecord

  """ Create multiple BillingIntegrationOrganizationContextHistoryRecord items. 
  """
  createBillingIntegrationOrganizationContextHistoryRecords(data: [BillingIntegrationOrganizationContextHistoryRecordsCreateInput]): [BillingIntegrationOrganizationContextHistoryRecord]

  """ Update a single BillingIntegrationOrganizationContextHistoryRecord item by ID. 
  """
  updateBillingIntegrationOrganizationContextHistoryRecord(id: ID!, data: BillingIntegrationOrganizationContextHistoryRecordUpdateInput): BillingIntegrationOrganizationContextHistoryRecord

  """ Update multiple BillingIntegrationOrganizationContextHistoryRecord items by ID. 
  """
  updateBillingIntegrationOrganizationContextHistoryRecords(data: [BillingIntegrationOrganizationContextHistoryRecordsUpdateInput]): [BillingIntegrationOrganizationContextHistoryRecord]

  """ Delete a single BillingIntegrationOrganizationContextHistoryRecord item by ID. 
  """
  deleteBillingIntegrationOrganizationContextHistoryRecord(id: ID!): BillingIntegrationOrganizationContextHistoryRecord

  """ Delete multiple BillingIntegrationOrganizationContextHistoryRecord items by ID. 
  """
  deleteBillingIntegrationOrganizationContextHistoryRecords(ids: [ID!]): [BillingIntegrationOrganizationContextHistoryRecord]

  """ Create a single BillingIntegrationOrganizationContext item. """
  createBillingIntegrationOrganizationContext(data: BillingIntegrationOrganizationContextCreateInput): BillingIntegrationOrganizationContext

  """ Create multiple BillingIntegrationOrganizationContext items. """
  createBillingIntegrationOrganizationContexts(data: [BillingIntegrationOrganizationContextsCreateInput]): [BillingIntegrationOrganizationContext]

  """ Update a single BillingIntegrationOrganizationContext item by ID. """
  updateBillingIntegrationOrganizationContext(id: ID!, data: BillingIntegrationOrganizationContextUpdateInput): BillingIntegrationOrganizationContext

  """ Update multiple BillingIntegrationOrganizationContext items by ID. """
  updateBillingIntegrationOrganizationContexts(data: [BillingIntegrationOrganizationContextsUpdateInput]): [BillingIntegrationOrganizationContext]

  """ Delete a single BillingIntegrationOrganizationContext item by ID. """
  deleteBillingIntegrationOrganizationContext(id: ID!): BillingIntegrationOrganizationContext

  """ Delete multiple BillingIntegrationOrganizationContext items by ID. """
  deleteBillingIntegrationOrganizationContexts(ids: [ID!]): [BillingIntegrationOrganizationContext]

  """ Create a single BillingIntegrationLog item. """
  createBillingIntegrationLog(data: BillingIntegrationLogCreateInput): BillingIntegrationLog

  """ Create multiple BillingIntegrationLog items. """
  createBillingIntegrationLogs(data: [BillingIntegrationLogsCreateInput]): [BillingIntegrationLog]

  """ Update a single BillingIntegrationLog item by ID. """
  updateBillingIntegrationLog(id: ID!, data: BillingIntegrationLogUpdateInput): BillingIntegrationLog

  """ Update multiple BillingIntegrationLog items by ID. """
  updateBillingIntegrationLogs(data: [BillingIntegrationLogsUpdateInput]): [BillingIntegrationLog]

  """ Delete a single BillingIntegrationLog item by ID. """
  deleteBillingIntegrationLog(id: ID!): BillingIntegrationLog

  """ Delete multiple BillingIntegrationLog items by ID. """
  deleteBillingIntegrationLogs(ids: [ID!]): [BillingIntegrationLog]

  """ Create a single BillingPropertyHistoryRecord item. """
  createBillingPropertyHistoryRecord(data: BillingPropertyHistoryRecordCreateInput): BillingPropertyHistoryRecord

  """ Create multiple BillingPropertyHistoryRecord items. """
  createBillingPropertyHistoryRecords(data: [BillingPropertyHistoryRecordsCreateInput]): [BillingPropertyHistoryRecord]

  """ Update a single BillingPropertyHistoryRecord item by ID. """
  updateBillingPropertyHistoryRecord(id: ID!, data: BillingPropertyHistoryRecordUpdateInput): BillingPropertyHistoryRecord

  """ Update multiple BillingPropertyHistoryRecord items by ID. """
  updateBillingPropertyHistoryRecords(data: [BillingPropertyHistoryRecordsUpdateInput]): [BillingPropertyHistoryRecord]

  """ Delete a single BillingPropertyHistoryRecord item by ID. """
  deleteBillingPropertyHistoryRecord(id: ID!): BillingPropertyHistoryRecord

  """ Delete multiple BillingPropertyHistoryRecord items by ID. """
  deleteBillingPropertyHistoryRecords(ids: [ID!]): [BillingPropertyHistoryRecord]

  """ Create a single BillingProperty item. """
  createBillingProperty(data: BillingPropertyCreateInput): BillingProperty

  """ Create multiple BillingProperty items. """
  createBillingProperties(data: [BillingPropertiesCreateInput]): [BillingProperty]

  """ Update a single BillingProperty item by ID. """
  updateBillingProperty(id: ID!, data: BillingPropertyUpdateInput): BillingProperty

  """ Update multiple BillingProperty items by ID. """
  updateBillingProperties(data: [BillingPropertiesUpdateInput]): [BillingProperty]

  """ Delete a single BillingProperty item by ID. """
  deleteBillingProperty(id: ID!): BillingProperty

  """ Delete multiple BillingProperty items by ID. """
  deleteBillingProperties(ids: [ID!]): [BillingProperty]

  """ Create a single BillingAccountHistoryRecord item. """
  createBillingAccountHistoryRecord(data: BillingAccountHistoryRecordCreateInput): BillingAccountHistoryRecord

  """ Create multiple BillingAccountHistoryRecord items. """
  createBillingAccountHistoryRecords(data: [BillingAccountHistoryRecordsCreateInput]): [BillingAccountHistoryRecord]

  """ Update a single BillingAccountHistoryRecord item by ID. """
  updateBillingAccountHistoryRecord(id: ID!, data: BillingAccountHistoryRecordUpdateInput): BillingAccountHistoryRecord

  """ Update multiple BillingAccountHistoryRecord items by ID. """
  updateBillingAccountHistoryRecords(data: [BillingAccountHistoryRecordsUpdateInput]): [BillingAccountHistoryRecord]

  """ Delete a single BillingAccountHistoryRecord item by ID. """
  deleteBillingAccountHistoryRecord(id: ID!): BillingAccountHistoryRecord

  """ Delete multiple BillingAccountHistoryRecord items by ID. """
  deleteBillingAccountHistoryRecords(ids: [ID!]): [BillingAccountHistoryRecord]

  """ Create a single BillingAccount item. """
  createBillingAccount(data: BillingAccountCreateInput): BillingAccount

  """ Create multiple BillingAccount items. """
  createBillingAccounts(data: [BillingAccountsCreateInput]): [BillingAccount]

  """ Update a single BillingAccount item by ID. """
  updateBillingAccount(id: ID!, data: BillingAccountUpdateInput): BillingAccount

  """ Update multiple BillingAccount items by ID. """
  updateBillingAccounts(data: [BillingAccountsUpdateInput]): [BillingAccount]

  """ Delete a single BillingAccount item by ID. """
  deleteBillingAccount(id: ID!): BillingAccount

  """ Delete multiple BillingAccount items by ID. """
  deleteBillingAccounts(ids: [ID!]): [BillingAccount]

  """ Create a single BillingMeterResourceHistoryRecord item. """
  createBillingMeterResourceHistoryRecord(data: BillingMeterResourceHistoryRecordCreateInput): BillingMeterResourceHistoryRecord

  """ Create multiple BillingMeterResourceHistoryRecord items. """
  createBillingMeterResourceHistoryRecords(data: [BillingMeterResourceHistoryRecordsCreateInput]): [BillingMeterResourceHistoryRecord]

  """ Update a single BillingMeterResourceHistoryRecord item by ID. """
  updateBillingMeterResourceHistoryRecord(id: ID!, data: BillingMeterResourceHistoryRecordUpdateInput): BillingMeterResourceHistoryRecord

  """ Update multiple BillingMeterResourceHistoryRecord items by ID. """
  updateBillingMeterResourceHistoryRecords(data: [BillingMeterResourceHistoryRecordsUpdateInput]): [BillingMeterResourceHistoryRecord]

  """ Delete a single BillingMeterResourceHistoryRecord item by ID. """
  deleteBillingMeterResourceHistoryRecord(id: ID!): BillingMeterResourceHistoryRecord

  """ Delete multiple BillingMeterResourceHistoryRecord items by ID. """
  deleteBillingMeterResourceHistoryRecords(ids: [ID!]): [BillingMeterResourceHistoryRecord]

  """ Create a single BillingMeterResource item. """
  createBillingMeterResource(data: BillingMeterResourceCreateInput): BillingMeterResource

  """ Create multiple BillingMeterResource items. """
  createBillingMeterResources(data: [BillingMeterResourcesCreateInput]): [BillingMeterResource]

  """ Update a single BillingMeterResource item by ID. """
  updateBillingMeterResource(id: ID!, data: BillingMeterResourceUpdateInput): BillingMeterResource

  """ Update multiple BillingMeterResource items by ID. """
  updateBillingMeterResources(data: [BillingMeterResourcesUpdateInput]): [BillingMeterResource]

  """ Delete a single BillingMeterResource item by ID. """
  deleteBillingMeterResource(id: ID!): BillingMeterResource

  """ Delete multiple BillingMeterResource items by ID. """
  deleteBillingMeterResources(ids: [ID!]): [BillingMeterResource]

  """ Create a single BillingAccountMeterHistoryRecord item. """
  createBillingAccountMeterHistoryRecord(data: BillingAccountMeterHistoryRecordCreateInput): BillingAccountMeterHistoryRecord

  """ Create multiple BillingAccountMeterHistoryRecord items. """
  createBillingAccountMeterHistoryRecords(data: [BillingAccountMeterHistoryRecordsCreateInput]): [BillingAccountMeterHistoryRecord]

  """ Update a single BillingAccountMeterHistoryRecord item by ID. """
  updateBillingAccountMeterHistoryRecord(id: ID!, data: BillingAccountMeterHistoryRecordUpdateInput): BillingAccountMeterHistoryRecord

  """ Update multiple BillingAccountMeterHistoryRecord items by ID. """
  updateBillingAccountMeterHistoryRecords(data: [BillingAccountMeterHistoryRecordsUpdateInput]): [BillingAccountMeterHistoryRecord]

  """ Delete a single BillingAccountMeterHistoryRecord item by ID. """
  deleteBillingAccountMeterHistoryRecord(id: ID!): BillingAccountMeterHistoryRecord

  """ Delete multiple BillingAccountMeterHistoryRecord items by ID. """
  deleteBillingAccountMeterHistoryRecords(ids: [ID!]): [BillingAccountMeterHistoryRecord]

  """ Create a single BillingAccountMeter item. """
  createBillingAccountMeter(data: BillingAccountMeterCreateInput): BillingAccountMeter

  """ Create multiple BillingAccountMeter items. """
  createBillingAccountMeters(data: [BillingAccountMetersCreateInput]): [BillingAccountMeter]

  """ Update a single BillingAccountMeter item by ID. """
  updateBillingAccountMeter(id: ID!, data: BillingAccountMeterUpdateInput): BillingAccountMeter

  """ Update multiple BillingAccountMeter items by ID. """
  updateBillingAccountMeters(data: [BillingAccountMetersUpdateInput]): [BillingAccountMeter]

  """ Delete a single BillingAccountMeter item by ID. """
  deleteBillingAccountMeter(id: ID!): BillingAccountMeter

  """ Delete multiple BillingAccountMeter items by ID. """
  deleteBillingAccountMeters(ids: [ID!]): [BillingAccountMeter]

  """ Create a single BillingAccountMeterReadingHistoryRecord item. """
  createBillingAccountMeterReadingHistoryRecord(data: BillingAccountMeterReadingHistoryRecordCreateInput): BillingAccountMeterReadingHistoryRecord

  """ Create multiple BillingAccountMeterReadingHistoryRecord items. """
  createBillingAccountMeterReadingHistoryRecords(data: [BillingAccountMeterReadingHistoryRecordsCreateInput]): [BillingAccountMeterReadingHistoryRecord]

  """ Update a single BillingAccountMeterReadingHistoryRecord item by ID. """
  updateBillingAccountMeterReadingHistoryRecord(id: ID!, data: BillingAccountMeterReadingHistoryRecordUpdateInput): BillingAccountMeterReadingHistoryRecord

  """ Update multiple BillingAccountMeterReadingHistoryRecord items by ID. """
  updateBillingAccountMeterReadingHistoryRecords(data: [BillingAccountMeterReadingHistoryRecordsUpdateInput]): [BillingAccountMeterReadingHistoryRecord]

  """ Delete a single BillingAccountMeterReadingHistoryRecord item by ID. """
  deleteBillingAccountMeterReadingHistoryRecord(id: ID!): BillingAccountMeterReadingHistoryRecord

  """ Delete multiple BillingAccountMeterReadingHistoryRecord items by ID. """
  deleteBillingAccountMeterReadingHistoryRecords(ids: [ID!]): [BillingAccountMeterReadingHistoryRecord]

  """ Create a single BillingAccountMeterReading item. """
  createBillingAccountMeterReading(data: BillingAccountMeterReadingCreateInput): BillingAccountMeterReading

  """ Create multiple BillingAccountMeterReading items. """
  createBillingAccountMeterReadings(data: [BillingAccountMeterReadingsCreateInput]): [BillingAccountMeterReading]

  """ Update a single BillingAccountMeterReading item by ID. """
  updateBillingAccountMeterReading(id: ID!, data: BillingAccountMeterReadingUpdateInput): BillingAccountMeterReading

  """ Update multiple BillingAccountMeterReading items by ID. """
  updateBillingAccountMeterReadings(data: [BillingAccountMeterReadingsUpdateInput]): [BillingAccountMeterReading]

  """ Delete a single BillingAccountMeterReading item by ID. """
  deleteBillingAccountMeterReading(id: ID!): BillingAccountMeterReading

  """ Delete multiple BillingAccountMeterReading items by ID. """
  deleteBillingAccountMeterReadings(ids: [ID!]): [BillingAccountMeterReading]

  """ Create a single BillingReceiptHistoryRecord item. """
  createBillingReceiptHistoryRecord(data: BillingReceiptHistoryRecordCreateInput): BillingReceiptHistoryRecord

  """ Create multiple BillingReceiptHistoryRecord items. """
  createBillingReceiptHistoryRecords(data: [BillingReceiptHistoryRecordsCreateInput]): [BillingReceiptHistoryRecord]

  """ Update a single BillingReceiptHistoryRecord item by ID. """
  updateBillingReceiptHistoryRecord(id: ID!, data: BillingReceiptHistoryRecordUpdateInput): BillingReceiptHistoryRecord

  """ Update multiple BillingReceiptHistoryRecord items by ID. """
  updateBillingReceiptHistoryRecords(data: [BillingReceiptHistoryRecordsUpdateInput]): [BillingReceiptHistoryRecord]

  """ Delete a single BillingReceiptHistoryRecord item by ID. """
  deleteBillingReceiptHistoryRecord(id: ID!): BillingReceiptHistoryRecord

  """ Delete multiple BillingReceiptHistoryRecord items by ID. """
  deleteBillingReceiptHistoryRecords(ids: [ID!]): [BillingReceiptHistoryRecord]

  """ Create a single BillingReceipt item. """
  createBillingReceipt(data: BillingReceiptCreateInput): BillingReceipt

  """ Create multiple BillingReceipt items. """
  createBillingReceipts(data: [BillingReceiptsCreateInput]): [BillingReceipt]

  """ Update a single BillingReceipt item by ID. """
  updateBillingReceipt(id: ID!, data: BillingReceiptUpdateInput): BillingReceipt

  """ Update multiple BillingReceipt items by ID. """
  updateBillingReceipts(data: [BillingReceiptsUpdateInput]): [BillingReceipt]

  """ Delete a single BillingReceipt item by ID. """
  deleteBillingReceipt(id: ID!): BillingReceipt

  """ Delete multiple BillingReceipt items by ID. """
  deleteBillingReceipts(ids: [ID!]): [BillingReceipt]

  """ Create a single BillingRecipientHistoryRecord item. """
  createBillingRecipientHistoryRecord(data: BillingRecipientHistoryRecordCreateInput): BillingRecipientHistoryRecord

  """ Create multiple BillingRecipientHistoryRecord items. """
  createBillingRecipientHistoryRecords(data: [BillingRecipientHistoryRecordsCreateInput]): [BillingRecipientHistoryRecord]

  """ Update a single BillingRecipientHistoryRecord item by ID. """
  updateBillingRecipientHistoryRecord(id: ID!, data: BillingRecipientHistoryRecordUpdateInput): BillingRecipientHistoryRecord

  """ Update multiple BillingRecipientHistoryRecord items by ID. """
  updateBillingRecipientHistoryRecords(data: [BillingRecipientHistoryRecordsUpdateInput]): [BillingRecipientHistoryRecord]

  """ Delete a single BillingRecipientHistoryRecord item by ID. """
  deleteBillingRecipientHistoryRecord(id: ID!): BillingRecipientHistoryRecord

  """ Delete multiple BillingRecipientHistoryRecord items by ID. """
  deleteBillingRecipientHistoryRecords(ids: [ID!]): [BillingRecipientHistoryRecord]

  """ Create a single BillingRecipient item. """
  createBillingRecipient(data: BillingRecipientCreateInput): BillingRecipient

  """ Create multiple BillingRecipient items. """
  createBillingRecipients(data: [BillingRecipientsCreateInput]): [BillingRecipient]

  """ Update a single BillingRecipient item by ID. """
  updateBillingRecipient(id: ID!, data: BillingRecipientUpdateInput): BillingRecipient

  """ Update multiple BillingRecipient items by ID. """
  updateBillingRecipients(data: [BillingRecipientsUpdateInput]): [BillingRecipient]

  """ Delete a single BillingRecipient item by ID. """
  deleteBillingRecipient(id: ID!): BillingRecipient

  """ Delete multiple BillingRecipient items by ID. """
  deleteBillingRecipients(ids: [ID!]): [BillingRecipient]

  """ Create a single BillingCategoryHistoryRecord item. """
  createBillingCategoryHistoryRecord(data: BillingCategoryHistoryRecordCreateInput): BillingCategoryHistoryRecord

  """ Create multiple BillingCategoryHistoryRecord items. """
  createBillingCategoryHistoryRecords(data: [BillingCategoryHistoryRecordsCreateInput]): [BillingCategoryHistoryRecord]

  """ Update a single BillingCategoryHistoryRecord item by ID. """
  updateBillingCategoryHistoryRecord(id: ID!, data: BillingCategoryHistoryRecordUpdateInput): BillingCategoryHistoryRecord

  """ Update multiple BillingCategoryHistoryRecord items by ID. """
  updateBillingCategoryHistoryRecords(data: [BillingCategoryHistoryRecordsUpdateInput]): [BillingCategoryHistoryRecord]

  """ Delete a single BillingCategoryHistoryRecord item by ID. """
  deleteBillingCategoryHistoryRecord(id: ID!): BillingCategoryHistoryRecord

  """ Delete multiple BillingCategoryHistoryRecord items by ID. """
  deleteBillingCategoryHistoryRecords(ids: [ID!]): [BillingCategoryHistoryRecord]

  """ Create a single BillingCategory item. """
  createBillingCategory(data: BillingCategoryCreateInput): BillingCategory

  """ Create multiple BillingCategory items. """
  createBillingCategories(data: [BillingCategoriesCreateInput]): [BillingCategory]

  """ Update a single BillingCategory item by ID. """
  updateBillingCategory(id: ID!, data: BillingCategoryUpdateInput): BillingCategory

  """ Update multiple BillingCategory items by ID. """
  updateBillingCategories(data: [BillingCategoriesUpdateInput]): [BillingCategory]

  """ Delete a single BillingCategory item by ID. """
  deleteBillingCategory(id: ID!): BillingCategory

  """ Delete multiple BillingCategory items by ID. """
  deleteBillingCategories(ids: [ID!]): [BillingCategory]

  """ Create a single BankAccountHistoryRecord item. """
  createBankAccountHistoryRecord(data: BankAccountHistoryRecordCreateInput): BankAccountHistoryRecord

  """ Create multiple BankAccountHistoryRecord items. """
  createBankAccountHistoryRecords(data: [BankAccountHistoryRecordsCreateInput]): [BankAccountHistoryRecord]

  """ Update a single BankAccountHistoryRecord item by ID. """
  updateBankAccountHistoryRecord(id: ID!, data: BankAccountHistoryRecordUpdateInput): BankAccountHistoryRecord

  """ Update multiple BankAccountHistoryRecord items by ID. """
  updateBankAccountHistoryRecords(data: [BankAccountHistoryRecordsUpdateInput]): [BankAccountHistoryRecord]

  """ Delete a single BankAccountHistoryRecord item by ID. """
  deleteBankAccountHistoryRecord(id: ID!): BankAccountHistoryRecord

  """ Delete multiple BankAccountHistoryRecord items by ID. """
  deleteBankAccountHistoryRecords(ids: [ID!]): [BankAccountHistoryRecord]

  """ Create a single BankAccount item. """
  createBankAccount(data: BankAccountCreateInput): BankAccount

  """ Create multiple BankAccount items. """
  createBankAccounts(data: [BankAccountsCreateInput]): [BankAccount]

  """ Update a single BankAccount item by ID. """
  updateBankAccount(id: ID!, data: BankAccountUpdateInput): BankAccount

  """ Update multiple BankAccount items by ID. """
  updateBankAccounts(data: [BankAccountsUpdateInput]): [BankAccount]

  """ Delete a single BankAccount item by ID. """
  deleteBankAccount(id: ID!): BankAccount

  """ Delete multiple BankAccount items by ID. """
  deleteBankAccounts(ids: [ID!]): [BankAccount]

  """ Create a single BankCategoryHistoryRecord item. """
  createBankCategoryHistoryRecord(data: BankCategoryHistoryRecordCreateInput): BankCategoryHistoryRecord

  """ Create multiple BankCategoryHistoryRecord items. """
  createBankCategoryHistoryRecords(data: [BankCategoryHistoryRecordsCreateInput]): [BankCategoryHistoryRecord]

  """ Update a single BankCategoryHistoryRecord item by ID. """
  updateBankCategoryHistoryRecord(id: ID!, data: BankCategoryHistoryRecordUpdateInput): BankCategoryHistoryRecord

  """ Update multiple BankCategoryHistoryRecord items by ID. """
  updateBankCategoryHistoryRecords(data: [BankCategoryHistoryRecordsUpdateInput]): [BankCategoryHistoryRecord]

  """ Delete a single BankCategoryHistoryRecord item by ID. """
  deleteBankCategoryHistoryRecord(id: ID!): BankCategoryHistoryRecord

  """ Delete multiple BankCategoryHistoryRecord items by ID. """
  deleteBankCategoryHistoryRecords(ids: [ID!]): [BankCategoryHistoryRecord]

  """ Create a single BankCategory item. """
  createBankCategory(data: BankCategoryCreateInput): BankCategory

  """ Create multiple BankCategory items. """
  createBankCategories(data: [BankCategoriesCreateInput]): [BankCategory]

  """ Update a single BankCategory item by ID. """
  updateBankCategory(id: ID!, data: BankCategoryUpdateInput): BankCategory

  """ Update multiple BankCategory items by ID. """
  updateBankCategories(data: [BankCategoriesUpdateInput]): [BankCategory]

  """ Delete a single BankCategory item by ID. """
  deleteBankCategory(id: ID!): BankCategory

  """ Delete multiple BankCategory items by ID. """
  deleteBankCategories(ids: [ID!]): [BankCategory]

  """ Create a single BankCostItemHistoryRecord item. """
  createBankCostItemHistoryRecord(data: BankCostItemHistoryRecordCreateInput): BankCostItemHistoryRecord

  """ Create multiple BankCostItemHistoryRecord items. """
  createBankCostItemHistoryRecords(data: [BankCostItemHistoryRecordsCreateInput]): [BankCostItemHistoryRecord]

  """ Update a single BankCostItemHistoryRecord item by ID. """
  updateBankCostItemHistoryRecord(id: ID!, data: BankCostItemHistoryRecordUpdateInput): BankCostItemHistoryRecord

  """ Update multiple BankCostItemHistoryRecord items by ID. """
  updateBankCostItemHistoryRecords(data: [BankCostItemHistoryRecordsUpdateInput]): [BankCostItemHistoryRecord]

  """ Delete a single BankCostItemHistoryRecord item by ID. """
  deleteBankCostItemHistoryRecord(id: ID!): BankCostItemHistoryRecord

  """ Delete multiple BankCostItemHistoryRecord items by ID. """
  deleteBankCostItemHistoryRecords(ids: [ID!]): [BankCostItemHistoryRecord]

  """ Create a single BankCostItem item. """
  createBankCostItem(data: BankCostItemCreateInput): BankCostItem

  """ Create multiple BankCostItem items. """
  createBankCostItems(data: [BankCostItemsCreateInput]): [BankCostItem]

  """ Update a single BankCostItem item by ID. """
  updateBankCostItem(id: ID!, data: BankCostItemUpdateInput): BankCostItem

  """ Update multiple BankCostItem items by ID. """
  updateBankCostItems(data: [BankCostItemsUpdateInput]): [BankCostItem]

  """ Delete a single BankCostItem item by ID. """
  deleteBankCostItem(id: ID!): BankCostItem

  """ Delete multiple BankCostItem items by ID. """
  deleteBankCostItems(ids: [ID!]): [BankCostItem]

  """ Create a single BankContractorAccountHistoryRecord item. """
  createBankContractorAccountHistoryRecord(data: BankContractorAccountHistoryRecordCreateInput): BankContractorAccountHistoryRecord

  """ Create multiple BankContractorAccountHistoryRecord items. """
  createBankContractorAccountHistoryRecords(data: [BankContractorAccountHistoryRecordsCreateInput]): [BankContractorAccountHistoryRecord]

  """ Update a single BankContractorAccountHistoryRecord item by ID. """
  updateBankContractorAccountHistoryRecord(id: ID!, data: BankContractorAccountHistoryRecordUpdateInput): BankContractorAccountHistoryRecord

  """ Update multiple BankContractorAccountHistoryRecord items by ID. """
  updateBankContractorAccountHistoryRecords(data: [BankContractorAccountHistoryRecordsUpdateInput]): [BankContractorAccountHistoryRecord]

  """ Delete a single BankContractorAccountHistoryRecord item by ID. """
  deleteBankContractorAccountHistoryRecord(id: ID!): BankContractorAccountHistoryRecord

  """ Delete multiple BankContractorAccountHistoryRecord items by ID. """
  deleteBankContractorAccountHistoryRecords(ids: [ID!]): [BankContractorAccountHistoryRecord]

  """ Create a single BankContractorAccount item. """
  createBankContractorAccount(data: BankContractorAccountCreateInput): BankContractorAccount

  """ Create multiple BankContractorAccount items. """
  createBankContractorAccounts(data: [BankContractorAccountsCreateInput]): [BankContractorAccount]

  """ Update a single BankContractorAccount item by ID. """
  updateBankContractorAccount(id: ID!, data: BankContractorAccountUpdateInput): BankContractorAccount

  """ Update multiple BankContractorAccount items by ID. """
  updateBankContractorAccounts(data: [BankContractorAccountsUpdateInput]): [BankContractorAccount]

  """ Delete a single BankContractorAccount item by ID. """
  deleteBankContractorAccount(id: ID!): BankContractorAccount

  """ Delete multiple BankContractorAccount items by ID. """
  deleteBankContractorAccounts(ids: [ID!]): [BankContractorAccount]

  """ Create a single BankIntegrationHistoryRecord item. """
  createBankIntegrationHistoryRecord(data: BankIntegrationHistoryRecordCreateInput): BankIntegrationHistoryRecord

  """ Create multiple BankIntegrationHistoryRecord items. """
  createBankIntegrationHistoryRecords(data: [BankIntegrationHistoryRecordsCreateInput]): [BankIntegrationHistoryRecord]

  """ Update a single BankIntegrationHistoryRecord item by ID. """
  updateBankIntegrationHistoryRecord(id: ID!, data: BankIntegrationHistoryRecordUpdateInput): BankIntegrationHistoryRecord

  """ Update multiple BankIntegrationHistoryRecord items by ID. """
  updateBankIntegrationHistoryRecords(data: [BankIntegrationHistoryRecordsUpdateInput]): [BankIntegrationHistoryRecord]

  """ Delete a single BankIntegrationHistoryRecord item by ID. """
  deleteBankIntegrationHistoryRecord(id: ID!): BankIntegrationHistoryRecord

  """ Delete multiple BankIntegrationHistoryRecord items by ID. """
  deleteBankIntegrationHistoryRecords(ids: [ID!]): [BankIntegrationHistoryRecord]

  """ Create a single BankIntegration item. """
  createBankIntegration(data: BankIntegrationCreateInput): BankIntegration

  """ Create multiple BankIntegration items. """
  createBankIntegrations(data: [BankIntegrationsCreateInput]): [BankIntegration]

  """ Update a single BankIntegration item by ID. """
  updateBankIntegration(id: ID!, data: BankIntegrationUpdateInput): BankIntegration

  """ Update multiple BankIntegration items by ID. """
  updateBankIntegrations(data: [BankIntegrationsUpdateInput]): [BankIntegration]

  """ Delete a single BankIntegration item by ID. """
  deleteBankIntegration(id: ID!): BankIntegration

  """ Delete multiple BankIntegration items by ID. """
  deleteBankIntegrations(ids: [ID!]): [BankIntegration]

  """ Create a single BankIntegrationContextHistoryRecord item. """
  createBankIntegrationContextHistoryRecord(data: BankIntegrationContextHistoryRecordCreateInput): BankIntegrationContextHistoryRecord

  """ Create multiple BankIntegrationContextHistoryRecord items. """
  createBankIntegrationContextHistoryRecords(data: [BankIntegrationContextHistoryRecordsCreateInput]): [BankIntegrationContextHistoryRecord]

  """ Update a single BankIntegrationContextHistoryRecord item by ID. """
  updateBankIntegrationContextHistoryRecord(id: ID!, data: BankIntegrationContextHistoryRecordUpdateInput): BankIntegrationContextHistoryRecord

  """ Update multiple BankIntegrationContextHistoryRecord items by ID. """
  updateBankIntegrationContextHistoryRecords(data: [BankIntegrationContextHistoryRecordsUpdateInput]): [BankIntegrationContextHistoryRecord]

  """ Delete a single BankIntegrationContextHistoryRecord item by ID. """
  deleteBankIntegrationContextHistoryRecord(id: ID!): BankIntegrationContextHistoryRecord

  """ Delete multiple BankIntegrationContextHistoryRecord items by ID. """
  deleteBankIntegrationContextHistoryRecords(ids: [ID!]): [BankIntegrationContextHistoryRecord]

  """ Create a single BankIntegrationContext item. """
  createBankIntegrationContext(data: BankIntegrationContextCreateInput): BankIntegrationContext

  """ Create multiple BankIntegrationContext items. """
  createBankIntegrationContexts(data: [BankIntegrationContextsCreateInput]): [BankIntegrationContext]

  """ Update a single BankIntegrationContext item by ID. """
  updateBankIntegrationContext(id: ID!, data: BankIntegrationContextUpdateInput): BankIntegrationContext

  """ Update multiple BankIntegrationContext items by ID. """
  updateBankIntegrationContexts(data: [BankIntegrationContextsUpdateInput]): [BankIntegrationContext]

  """ Delete a single BankIntegrationContext item by ID. """
  deleteBankIntegrationContext(id: ID!): BankIntegrationContext

  """ Delete multiple BankIntegrationContext items by ID. """
  deleteBankIntegrationContexts(ids: [ID!]): [BankIntegrationContext]

  """ Create a single BankTransactionHistoryRecord item. """
  createBankTransactionHistoryRecord(data: BankTransactionHistoryRecordCreateInput): BankTransactionHistoryRecord

  """ Create multiple BankTransactionHistoryRecord items. """
  createBankTransactionHistoryRecords(data: [BankTransactionHistoryRecordsCreateInput]): [BankTransactionHistoryRecord]

  """ Update a single BankTransactionHistoryRecord item by ID. """
  updateBankTransactionHistoryRecord(id: ID!, data: BankTransactionHistoryRecordUpdateInput): BankTransactionHistoryRecord

  """ Update multiple BankTransactionHistoryRecord items by ID. """
  updateBankTransactionHistoryRecords(data: [BankTransactionHistoryRecordsUpdateInput]): [BankTransactionHistoryRecord]

  """ Delete a single BankTransactionHistoryRecord item by ID. """
  deleteBankTransactionHistoryRecord(id: ID!): BankTransactionHistoryRecord

  """ Delete multiple BankTransactionHistoryRecord items by ID. """
  deleteBankTransactionHistoryRecords(ids: [ID!]): [BankTransactionHistoryRecord]

  """ Create a single BankTransaction item. """
  createBankTransaction(data: BankTransactionCreateInput): BankTransaction

  """ Create multiple BankTransaction items. """
  createBankTransactions(data: [BankTransactionsCreateInput]): [BankTransaction]

  """ Update a single BankTransaction item by ID. """
  updateBankTransaction(id: ID!, data: BankTransactionUpdateInput): BankTransaction

  """ Update multiple BankTransaction items by ID. """
  updateBankTransactions(data: [BankTransactionsUpdateInput]): [BankTransaction]

  """ Delete a single BankTransaction item by ID. """
  deleteBankTransaction(id: ID!): BankTransaction

  """ Delete multiple BankTransaction items by ID. """
  deleteBankTransactions(ids: [ID!]): [BankTransaction]

  """ Create a single TicketHistoryRecord item. """
  createTicketHistoryRecord(data: TicketHistoryRecordCreateInput): TicketHistoryRecord

  """ Create multiple TicketHistoryRecord items. """
  createTicketHistoryRecords(data: [TicketHistoryRecordsCreateInput]): [TicketHistoryRecord]

  """ Update a single TicketHistoryRecord item by ID. """
  updateTicketHistoryRecord(id: ID!, data: TicketHistoryRecordUpdateInput): TicketHistoryRecord

  """ Update multiple TicketHistoryRecord items by ID. """
  updateTicketHistoryRecords(data: [TicketHistoryRecordsUpdateInput]): [TicketHistoryRecord]

  """ Delete a single TicketHistoryRecord item by ID. """
  deleteTicketHistoryRecord(id: ID!): TicketHistoryRecord

  """ Delete multiple TicketHistoryRecord items by ID. """
  deleteTicketHistoryRecords(ids: [ID!]): [TicketHistoryRecord]

  """ Create a single Ticket item. """
  createTicket(data: TicketCreateInput): Ticket

  """ Create multiple Ticket items. """
  createTickets(data: [TicketsCreateInput]): [Ticket]

  """ Update a single Ticket item by ID. """
  updateTicket(id: ID!, data: TicketUpdateInput): Ticket

  """ Update multiple Ticket items by ID. """
  updateTickets(data: [TicketsUpdateInput]): [Ticket]

  """ Delete a single Ticket item by ID. """
  deleteTicket(id: ID!): Ticket

  """ Delete multiple Ticket items by ID. """
  deleteTickets(ids: [ID!]): [Ticket]

  """ Create a single TicketSourceHistoryRecord item. """
  createTicketSourceHistoryRecord(data: TicketSourceHistoryRecordCreateInput): TicketSourceHistoryRecord

  """ Create multiple TicketSourceHistoryRecord items. """
  createTicketSourceHistoryRecords(data: [TicketSourceHistoryRecordsCreateInput]): [TicketSourceHistoryRecord]

  """ Update a single TicketSourceHistoryRecord item by ID. """
  updateTicketSourceHistoryRecord(id: ID!, data: TicketSourceHistoryRecordUpdateInput): TicketSourceHistoryRecord

  """ Update multiple TicketSourceHistoryRecord items by ID. """
  updateTicketSourceHistoryRecords(data: [TicketSourceHistoryRecordsUpdateInput]): [TicketSourceHistoryRecord]

  """ Delete a single TicketSourceHistoryRecord item by ID. """
  deleteTicketSourceHistoryRecord(id: ID!): TicketSourceHistoryRecord

  """ Delete multiple TicketSourceHistoryRecord items by ID. """
  deleteTicketSourceHistoryRecords(ids: [ID!]): [TicketSourceHistoryRecord]

  """ Create a single TicketSource item. """
  createTicketSource(data: TicketSourceCreateInput): TicketSource

  """ Create multiple TicketSource items. """
  createTicketSources(data: [TicketSourcesCreateInput]): [TicketSource]

  """ Update a single TicketSource item by ID. """
  updateTicketSource(id: ID!, data: TicketSourceUpdateInput): TicketSource

  """ Update multiple TicketSource items by ID. """
  updateTicketSources(data: [TicketSourcesUpdateInput]): [TicketSource]

  """ Delete a single TicketSource item by ID. """
  deleteTicketSource(id: ID!): TicketSource

  """ Delete multiple TicketSource items by ID. """
  deleteTicketSources(ids: [ID!]): [TicketSource]

  """ Create a single TicketStatusHistoryRecord item. """
  createTicketStatusHistoryRecord(data: TicketStatusHistoryRecordCreateInput): TicketStatusHistoryRecord

  """ Create multiple TicketStatusHistoryRecord items. """
  createTicketStatusHistoryRecords(data: [TicketStatusHistoryRecordsCreateInput]): [TicketStatusHistoryRecord]

  """ Update a single TicketStatusHistoryRecord item by ID. """
  updateTicketStatusHistoryRecord(id: ID!, data: TicketStatusHistoryRecordUpdateInput): TicketStatusHistoryRecord

  """ Update multiple TicketStatusHistoryRecord items by ID. """
  updateTicketStatusHistoryRecords(data: [TicketStatusHistoryRecordsUpdateInput]): [TicketStatusHistoryRecord]

  """ Delete a single TicketStatusHistoryRecord item by ID. """
  deleteTicketStatusHistoryRecord(id: ID!): TicketStatusHistoryRecord

  """ Delete multiple TicketStatusHistoryRecord items by ID. """
  deleteTicketStatusHistoryRecords(ids: [ID!]): [TicketStatusHistoryRecord]

  """ Create a single TicketStatus item. """
  createTicketStatus(data: TicketStatusCreateInput): TicketStatus

  """ Create multiple TicketStatus items. """
  createTicketStatuses(data: [TicketStatusesCreateInput]): [TicketStatus]

  """ Update a single TicketStatus item by ID. """
  updateTicketStatus(id: ID!, data: TicketStatusUpdateInput): TicketStatus

  """ Update multiple TicketStatus items by ID. """
  updateTicketStatuses(data: [TicketStatusesUpdateInput]): [TicketStatus]

  """ Delete a single TicketStatus item by ID. """
  deleteTicketStatus(id: ID!): TicketStatus

  """ Delete multiple TicketStatus items by ID. """
  deleteTicketStatuses(ids: [ID!]): [TicketStatus]

  """ Create a single TicketFileHistoryRecord item. """
  createTicketFileHistoryRecord(data: TicketFileHistoryRecordCreateInput): TicketFileHistoryRecord

  """ Create multiple TicketFileHistoryRecord items. """
  createTicketFileHistoryRecords(data: [TicketFileHistoryRecordsCreateInput]): [TicketFileHistoryRecord]

  """ Update a single TicketFileHistoryRecord item by ID. """
  updateTicketFileHistoryRecord(id: ID!, data: TicketFileHistoryRecordUpdateInput): TicketFileHistoryRecord

  """ Update multiple TicketFileHistoryRecord items by ID. """
  updateTicketFileHistoryRecords(data: [TicketFileHistoryRecordsUpdateInput]): [TicketFileHistoryRecord]

  """ Delete a single TicketFileHistoryRecord item by ID. """
  deleteTicketFileHistoryRecord(id: ID!): TicketFileHistoryRecord

  """ Delete multiple TicketFileHistoryRecord items by ID. """
  deleteTicketFileHistoryRecords(ids: [ID!]): [TicketFileHistoryRecord]

  """ Create a single TicketFile item. """
  createTicketFile(data: TicketFileCreateInput): TicketFile

  """ Create multiple TicketFile items. """
  createTicketFiles(data: [TicketFilesCreateInput]): [TicketFile]

  """ Update a single TicketFile item by ID. """
  updateTicketFile(id: ID!, data: TicketFileUpdateInput): TicketFile

  """ Update multiple TicketFile items by ID. """
  updateTicketFiles(data: [TicketFilesUpdateInput]): [TicketFile]

  """ Delete a single TicketFile item by ID. """
  deleteTicketFile(id: ID!): TicketFile

  """ Delete multiple TicketFile items by ID. """
  deleteTicketFiles(ids: [ID!]): [TicketFile]

  """ Create a single TicketChange item. """
  createTicketChange(data: TicketChangeCreateInput): TicketChange

  """ Create multiple TicketChange items. """
  createTicketChanges(data: [TicketChangesCreateInput]): [TicketChange]

  """ Update a single TicketChange item by ID. """
  updateTicketChange(id: ID!, data: TicketChangeUpdateInput): TicketChange

  """ Update multiple TicketChange items by ID. """
  updateTicketChanges(data: [TicketChangesUpdateInput]): [TicketChange]

  """ Delete a single TicketChange item by ID. """
  deleteTicketChange(id: ID!): TicketChange

  """ Delete multiple TicketChange items by ID. """
  deleteTicketChanges(ids: [ID!]): [TicketChange]

  """ Create a single TicketCommentHistoryRecord item. """
  createTicketCommentHistoryRecord(data: TicketCommentHistoryRecordCreateInput): TicketCommentHistoryRecord

  """ Create multiple TicketCommentHistoryRecord items. """
  createTicketCommentHistoryRecords(data: [TicketCommentHistoryRecordsCreateInput]): [TicketCommentHistoryRecord]

  """ Update a single TicketCommentHistoryRecord item by ID. """
  updateTicketCommentHistoryRecord(id: ID!, data: TicketCommentHistoryRecordUpdateInput): TicketCommentHistoryRecord

  """ Update multiple TicketCommentHistoryRecord items by ID. """
  updateTicketCommentHistoryRecords(data: [TicketCommentHistoryRecordsUpdateInput]): [TicketCommentHistoryRecord]

  """ Delete a single TicketCommentHistoryRecord item by ID. """
  deleteTicketCommentHistoryRecord(id: ID!): TicketCommentHistoryRecord

  """ Delete multiple TicketCommentHistoryRecord items by ID. """
  deleteTicketCommentHistoryRecords(ids: [ID!]): [TicketCommentHistoryRecord]

  """ Create a single TicketComment item. """
  createTicketComment(data: TicketCommentCreateInput): TicketComment

  """ Create multiple TicketComment items. """
  createTicketComments(data: [TicketCommentsCreateInput]): [TicketComment]

  """ Update a single TicketComment item by ID. """
  updateTicketComment(id: ID!, data: TicketCommentUpdateInput): TicketComment

  """ Update multiple TicketComment items by ID. """
  updateTicketComments(data: [TicketCommentsUpdateInput]): [TicketComment]

  """ Delete a single TicketComment item by ID. """
  deleteTicketComment(id: ID!): TicketComment

  """ Delete multiple TicketComment items by ID. """
  deleteTicketComments(ids: [ID!]): [TicketComment]

  """ Create a single TicketPlaceClassifierHistoryRecord item. """
  createTicketPlaceClassifierHistoryRecord(data: TicketPlaceClassifierHistoryRecordCreateInput): TicketPlaceClassifierHistoryRecord

  """ Create multiple TicketPlaceClassifierHistoryRecord items. """
  createTicketPlaceClassifierHistoryRecords(data: [TicketPlaceClassifierHistoryRecordsCreateInput]): [TicketPlaceClassifierHistoryRecord]

  """ Update a single TicketPlaceClassifierHistoryRecord item by ID. """
  updateTicketPlaceClassifierHistoryRecord(id: ID!, data: TicketPlaceClassifierHistoryRecordUpdateInput): TicketPlaceClassifierHistoryRecord

  """ Update multiple TicketPlaceClassifierHistoryRecord items by ID. """
  updateTicketPlaceClassifierHistoryRecords(data: [TicketPlaceClassifierHistoryRecordsUpdateInput]): [TicketPlaceClassifierHistoryRecord]

  """ Delete a single TicketPlaceClassifierHistoryRecord item by ID. """
  deleteTicketPlaceClassifierHistoryRecord(id: ID!): TicketPlaceClassifierHistoryRecord

  """ Delete multiple TicketPlaceClassifierHistoryRecord items by ID. """
  deleteTicketPlaceClassifierHistoryRecords(ids: [ID!]): [TicketPlaceClassifierHistoryRecord]

  """ Create a single TicketPlaceClassifier item. """
  createTicketPlaceClassifier(data: TicketPlaceClassifierCreateInput): TicketPlaceClassifier

  """ Create multiple TicketPlaceClassifier items. """
  createTicketPlaceClassifiers(data: [TicketPlaceClassifiersCreateInput]): [TicketPlaceClassifier]

  """ Update a single TicketPlaceClassifier item by ID. """
  updateTicketPlaceClassifier(id: ID!, data: TicketPlaceClassifierUpdateInput): TicketPlaceClassifier

  """ Update multiple TicketPlaceClassifier items by ID. """
  updateTicketPlaceClassifiers(data: [TicketPlaceClassifiersUpdateInput]): [TicketPlaceClassifier]

  """ Delete a single TicketPlaceClassifier item by ID. """
  deleteTicketPlaceClassifier(id: ID!): TicketPlaceClassifier

  """ Delete multiple TicketPlaceClassifier items by ID. """
  deleteTicketPlaceClassifiers(ids: [ID!]): [TicketPlaceClassifier]

  """ Create a single TicketCategoryClassifierHistoryRecord item. """
  createTicketCategoryClassifierHistoryRecord(data: TicketCategoryClassifierHistoryRecordCreateInput): TicketCategoryClassifierHistoryRecord

  """ Create multiple TicketCategoryClassifierHistoryRecord items. """
  createTicketCategoryClassifierHistoryRecords(data: [TicketCategoryClassifierHistoryRecordsCreateInput]): [TicketCategoryClassifierHistoryRecord]

  """ Update a single TicketCategoryClassifierHistoryRecord item by ID. """
  updateTicketCategoryClassifierHistoryRecord(id: ID!, data: TicketCategoryClassifierHistoryRecordUpdateInput): TicketCategoryClassifierHistoryRecord

  """ Update multiple TicketCategoryClassifierHistoryRecord items by ID. """
  updateTicketCategoryClassifierHistoryRecords(data: [TicketCategoryClassifierHistoryRecordsUpdateInput]): [TicketCategoryClassifierHistoryRecord]

  """ Delete a single TicketCategoryClassifierHistoryRecord item by ID. """
  deleteTicketCategoryClassifierHistoryRecord(id: ID!): TicketCategoryClassifierHistoryRecord

  """ Delete multiple TicketCategoryClassifierHistoryRecord items by ID. """
  deleteTicketCategoryClassifierHistoryRecords(ids: [ID!]): [TicketCategoryClassifierHistoryRecord]

  """ Create a single TicketCategoryClassifier item. """
  createTicketCategoryClassifier(data: TicketCategoryClassifierCreateInput): TicketCategoryClassifier

  """ Create multiple TicketCategoryClassifier items. """
  createTicketCategoryClassifiers(data: [TicketCategoryClassifiersCreateInput]): [TicketCategoryClassifier]

  """ Update a single TicketCategoryClassifier item by ID. """
  updateTicketCategoryClassifier(id: ID!, data: TicketCategoryClassifierUpdateInput): TicketCategoryClassifier

  """ Update multiple TicketCategoryClassifier items by ID. """
  updateTicketCategoryClassifiers(data: [TicketCategoryClassifiersUpdateInput]): [TicketCategoryClassifier]

  """ Delete a single TicketCategoryClassifier item by ID. """
  deleteTicketCategoryClassifier(id: ID!): TicketCategoryClassifier

  """ Delete multiple TicketCategoryClassifier items by ID. """
  deleteTicketCategoryClassifiers(ids: [ID!]): [TicketCategoryClassifier]

  """ Create a single TicketProblemClassifierHistoryRecord item. """
  createTicketProblemClassifierHistoryRecord(data: TicketProblemClassifierHistoryRecordCreateInput): TicketProblemClassifierHistoryRecord

  """ Create multiple TicketProblemClassifierHistoryRecord items. """
  createTicketProblemClassifierHistoryRecords(data: [TicketProblemClassifierHistoryRecordsCreateInput]): [TicketProblemClassifierHistoryRecord]

  """ Update a single TicketProblemClassifierHistoryRecord item by ID. """
  updateTicketProblemClassifierHistoryRecord(id: ID!, data: TicketProblemClassifierHistoryRecordUpdateInput): TicketProblemClassifierHistoryRecord

  """ Update multiple TicketProblemClassifierHistoryRecord items by ID. """
  updateTicketProblemClassifierHistoryRecords(data: [TicketProblemClassifierHistoryRecordsUpdateInput]): [TicketProblemClassifierHistoryRecord]

  """ Delete a single TicketProblemClassifierHistoryRecord item by ID. """
  deleteTicketProblemClassifierHistoryRecord(id: ID!): TicketProblemClassifierHistoryRecord

  """ Delete multiple TicketProblemClassifierHistoryRecord items by ID. """
  deleteTicketProblemClassifierHistoryRecords(ids: [ID!]): [TicketProblemClassifierHistoryRecord]

  """ Create a single TicketProblemClassifier item. """
  createTicketProblemClassifier(data: TicketProblemClassifierCreateInput): TicketProblemClassifier

  """ Create multiple TicketProblemClassifier items. """
  createTicketProblemClassifiers(data: [TicketProblemClassifiersCreateInput]): [TicketProblemClassifier]

  """ Update a single TicketProblemClassifier item by ID. """
  updateTicketProblemClassifier(id: ID!, data: TicketProblemClassifierUpdateInput): TicketProblemClassifier

  """ Update multiple TicketProblemClassifier items by ID. """
  updateTicketProblemClassifiers(data: [TicketProblemClassifiersUpdateInput]): [TicketProblemClassifier]

  """ Delete a single TicketProblemClassifier item by ID. """
  deleteTicketProblemClassifier(id: ID!): TicketProblemClassifier

  """ Delete multiple TicketProblemClassifier items by ID. """
  deleteTicketProblemClassifiers(ids: [ID!]): [TicketProblemClassifier]

  """ Create a single TicketClassifierHistoryRecord item. """
  createTicketClassifierHistoryRecord(data: TicketClassifierHistoryRecordCreateInput): TicketClassifierHistoryRecord

  """ Create multiple TicketClassifierHistoryRecord items. """
  createTicketClassifierHistoryRecords(data: [TicketClassifierHistoryRecordsCreateInput]): [TicketClassifierHistoryRecord]

  """ Update a single TicketClassifierHistoryRecord item by ID. """
  updateTicketClassifierHistoryRecord(id: ID!, data: TicketClassifierHistoryRecordUpdateInput): TicketClassifierHistoryRecord

  """ Update multiple TicketClassifierHistoryRecord items by ID. """
  updateTicketClassifierHistoryRecords(data: [TicketClassifierHistoryRecordsUpdateInput]): [TicketClassifierHistoryRecord]

  """ Delete a single TicketClassifierHistoryRecord item by ID. """
  deleteTicketClassifierHistoryRecord(id: ID!): TicketClassifierHistoryRecord

  """ Delete multiple TicketClassifierHistoryRecord items by ID. """
  deleteTicketClassifierHistoryRecords(ids: [ID!]): [TicketClassifierHistoryRecord]

  """ Create a single TicketClassifier item. """
  createTicketClassifier(data: TicketClassifierCreateInput): TicketClassifier

  """ Create multiple TicketClassifier items. """
  createTicketClassifiers(data: [TicketClassifiersCreateInput]): [TicketClassifier]

  """ Update a single TicketClassifier item by ID. """
  updateTicketClassifier(id: ID!, data: TicketClassifierUpdateInput): TicketClassifier

  """ Update multiple TicketClassifier items by ID. """
  updateTicketClassifiers(data: [TicketClassifiersUpdateInput]): [TicketClassifier]

  """ Delete a single TicketClassifier item by ID. """
  deleteTicketClassifier(id: ID!): TicketClassifier

  """ Delete multiple TicketClassifier items by ID. """
  deleteTicketClassifiers(ids: [ID!]): [TicketClassifier]

  """ Create a single TicketFilterTemplateHistoryRecord item. """
  createTicketFilterTemplateHistoryRecord(data: TicketFilterTemplateHistoryRecordCreateInput): TicketFilterTemplateHistoryRecord

  """ Create multiple TicketFilterTemplateHistoryRecord items. """
  createTicketFilterTemplateHistoryRecords(data: [TicketFilterTemplateHistoryRecordsCreateInput]): [TicketFilterTemplateHistoryRecord]

  """ Update a single TicketFilterTemplateHistoryRecord item by ID. """
  updateTicketFilterTemplateHistoryRecord(id: ID!, data: TicketFilterTemplateHistoryRecordUpdateInput): TicketFilterTemplateHistoryRecord

  """ Update multiple TicketFilterTemplateHistoryRecord items by ID. """
  updateTicketFilterTemplateHistoryRecords(data: [TicketFilterTemplateHistoryRecordsUpdateInput]): [TicketFilterTemplateHistoryRecord]

  """ Delete a single TicketFilterTemplateHistoryRecord item by ID. """
  deleteTicketFilterTemplateHistoryRecord(id: ID!): TicketFilterTemplateHistoryRecord

  """ Delete multiple TicketFilterTemplateHistoryRecord items by ID. """
  deleteTicketFilterTemplateHistoryRecords(ids: [ID!]): [TicketFilterTemplateHistoryRecord]

  """ Create a single TicketFilterTemplate item. """
  createTicketFilterTemplate(data: TicketFilterTemplateCreateInput): TicketFilterTemplate

  """ Create multiple TicketFilterTemplate items. """
  createTicketFilterTemplates(data: [TicketFilterTemplatesCreateInput]): [TicketFilterTemplate]

  """ Update a single TicketFilterTemplate item by ID. """
  updateTicketFilterTemplate(id: ID!, data: TicketFilterTemplateUpdateInput): TicketFilterTemplate

  """ Update multiple TicketFilterTemplate items by ID. """
  updateTicketFilterTemplates(data: [TicketFilterTemplatesUpdateInput]): [TicketFilterTemplate]

  """ Delete a single TicketFilterTemplate item by ID. """
  deleteTicketFilterTemplate(id: ID!): TicketFilterTemplate

  """ Delete multiple TicketFilterTemplate items by ID. """
  deleteTicketFilterTemplates(ids: [ID!]): [TicketFilterTemplate]

  """ Create a single TicketCommentFileHistoryRecord item. """
  createTicketCommentFileHistoryRecord(data: TicketCommentFileHistoryRecordCreateInput): TicketCommentFileHistoryRecord

  """ Create multiple TicketCommentFileHistoryRecord items. """
  createTicketCommentFileHistoryRecords(data: [TicketCommentFileHistoryRecordsCreateInput]): [TicketCommentFileHistoryRecord]

  """ Update a single TicketCommentFileHistoryRecord item by ID. """
  updateTicketCommentFileHistoryRecord(id: ID!, data: TicketCommentFileHistoryRecordUpdateInput): TicketCommentFileHistoryRecord

  """ Update multiple TicketCommentFileHistoryRecord items by ID. """
  updateTicketCommentFileHistoryRecords(data: [TicketCommentFileHistoryRecordsUpdateInput]): [TicketCommentFileHistoryRecord]

  """ Delete a single TicketCommentFileHistoryRecord item by ID. """
  deleteTicketCommentFileHistoryRecord(id: ID!): TicketCommentFileHistoryRecord

  """ Delete multiple TicketCommentFileHistoryRecord items by ID. """
  deleteTicketCommentFileHistoryRecords(ids: [ID!]): [TicketCommentFileHistoryRecord]

  """ Create a single TicketCommentFile item. """
  createTicketCommentFile(data: TicketCommentFileCreateInput): TicketCommentFile

  """ Create multiple TicketCommentFile items. """
  createTicketCommentFiles(data: [TicketCommentFilesCreateInput]): [TicketCommentFile]

  """ Update a single TicketCommentFile item by ID. """
  updateTicketCommentFile(id: ID!, data: TicketCommentFileUpdateInput): TicketCommentFile

  """ Update multiple TicketCommentFile items by ID. """
  updateTicketCommentFiles(data: [TicketCommentFilesUpdateInput]): [TicketCommentFile]

  """ Delete a single TicketCommentFile item by ID. """
  deleteTicketCommentFile(id: ID!): TicketCommentFile

  """ Delete multiple TicketCommentFile items by ID. """
  deleteTicketCommentFiles(ids: [ID!]): [TicketCommentFile]

  """ Create a single TicketCommentsTimeHistoryRecord item. """
  createTicketCommentsTimeHistoryRecord(data: TicketCommentsTimeHistoryRecordCreateInput): TicketCommentsTimeHistoryRecord

  """ Create multiple TicketCommentsTimeHistoryRecord items. """
  createTicketCommentsTimeHistoryRecords(data: [TicketCommentsTimeHistoryRecordsCreateInput]): [TicketCommentsTimeHistoryRecord]

  """ Update a single TicketCommentsTimeHistoryRecord item by ID. """
  updateTicketCommentsTimeHistoryRecord(id: ID!, data: TicketCommentsTimeHistoryRecordUpdateInput): TicketCommentsTimeHistoryRecord

  """ Update multiple TicketCommentsTimeHistoryRecord items by ID. """
  updateTicketCommentsTimeHistoryRecords(data: [TicketCommentsTimeHistoryRecordsUpdateInput]): [TicketCommentsTimeHistoryRecord]

  """ Delete a single TicketCommentsTimeHistoryRecord item by ID. """
  deleteTicketCommentsTimeHistoryRecord(id: ID!): TicketCommentsTimeHistoryRecord

  """ Delete multiple TicketCommentsTimeHistoryRecord items by ID. """
  deleteTicketCommentsTimeHistoryRecords(ids: [ID!]): [TicketCommentsTimeHistoryRecord]

  """ Create a single TicketCommentsTime item. """
  createTicketCommentsTime(data: TicketCommentsTimeCreateInput): TicketCommentsTime

  """ Create multiple TicketCommentsTime items. """
  createTicketCommentsTimes(data: [TicketCommentsTimesCreateInput]): [TicketCommentsTime]

  """ Update a single TicketCommentsTime item by ID. """
  updateTicketCommentsTime(id: ID!, data: TicketCommentsTimeUpdateInput): TicketCommentsTime

  """ Update multiple TicketCommentsTime items by ID. """
  updateTicketCommentsTimes(data: [TicketCommentsTimesUpdateInput]): [TicketCommentsTime]

  """ Delete a single TicketCommentsTime item by ID. """
  deleteTicketCommentsTime(id: ID!): TicketCommentsTime

  """ Delete multiple TicketCommentsTime items by ID. """
  deleteTicketCommentsTimes(ids: [ID!]): [TicketCommentsTime]

  """ Create a single UserTicketCommentReadTimeHistoryRecord item. """
  createUserTicketCommentReadTimeHistoryRecord(data: UserTicketCommentReadTimeHistoryRecordCreateInput): UserTicketCommentReadTimeHistoryRecord

  """ Create multiple UserTicketCommentReadTimeHistoryRecord items. """
  createUserTicketCommentReadTimeHistoryRecords(data: [UserTicketCommentReadTimeHistoryRecordsCreateInput]): [UserTicketCommentReadTimeHistoryRecord]

  """ Update a single UserTicketCommentReadTimeHistoryRecord item by ID. """
  updateUserTicketCommentReadTimeHistoryRecord(id: ID!, data: UserTicketCommentReadTimeHistoryRecordUpdateInput): UserTicketCommentReadTimeHistoryRecord

  """ Update multiple UserTicketCommentReadTimeHistoryRecord items by ID. """
  updateUserTicketCommentReadTimeHistoryRecords(data: [UserTicketCommentReadTimeHistoryRecordsUpdateInput]): [UserTicketCommentReadTimeHistoryRecord]

  """ Delete a single UserTicketCommentReadTimeHistoryRecord item by ID. """
  deleteUserTicketCommentReadTimeHistoryRecord(id: ID!): UserTicketCommentReadTimeHistoryRecord

  """ Delete multiple UserTicketCommentReadTimeHistoryRecord items by ID. """
  deleteUserTicketCommentReadTimeHistoryRecords(ids: [ID!]): [UserTicketCommentReadTimeHistoryRecord]

  """ Create a single UserTicketCommentReadTime item. """
  createUserTicketCommentReadTime(data: UserTicketCommentReadTimeCreateInput): UserTicketCommentReadTime

  """ Create multiple UserTicketCommentReadTime items. """
  createUserTicketCommentReadTimes(data: [UserTicketCommentReadTimesCreateInput]): [UserTicketCommentReadTime]

  """ Update a single UserTicketCommentReadTime item by ID. """
  updateUserTicketCommentReadTime(id: ID!, data: UserTicketCommentReadTimeUpdateInput): UserTicketCommentReadTime

  """ Update multiple UserTicketCommentReadTime items by ID. """
  updateUserTicketCommentReadTimes(data: [UserTicketCommentReadTimesUpdateInput]): [UserTicketCommentReadTime]

  """ Delete a single UserTicketCommentReadTime item by ID. """
  deleteUserTicketCommentReadTime(id: ID!): UserTicketCommentReadTime

  """ Delete multiple UserTicketCommentReadTime items by ID. """
  deleteUserTicketCommentReadTimes(ids: [ID!]): [UserTicketCommentReadTime]

  """ Create a single TicketPropertyHintHistoryRecord item. """
  createTicketPropertyHintHistoryRecord(data: TicketPropertyHintHistoryRecordCreateInput): TicketPropertyHintHistoryRecord

  """ Create multiple TicketPropertyHintHistoryRecord items. """
  createTicketPropertyHintHistoryRecords(data: [TicketPropertyHintHistoryRecordsCreateInput]): [TicketPropertyHintHistoryRecord]

  """ Update a single TicketPropertyHintHistoryRecord item by ID. """
  updateTicketPropertyHintHistoryRecord(id: ID!, data: TicketPropertyHintHistoryRecordUpdateInput): TicketPropertyHintHistoryRecord

  """ Update multiple TicketPropertyHintHistoryRecord items by ID. """
  updateTicketPropertyHintHistoryRecords(data: [TicketPropertyHintHistoryRecordsUpdateInput]): [TicketPropertyHintHistoryRecord]

  """ Delete a single TicketPropertyHintHistoryRecord item by ID. """
  deleteTicketPropertyHintHistoryRecord(id: ID!): TicketPropertyHintHistoryRecord

  """ Delete multiple TicketPropertyHintHistoryRecord items by ID. """
  deleteTicketPropertyHintHistoryRecords(ids: [ID!]): [TicketPropertyHintHistoryRecord]

  """ Create a single TicketPropertyHint item. """
  createTicketPropertyHint(data: TicketPropertyHintCreateInput): TicketPropertyHint

  """ Create multiple TicketPropertyHint items. """
  createTicketPropertyHints(data: [TicketPropertyHintsCreateInput]): [TicketPropertyHint]

  """ Update a single TicketPropertyHint item by ID. """
  updateTicketPropertyHint(id: ID!, data: TicketPropertyHintUpdateInput): TicketPropertyHint

  """ Update multiple TicketPropertyHint items by ID. """
  updateTicketPropertyHints(data: [TicketPropertyHintsUpdateInput]): [TicketPropertyHint]

  """ Delete a single TicketPropertyHint item by ID. """
  deleteTicketPropertyHint(id: ID!): TicketPropertyHint

  """ Delete multiple TicketPropertyHint items by ID. """
  deleteTicketPropertyHints(ids: [ID!]): [TicketPropertyHint]

  """ Create a single TicketPropertyHintPropertyHistoryRecord item. """
  createTicketPropertyHintPropertyHistoryRecord(data: TicketPropertyHintPropertyHistoryRecordCreateInput): TicketPropertyHintPropertyHistoryRecord

  """ Create multiple TicketPropertyHintPropertyHistoryRecord items. """
  createTicketPropertyHintPropertyHistoryRecords(data: [TicketPropertyHintPropertyHistoryRecordsCreateInput]): [TicketPropertyHintPropertyHistoryRecord]

  """ Update a single TicketPropertyHintPropertyHistoryRecord item by ID. """
  updateTicketPropertyHintPropertyHistoryRecord(id: ID!, data: TicketPropertyHintPropertyHistoryRecordUpdateInput): TicketPropertyHintPropertyHistoryRecord

  """ Update multiple TicketPropertyHintPropertyHistoryRecord items by ID. """
  updateTicketPropertyHintPropertyHistoryRecords(data: [TicketPropertyHintPropertyHistoryRecordsUpdateInput]): [TicketPropertyHintPropertyHistoryRecord]

  """ Delete a single TicketPropertyHintPropertyHistoryRecord item by ID. """
  deleteTicketPropertyHintPropertyHistoryRecord(id: ID!): TicketPropertyHintPropertyHistoryRecord

  """ Delete multiple TicketPropertyHintPropertyHistoryRecord items by ID. """
  deleteTicketPropertyHintPropertyHistoryRecords(ids: [ID!]): [TicketPropertyHintPropertyHistoryRecord]

  """ Create a single TicketPropertyHintProperty item. """
  createTicketPropertyHintProperty(data: TicketPropertyHintPropertyCreateInput): TicketPropertyHintProperty

  """ Create multiple TicketPropertyHintProperty items. """
  createTicketPropertyHintProperties(data: [TicketPropertyHintPropertiesCreateInput]): [TicketPropertyHintProperty]

  """ Update a single TicketPropertyHintProperty item by ID. """
  updateTicketPropertyHintProperty(id: ID!, data: TicketPropertyHintPropertyUpdateInput): TicketPropertyHintProperty

  """ Update multiple TicketPropertyHintProperty items by ID. """
  updateTicketPropertyHintProperties(data: [TicketPropertyHintPropertiesUpdateInput]): [TicketPropertyHintProperty]

  """ Delete a single TicketPropertyHintProperty item by ID. """
  deleteTicketPropertyHintProperty(id: ID!): TicketPropertyHintProperty

  """ Delete multiple TicketPropertyHintProperty items by ID. """
  deleteTicketPropertyHintProperties(ids: [ID!]): [TicketPropertyHintProperty]

  """ Create a single TicketExportTaskHistoryRecord item. """
  createTicketExportTaskHistoryRecord(data: TicketExportTaskHistoryRecordCreateInput): TicketExportTaskHistoryRecord

  """ Create multiple TicketExportTaskHistoryRecord items. """
  createTicketExportTaskHistoryRecords(data: [TicketExportTaskHistoryRecordsCreateInput]): [TicketExportTaskHistoryRecord]

  """ Update a single TicketExportTaskHistoryRecord item by ID. """
  updateTicketExportTaskHistoryRecord(id: ID!, data: TicketExportTaskHistoryRecordUpdateInput): TicketExportTaskHistoryRecord

  """ Update multiple TicketExportTaskHistoryRecord items by ID. """
  updateTicketExportTaskHistoryRecords(data: [TicketExportTaskHistoryRecordsUpdateInput]): [TicketExportTaskHistoryRecord]

  """ Delete a single TicketExportTaskHistoryRecord item by ID. """
  deleteTicketExportTaskHistoryRecord(id: ID!): TicketExportTaskHistoryRecord

  """ Delete multiple TicketExportTaskHistoryRecord items by ID. """
  deleteTicketExportTaskHistoryRecords(ids: [ID!]): [TicketExportTaskHistoryRecord]

  """ Create a single TicketExportTask item. """
  createTicketExportTask(data: TicketExportTaskCreateInput): TicketExportTask

  """ Create multiple TicketExportTask items. """
  createTicketExportTasks(data: [TicketExportTasksCreateInput]): [TicketExportTask]

  """ Update a single TicketExportTask item by ID. """
  updateTicketExportTask(id: ID!, data: TicketExportTaskUpdateInput): TicketExportTask

  """ Update multiple TicketExportTask items by ID. """
  updateTicketExportTasks(data: [TicketExportTasksUpdateInput]): [TicketExportTask]

  """ Delete a single TicketExportTask item by ID. """
  deleteTicketExportTask(id: ID!): TicketExportTask

  """ Delete multiple TicketExportTask items by ID. """
  deleteTicketExportTasks(ids: [ID!]): [TicketExportTask]

  """ Create a single TicketOrganizationSettingHistoryRecord item. """
  createTicketOrganizationSettingHistoryRecord(data: TicketOrganizationSettingHistoryRecordCreateInput): TicketOrganizationSettingHistoryRecord

  """ Create multiple TicketOrganizationSettingHistoryRecord items. """
  createTicketOrganizationSettingHistoryRecords(data: [TicketOrganizationSettingHistoryRecordsCreateInput]): [TicketOrganizationSettingHistoryRecord]

  """ Update a single TicketOrganizationSettingHistoryRecord item by ID. """
  updateTicketOrganizationSettingHistoryRecord(id: ID!, data: TicketOrganizationSettingHistoryRecordUpdateInput): TicketOrganizationSettingHistoryRecord

  """ Update multiple TicketOrganizationSettingHistoryRecord items by ID. """
  updateTicketOrganizationSettingHistoryRecords(data: [TicketOrganizationSettingHistoryRecordsUpdateInput]): [TicketOrganizationSettingHistoryRecord]

  """ Delete a single TicketOrganizationSettingHistoryRecord item by ID. """
  deleteTicketOrganizationSettingHistoryRecord(id: ID!): TicketOrganizationSettingHistoryRecord

  """ Delete multiple TicketOrganizationSettingHistoryRecord items by ID. """
  deleteTicketOrganizationSettingHistoryRecords(ids: [ID!]): [TicketOrganizationSettingHistoryRecord]

  """ Create a single TicketOrganizationSetting item. """
  createTicketOrganizationSetting(data: TicketOrganizationSettingCreateInput): TicketOrganizationSetting

  """ Create multiple TicketOrganizationSetting items. """
  createTicketOrganizationSettings(data: [TicketOrganizationSettingsCreateInput]): [TicketOrganizationSetting]

  """ Update a single TicketOrganizationSetting item by ID. """
  updateTicketOrganizationSetting(id: ID!, data: TicketOrganizationSettingUpdateInput): TicketOrganizationSetting

  """ Update multiple TicketOrganizationSetting items by ID. """
  updateTicketOrganizationSettings(data: [TicketOrganizationSettingsUpdateInput]): [TicketOrganizationSetting]

  """ Delete a single TicketOrganizationSetting item by ID. """
  deleteTicketOrganizationSetting(id: ID!): TicketOrganizationSetting

  """ Delete multiple TicketOrganizationSetting items by ID. """
  deleteTicketOrganizationSettings(ids: [ID!]): [TicketOrganizationSetting]

  """ Create a single IncidentHistoryRecord item. """
  createIncidentHistoryRecord(data: IncidentHistoryRecordCreateInput): IncidentHistoryRecord

  """ Create multiple IncidentHistoryRecord items. """
  createIncidentHistoryRecords(data: [IncidentHistoryRecordsCreateInput]): [IncidentHistoryRecord]

  """ Update a single IncidentHistoryRecord item by ID. """
  updateIncidentHistoryRecord(id: ID!, data: IncidentHistoryRecordUpdateInput): IncidentHistoryRecord

  """ Update multiple IncidentHistoryRecord items by ID. """
  updateIncidentHistoryRecords(data: [IncidentHistoryRecordsUpdateInput]): [IncidentHistoryRecord]

  """ Delete a single IncidentHistoryRecord item by ID. """
  deleteIncidentHistoryRecord(id: ID!): IncidentHistoryRecord

  """ Delete multiple IncidentHistoryRecord items by ID. """
  deleteIncidentHistoryRecords(ids: [ID!]): [IncidentHistoryRecord]

  """ Create a single Incident item. """
  createIncident(data: IncidentCreateInput): Incident

  """ Create multiple Incident items. """
  createIncidents(data: [IncidentsCreateInput]): [Incident]

  """ Update a single Incident item by ID. """
  updateIncident(id: ID!, data: IncidentUpdateInput): Incident

  """ Update multiple Incident items by ID. """
  updateIncidents(data: [IncidentsUpdateInput]): [Incident]

  """ Delete a single Incident item by ID. """
  deleteIncident(id: ID!): Incident

  """ Delete multiple Incident items by ID. """
  deleteIncidents(ids: [ID!]): [Incident]

  """ Create a single IncidentChange item. """
  createIncidentChange(data: IncidentChangeCreateInput): IncidentChange

  """ Create multiple IncidentChange items. """
  createIncidentChanges(data: [IncidentChangesCreateInput]): [IncidentChange]

  """ Update a single IncidentChange item by ID. """
  updateIncidentChange(id: ID!, data: IncidentChangeUpdateInput): IncidentChange

  """ Update multiple IncidentChange items by ID. """
  updateIncidentChanges(data: [IncidentChangesUpdateInput]): [IncidentChange]

  """ Delete a single IncidentChange item by ID. """
  deleteIncidentChange(id: ID!): IncidentChange

  """ Delete multiple IncidentChange items by ID. """
  deleteIncidentChanges(ids: [ID!]): [IncidentChange]

  """ Create a single IncidentPropertyHistoryRecord item. """
  createIncidentPropertyHistoryRecord(data: IncidentPropertyHistoryRecordCreateInput): IncidentPropertyHistoryRecord

  """ Create multiple IncidentPropertyHistoryRecord items. """
  createIncidentPropertyHistoryRecords(data: [IncidentPropertyHistoryRecordsCreateInput]): [IncidentPropertyHistoryRecord]

  """ Update a single IncidentPropertyHistoryRecord item by ID. """
  updateIncidentPropertyHistoryRecord(id: ID!, data: IncidentPropertyHistoryRecordUpdateInput): IncidentPropertyHistoryRecord

  """ Update multiple IncidentPropertyHistoryRecord items by ID. """
  updateIncidentPropertyHistoryRecords(data: [IncidentPropertyHistoryRecordsUpdateInput]): [IncidentPropertyHistoryRecord]

  """ Delete a single IncidentPropertyHistoryRecord item by ID. """
  deleteIncidentPropertyHistoryRecord(id: ID!): IncidentPropertyHistoryRecord

  """ Delete multiple IncidentPropertyHistoryRecord items by ID. """
  deleteIncidentPropertyHistoryRecords(ids: [ID!]): [IncidentPropertyHistoryRecord]

  """ Create a single IncidentProperty item. """
  createIncidentProperty(data: IncidentPropertyCreateInput): IncidentProperty

  """ Create multiple IncidentProperty items. """
  createIncidentProperties(data: [IncidentPropertiesCreateInput]): [IncidentProperty]

  """ Update a single IncidentProperty item by ID. """
  updateIncidentProperty(id: ID!, data: IncidentPropertyUpdateInput): IncidentProperty

  """ Update multiple IncidentProperty items by ID. """
  updateIncidentProperties(data: [IncidentPropertiesUpdateInput]): [IncidentProperty]

  """ Delete a single IncidentProperty item by ID. """
  deleteIncidentProperty(id: ID!): IncidentProperty

  """ Delete multiple IncidentProperty items by ID. """
  deleteIncidentProperties(ids: [ID!]): [IncidentProperty]

  """ Create a single IncidentClassifierHistoryRecord item. """
  createIncidentClassifierHistoryRecord(data: IncidentClassifierHistoryRecordCreateInput): IncidentClassifierHistoryRecord

  """ Create multiple IncidentClassifierHistoryRecord items. """
  createIncidentClassifierHistoryRecords(data: [IncidentClassifierHistoryRecordsCreateInput]): [IncidentClassifierHistoryRecord]

  """ Update a single IncidentClassifierHistoryRecord item by ID. """
  updateIncidentClassifierHistoryRecord(id: ID!, data: IncidentClassifierHistoryRecordUpdateInput): IncidentClassifierHistoryRecord

  """ Update multiple IncidentClassifierHistoryRecord items by ID. """
  updateIncidentClassifierHistoryRecords(data: [IncidentClassifierHistoryRecordsUpdateInput]): [IncidentClassifierHistoryRecord]

  """ Delete a single IncidentClassifierHistoryRecord item by ID. """
  deleteIncidentClassifierHistoryRecord(id: ID!): IncidentClassifierHistoryRecord

  """ Delete multiple IncidentClassifierHistoryRecord items by ID. """
  deleteIncidentClassifierHistoryRecords(ids: [ID!]): [IncidentClassifierHistoryRecord]

  """ Create a single IncidentClassifier item. """
  createIncidentClassifier(data: IncidentClassifierCreateInput): IncidentClassifier

  """ Create multiple IncidentClassifier items. """
  createIncidentClassifiers(data: [IncidentClassifiersCreateInput]): [IncidentClassifier]

  """ Update a single IncidentClassifier item by ID. """
  updateIncidentClassifier(id: ID!, data: IncidentClassifierUpdateInput): IncidentClassifier

  """ Update multiple IncidentClassifier items by ID. """
  updateIncidentClassifiers(data: [IncidentClassifiersUpdateInput]): [IncidentClassifier]

  """ Delete a single IncidentClassifier item by ID. """
  deleteIncidentClassifier(id: ID!): IncidentClassifier

  """ Delete multiple IncidentClassifier items by ID. """
  deleteIncidentClassifiers(ids: [ID!]): [IncidentClassifier]

  """ Create a single IncidentClassifierIncidentHistoryRecord item. """
  createIncidentClassifierIncidentHistoryRecord(data: IncidentClassifierIncidentHistoryRecordCreateInput): IncidentClassifierIncidentHistoryRecord

  """ Create multiple IncidentClassifierIncidentHistoryRecord items. """
  createIncidentClassifierIncidentHistoryRecords(data: [IncidentClassifierIncidentHistoryRecordsCreateInput]): [IncidentClassifierIncidentHistoryRecord]

  """ Update a single IncidentClassifierIncidentHistoryRecord item by ID. """
  updateIncidentClassifierIncidentHistoryRecord(id: ID!, data: IncidentClassifierIncidentHistoryRecordUpdateInput): IncidentClassifierIncidentHistoryRecord

  """ Update multiple IncidentClassifierIncidentHistoryRecord items by ID. """
  updateIncidentClassifierIncidentHistoryRecords(data: [IncidentClassifierIncidentHistoryRecordsUpdateInput]): [IncidentClassifierIncidentHistoryRecord]

  """ Delete a single IncidentClassifierIncidentHistoryRecord item by ID. """
  deleteIncidentClassifierIncidentHistoryRecord(id: ID!): IncidentClassifierIncidentHistoryRecord

  """ Delete multiple IncidentClassifierIncidentHistoryRecord items by ID. """
  deleteIncidentClassifierIncidentHistoryRecords(ids: [ID!]): [IncidentClassifierIncidentHistoryRecord]

  """ Create a single IncidentClassifierIncident item. """
  createIncidentClassifierIncident(data: IncidentClassifierIncidentCreateInput): IncidentClassifierIncident

  """ Create multiple IncidentClassifierIncident items. """
  createIncidentClassifierIncidents(data: [IncidentClassifierIncidentsCreateInput]): [IncidentClassifierIncident]

  """ Update a single IncidentClassifierIncident item by ID. """
  updateIncidentClassifierIncident(id: ID!, data: IncidentClassifierIncidentUpdateInput): IncidentClassifierIncident

  """ Update multiple IncidentClassifierIncident items by ID. """
  updateIncidentClassifierIncidents(data: [IncidentClassifierIncidentsUpdateInput]): [IncidentClassifierIncident]

  """ Delete a single IncidentClassifierIncident item by ID. """
  deleteIncidentClassifierIncident(id: ID!): IncidentClassifierIncident

  """ Delete multiple IncidentClassifierIncident items by ID. """
  deleteIncidentClassifierIncidents(ids: [ID!]): [IncidentClassifierIncident]

  """ Create a single MessageHistoryRecord item. """
  createMessageHistoryRecord(data: MessageHistoryRecordCreateInput): MessageHistoryRecord

  """ Create multiple MessageHistoryRecord items. """
  createMessageHistoryRecords(data: [MessageHistoryRecordsCreateInput]): [MessageHistoryRecord]

  """ Update a single MessageHistoryRecord item by ID. """
  updateMessageHistoryRecord(id: ID!, data: MessageHistoryRecordUpdateInput): MessageHistoryRecord

  """ Update multiple MessageHistoryRecord items by ID. """
  updateMessageHistoryRecords(data: [MessageHistoryRecordsUpdateInput]): [MessageHistoryRecord]

  """ Delete a single MessageHistoryRecord item by ID. """
  deleteMessageHistoryRecord(id: ID!): MessageHistoryRecord

  """ Delete multiple MessageHistoryRecord items by ID. """
  deleteMessageHistoryRecords(ids: [ID!]): [MessageHistoryRecord]

  """ Create a single Message item. """
  createMessage(data: MessageCreateInput): Message

  """ Create multiple Message items. """
  createMessages(data: [MessagesCreateInput]): [Message]

  """ Update a single Message item by ID. """
  updateMessage(id: ID!, data: MessageUpdateInput): Message

  """ Update multiple Message items by ID. """
  updateMessages(data: [MessagesUpdateInput]): [Message]

  """ Delete a single Message item by ID. """
  deleteMessage(id: ID!): Message

  """ Delete multiple Message items by ID. """
  deleteMessages(ids: [ID!]): [Message]

  """ Create a single RemoteClientHistoryRecord item. """
  createRemoteClientHistoryRecord(data: RemoteClientHistoryRecordCreateInput): RemoteClientHistoryRecord

  """ Create multiple RemoteClientHistoryRecord items. """
  createRemoteClientHistoryRecords(data: [RemoteClientHistoryRecordsCreateInput]): [RemoteClientHistoryRecord]

  """ Update a single RemoteClientHistoryRecord item by ID. """
  updateRemoteClientHistoryRecord(id: ID!, data: RemoteClientHistoryRecordUpdateInput): RemoteClientHistoryRecord

  """ Update multiple RemoteClientHistoryRecord items by ID. """
  updateRemoteClientHistoryRecords(data: [RemoteClientHistoryRecordsUpdateInput]): [RemoteClientHistoryRecord]

  """ Delete a single RemoteClientHistoryRecord item by ID. """
  deleteRemoteClientHistoryRecord(id: ID!): RemoteClientHistoryRecord

  """ Delete multiple RemoteClientHistoryRecord items by ID. """
  deleteRemoteClientHistoryRecords(ids: [ID!]): [RemoteClientHistoryRecord]

  """ Create a single RemoteClient item. """
  createRemoteClient(data: RemoteClientCreateInput): RemoteClient

  """ Create multiple RemoteClient items. """
  createRemoteClients(data: [RemoteClientsCreateInput]): [RemoteClient]

  """ Update a single RemoteClient item by ID. """
  updateRemoteClient(id: ID!, data: RemoteClientUpdateInput): RemoteClient

  """ Update multiple RemoteClient items by ID. """
  updateRemoteClients(data: [RemoteClientsUpdateInput]): [RemoteClient]

  """ Delete a single RemoteClient item by ID. """
  deleteRemoteClient(id: ID!): RemoteClient

  """ Delete multiple RemoteClient items by ID. """
  deleteRemoteClients(ids: [ID!]): [RemoteClient]

  """ Create a single MessageUserBlackListHistoryRecord item. """
  createMessageUserBlackListHistoryRecord(data: MessageUserBlackListHistoryRecordCreateInput): MessageUserBlackListHistoryRecord

  """ Create multiple MessageUserBlackListHistoryRecord items. """
  createMessageUserBlackListHistoryRecords(data: [MessageUserBlackListHistoryRecordsCreateInput]): [MessageUserBlackListHistoryRecord]

  """ Update a single MessageUserBlackListHistoryRecord item by ID. """
  updateMessageUserBlackListHistoryRecord(id: ID!, data: MessageUserBlackListHistoryRecordUpdateInput): MessageUserBlackListHistoryRecord

  """ Update multiple MessageUserBlackListHistoryRecord items by ID. """
  updateMessageUserBlackListHistoryRecords(data: [MessageUserBlackListHistoryRecordsUpdateInput]): [MessageUserBlackListHistoryRecord]

  """ Delete a single MessageUserBlackListHistoryRecord item by ID. """
  deleteMessageUserBlackListHistoryRecord(id: ID!): MessageUserBlackListHistoryRecord

  """ Delete multiple MessageUserBlackListHistoryRecord items by ID. """
  deleteMessageUserBlackListHistoryRecords(ids: [ID!]): [MessageUserBlackListHistoryRecord]

  """ Create a single MessageUserBlackList item. """
  createMessageUserBlackList(data: MessageUserBlackListCreateInput): MessageUserBlackList

  """ Create multiple MessageUserBlackList items. """
  createMessageUserBlackLists(data: [MessageUserBlackListsCreateInput]): [MessageUserBlackList]

  """ Update a single MessageUserBlackList item by ID. """
  updateMessageUserBlackList(id: ID!, data: MessageUserBlackListUpdateInput): MessageUserBlackList

  """ Update multiple MessageUserBlackList items by ID. """
  updateMessageUserBlackLists(data: [MessageUserBlackListsUpdateInput]): [MessageUserBlackList]

  """ Delete a single MessageUserBlackList item by ID. """
  deleteMessageUserBlackList(id: ID!): MessageUserBlackList

  """ Delete multiple MessageUserBlackList items by ID. """
  deleteMessageUserBlackLists(ids: [ID!]): [MessageUserBlackList]

  """ Create a single MessageOrganizationBlackListHistoryRecord item. """
  createMessageOrganizationBlackListHistoryRecord(data: MessageOrganizationBlackListHistoryRecordCreateInput): MessageOrganizationBlackListHistoryRecord

  """ Create multiple MessageOrganizationBlackListHistoryRecord items. """
  createMessageOrganizationBlackListHistoryRecords(data: [MessageOrganizationBlackListHistoryRecordsCreateInput]): [MessageOrganizationBlackListHistoryRecord]

  """ Update a single MessageOrganizationBlackListHistoryRecord item by ID. 
  """
  updateMessageOrganizationBlackListHistoryRecord(id: ID!, data: MessageOrganizationBlackListHistoryRecordUpdateInput): MessageOrganizationBlackListHistoryRecord

  """ Update multiple MessageOrganizationBlackListHistoryRecord items by ID. 
  """
  updateMessageOrganizationBlackListHistoryRecords(data: [MessageOrganizationBlackListHistoryRecordsUpdateInput]): [MessageOrganizationBlackListHistoryRecord]

  """ Delete a single MessageOrganizationBlackListHistoryRecord item by ID. 
  """
  deleteMessageOrganizationBlackListHistoryRecord(id: ID!): MessageOrganizationBlackListHistoryRecord

  """ Delete multiple MessageOrganizationBlackListHistoryRecord items by ID. 
  """
  deleteMessageOrganizationBlackListHistoryRecords(ids: [ID!]): [MessageOrganizationBlackListHistoryRecord]

  """ Create a single MessageOrganizationBlackList item. """
  createMessageOrganizationBlackList(data: MessageOrganizationBlackListCreateInput): MessageOrganizationBlackList

  """ Create multiple MessageOrganizationBlackList items. """
  createMessageOrganizationBlackLists(data: [MessageOrganizationBlackListsCreateInput]): [MessageOrganizationBlackList]

  """ Update a single MessageOrganizationBlackList item by ID. """
  updateMessageOrganizationBlackList(id: ID!, data: MessageOrganizationBlackListUpdateInput): MessageOrganizationBlackList

  """ Update multiple MessageOrganizationBlackList items by ID. """
  updateMessageOrganizationBlackLists(data: [MessageOrganizationBlackListsUpdateInput]): [MessageOrganizationBlackList]

  """ Delete a single MessageOrganizationBlackList item by ID. """
  deleteMessageOrganizationBlackList(id: ID!): MessageOrganizationBlackList

  """ Delete multiple MessageOrganizationBlackList items by ID. """
  deleteMessageOrganizationBlackLists(ids: [ID!]): [MessageOrganizationBlackList]

  """ Create a single MessageBatchHistoryRecord item. """
  createMessageBatchHistoryRecord(data: MessageBatchHistoryRecordCreateInput): MessageBatchHistoryRecord

  """ Create multiple MessageBatchHistoryRecord items. """
  createMessageBatchHistoryRecords(data: [MessageBatchHistoryRecordsCreateInput]): [MessageBatchHistoryRecord]

  """ Update a single MessageBatchHistoryRecord item by ID. """
  updateMessageBatchHistoryRecord(id: ID!, data: MessageBatchHistoryRecordUpdateInput): MessageBatchHistoryRecord

  """ Update multiple MessageBatchHistoryRecord items by ID. """
  updateMessageBatchHistoryRecords(data: [MessageBatchHistoryRecordsUpdateInput]): [MessageBatchHistoryRecord]

  """ Delete a single MessageBatchHistoryRecord item by ID. """
  deleteMessageBatchHistoryRecord(id: ID!): MessageBatchHistoryRecord

  """ Delete multiple MessageBatchHistoryRecord items by ID. """
  deleteMessageBatchHistoryRecords(ids: [ID!]): [MessageBatchHistoryRecord]

  """ Create a single MessageBatch item. """
  createMessageBatch(data: MessageBatchCreateInput): MessageBatch

  """ Create multiple MessageBatch items. """
  createMessageBatches(data: [MessageBatchesCreateInput]): [MessageBatch]

  """ Update a single MessageBatch item by ID. """
  updateMessageBatch(id: ID!, data: MessageBatchUpdateInput): MessageBatch

  """ Update multiple MessageBatch items by ID. """
  updateMessageBatches(data: [MessageBatchesUpdateInput]): [MessageBatch]

  """ Delete a single MessageBatch item by ID. """
  deleteMessageBatch(id: ID!): MessageBatch

  """ Delete multiple MessageBatch items by ID. """
  deleteMessageBatches(ids: [ID!]): [MessageBatch]

  """ Create a single ContactHistoryRecord item. """
  createContactHistoryRecord(data: ContactHistoryRecordCreateInput): ContactHistoryRecord

  """ Create multiple ContactHistoryRecord items. """
  createContactHistoryRecords(data: [ContactHistoryRecordsCreateInput]): [ContactHistoryRecord]

  """ Update a single ContactHistoryRecord item by ID. """
  updateContactHistoryRecord(id: ID!, data: ContactHistoryRecordUpdateInput): ContactHistoryRecord

  """ Update multiple ContactHistoryRecord items by ID. """
  updateContactHistoryRecords(data: [ContactHistoryRecordsUpdateInput]): [ContactHistoryRecord]

  """ Delete a single ContactHistoryRecord item by ID. """
  deleteContactHistoryRecord(id: ID!): ContactHistoryRecord

  """ Delete multiple ContactHistoryRecord items by ID. """
  deleteContactHistoryRecords(ids: [ID!]): [ContactHistoryRecord]

  """ Create a single Contact item. """
  createContact(data: ContactCreateInput): Contact

  """ Create multiple Contact items. """
  createContacts(data: [ContactsCreateInput]): [Contact]

  """ Update a single Contact item by ID. """
  updateContact(id: ID!, data: ContactUpdateInput): Contact

  """ Update multiple Contact items by ID. """
  updateContacts(data: [ContactsUpdateInput]): [Contact]

  """ Delete a single Contact item by ID. """
  deleteContact(id: ID!): Contact

  """ Delete multiple Contact items by ID. """
  deleteContacts(ids: [ID!]): [Contact]

  """ Create a single ContactRoleHistoryRecord item. """
  createContactRoleHistoryRecord(data: ContactRoleHistoryRecordCreateInput): ContactRoleHistoryRecord

  """ Create multiple ContactRoleHistoryRecord items. """
  createContactRoleHistoryRecords(data: [ContactRoleHistoryRecordsCreateInput]): [ContactRoleHistoryRecord]

  """ Update a single ContactRoleHistoryRecord item by ID. """
  updateContactRoleHistoryRecord(id: ID!, data: ContactRoleHistoryRecordUpdateInput): ContactRoleHistoryRecord

  """ Update multiple ContactRoleHistoryRecord items by ID. """
  updateContactRoleHistoryRecords(data: [ContactRoleHistoryRecordsUpdateInput]): [ContactRoleHistoryRecord]

  """ Delete a single ContactRoleHistoryRecord item by ID. """
  deleteContactRoleHistoryRecord(id: ID!): ContactRoleHistoryRecord

  """ Delete multiple ContactRoleHistoryRecord items by ID. """
  deleteContactRoleHistoryRecords(ids: [ID!]): [ContactRoleHistoryRecord]

  """ Create a single ContactRole item. """
  createContactRole(data: ContactRoleCreateInput): ContactRole

  """ Create multiple ContactRole items. """
  createContactRoles(data: [ContactRolesCreateInput]): [ContactRole]

  """ Update a single ContactRole item by ID. """
  updateContactRole(id: ID!, data: ContactRoleUpdateInput): ContactRole

  """ Update multiple ContactRole items by ID. """
  updateContactRoles(data: [ContactRolesUpdateInput]): [ContactRole]

  """ Delete a single ContactRole item by ID. """
  deleteContactRole(id: ID!): ContactRole

  """ Delete multiple ContactRole items by ID. """
  deleteContactRoles(ids: [ID!]): [ContactRole]

  """ Create a single ResidentHistoryRecord item. """
  createResidentHistoryRecord(data: ResidentHistoryRecordCreateInput): ResidentHistoryRecord

  """ Create multiple ResidentHistoryRecord items. """
  createResidentHistoryRecords(data: [ResidentHistoryRecordsCreateInput]): [ResidentHistoryRecord]

  """ Update a single ResidentHistoryRecord item by ID. """
  updateResidentHistoryRecord(id: ID!, data: ResidentHistoryRecordUpdateInput): ResidentHistoryRecord

  """ Update multiple ResidentHistoryRecord items by ID. """
  updateResidentHistoryRecords(data: [ResidentHistoryRecordsUpdateInput]): [ResidentHistoryRecord]

  """ Delete a single ResidentHistoryRecord item by ID. """
  deleteResidentHistoryRecord(id: ID!): ResidentHistoryRecord

  """ Delete multiple ResidentHistoryRecord items by ID. """
  deleteResidentHistoryRecords(ids: [ID!]): [ResidentHistoryRecord]

  """ Create a single Resident item. """
  createResident(data: ResidentCreateInput): Resident

  """ Create multiple Resident items. """
  createResidents(data: [ResidentsCreateInput]): [Resident]

  """ Update a single Resident item by ID. """
  updateResident(id: ID!, data: ResidentUpdateInput): Resident

  """ Update multiple Resident items by ID. """
  updateResidents(data: [ResidentsUpdateInput]): [Resident]

  """ Delete a single Resident item by ID. """
  deleteResident(id: ID!): Resident

  """ Delete multiple Resident items by ID. """
  deleteResidents(ids: [ID!]): [Resident]

  """ Create a single ServiceConsumerHistoryRecord item. """
  createServiceConsumerHistoryRecord(data: ServiceConsumerHistoryRecordCreateInput): ServiceConsumerHistoryRecord

  """ Create multiple ServiceConsumerHistoryRecord items. """
  createServiceConsumerHistoryRecords(data: [ServiceConsumerHistoryRecordsCreateInput]): [ServiceConsumerHistoryRecord]

  """ Update a single ServiceConsumerHistoryRecord item by ID. """
  updateServiceConsumerHistoryRecord(id: ID!, data: ServiceConsumerHistoryRecordUpdateInput): ServiceConsumerHistoryRecord

  """ Update multiple ServiceConsumerHistoryRecord items by ID. """
  updateServiceConsumerHistoryRecords(data: [ServiceConsumerHistoryRecordsUpdateInput]): [ServiceConsumerHistoryRecord]

  """ Delete a single ServiceConsumerHistoryRecord item by ID. """
  deleteServiceConsumerHistoryRecord(id: ID!): ServiceConsumerHistoryRecord

  """ Delete multiple ServiceConsumerHistoryRecord items by ID. """
  deleteServiceConsumerHistoryRecords(ids: [ID!]): [ServiceConsumerHistoryRecord]

  """ Create a single ServiceConsumer item. """
  createServiceConsumer(data: ServiceConsumerCreateInput): ServiceConsumer

  """ Create multiple ServiceConsumer items. """
  createServiceConsumers(data: [ServiceConsumersCreateInput]): [ServiceConsumer]

  """ Update a single ServiceConsumer item by ID. """
  updateServiceConsumer(id: ID!, data: ServiceConsumerUpdateInput): ServiceConsumer

  """ Update multiple ServiceConsumer items by ID. """
  updateServiceConsumers(data: [ServiceConsumersUpdateInput]): [ServiceConsumer]

  """ Delete a single ServiceConsumer item by ID. """
  deleteServiceConsumer(id: ID!): ServiceConsumer

  """ Delete multiple ServiceConsumer items by ID. """
  deleteServiceConsumers(ids: [ID!]): [ServiceConsumer]

  """ Create a single OnBoardingHistoryRecord item. """
  createOnBoardingHistoryRecord(data: OnBoardingHistoryRecordCreateInput): OnBoardingHistoryRecord

  """ Create multiple OnBoardingHistoryRecord items. """
  createOnBoardingHistoryRecords(data: [OnBoardingHistoryRecordsCreateInput]): [OnBoardingHistoryRecord]

  """ Update a single OnBoardingHistoryRecord item by ID. """
  updateOnBoardingHistoryRecord(id: ID!, data: OnBoardingHistoryRecordUpdateInput): OnBoardingHistoryRecord

  """ Update multiple OnBoardingHistoryRecord items by ID. """
  updateOnBoardingHistoryRecords(data: [OnBoardingHistoryRecordsUpdateInput]): [OnBoardingHistoryRecord]

  """ Delete a single OnBoardingHistoryRecord item by ID. """
  deleteOnBoardingHistoryRecord(id: ID!): OnBoardingHistoryRecord

  """ Delete multiple OnBoardingHistoryRecord items by ID. """
  deleteOnBoardingHistoryRecords(ids: [ID!]): [OnBoardingHistoryRecord]

  """ Create a single OnBoarding item. """
  createOnBoarding(data: OnBoardingCreateInput): OnBoarding

  """ Create multiple OnBoarding items. """
  createOnBoardings(data: [OnBoardingsCreateInput]): [OnBoarding]

  """ Update a single OnBoarding item by ID. """
  updateOnBoarding(id: ID!, data: OnBoardingUpdateInput): OnBoarding

  """ Update multiple OnBoarding items by ID. """
  updateOnBoardings(data: [OnBoardingsUpdateInput]): [OnBoarding]

  """ Delete a single OnBoarding item by ID. """
  deleteOnBoarding(id: ID!): OnBoarding

  """ Delete multiple OnBoarding items by ID. """
  deleteOnBoardings(ids: [ID!]): [OnBoarding]

  """ Create a single OnBoardingStepHistoryRecord item. """
  createOnBoardingStepHistoryRecord(data: OnBoardingStepHistoryRecordCreateInput): OnBoardingStepHistoryRecord

  """ Create multiple OnBoardingStepHistoryRecord items. """
  createOnBoardingStepHistoryRecords(data: [OnBoardingStepHistoryRecordsCreateInput]): [OnBoardingStepHistoryRecord]

  """ Update a single OnBoardingStepHistoryRecord item by ID. """
  updateOnBoardingStepHistoryRecord(id: ID!, data: OnBoardingStepHistoryRecordUpdateInput): OnBoardingStepHistoryRecord

  """ Update multiple OnBoardingStepHistoryRecord items by ID. """
  updateOnBoardingStepHistoryRecords(data: [OnBoardingStepHistoryRecordsUpdateInput]): [OnBoardingStepHistoryRecord]

  """ Delete a single OnBoardingStepHistoryRecord item by ID. """
  deleteOnBoardingStepHistoryRecord(id: ID!): OnBoardingStepHistoryRecord

  """ Delete multiple OnBoardingStepHistoryRecord items by ID. """
  deleteOnBoardingStepHistoryRecords(ids: [ID!]): [OnBoardingStepHistoryRecord]

  """ Create a single OnBoardingStep item. """
  createOnBoardingStep(data: OnBoardingStepCreateInput): OnBoardingStep

  """ Create multiple OnBoardingStep items. """
  createOnBoardingSteps(data: [OnBoardingStepsCreateInput]): [OnBoardingStep]

  """ Update a single OnBoardingStep item by ID. """
  updateOnBoardingStep(id: ID!, data: OnBoardingStepUpdateInput): OnBoardingStep

  """ Update multiple OnBoardingStep items by ID. """
  updateOnBoardingSteps(data: [OnBoardingStepsUpdateInput]): [OnBoardingStep]

  """ Delete a single OnBoardingStep item by ID. """
  deleteOnBoardingStep(id: ID!): OnBoardingStep

  """ Delete multiple OnBoardingStep items by ID. """
  deleteOnBoardingSteps(ids: [ID!]): [OnBoardingStep]

  """ Create a single MeterResourceHistoryRecord item. """
  createMeterResourceHistoryRecord(data: MeterResourceHistoryRecordCreateInput): MeterResourceHistoryRecord

  """ Create multiple MeterResourceHistoryRecord items. """
  createMeterResourceHistoryRecords(data: [MeterResourceHistoryRecordsCreateInput]): [MeterResourceHistoryRecord]

  """ Update a single MeterResourceHistoryRecord item by ID. """
  updateMeterResourceHistoryRecord(id: ID!, data: MeterResourceHistoryRecordUpdateInput): MeterResourceHistoryRecord

  """ Update multiple MeterResourceHistoryRecord items by ID. """
  updateMeterResourceHistoryRecords(data: [MeterResourceHistoryRecordsUpdateInput]): [MeterResourceHistoryRecord]

  """ Delete a single MeterResourceHistoryRecord item by ID. """
  deleteMeterResourceHistoryRecord(id: ID!): MeterResourceHistoryRecord

  """ Delete multiple MeterResourceHistoryRecord items by ID. """
  deleteMeterResourceHistoryRecords(ids: [ID!]): [MeterResourceHistoryRecord]

  """ Create a single MeterResource item. """
  createMeterResource(data: MeterResourceCreateInput): MeterResource

  """ Create multiple MeterResource items. """
  createMeterResources(data: [MeterResourcesCreateInput]): [MeterResource]

  """ Update a single MeterResource item by ID. """
  updateMeterResource(id: ID!, data: MeterResourceUpdateInput): MeterResource

  """ Update multiple MeterResource items by ID. """
  updateMeterResources(data: [MeterResourcesUpdateInput]): [MeterResource]

  """ Delete a single MeterResource item by ID. """
  deleteMeterResource(id: ID!): MeterResource

  """ Delete multiple MeterResource items by ID. """
  deleteMeterResources(ids: [ID!]): [MeterResource]

  """ Create a single MeterReadingSourceHistoryRecord item. """
  createMeterReadingSourceHistoryRecord(data: MeterReadingSourceHistoryRecordCreateInput): MeterReadingSourceHistoryRecord

  """ Create multiple MeterReadingSourceHistoryRecord items. """
  createMeterReadingSourceHistoryRecords(data: [MeterReadingSourceHistoryRecordsCreateInput]): [MeterReadingSourceHistoryRecord]

  """ Update a single MeterReadingSourceHistoryRecord item by ID. """
  updateMeterReadingSourceHistoryRecord(id: ID!, data: MeterReadingSourceHistoryRecordUpdateInput): MeterReadingSourceHistoryRecord

  """ Update multiple MeterReadingSourceHistoryRecord items by ID. """
  updateMeterReadingSourceHistoryRecords(data: [MeterReadingSourceHistoryRecordsUpdateInput]): [MeterReadingSourceHistoryRecord]

  """ Delete a single MeterReadingSourceHistoryRecord item by ID. """
  deleteMeterReadingSourceHistoryRecord(id: ID!): MeterReadingSourceHistoryRecord

  """ Delete multiple MeterReadingSourceHistoryRecord items by ID. """
  deleteMeterReadingSourceHistoryRecords(ids: [ID!]): [MeterReadingSourceHistoryRecord]

  """ Create a single MeterReadingSource item. """
  createMeterReadingSource(data: MeterReadingSourceCreateInput): MeterReadingSource

  """ Create multiple MeterReadingSource items. """
  createMeterReadingSources(data: [MeterReadingSourcesCreateInput]): [MeterReadingSource]

  """ Update a single MeterReadingSource item by ID. """
  updateMeterReadingSource(id: ID!, data: MeterReadingSourceUpdateInput): MeterReadingSource

  """ Update multiple MeterReadingSource items by ID. """
  updateMeterReadingSources(data: [MeterReadingSourcesUpdateInput]): [MeterReadingSource]

  """ Delete a single MeterReadingSource item by ID. """
  deleteMeterReadingSource(id: ID!): MeterReadingSource

  """ Delete multiple MeterReadingSource items by ID. """
  deleteMeterReadingSources(ids: [ID!]): [MeterReadingSource]

  """ Create a single MeterReadingHistoryRecord item. """
  createMeterReadingHistoryRecord(data: MeterReadingHistoryRecordCreateInput): MeterReadingHistoryRecord

  """ Create multiple MeterReadingHistoryRecord items. """
  createMeterReadingHistoryRecords(data: [MeterReadingHistoryRecordsCreateInput]): [MeterReadingHistoryRecord]

  """ Update a single MeterReadingHistoryRecord item by ID. """
  updateMeterReadingHistoryRecord(id: ID!, data: MeterReadingHistoryRecordUpdateInput): MeterReadingHistoryRecord

  """ Update multiple MeterReadingHistoryRecord items by ID. """
  updateMeterReadingHistoryRecords(data: [MeterReadingHistoryRecordsUpdateInput]): [MeterReadingHistoryRecord]

  """ Delete a single MeterReadingHistoryRecord item by ID. """
  deleteMeterReadingHistoryRecord(id: ID!): MeterReadingHistoryRecord

  """ Delete multiple MeterReadingHistoryRecord items by ID. """
  deleteMeterReadingHistoryRecords(ids: [ID!]): [MeterReadingHistoryRecord]

  """ Create a single MeterReading item. """
  createMeterReading(data: MeterReadingCreateInput): MeterReading

  """ Create multiple MeterReading items. """
  createMeterReadings(data: [MeterReadingsCreateInput]): [MeterReading]

  """ Update a single MeterReading item by ID. """
  updateMeterReading(id: ID!, data: MeterReadingUpdateInput): MeterReading

  """ Update multiple MeterReading items by ID. """
  updateMeterReadings(data: [MeterReadingsUpdateInput]): [MeterReading]

  """ Delete a single MeterReading item by ID. """
  deleteMeterReading(id: ID!): MeterReading

  """ Delete multiple MeterReading items by ID. """
  deleteMeterReadings(ids: [ID!]): [MeterReading]

  """ Create a single MeterHistoryRecord item. """
  createMeterHistoryRecord(data: MeterHistoryRecordCreateInput): MeterHistoryRecord

  """ Create multiple MeterHistoryRecord items. """
  createMeterHistoryRecords(data: [MeterHistoryRecordsCreateInput]): [MeterHistoryRecord]

  """ Update a single MeterHistoryRecord item by ID. """
  updateMeterHistoryRecord(id: ID!, data: MeterHistoryRecordUpdateInput): MeterHistoryRecord

  """ Update multiple MeterHistoryRecord items by ID. """
  updateMeterHistoryRecords(data: [MeterHistoryRecordsUpdateInput]): [MeterHistoryRecord]

  """ Delete a single MeterHistoryRecord item by ID. """
  deleteMeterHistoryRecord(id: ID!): MeterHistoryRecord

  """ Delete multiple MeterHistoryRecord items by ID. """
  deleteMeterHistoryRecords(ids: [ID!]): [MeterHistoryRecord]

  """ Create a single Meter item. """
  createMeter(data: MeterCreateInput): Meter

  """ Create multiple Meter items. """
  createMeters(data: [MetersCreateInput]): [Meter]

  """ Update a single Meter item by ID. """
  updateMeter(id: ID!, data: MeterUpdateInput): Meter

  """ Update multiple Meter items by ID. """
  updateMeters(data: [MetersUpdateInput]): [Meter]

  """ Delete a single Meter item by ID. """
  deleteMeter(id: ID!): Meter

  """ Delete multiple Meter items by ID. """
  deleteMeters(ids: [ID!]): [Meter]

  """ Create a single MeterReadingFilterTemplateHistoryRecord item. """
  createMeterReadingFilterTemplateHistoryRecord(data: MeterReadingFilterTemplateHistoryRecordCreateInput): MeterReadingFilterTemplateHistoryRecord

  """ Create multiple MeterReadingFilterTemplateHistoryRecord items. """
  createMeterReadingFilterTemplateHistoryRecords(data: [MeterReadingFilterTemplateHistoryRecordsCreateInput]): [MeterReadingFilterTemplateHistoryRecord]

  """ Update a single MeterReadingFilterTemplateHistoryRecord item by ID. """
  updateMeterReadingFilterTemplateHistoryRecord(id: ID!, data: MeterReadingFilterTemplateHistoryRecordUpdateInput): MeterReadingFilterTemplateHistoryRecord

  """ Update multiple MeterReadingFilterTemplateHistoryRecord items by ID. """
  updateMeterReadingFilterTemplateHistoryRecords(data: [MeterReadingFilterTemplateHistoryRecordsUpdateInput]): [MeterReadingFilterTemplateHistoryRecord]

  """ Delete a single MeterReadingFilterTemplateHistoryRecord item by ID. """
  deleteMeterReadingFilterTemplateHistoryRecord(id: ID!): MeterReadingFilterTemplateHistoryRecord

  """ Delete multiple MeterReadingFilterTemplateHistoryRecord items by ID. """
  deleteMeterReadingFilterTemplateHistoryRecords(ids: [ID!]): [MeterReadingFilterTemplateHistoryRecord]

  """ Create a single MeterReadingFilterTemplate item. """
  createMeterReadingFilterTemplate(data: MeterReadingFilterTemplateCreateInput): MeterReadingFilterTemplate

  """ Create multiple MeterReadingFilterTemplate items. """
  createMeterReadingFilterTemplates(data: [MeterReadingFilterTemplatesCreateInput]): [MeterReadingFilterTemplate]

  """ Update a single MeterReadingFilterTemplate item by ID. """
  updateMeterReadingFilterTemplate(id: ID!, data: MeterReadingFilterTemplateUpdateInput): MeterReadingFilterTemplate

  """ Update multiple MeterReadingFilterTemplate items by ID. """
  updateMeterReadingFilterTemplates(data: [MeterReadingFilterTemplatesUpdateInput]): [MeterReadingFilterTemplate]

  """ Delete a single MeterReadingFilterTemplate item by ID. """
  deleteMeterReadingFilterTemplate(id: ID!): MeterReadingFilterTemplate

  """ Delete multiple MeterReadingFilterTemplate items by ID. """
  deleteMeterReadingFilterTemplates(ids: [ID!]): [MeterReadingFilterTemplate]

  """ Create a single ServiceSubscriptionHistoryRecord item. """
  createServiceSubscriptionHistoryRecord(data: ServiceSubscriptionHistoryRecordCreateInput): ServiceSubscriptionHistoryRecord

  """ Create multiple ServiceSubscriptionHistoryRecord items. """
  createServiceSubscriptionHistoryRecords(data: [ServiceSubscriptionHistoryRecordsCreateInput]): [ServiceSubscriptionHistoryRecord]

  """ Update a single ServiceSubscriptionHistoryRecord item by ID. """
  updateServiceSubscriptionHistoryRecord(id: ID!, data: ServiceSubscriptionHistoryRecordUpdateInput): ServiceSubscriptionHistoryRecord

  """ Update multiple ServiceSubscriptionHistoryRecord items by ID. """
  updateServiceSubscriptionHistoryRecords(data: [ServiceSubscriptionHistoryRecordsUpdateInput]): [ServiceSubscriptionHistoryRecord]

  """ Delete a single ServiceSubscriptionHistoryRecord item by ID. """
  deleteServiceSubscriptionHistoryRecord(id: ID!): ServiceSubscriptionHistoryRecord

  """ Delete multiple ServiceSubscriptionHistoryRecord items by ID. """
  deleteServiceSubscriptionHistoryRecords(ids: [ID!]): [ServiceSubscriptionHistoryRecord]

  """ Create a single ServiceSubscription item. """
  createServiceSubscription(data: ServiceSubscriptionCreateInput): ServiceSubscription

  """ Create multiple ServiceSubscription items. """
  createServiceSubscriptions(data: [ServiceSubscriptionsCreateInput]): [ServiceSubscription]

  """ Update a single ServiceSubscription item by ID. """
  updateServiceSubscription(id: ID!, data: ServiceSubscriptionUpdateInput): ServiceSubscription

  """ Update multiple ServiceSubscription items by ID. """
  updateServiceSubscriptions(data: [ServiceSubscriptionsUpdateInput]): [ServiceSubscription]

  """ Delete a single ServiceSubscription item by ID. """
  deleteServiceSubscription(id: ID!): ServiceSubscription

  """ Delete multiple ServiceSubscription items by ID. """
  deleteServiceSubscriptions(ids: [ID!]): [ServiceSubscription]

  """ Create a single AcquiringIntegrationHistoryRecord item. """
  createAcquiringIntegrationHistoryRecord(data: AcquiringIntegrationHistoryRecordCreateInput): AcquiringIntegrationHistoryRecord

  """ Create multiple AcquiringIntegrationHistoryRecord items. """
  createAcquiringIntegrationHistoryRecords(data: [AcquiringIntegrationHistoryRecordsCreateInput]): [AcquiringIntegrationHistoryRecord]

  """ Update a single AcquiringIntegrationHistoryRecord item by ID. """
  updateAcquiringIntegrationHistoryRecord(id: ID!, data: AcquiringIntegrationHistoryRecordUpdateInput): AcquiringIntegrationHistoryRecord

  """ Update multiple AcquiringIntegrationHistoryRecord items by ID. """
  updateAcquiringIntegrationHistoryRecords(data: [AcquiringIntegrationHistoryRecordsUpdateInput]): [AcquiringIntegrationHistoryRecord]

  """ Delete a single AcquiringIntegrationHistoryRecord item by ID. """
  deleteAcquiringIntegrationHistoryRecord(id: ID!): AcquiringIntegrationHistoryRecord

  """ Delete multiple AcquiringIntegrationHistoryRecord items by ID. """
  deleteAcquiringIntegrationHistoryRecords(ids: [ID!]): [AcquiringIntegrationHistoryRecord]

  """ Create a single AcquiringIntegration item. """
  createAcquiringIntegration(data: AcquiringIntegrationCreateInput): AcquiringIntegration

  """ Create multiple AcquiringIntegration items. """
  createAcquiringIntegrations(data: [AcquiringIntegrationsCreateInput]): [AcquiringIntegration]

  """ Update a single AcquiringIntegration item by ID. """
  updateAcquiringIntegration(id: ID!, data: AcquiringIntegrationUpdateInput): AcquiringIntegration

  """ Update multiple AcquiringIntegration items by ID. """
  updateAcquiringIntegrations(data: [AcquiringIntegrationsUpdateInput]): [AcquiringIntegration]

  """ Delete a single AcquiringIntegration item by ID. """
  deleteAcquiringIntegration(id: ID!): AcquiringIntegration

  """ Delete multiple AcquiringIntegration items by ID. """
  deleteAcquiringIntegrations(ids: [ID!]): [AcquiringIntegration]

  """ Create a single AcquiringIntegrationAccessRightHistoryRecord item. """
  createAcquiringIntegrationAccessRightHistoryRecord(data: AcquiringIntegrationAccessRightHistoryRecordCreateInput): AcquiringIntegrationAccessRightHistoryRecord

  """ Create multiple AcquiringIntegrationAccessRightHistoryRecord items. """
  createAcquiringIntegrationAccessRightHistoryRecords(data: [AcquiringIntegrationAccessRightHistoryRecordsCreateInput]): [AcquiringIntegrationAccessRightHistoryRecord]

  """ Update a single AcquiringIntegrationAccessRightHistoryRecord item by ID. 
  """
  updateAcquiringIntegrationAccessRightHistoryRecord(id: ID!, data: AcquiringIntegrationAccessRightHistoryRecordUpdateInput): AcquiringIntegrationAccessRightHistoryRecord

  """ Update multiple AcquiringIntegrationAccessRightHistoryRecord items by ID. 
  """
  updateAcquiringIntegrationAccessRightHistoryRecords(data: [AcquiringIntegrationAccessRightHistoryRecordsUpdateInput]): [AcquiringIntegrationAccessRightHistoryRecord]

  """ Delete a single AcquiringIntegrationAccessRightHistoryRecord item by ID. 
  """
  deleteAcquiringIntegrationAccessRightHistoryRecord(id: ID!): AcquiringIntegrationAccessRightHistoryRecord

  """ Delete multiple AcquiringIntegrationAccessRightHistoryRecord items by ID. 
  """
  deleteAcquiringIntegrationAccessRightHistoryRecords(ids: [ID!]): [AcquiringIntegrationAccessRightHistoryRecord]

  """ Create a single AcquiringIntegrationAccessRight item. """
  createAcquiringIntegrationAccessRight(data: AcquiringIntegrationAccessRightCreateInput): AcquiringIntegrationAccessRight

  """ Create multiple AcquiringIntegrationAccessRight items. """
  createAcquiringIntegrationAccessRights(data: [AcquiringIntegrationAccessRightsCreateInput]): [AcquiringIntegrationAccessRight]

  """ Update a single AcquiringIntegrationAccessRight item by ID. """
  updateAcquiringIntegrationAccessRight(id: ID!, data: AcquiringIntegrationAccessRightUpdateInput): AcquiringIntegrationAccessRight

  """ Update multiple AcquiringIntegrationAccessRight items by ID. """
  updateAcquiringIntegrationAccessRights(data: [AcquiringIntegrationAccessRightsUpdateInput]): [AcquiringIntegrationAccessRight]

  """ Delete a single AcquiringIntegrationAccessRight item by ID. """
  deleteAcquiringIntegrationAccessRight(id: ID!): AcquiringIntegrationAccessRight

  """ Delete multiple AcquiringIntegrationAccessRight items by ID. """
  deleteAcquiringIntegrationAccessRights(ids: [ID!]): [AcquiringIntegrationAccessRight]

  """ Create a single AcquiringIntegrationContextHistoryRecord item. """
  createAcquiringIntegrationContextHistoryRecord(data: AcquiringIntegrationContextHistoryRecordCreateInput): AcquiringIntegrationContextHistoryRecord

  """ Create multiple AcquiringIntegrationContextHistoryRecord items. """
  createAcquiringIntegrationContextHistoryRecords(data: [AcquiringIntegrationContextHistoryRecordsCreateInput]): [AcquiringIntegrationContextHistoryRecord]

  """ Update a single AcquiringIntegrationContextHistoryRecord item by ID. """
  updateAcquiringIntegrationContextHistoryRecord(id: ID!, data: AcquiringIntegrationContextHistoryRecordUpdateInput): AcquiringIntegrationContextHistoryRecord

  """ Update multiple AcquiringIntegrationContextHistoryRecord items by ID. 
  """
  updateAcquiringIntegrationContextHistoryRecords(data: [AcquiringIntegrationContextHistoryRecordsUpdateInput]): [AcquiringIntegrationContextHistoryRecord]

  """ Delete a single AcquiringIntegrationContextHistoryRecord item by ID. """
  deleteAcquiringIntegrationContextHistoryRecord(id: ID!): AcquiringIntegrationContextHistoryRecord

  """ Delete multiple AcquiringIntegrationContextHistoryRecord items by ID. 
  """
  deleteAcquiringIntegrationContextHistoryRecords(ids: [ID!]): [AcquiringIntegrationContextHistoryRecord]

  """ Create a single AcquiringIntegrationContext item. """
  createAcquiringIntegrationContext(data: AcquiringIntegrationContextCreateInput): AcquiringIntegrationContext

  """ Create multiple AcquiringIntegrationContext items. """
  createAcquiringIntegrationContexts(data: [AcquiringIntegrationContextsCreateInput]): [AcquiringIntegrationContext]

  """ Update a single AcquiringIntegrationContext item by ID. """
  updateAcquiringIntegrationContext(id: ID!, data: AcquiringIntegrationContextUpdateInput): AcquiringIntegrationContext

  """ Update multiple AcquiringIntegrationContext items by ID. """
  updateAcquiringIntegrationContexts(data: [AcquiringIntegrationContextsUpdateInput]): [AcquiringIntegrationContext]

  """ Delete a single AcquiringIntegrationContext item by ID. """
  deleteAcquiringIntegrationContext(id: ID!): AcquiringIntegrationContext

  """ Delete multiple AcquiringIntegrationContext items by ID. """
  deleteAcquiringIntegrationContexts(ids: [ID!]): [AcquiringIntegrationContext]

  """ Create a single MultiPaymentHistoryRecord item. """
  createMultiPaymentHistoryRecord(data: MultiPaymentHistoryRecordCreateInput): MultiPaymentHistoryRecord

  """ Create multiple MultiPaymentHistoryRecord items. """
  createMultiPaymentHistoryRecords(data: [MultiPaymentHistoryRecordsCreateInput]): [MultiPaymentHistoryRecord]

  """ Update a single MultiPaymentHistoryRecord item by ID. """
  updateMultiPaymentHistoryRecord(id: ID!, data: MultiPaymentHistoryRecordUpdateInput): MultiPaymentHistoryRecord

  """ Update multiple MultiPaymentHistoryRecord items by ID. """
  updateMultiPaymentHistoryRecords(data: [MultiPaymentHistoryRecordsUpdateInput]): [MultiPaymentHistoryRecord]

  """ Delete a single MultiPaymentHistoryRecord item by ID. """
  deleteMultiPaymentHistoryRecord(id: ID!): MultiPaymentHistoryRecord

  """ Delete multiple MultiPaymentHistoryRecord items by ID. """
  deleteMultiPaymentHistoryRecords(ids: [ID!]): [MultiPaymentHistoryRecord]

  """ Create a single MultiPayment item. """
  createMultiPayment(data: MultiPaymentCreateInput): MultiPayment

  """ Create multiple MultiPayment items. """
  createMultiPayments(data: [MultiPaymentsCreateInput]): [MultiPayment]

  """ Update a single MultiPayment item by ID. """
  updateMultiPayment(id: ID!, data: MultiPaymentUpdateInput): MultiPayment

  """ Update multiple MultiPayment items by ID. """
  updateMultiPayments(data: [MultiPaymentsUpdateInput]): [MultiPayment]

  """ Delete a single MultiPayment item by ID. """
  deleteMultiPayment(id: ID!): MultiPayment

  """ Delete multiple MultiPayment items by ID. """
  deleteMultiPayments(ids: [ID!]): [MultiPayment]

  """ Create a single PaymentHistoryRecord item. """
  createPaymentHistoryRecord(data: PaymentHistoryRecordCreateInput): PaymentHistoryRecord

  """ Create multiple PaymentHistoryRecord items. """
  createPaymentHistoryRecords(data: [PaymentHistoryRecordsCreateInput]): [PaymentHistoryRecord]

  """ Update a single PaymentHistoryRecord item by ID. """
  updatePaymentHistoryRecord(id: ID!, data: PaymentHistoryRecordUpdateInput): PaymentHistoryRecord

  """ Update multiple PaymentHistoryRecord items by ID. """
  updatePaymentHistoryRecords(data: [PaymentHistoryRecordsUpdateInput]): [PaymentHistoryRecord]

  """ Delete a single PaymentHistoryRecord item by ID. """
  deletePaymentHistoryRecord(id: ID!): PaymentHistoryRecord

  """ Delete multiple PaymentHistoryRecord items by ID. """
  deletePaymentHistoryRecords(ids: [ID!]): [PaymentHistoryRecord]

  """ Create a single Payment item. """
  createPayment(data: PaymentCreateInput): Payment

  """ Create multiple Payment items. """
  createPayments(data: [PaymentsCreateInput]): [Payment]

  """ Update a single Payment item by ID. """
  updatePayment(id: ID!, data: PaymentUpdateInput): Payment

  """ Update multiple Payment items by ID. """
  updatePayments(data: [PaymentsUpdateInput]): [Payment]

  """ Delete a single Payment item by ID. """
  deletePayment(id: ID!): Payment

  """ Delete multiple Payment items by ID. """
  deletePayments(ids: [ID!]): [Payment]

  """ Create a single PaymentsFilterTemplateHistoryRecord item. """
  createPaymentsFilterTemplateHistoryRecord(data: PaymentsFilterTemplateHistoryRecordCreateInput): PaymentsFilterTemplateHistoryRecord

  """ Create multiple PaymentsFilterTemplateHistoryRecord items. """
  createPaymentsFilterTemplateHistoryRecords(data: [PaymentsFilterTemplateHistoryRecordsCreateInput]): [PaymentsFilterTemplateHistoryRecord]

  """ Update a single PaymentsFilterTemplateHistoryRecord item by ID. """
  updatePaymentsFilterTemplateHistoryRecord(id: ID!, data: PaymentsFilterTemplateHistoryRecordUpdateInput): PaymentsFilterTemplateHistoryRecord

  """ Update multiple PaymentsFilterTemplateHistoryRecord items by ID. """
  updatePaymentsFilterTemplateHistoryRecords(data: [PaymentsFilterTemplateHistoryRecordsUpdateInput]): [PaymentsFilterTemplateHistoryRecord]

  """ Delete a single PaymentsFilterTemplateHistoryRecord item by ID. """
  deletePaymentsFilterTemplateHistoryRecord(id: ID!): PaymentsFilterTemplateHistoryRecord

  """ Delete multiple PaymentsFilterTemplateHistoryRecord items by ID. """
  deletePaymentsFilterTemplateHistoryRecords(ids: [ID!]): [PaymentsFilterTemplateHistoryRecord]

  """ Create a single PaymentsFilterTemplate item. """
  createPaymentsFilterTemplate(data: PaymentsFilterTemplateCreateInput): PaymentsFilterTemplate

  """ Create multiple PaymentsFilterTemplate items. """
  createPaymentsFilterTemplates(data: [PaymentsFilterTemplatesCreateInput]): [PaymentsFilterTemplate]

  """ Update a single PaymentsFilterTemplate item by ID. """
  updatePaymentsFilterTemplate(id: ID!, data: PaymentsFilterTemplateUpdateInput): PaymentsFilterTemplate

  """ Update multiple PaymentsFilterTemplate items by ID. """
  updatePaymentsFilterTemplates(data: [PaymentsFilterTemplatesUpdateInput]): [PaymentsFilterTemplate]

  """ Delete a single PaymentsFilterTemplate item by ID. """
  deletePaymentsFilterTemplate(id: ID!): PaymentsFilterTemplate

  """ Delete multiple PaymentsFilterTemplate items by ID. """
  deletePaymentsFilterTemplates(ids: [ID!]): [PaymentsFilterTemplate]

  """ Create a single RecurrentPaymentContextHistoryRecord item. """
  createRecurrentPaymentContextHistoryRecord(data: RecurrentPaymentContextHistoryRecordCreateInput): RecurrentPaymentContextHistoryRecord

  """ Create multiple RecurrentPaymentContextHistoryRecord items. """
  createRecurrentPaymentContextHistoryRecords(data: [RecurrentPaymentContextHistoryRecordsCreateInput]): [RecurrentPaymentContextHistoryRecord]

  """ Update a single RecurrentPaymentContextHistoryRecord item by ID. """
  updateRecurrentPaymentContextHistoryRecord(id: ID!, data: RecurrentPaymentContextHistoryRecordUpdateInput): RecurrentPaymentContextHistoryRecord

  """ Update multiple RecurrentPaymentContextHistoryRecord items by ID. """
  updateRecurrentPaymentContextHistoryRecords(data: [RecurrentPaymentContextHistoryRecordsUpdateInput]): [RecurrentPaymentContextHistoryRecord]

  """ Delete a single RecurrentPaymentContextHistoryRecord item by ID. """
  deleteRecurrentPaymentContextHistoryRecord(id: ID!): RecurrentPaymentContextHistoryRecord

  """ Delete multiple RecurrentPaymentContextHistoryRecord items by ID. """
  deleteRecurrentPaymentContextHistoryRecords(ids: [ID!]): [RecurrentPaymentContextHistoryRecord]

  """ Create a single RecurrentPaymentContext item. """
  createRecurrentPaymentContext(data: RecurrentPaymentContextCreateInput): RecurrentPaymentContext

  """ Create multiple RecurrentPaymentContext items. """
  createRecurrentPaymentContexts(data: [RecurrentPaymentContextsCreateInput]): [RecurrentPaymentContext]

  """ Update a single RecurrentPaymentContext item by ID. """
  updateRecurrentPaymentContext(id: ID!, data: RecurrentPaymentContextUpdateInput): RecurrentPaymentContext

  """ Update multiple RecurrentPaymentContext items by ID. """
  updateRecurrentPaymentContexts(data: [RecurrentPaymentContextsUpdateInput]): [RecurrentPaymentContext]

  """ Delete a single RecurrentPaymentContext item by ID. """
  deleteRecurrentPaymentContext(id: ID!): RecurrentPaymentContext

  """ Delete multiple RecurrentPaymentContext items by ID. """
  deleteRecurrentPaymentContexts(ids: [ID!]): [RecurrentPaymentContext]

  """ Create a single RecurrentPaymentHistoryRecord item. """
  createRecurrentPaymentHistoryRecord(data: RecurrentPaymentHistoryRecordCreateInput): RecurrentPaymentHistoryRecord

  """ Create multiple RecurrentPaymentHistoryRecord items. """
  createRecurrentPaymentHistoryRecords(data: [RecurrentPaymentHistoryRecordsCreateInput]): [RecurrentPaymentHistoryRecord]

  """ Update a single RecurrentPaymentHistoryRecord item by ID. """
  updateRecurrentPaymentHistoryRecord(id: ID!, data: RecurrentPaymentHistoryRecordUpdateInput): RecurrentPaymentHistoryRecord

  """ Update multiple RecurrentPaymentHistoryRecord items by ID. """
  updateRecurrentPaymentHistoryRecords(data: [RecurrentPaymentHistoryRecordsUpdateInput]): [RecurrentPaymentHistoryRecord]

  """ Delete a single RecurrentPaymentHistoryRecord item by ID. """
  deleteRecurrentPaymentHistoryRecord(id: ID!): RecurrentPaymentHistoryRecord

  """ Delete multiple RecurrentPaymentHistoryRecord items by ID. """
  deleteRecurrentPaymentHistoryRecords(ids: [ID!]): [RecurrentPaymentHistoryRecord]

  """ Create a single RecurrentPayment item. """
  createRecurrentPayment(data: RecurrentPaymentCreateInput): RecurrentPayment

  """ Create multiple RecurrentPayment items. """
  createRecurrentPayments(data: [RecurrentPaymentsCreateInput]): [RecurrentPayment]

  """ Update a single RecurrentPayment item by ID. """
  updateRecurrentPayment(id: ID!, data: RecurrentPaymentUpdateInput): RecurrentPayment

  """ Update multiple RecurrentPayment items by ID. """
  updateRecurrentPayments(data: [RecurrentPaymentsUpdateInput]): [RecurrentPayment]

  """ Delete a single RecurrentPayment item by ID. """
  deleteRecurrentPayment(id: ID!): RecurrentPayment

  """ Delete multiple RecurrentPayment items by ID. """
  deleteRecurrentPayments(ids: [ID!]): [RecurrentPayment]

  """ Create a single B2BAppHistoryRecord item. """
  createB2BAppHistoryRecord(data: B2BAppHistoryRecordCreateInput): B2BAppHistoryRecord

  """ Create multiple B2BAppHistoryRecord items. """
  createB2BAppHistoryRecords(data: [B2BAppHistoryRecordsCreateInput]): [B2BAppHistoryRecord]

  """ Update a single B2BAppHistoryRecord item by ID. """
  updateB2BAppHistoryRecord(id: ID!, data: B2BAppHistoryRecordUpdateInput): B2BAppHistoryRecord

  """ Update multiple B2BAppHistoryRecord items by ID. """
  updateB2BAppHistoryRecords(data: [B2BAppHistoryRecordsUpdateInput]): [B2BAppHistoryRecord]

  """ Delete a single B2BAppHistoryRecord item by ID. """
  deleteB2BAppHistoryRecord(id: ID!): B2BAppHistoryRecord

  """ Delete multiple B2BAppHistoryRecord items by ID. """
  deleteB2BAppHistoryRecords(ids: [ID!]): [B2BAppHistoryRecord]

  """ Create a single B2BApp item. """
  createB2BApp(data: B2BAppCreateInput): B2BApp

  """ Create multiple B2BApp items. """
  createB2BApps(data: [B2BAppsCreateInput]): [B2BApp]

  """ Update a single B2BApp item by ID. """
  updateB2BApp(id: ID!, data: B2BAppUpdateInput): B2BApp

  """ Update multiple B2BApp items by ID. """
  updateB2BApps(data: [B2BAppsUpdateInput]): [B2BApp]

  """ Delete a single B2BApp item by ID. """
  deleteB2BApp(id: ID!): B2BApp

  """ Delete multiple B2BApp items by ID. """
  deleteB2BApps(ids: [ID!]): [B2BApp]

  """ Create a single B2BAppContextHistoryRecord item. """
  createB2BAppContextHistoryRecord(data: B2BAppContextHistoryRecordCreateInput): B2BAppContextHistoryRecord

  """ Create multiple B2BAppContextHistoryRecord items. """
  createB2BAppContextHistoryRecords(data: [B2BAppContextHistoryRecordsCreateInput]): [B2BAppContextHistoryRecord]

  """ Update a single B2BAppContextHistoryRecord item by ID. """
  updateB2BAppContextHistoryRecord(id: ID!, data: B2BAppContextHistoryRecordUpdateInput): B2BAppContextHistoryRecord

  """ Update multiple B2BAppContextHistoryRecord items by ID. """
  updateB2BAppContextHistoryRecords(data: [B2BAppContextHistoryRecordsUpdateInput]): [B2BAppContextHistoryRecord]

  """ Delete a single B2BAppContextHistoryRecord item by ID. """
  deleteB2BAppContextHistoryRecord(id: ID!): B2BAppContextHistoryRecord

  """ Delete multiple B2BAppContextHistoryRecord items by ID. """
  deleteB2BAppContextHistoryRecords(ids: [ID!]): [B2BAppContextHistoryRecord]

  """ Create a single B2BAppContext item. """
  createB2BAppContext(data: B2BAppContextCreateInput): B2BAppContext

  """ Create multiple B2BAppContext items. """
  createB2BAppContexts(data: [B2BAppContextsCreateInput]): [B2BAppContext]

  """ Update a single B2BAppContext item by ID. """
  updateB2BAppContext(id: ID!, data: B2BAppContextUpdateInput): B2BAppContext

  """ Update multiple B2BAppContext items by ID. """
  updateB2BAppContexts(data: [B2BAppContextsUpdateInput]): [B2BAppContext]

  """ Delete a single B2BAppContext item by ID. """
  deleteB2BAppContext(id: ID!): B2BAppContext

  """ Delete multiple B2BAppContext items by ID. """
  deleteB2BAppContexts(ids: [ID!]): [B2BAppContext]

  """ Create a single B2BAppAccessRightHistoryRecord item. """
  createB2BAppAccessRightHistoryRecord(data: B2BAppAccessRightHistoryRecordCreateInput): B2BAppAccessRightHistoryRecord

  """ Create multiple B2BAppAccessRightHistoryRecord items. """
  createB2BAppAccessRightHistoryRecords(data: [B2BAppAccessRightHistoryRecordsCreateInput]): [B2BAppAccessRightHistoryRecord]

  """ Update a single B2BAppAccessRightHistoryRecord item by ID. """
  updateB2BAppAccessRightHistoryRecord(id: ID!, data: B2BAppAccessRightHistoryRecordUpdateInput): B2BAppAccessRightHistoryRecord

  """ Update multiple B2BAppAccessRightHistoryRecord items by ID. """
  updateB2BAppAccessRightHistoryRecords(data: [B2BAppAccessRightHistoryRecordsUpdateInput]): [B2BAppAccessRightHistoryRecord]

  """ Delete a single B2BAppAccessRightHistoryRecord item by ID. """
  deleteB2BAppAccessRightHistoryRecord(id: ID!): B2BAppAccessRightHistoryRecord

  """ Delete multiple B2BAppAccessRightHistoryRecord items by ID. """
  deleteB2BAppAccessRightHistoryRecords(ids: [ID!]): [B2BAppAccessRightHistoryRecord]

  """ Create a single B2BAppAccessRight item. """
  createB2BAppAccessRight(data: B2BAppAccessRightCreateInput): B2BAppAccessRight

  """ Create multiple B2BAppAccessRight items. """
  createB2BAppAccessRights(data: [B2BAppAccessRightsCreateInput]): [B2BAppAccessRight]

  """ Update a single B2BAppAccessRight item by ID. """
  updateB2BAppAccessRight(id: ID!, data: B2BAppAccessRightUpdateInput): B2BAppAccessRight

  """ Update multiple B2BAppAccessRight items by ID. """
  updateB2BAppAccessRights(data: [B2BAppAccessRightsUpdateInput]): [B2BAppAccessRight]

  """ Delete a single B2BAppAccessRight item by ID. """
  deleteB2BAppAccessRight(id: ID!): B2BAppAccessRight

  """ Delete multiple B2BAppAccessRight items by ID. """
  deleteB2BAppAccessRights(ids: [ID!]): [B2BAppAccessRight]

  """ Create a single B2CAppHistoryRecord item. """
  createB2CAppHistoryRecord(data: B2CAppHistoryRecordCreateInput): B2CAppHistoryRecord

  """ Create multiple B2CAppHistoryRecord items. """
  createB2CAppHistoryRecords(data: [B2CAppHistoryRecordsCreateInput]): [B2CAppHistoryRecord]

  """ Update a single B2CAppHistoryRecord item by ID. """
  updateB2CAppHistoryRecord(id: ID!, data: B2CAppHistoryRecordUpdateInput): B2CAppHistoryRecord

  """ Update multiple B2CAppHistoryRecord items by ID. """
  updateB2CAppHistoryRecords(data: [B2CAppHistoryRecordsUpdateInput]): [B2CAppHistoryRecord]

  """ Delete a single B2CAppHistoryRecord item by ID. """
  deleteB2CAppHistoryRecord(id: ID!): B2CAppHistoryRecord

  """ Delete multiple B2CAppHistoryRecord items by ID. """
  deleteB2CAppHistoryRecords(ids: [ID!]): [B2CAppHistoryRecord]

  """ Create a single B2CApp item. """
  createB2CApp(data: B2CAppCreateInput): B2CApp

  """ Create multiple B2CApp items. """
  createB2CApps(data: [B2CAppsCreateInput]): [B2CApp]

  """ Update a single B2CApp item by ID. """
  updateB2CApp(id: ID!, data: B2CAppUpdateInput): B2CApp

  """ Update multiple B2CApp items by ID. """
  updateB2CApps(data: [B2CAppsUpdateInput]): [B2CApp]

  """ Delete a single B2CApp item by ID. """
  deleteB2CApp(id: ID!): B2CApp

  """ Delete multiple B2CApp items by ID. """
  deleteB2CApps(ids: [ID!]): [B2CApp]

  """ Create a single B2CAppAccessRightHistoryRecord item. """
  createB2CAppAccessRightHistoryRecord(data: B2CAppAccessRightHistoryRecordCreateInput): B2CAppAccessRightHistoryRecord

  """ Create multiple B2CAppAccessRightHistoryRecord items. """
  createB2CAppAccessRightHistoryRecords(data: [B2CAppAccessRightHistoryRecordsCreateInput]): [B2CAppAccessRightHistoryRecord]

  """ Update a single B2CAppAccessRightHistoryRecord item by ID. """
  updateB2CAppAccessRightHistoryRecord(id: ID!, data: B2CAppAccessRightHistoryRecordUpdateInput): B2CAppAccessRightHistoryRecord

  """ Update multiple B2CAppAccessRightHistoryRecord items by ID. """
  updateB2CAppAccessRightHistoryRecords(data: [B2CAppAccessRightHistoryRecordsUpdateInput]): [B2CAppAccessRightHistoryRecord]

  """ Delete a single B2CAppAccessRightHistoryRecord item by ID. """
  deleteB2CAppAccessRightHistoryRecord(id: ID!): B2CAppAccessRightHistoryRecord

  """ Delete multiple B2CAppAccessRightHistoryRecord items by ID. """
  deleteB2CAppAccessRightHistoryRecords(ids: [ID!]): [B2CAppAccessRightHistoryRecord]

  """ Create a single B2CAppAccessRight item. """
  createB2CAppAccessRight(data: B2CAppAccessRightCreateInput): B2CAppAccessRight

  """ Create multiple B2CAppAccessRight items. """
  createB2CAppAccessRights(data: [B2CAppAccessRightsCreateInput]): [B2CAppAccessRight]

  """ Update a single B2CAppAccessRight item by ID. """
  updateB2CAppAccessRight(id: ID!, data: B2CAppAccessRightUpdateInput): B2CAppAccessRight

  """ Update multiple B2CAppAccessRight items by ID. """
  updateB2CAppAccessRights(data: [B2CAppAccessRightsUpdateInput]): [B2CAppAccessRight]

  """ Delete a single B2CAppAccessRight item by ID. """
  deleteB2CAppAccessRight(id: ID!): B2CAppAccessRight

  """ Delete multiple B2CAppAccessRight items by ID. """
  deleteB2CAppAccessRights(ids: [ID!]): [B2CAppAccessRight]

  """ Create a single B2CAppBuildHistoryRecord item. """
  createB2CAppBuildHistoryRecord(data: B2CAppBuildHistoryRecordCreateInput): B2CAppBuildHistoryRecord

  """ Create multiple B2CAppBuildHistoryRecord items. """
  createB2CAppBuildHistoryRecords(data: [B2CAppBuildHistoryRecordsCreateInput]): [B2CAppBuildHistoryRecord]

  """ Update a single B2CAppBuildHistoryRecord item by ID. """
  updateB2CAppBuildHistoryRecord(id: ID!, data: B2CAppBuildHistoryRecordUpdateInput): B2CAppBuildHistoryRecord

  """ Update multiple B2CAppBuildHistoryRecord items by ID. """
  updateB2CAppBuildHistoryRecords(data: [B2CAppBuildHistoryRecordsUpdateInput]): [B2CAppBuildHistoryRecord]

  """ Delete a single B2CAppBuildHistoryRecord item by ID. """
  deleteB2CAppBuildHistoryRecord(id: ID!): B2CAppBuildHistoryRecord

  """ Delete multiple B2CAppBuildHistoryRecord items by ID. """
  deleteB2CAppBuildHistoryRecords(ids: [ID!]): [B2CAppBuildHistoryRecord]

  """ Create a single B2CAppBuild item. """
  createB2CAppBuild(data: B2CAppBuildCreateInput): B2CAppBuild

  """ Create multiple B2CAppBuild items. """
  createB2CAppBuilds(data: [B2CAppBuildsCreateInput]): [B2CAppBuild]

  """ Update a single B2CAppBuild item by ID. """
  updateB2CAppBuild(id: ID!, data: B2CAppBuildUpdateInput): B2CAppBuild

  """ Update multiple B2CAppBuild items by ID. """
  updateB2CAppBuilds(data: [B2CAppBuildsUpdateInput]): [B2CAppBuild]

  """ Delete a single B2CAppBuild item by ID. """
  deleteB2CAppBuild(id: ID!): B2CAppBuild

  """ Delete multiple B2CAppBuild items by ID. """
  deleteB2CAppBuilds(ids: [ID!]): [B2CAppBuild]

  """ Create a single B2CAppPropertyHistoryRecord item. """
  createB2CAppPropertyHistoryRecord(data: B2CAppPropertyHistoryRecordCreateInput): B2CAppPropertyHistoryRecord

  """ Create multiple B2CAppPropertyHistoryRecord items. """
  createB2CAppPropertyHistoryRecords(data: [B2CAppPropertyHistoryRecordsCreateInput]): [B2CAppPropertyHistoryRecord]

  """ Update a single B2CAppPropertyHistoryRecord item by ID. """
  updateB2CAppPropertyHistoryRecord(id: ID!, data: B2CAppPropertyHistoryRecordUpdateInput): B2CAppPropertyHistoryRecord

  """ Update multiple B2CAppPropertyHistoryRecord items by ID. """
  updateB2CAppPropertyHistoryRecords(data: [B2CAppPropertyHistoryRecordsUpdateInput]): [B2CAppPropertyHistoryRecord]

  """ Delete a single B2CAppPropertyHistoryRecord item by ID. """
  deleteB2CAppPropertyHistoryRecord(id: ID!): B2CAppPropertyHistoryRecord

  """ Delete multiple B2CAppPropertyHistoryRecord items by ID. """
  deleteB2CAppPropertyHistoryRecords(ids: [ID!]): [B2CAppPropertyHistoryRecord]

  """ Create a single B2CAppProperty item. """
  createB2CAppProperty(data: B2CAppPropertyCreateInput): B2CAppProperty

  """ Create multiple B2CAppProperty items. """
  createB2CAppProperties(data: [B2CAppPropertiesCreateInput]): [B2CAppProperty]

  """ Update a single B2CAppProperty item by ID. """
  updateB2CAppProperty(id: ID!, data: B2CAppPropertyUpdateInput): B2CAppProperty

  """ Update multiple B2CAppProperty items by ID. """
  updateB2CAppProperties(data: [B2CAppPropertiesUpdateInput]): [B2CAppProperty]

  """ Delete a single B2CAppProperty item by ID. """
  deleteB2CAppProperty(id: ID!): B2CAppProperty

  """ Delete multiple B2CAppProperty items by ID. """
  deleteB2CAppProperties(ids: [ID!]): [B2CAppProperty]

  """ Create a single B2BAppPromoBlockHistoryRecord item. """
  createB2BAppPromoBlockHistoryRecord(data: B2BAppPromoBlockHistoryRecordCreateInput): B2BAppPromoBlockHistoryRecord

  """ Create multiple B2BAppPromoBlockHistoryRecord items. """
  createB2BAppPromoBlockHistoryRecords(data: [B2BAppPromoBlockHistoryRecordsCreateInput]): [B2BAppPromoBlockHistoryRecord]

  """ Update a single B2BAppPromoBlockHistoryRecord item by ID. """
  updateB2BAppPromoBlockHistoryRecord(id: ID!, data: B2BAppPromoBlockHistoryRecordUpdateInput): B2BAppPromoBlockHistoryRecord

  """ Update multiple B2BAppPromoBlockHistoryRecord items by ID. """
  updateB2BAppPromoBlockHistoryRecords(data: [B2BAppPromoBlockHistoryRecordsUpdateInput]): [B2BAppPromoBlockHistoryRecord]

  """ Delete a single B2BAppPromoBlockHistoryRecord item by ID. """
  deleteB2BAppPromoBlockHistoryRecord(id: ID!): B2BAppPromoBlockHistoryRecord

  """ Delete multiple B2BAppPromoBlockHistoryRecord items by ID. """
  deleteB2BAppPromoBlockHistoryRecords(ids: [ID!]): [B2BAppPromoBlockHistoryRecord]

  """ Create a single B2BAppPromoBlock item. """
  createB2BAppPromoBlock(data: B2BAppPromoBlockCreateInput): B2BAppPromoBlock

  """ Create multiple B2BAppPromoBlock items. """
  createB2BAppPromoBlocks(data: [B2BAppPromoBlocksCreateInput]): [B2BAppPromoBlock]

  """ Update a single B2BAppPromoBlock item by ID. """
  updateB2BAppPromoBlock(id: ID!, data: B2BAppPromoBlockUpdateInput): B2BAppPromoBlock

  """ Update multiple B2BAppPromoBlock items by ID. """
  updateB2BAppPromoBlocks(data: [B2BAppPromoBlocksUpdateInput]): [B2BAppPromoBlock]

  """ Delete a single B2BAppPromoBlock item by ID. """
  deleteB2BAppPromoBlock(id: ID!): B2BAppPromoBlock

  """ Delete multiple B2BAppPromoBlock items by ID. """
  deleteB2BAppPromoBlocks(ids: [ID!]): [B2BAppPromoBlock]

  """ Create a single ExternalReportHistoryRecord item. """
  createExternalReportHistoryRecord(data: ExternalReportHistoryRecordCreateInput): ExternalReportHistoryRecord

  """ Create multiple ExternalReportHistoryRecord items. """
  createExternalReportHistoryRecords(data: [ExternalReportHistoryRecordsCreateInput]): [ExternalReportHistoryRecord]

  """ Update a single ExternalReportHistoryRecord item by ID. """
  updateExternalReportHistoryRecord(id: ID!, data: ExternalReportHistoryRecordUpdateInput): ExternalReportHistoryRecord

  """ Update multiple ExternalReportHistoryRecord items by ID. """
  updateExternalReportHistoryRecords(data: [ExternalReportHistoryRecordsUpdateInput]): [ExternalReportHistoryRecord]

  """ Delete a single ExternalReportHistoryRecord item by ID. """
  deleteExternalReportHistoryRecord(id: ID!): ExternalReportHistoryRecord

  """ Delete multiple ExternalReportHistoryRecord items by ID. """
  deleteExternalReportHistoryRecords(ids: [ID!]): [ExternalReportHistoryRecord]

  """ Create a single ExternalReport item. """
  createExternalReport(data: ExternalReportCreateInput): ExternalReport

  """ Create multiple ExternalReport items. """
  createExternalReports(data: [ExternalReportsCreateInput]): [ExternalReport]

  """ Update a single ExternalReport item by ID. """
  updateExternalReport(id: ID!, data: ExternalReportUpdateInput): ExternalReport

  """ Update multiple ExternalReport items by ID. """
  updateExternalReports(data: [ExternalReportsUpdateInput]): [ExternalReport]

  """ Delete a single ExternalReport item by ID. """
  deleteExternalReport(id: ID!): ExternalReport

  """ Delete multiple ExternalReport items by ID. """
  deleteExternalReports(ids: [ID!]): [ExternalReport]

  """ Create a single PropertyScopeHistoryRecord item. """
  createPropertyScopeHistoryRecord(data: PropertyScopeHistoryRecordCreateInput): PropertyScopeHistoryRecord

  """ Create multiple PropertyScopeHistoryRecord items. """
  createPropertyScopeHistoryRecords(data: [PropertyScopeHistoryRecordsCreateInput]): [PropertyScopeHistoryRecord]

  """ Update a single PropertyScopeHistoryRecord item by ID. """
  updatePropertyScopeHistoryRecord(id: ID!, data: PropertyScopeHistoryRecordUpdateInput): PropertyScopeHistoryRecord

  """ Update multiple PropertyScopeHistoryRecord items by ID. """
  updatePropertyScopeHistoryRecords(data: [PropertyScopeHistoryRecordsUpdateInput]): [PropertyScopeHistoryRecord]

  """ Delete a single PropertyScopeHistoryRecord item by ID. """
  deletePropertyScopeHistoryRecord(id: ID!): PropertyScopeHistoryRecord

  """ Delete multiple PropertyScopeHistoryRecord items by ID. """
  deletePropertyScopeHistoryRecords(ids: [ID!]): [PropertyScopeHistoryRecord]

  """ Create a single PropertyScope item. """
  createPropertyScope(data: PropertyScopeCreateInput): PropertyScope

  """ Create multiple PropertyScope items. """
  createPropertyScopes(data: [PropertyScopesCreateInput]): [PropertyScope]

  """ Update a single PropertyScope item by ID. """
  updatePropertyScope(id: ID!, data: PropertyScopeUpdateInput): PropertyScope

  """ Update multiple PropertyScope items by ID. """
  updatePropertyScopes(data: [PropertyScopesUpdateInput]): [PropertyScope]

  """ Delete a single PropertyScope item by ID. """
  deletePropertyScope(id: ID!): PropertyScope

  """ Delete multiple PropertyScope items by ID. """
  deletePropertyScopes(ids: [ID!]): [PropertyScope]

  """ Create a single PropertyScopeOrganizationEmployeeHistoryRecord item. """
  createPropertyScopeOrganizationEmployeeHistoryRecord(data: PropertyScopeOrganizationEmployeeHistoryRecordCreateInput): PropertyScopeOrganizationEmployeeHistoryRecord

  """ Create multiple PropertyScopeOrganizationEmployeeHistoryRecord items. 
  """
  createPropertyScopeOrganizationEmployeeHistoryRecords(data: [PropertyScopeOrganizationEmployeeHistoryRecordsCreateInput]): [PropertyScopeOrganizationEmployeeHistoryRecord]

  """ Update a single PropertyScopeOrganizationEmployeeHistoryRecord item by ID. 
  """
  updatePropertyScopeOrganizationEmployeeHistoryRecord(id: ID!, data: PropertyScopeOrganizationEmployeeHistoryRecordUpdateInput): PropertyScopeOrganizationEmployeeHistoryRecord

  """ Update multiple PropertyScopeOrganizationEmployeeHistoryRecord items by ID. 
  """
  updatePropertyScopeOrganizationEmployeeHistoryRecords(data: [PropertyScopeOrganizationEmployeeHistoryRecordsUpdateInput]): [PropertyScopeOrganizationEmployeeHistoryRecord]

  """ Delete a single PropertyScopeOrganizationEmployeeHistoryRecord item by ID. 
  """
  deletePropertyScopeOrganizationEmployeeHistoryRecord(id: ID!): PropertyScopeOrganizationEmployeeHistoryRecord

  """ Delete multiple PropertyScopeOrganizationEmployeeHistoryRecord items by ID. 
  """
  deletePropertyScopeOrganizationEmployeeHistoryRecords(ids: [ID!]): [PropertyScopeOrganizationEmployeeHistoryRecord]

  """ Create a single PropertyScopeOrganizationEmployee item. """
  createPropertyScopeOrganizationEmployee(data: PropertyScopeOrganizationEmployeeCreateInput): PropertyScopeOrganizationEmployee

  """ Create multiple PropertyScopeOrganizationEmployee items. """
  createPropertyScopeOrganizationEmployees(data: [PropertyScopeOrganizationEmployeesCreateInput]): [PropertyScopeOrganizationEmployee]

  """ Update a single PropertyScopeOrganizationEmployee item by ID. """
  updatePropertyScopeOrganizationEmployee(id: ID!, data: PropertyScopeOrganizationEmployeeUpdateInput): PropertyScopeOrganizationEmployee

  """ Update multiple PropertyScopeOrganizationEmployee items by ID. """
  updatePropertyScopeOrganizationEmployees(data: [PropertyScopeOrganizationEmployeesUpdateInput]): [PropertyScopeOrganizationEmployee]

  """ Delete a single PropertyScopeOrganizationEmployee item by ID. """
  deletePropertyScopeOrganizationEmployee(id: ID!): PropertyScopeOrganizationEmployee

  """ Delete multiple PropertyScopeOrganizationEmployee items by ID. """
  deletePropertyScopeOrganizationEmployees(ids: [ID!]): [PropertyScopeOrganizationEmployee]

  """ Create a single PropertyScopePropertyHistoryRecord item. """
  createPropertyScopePropertyHistoryRecord(data: PropertyScopePropertyHistoryRecordCreateInput): PropertyScopePropertyHistoryRecord

  """ Create multiple PropertyScopePropertyHistoryRecord items. """
  createPropertyScopePropertyHistoryRecords(data: [PropertyScopePropertyHistoryRecordsCreateInput]): [PropertyScopePropertyHistoryRecord]

  """ Update a single PropertyScopePropertyHistoryRecord item by ID. """
  updatePropertyScopePropertyHistoryRecord(id: ID!, data: PropertyScopePropertyHistoryRecordUpdateInput): PropertyScopePropertyHistoryRecord

  """ Update multiple PropertyScopePropertyHistoryRecord items by ID. """
  updatePropertyScopePropertyHistoryRecords(data: [PropertyScopePropertyHistoryRecordsUpdateInput]): [PropertyScopePropertyHistoryRecord]

  """ Delete a single PropertyScopePropertyHistoryRecord item by ID. """
  deletePropertyScopePropertyHistoryRecord(id: ID!): PropertyScopePropertyHistoryRecord

  """ Delete multiple PropertyScopePropertyHistoryRecord items by ID. """
  deletePropertyScopePropertyHistoryRecords(ids: [ID!]): [PropertyScopePropertyHistoryRecord]

  """ Create a single PropertyScopeProperty item. """
  createPropertyScopeProperty(data: PropertyScopePropertyCreateInput): PropertyScopeProperty

  """ Create multiple PropertyScopeProperty items. """
  createPropertyScopeProperties(data: [PropertyScopePropertiesCreateInput]): [PropertyScopeProperty]

  """ Update a single PropertyScopeProperty item by ID. """
  updatePropertyScopeProperty(id: ID!, data: PropertyScopePropertyUpdateInput): PropertyScopeProperty

  """ Update multiple PropertyScopeProperty items by ID. """
  updatePropertyScopeProperties(data: [PropertyScopePropertiesUpdateInput]): [PropertyScopeProperty]

  """ Delete a single PropertyScopeProperty item by ID. """
  deletePropertyScopeProperty(id: ID!): PropertyScopeProperty

  """ Delete multiple PropertyScopeProperty items by ID. """
  deletePropertyScopeProperties(ids: [ID!]): [PropertyScopeProperty]

  """ Create a single AssigneeScopeHistoryRecord item. """
  createAssigneeScopeHistoryRecord(data: AssigneeScopeHistoryRecordCreateInput): AssigneeScopeHistoryRecord

  """ Create multiple AssigneeScopeHistoryRecord items. """
  createAssigneeScopeHistoryRecords(data: [AssigneeScopeHistoryRecordsCreateInput]): [AssigneeScopeHistoryRecord]

  """ Update a single AssigneeScopeHistoryRecord item by ID. """
  updateAssigneeScopeHistoryRecord(id: ID!, data: AssigneeScopeHistoryRecordUpdateInput): AssigneeScopeHistoryRecord

  """ Update multiple AssigneeScopeHistoryRecord items by ID. """
  updateAssigneeScopeHistoryRecords(data: [AssigneeScopeHistoryRecordsUpdateInput]): [AssigneeScopeHistoryRecord]

  """ Delete a single AssigneeScopeHistoryRecord item by ID. """
  deleteAssigneeScopeHistoryRecord(id: ID!): AssigneeScopeHistoryRecord

  """ Delete multiple AssigneeScopeHistoryRecord items by ID. """
  deleteAssigneeScopeHistoryRecords(ids: [ID!]): [AssigneeScopeHistoryRecord]

  """ Create a single AssigneeScope item. """
  createAssigneeScope(data: AssigneeScopeCreateInput): AssigneeScope

  """ Create multiple AssigneeScope items. """
  createAssigneeScopes(data: [AssigneeScopesCreateInput]): [AssigneeScope]

  """ Update a single AssigneeScope item by ID. """
  updateAssigneeScope(id: ID!, data: AssigneeScopeUpdateInput): AssigneeScope

  """ Update multiple AssigneeScope items by ID. """
  updateAssigneeScopes(data: [AssigneeScopesUpdateInput]): [AssigneeScope]

  """ Delete a single AssigneeScope item by ID. """
  deleteAssigneeScope(id: ID!): AssigneeScope

  """ Delete multiple AssigneeScope items by ID. """
  deleteAssigneeScopes(ids: [ID!]): [AssigneeScope]

  """ Create a single WebhookHistoryRecord item. """
  createWebhookHistoryRecord(data: WebhookHistoryRecordCreateInput): WebhookHistoryRecord

  """ Create multiple WebhookHistoryRecord items. """
  createWebhookHistoryRecords(data: [WebhookHistoryRecordsCreateInput]): [WebhookHistoryRecord]

  """ Update a single WebhookHistoryRecord item by ID. """
  updateWebhookHistoryRecord(id: ID!, data: WebhookHistoryRecordUpdateInput): WebhookHistoryRecord

  """ Update multiple WebhookHistoryRecord items by ID. """
  updateWebhookHistoryRecords(data: [WebhookHistoryRecordsUpdateInput]): [WebhookHistoryRecord]

  """ Delete a single WebhookHistoryRecord item by ID. """
  deleteWebhookHistoryRecord(id: ID!): WebhookHistoryRecord

  """ Delete multiple WebhookHistoryRecord items by ID. """
  deleteWebhookHistoryRecords(ids: [ID!]): [WebhookHistoryRecord]

  """ Create a single Webhook item. """
  createWebhook(data: WebhookCreateInput): Webhook

  """ Create multiple Webhook items. """
  createWebhooks(data: [WebhooksCreateInput]): [Webhook]

  """ Update a single Webhook item by ID. """
  updateWebhook(id: ID!, data: WebhookUpdateInput): Webhook

  """ Update multiple Webhook items by ID. """
  updateWebhooks(data: [WebhooksUpdateInput]): [Webhook]

  """ Delete a single Webhook item by ID. """
  deleteWebhook(id: ID!): Webhook

  """ Delete multiple Webhook items by ID. """
  deleteWebhooks(ids: [ID!]): [Webhook]

  """ Create a single WebhookSubscriptionHistoryRecord item. """
  createWebhookSubscriptionHistoryRecord(data: WebhookSubscriptionHistoryRecordCreateInput): WebhookSubscriptionHistoryRecord

  """ Create multiple WebhookSubscriptionHistoryRecord items. """
  createWebhookSubscriptionHistoryRecords(data: [WebhookSubscriptionHistoryRecordsCreateInput]): [WebhookSubscriptionHistoryRecord]

  """ Update a single WebhookSubscriptionHistoryRecord item by ID. """
  updateWebhookSubscriptionHistoryRecord(id: ID!, data: WebhookSubscriptionHistoryRecordUpdateInput): WebhookSubscriptionHistoryRecord

  """ Update multiple WebhookSubscriptionHistoryRecord items by ID. """
  updateWebhookSubscriptionHistoryRecords(data: [WebhookSubscriptionHistoryRecordsUpdateInput]): [WebhookSubscriptionHistoryRecord]

  """ Delete a single WebhookSubscriptionHistoryRecord item by ID. """
  deleteWebhookSubscriptionHistoryRecord(id: ID!): WebhookSubscriptionHistoryRecord

  """ Delete multiple WebhookSubscriptionHistoryRecord items by ID. """
  deleteWebhookSubscriptionHistoryRecords(ids: [ID!]): [WebhookSubscriptionHistoryRecord]

  """ Create a single WebhookSubscription item. """
  createWebhookSubscription(data: WebhookSubscriptionCreateInput): WebhookSubscription

  """ Create multiple WebhookSubscription items. """
  createWebhookSubscriptions(data: [WebhookSubscriptionsCreateInput]): [WebhookSubscription]

  """ Update a single WebhookSubscription item by ID. """
  updateWebhookSubscription(id: ID!, data: WebhookSubscriptionUpdateInput): WebhookSubscription

  """ Update multiple WebhookSubscription items by ID. """
  updateWebhookSubscriptions(data: [WebhookSubscriptionsUpdateInput]): [WebhookSubscription]

  """ Delete a single WebhookSubscription item by ID. """
  deleteWebhookSubscription(id: ID!): WebhookSubscription

  """ Delete multiple WebhookSubscription items by ID. """
  deleteWebhookSubscriptions(ids: [ID!]): [WebhookSubscription]

  """
  Registers new user and sends notification
  
  User will be registered only in case of correct provided token of phone confirmation action. After successful registration, phone confirmation action will be marked as completed and will not be allowed for further usage
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "registerNewUser",
    "variable": [
      "data",
      "confirmPhoneActionToken"
    ],
    "code": "BAD_USER_INPUT",
    "type": "UNABLE_TO_FIND_CONFIRM_PHONE_ACTION",
    "message": "Unable to find confirm phone action",
    "messageForUser": "api.user.registerNewUser.UNABLE_TO_FIND_CONFIRM_PHONE_ACTION"
  }`
  
  `{
    "mutation": "registerNewUser",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_PHONE_FORMAT",
    "message": "Wrong format of provided phone number",
    "messageForUser": "api.common.WRONG_PHONE_FORMAT",
    "correctExample": "+79991234567"
  }`
  
  `{
    "mutation": "registerNewUser",
    "variable": [
      "data",
      "password"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_FORMAT",
    "message": "Password length is less then {min} characters",
    "messageForUser": "api.user.PASSWORD_IS_TOO_SHORT",
    "messageInterpolation": {
      "min": 8
    }
  }`
  
  `{
    "mutation": "registerNewUser",
    "variable": [
      "data",
      "password"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_VALUE",
    "message": "The password is too simple. We found it in the list of stolen passwords. You need to use something more secure",
    "messageForUser": "api.user.PASSWORD_IS_FREQUENTLY_USED"
  }`
  
  `{
    "mutation": "registerNewUser",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "NOT_UNIQUE",
    "message": "User with specified phone already exists",
    "messageForUser": "api.user.registerNewUser.USER_WITH_SPECIFIED_PHONE_ALREADY_EXISTS"
  }`
  
  `{
    "mutation": "registerNewUser",
    "variable": [
      "data",
      "email"
    ],
    "code": "BAD_USER_INPUT",
    "type": "NOT_UNIQUE",
    "message": "User with specified email already exists",
    "messageForUser": "api.user.registerNewUser.USER_WITH_SPECIFIED_EMAIL_ALREADY_EXISTS"
  }`
  
  `{
    "mutation": "registerNewUser",
    "code": "INTERNAL_ERROR",
    "type": "UNABLE_TO_CREATE_USER",
    "message": "Unable to create user",
    "messageForUser": "api.user.registerNewUser.UNABLE_TO_CREATE_USER"
  }`
  """
  registerNewUser(data: RegisterNewUserInput!): User
  authenticateUserWithPhoneAndPassword(data: AuthenticateUserWithPhoneAndPasswordInput!): AuthenticateUserWithPhoneAndPasswordOutput

  """
  Beginning of a multi-step process of a password recovery.
  1. Start recovery and get token to confirm phone number
  2. Confirm phone number
  3. Call `changePasswordWithToken` mutation
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "startPasswordRecovery",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "USER_BY_PHONE_NOT_FOUND",
    "message": "Unable to find user with specified phone",
    "messageForUser": "api.user.startPasswordRecovery.USER_NOT_FOUND"
  }`
  
  `{
    "mutation": "startPasswordRecovery",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "MULTIPLE_USERS_FOUND",
    "message": "Unable to find exact one user to start password recovery",
    "messageForUser": "api.user.startPasswordRecovery.MULTIPLE_USERS_FOUND"
  }`
  
  `{
    "mutation": "startPasswordRecovery",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_PHONE_FORMAT",
    "message": "Wrong format of provided phone number",
    "correctExample": "+79991234567",
    "messageForUser": "api.common.WRONG_PHONE_FORMAT"
  }`
  """
  startPasswordRecovery(data: StartPasswordRecoveryInput!): StartPasswordRecoveryOutput

  """
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "changePasswordWithToken",
    "variable": [
      "data",
      "password"
    ],
    "code": "BAD_USER_INPUT",
    "type": "PASSWORD_IS_TOO_SHORT",
    "message": "Password length is less then {min} characters",
    "messageForUser": "api.user.PASSWORD_IS_TOO_SHORT",
    "messageInterpolation": {
      "min": 8
    }
  }`
  
  `{
    "mutation": "changePasswordWithToken",
    "variable": [
      "data",
      "password"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_VALUE",
    "message": "The password is too simple. We found it in the list of stolen passwords. You need to use something more secure",
    "messageForUser": "api.user.PASSWORD_IS_FREQUENTLY_USED"
  }`
  
  `{
    "mutation": "changePasswordWithToken",
    "variable": [
      "data",
      "token"
    ],
    "code": "BAD_USER_INPUT",
    "type": "TOKEN_NOT_FOUND",
    "message": "Unable to find non-expired ConfirmPhoneAction by specified token",
    "messageForUser": "api.user.changePasswordWithToken.TOKEN_NOT_FOUND"
  }`
  
  `{
    "mutation": "changePasswordWithToken",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "USER_NOT_FOUND",
    "message": "Unable to find user with specified phone",
    "messageForUser": "api.user.changePasswordWithToken.USER_NOT_FOUND"
  }`
  """
  changePasswordWithToken(data: ChangePasswordWithTokenInput!): ChangePasswordWithTokenOutput

  """
  Send confirmation phone SMS message and return confirmation token. You can use the token for completeConfirmPhoneAction mutation. And then use the token in other mutations to prove that the phone number is verified
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "variable": [
      "data",
      "captcha"
    ],
    "code": "BAD_USER_INPUT",
    "type": "CAPTCHA_CHECK_FAILED",
    "message": "Failed to check CAPTCHA",
    "messageForUser": "api.user.CAPTCHA_CHECK_FAILED"
  }`
  
  `{
    "mutation": "startConfirmPhoneAction",
    "variable": [
      "data",
      "phone"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_PHONE_FORMAT",
    "message": "Wrong format of provided phone number",
    "correctExample": "+79991234567",
    "messageForUser": "api.common.WRONG_PHONE_FORMAT"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "TOO_MANY_REQUESTS",
    "message": "You have to wait {secondsRemaining} seconds to be able to send request again",
    "messageForUser": "api.user.TOO_MANY_REQUESTS"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "SMS_FOR_PHONE_DAY_LIMIT_REACHED",
    "message": "Too many sms requests for this phone number. Try again tomorrow"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "SMS_FOR_IP_DAY_LIMIT_REACHED",
    "message": "Too many sms requests from this ip address. Try again tomorrow"
  }`
  """
  startConfirmPhoneAction(data: StartConfirmPhoneActionInput!): StartConfirmPhoneActionOutput

  """
  Resend the confirm phone SMS message for existing token
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "variable": [
      "data",
      "captcha"
    ],
    "code": "BAD_USER_INPUT",
    "type": "CAPTCHA_CHECK_FAILED",
    "message": "Failed to check CAPTCHA",
    "messageForUser": "api.user.CAPTCHA_CHECK_FAILED"
  }`
  
  `{
    "variable": [
      "data",
      "token"
    ],
    "code": "BAD_USER_INPUT",
    "type": "UNABLE_TO_FIND_CONFIRM_PHONE_ACTION",
    "message": "Confirm phone action was expired or it could not be found. Try to initiate phone confirmation again",
    "messageForUser": "api.user.UNABLE_TO_FIND_CONFIRM_PHONE_ACTION"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "TOO_MANY_REQUESTS",
    "message": "You have to wait {secondsRemaining} seconds to be able to send request again",
    "messageForUser": "api.user.TOO_MANY_REQUESTS"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "SMS_FOR_PHONE_DAY_LIMIT_REACHED",
    "message": "Too many sms requests for this phone number. Try again tomorrow"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "SMS_FOR_IP_DAY_LIMIT_REACHED",
    "message": "Too many sms requests from this ip address. Try again tomorrow"
  }`
  """
  resendConfirmPhoneActionSms(data: ResendConfirmPhoneActionSmsInput!): ResendConfirmPhoneActionSmsOutput

  """
  The final step of a phone number confirmation. You should use the token from startConfirmPhoneAction and a secret code from the confirm phone SMS message. After success call, you can use the token in other mutations to prove that you have access to the phone number
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "variable": [
      "data",
      "captcha"
    ],
    "code": "BAD_USER_INPUT",
    "type": "CAPTCHA_CHECK_FAILED",
    "message": "Failed to check CAPTCHA",
    "messageForUser": "api.user.CAPTCHA_CHECK_FAILED"
  }`
  
  `{
    "variable": [
      "data",
      "token"
    ],
    "code": "BAD_USER_INPUT",
    "type": "UNABLE_TO_FIND_CONFIRM_PHONE_ACTION",
    "message": "Confirm phone action was expired or it could not be found. Try to initiate phone confirmation again",
    "messageForUser": "api.user.UNABLE_TO_FIND_CONFIRM_PHONE_ACTION"
  }`
  
  `{
    "mutation": "completeConfirmPhoneAction",
    "variable": [
      "data",
      "smsCode"
    ],
    "code": "BAD_USER_INPUT",
    "type": "SMS_CODE_EXPIRED",
    "message": "SMS code expired. Try to initiate phone confirmation again",
    "messageForUser": "api.user.completeConfirmPhoneAction.SMS_CODE_EXPIRED"
  }`
  
  `{
    "mutation": "completeConfirmPhoneAction",
    "variable": [
      "data",
      "smsCode"
    ],
    "code": "BAD_USER_INPUT",
    "type": "SMS_CODE_MAX_RETRIES_REACHED",
    "message": "Max retries reached for SMS code confirmation. Try to initiate phone confirmation again",
    "messageForUser": "api.user.completeConfirmPhoneAction.SMS_CODE_MAX_RETRIES_REACHED"
  }`
  
  `{
    "mutation": "completeConfirmPhoneAction",
    "variable": [
      "data",
      "smsCode"
    ],
    "code": "BAD_USER_INPUT",
    "type": "SMS_CODE_VERIFICATION_FAILED",
    "message": "SMS code verification mismatch",
    "messageForUser": "api.user.completeConfirmPhoneAction.SMS_CODE_VERIFICATION_FAILED"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "TOO_MANY_REQUESTS",
    "message": "You have to wait {secondsRemaining} seconds to be able to send request again",
    "messageForUser": "api.user.TOO_MANY_REQUESTS"
  }`
  """
  completeConfirmPhoneAction(data: CompleteConfirmPhoneActionInput!): CompleteConfirmPhoneActionOutput

  """
  Authenticates resident user for mobile apps
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "signinResidentUser",
    "variable": [
      "data",
      "token"
    ],
    "code": "BAD_USER_INPUT",
    "type": "TOKEN_NOT_FOUND",
    "message": "Unable to find a non-expired confirm phone action, that corresponds to provided token",
    "messageForUser": "api.user.signinResidentUser.TOKEN_NOT_FOUND"
  }`
  
  `{
    "code": "INTERNAL_ERROR",
    "type": "UNABLE_TO_CREATE_USER",
    "mutation": "signinResidentUser",
    "message": "Something went wrong while trying to create a User record",
    "messageForUser": "api.user.signinResidentUser.UNABLE_TO_CREATE_USER"
  }`
  """
  signinResidentUser(data: SigninResidentUserInput!): SigninResidentUserOutput

  """
  Changes a phone of a resident, that corresponds to confirmed phone number, specified via token
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "changePhoneNumberResidentUser",
    "variable": [
      "data",
      "dv"
    ],
    "code": "BAD_USER_INPUT",
    "type": "DV_VERSION_MISMATCH",
    "message": "Wrong value for data version number"
  }`
  
  `{
    "mutation": "changePhoneNumberResidentUser",
    "variable": [
      "data",
      "sender"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_FORMAT",
    "message": "Invalid format of \"sender\" field value. {details}",
    "correctExample": "{ dv: 1, fingerprint: 'example-fingerprint-alphanumeric-value'}"
  }`
  
  `{
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "mutation": "changePhoneNumberResidentUser",
    "message": "Unable to find a non-expired confirm phone action, that corresponds to provided token",
    "variable": [
      "data",
      "token"
    ],
    "messageForUser": "api.user.changePhoneNumberResidentUser.UNABLE_TO_FIND_CONFIRM_PHONE_ACTION"
  }`
  """
  changePhoneNumberResidentUser(data: ChangePhoneNumberResidentUserInput!): ChangePhoneNumberResidentUserOutput

  """
  Authenticates as an another user to be able to see the system, as it does
  
  You cannot authenticate for another admin or support or whatever kind of a non-client user
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "signinAsUser",
    "code": "BAD_USER_INPUT",
    "type": "USER_NOT_FOUND",
    "message": "Could not find a user with a specified id",
    "messageForUser": "api.user.signinAsUser.USER_NOT_FOUND"
  }`
  
  `{
    "mutation": "signinAsUser",
    "code": "FORBIDDEN",
    "type": "DENIED_FOR_ADMIN",
    "message": "You cannot authenticate for an another admin user",
    "messageForUser": "api.user.signinAsUser.DENIED_FOR_ADMIN"
  }`
  
  `{
    "mutation": "signinAsUser",
    "code": "FORBIDDEN",
    "type": "DENIED_FOR_SUPPORT",
    "message": "You cannot authenticate for an another support user",
    "messageForUser": "api.user.signinAsUser.DENIED_FOR_SUPPORT"
  }`
  """
  signinAsUser(data: SigninAsUserInput!): SigninAsUserOutput
  registerNewServiceUser(data: RegisterNewServiceUserInput!): RegisterNewServiceUserOutput
  sendMessageToSupport(data: SendMessageToSupportInput!): SendMessageToSupportOutput

  """
  Used by QA for cleaning existing test user record to avoid utilizing every time new phone and email, which is hard to obtain again and again for every manual testing procedure
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "resetUser",
    "variable": [
      "data",
      "dv"
    ],
    "code": "BAD_USER_INPUT",
    "type": "DV_VERSION_MISMATCH",
    "message": "Unsupported value for dv"
  }`
  
  `{
    "mutation": "resetUser",
    "variable": [
      "data",
      "user",
      "id"
    ],
    "code": "BAD_USER_INPUT",
    "type": "USER_NOT_FOUND",
    "message": "Could not find User by provided id"
  }`
  
  `{
    "mutation": "resetUser",
    "variable": [
      "data",
      "user",
      "id"
    ],
    "code": "FORBIDDEN",
    "type": "CANNOT_RESET_ADMIN_USER",
    "message": "You cannot reset admin user"
  }`
  """
  resetUser(data: ResetUserInput!): ResetUserOutput

  """
  Registers new Organization for current user
  
  Creates new Organization, new OrganizationEmployee for current user, creates a set of default OrganizationEmployeeRole for organization and connects created OrganizationEmployee to "Admin" OrganizationEmployeeRole, creates trial ServiceSubscription for organization
  """
  registerNewOrganization(data: RegisterNewOrganizationInput!): Organization

  """
  Invites staff-user into specified Organization
  
  For corresponding User record it creates a new OrganizationEmployee and sends message with notification about invitation
  It tries to find already existing User with type "staff" first by phone, then by email.
  If User is not found, it will be registered.
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "inviteNewOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "ALREADY_INVITED",
    "message": "Already invited into the organization",
    "messageForUser": "api.organization.inviteNewOrganizationEmployee.ALREADY_INVITED"
  }`
  
  `{
    "mutation": "inviteNewOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "WRONG_PHONE_FORMAT",
    "message": "Wrong phone format",
    "messageForUser": "api.common.WRONG_PHONE_FORMAT"
  }`
  
  `{
    "mutation": "inviteNewOrganizationEmployee",
    "code": "INTERNAL_ERROR",
    "type": "UNABLE_TO_REGISTER_USER",
    "message": "Unable to register user",
    "messageForUser": "api.organization.inviteNewOrganizationEmployee.UNABLE_TO_REGISTER_USER"
  }`
  
  `{
    "mutation": "inviteNewOrganizationEmployee",
    "variable": [
      "data",
      "dv"
    ],
    "code": "BAD_USER_INPUT",
    "type": "DV_VERSION_MISMATCH",
    "message": "Wrong value for data version number"
  }`
  """
  inviteNewOrganizationEmployee(data: InviteNewOrganizationEmployeeInput!): OrganizationEmployee

  """
  Tries to send notification message again to already invited user
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "reInviteOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "WRONG_FORMAT",
    "message": "Wrong phone format",
    "messageForUser": "api.common.WRONG_PHONE_FORMAT"
  }`
  
  `{
    "mutation": "reInviteOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "message": "Could not find Organization by specified search criteria",
    "messageForUser": "api.organization.reInviteOrganizationEmployee.ORGANIZATION_NOT_FOUND"
  }`
  
  `{
    "mutation": "reInviteOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "message": "Could not find User by specified phone or email",
    "messageForUser": "api.organization.reInviteOrganizationEmployee.USER_NOT_FOUND"
  }`
  
  `{
    "mutation": "reInviteOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "message": "Could not find OrganizationEmployee that has not accepted invitation for found User",
    "messageForUser": "api.organization.reInviteOrganizationEmployee.EMPLOYEE_NOT_FOUND"
  }`
  
  `{
    "mutation": "reInviteOrganizationEmployee",
    "code": "BAD_USER_INPUT",
    "type": "ALREADY_ACCEPTED_INVITATION",
    "message": "Corresponding OrganizationEmployee has already accepted invitation",
    "messageForUser": "api.organization.reInviteOrganizationEmployee.ALREADY_ACCEPTED_INVITATION"
  }`
  """
  reInviteOrganizationEmployee(data: ReInviteOrganizationEmployeeInput!): OrganizationEmployee
  acceptOrRejectOrganizationInviteById(id: ID!, data: AcceptOrRejectOrganizationInviteInput!): OrganizationEmployee
  acceptOrRejectOrganizationInviteByCode(inviteCode: String!, data: AcceptOrRejectOrganizationInviteInput!): OrganizationEmployee
  registerBillingReceipts(data: RegisterBillingReceiptsInput!): [BillingReceipt]
  createBankAccountRequest(data: CreateBankAccountRequestInput!): CreateBankAccountRequestOutput
  shareTicket(data: ShareTicketInput!): ShareTicketOutput

  """
  Sends message of specified type to specified contact
  
  Each message type has specific set of required fields: 
  
  `{
  	"INVITE_NEW_EMPLOYEE": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"inviteCode": {
  			"defaultValue": "",
  			"required": true
  		},
  		"userName": {
  			"defaultValue": "USERNAME",
  			"required": false
  		},
  		"userEmail": {
  			"defaultValue": "",
  			"required": false
  		},
  		"userPhone": {
  			"defaultValue": "",
  			"required": false
  		},
  		"organizationName": {
  			"defaultValue": "ORGANIZATION",
  			"required": false
  		}
  	},
  	"SHARE_TICKET": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"ticketNumber": {
  			"defaultValue": "",
  			"required": true
  		},
  		"date": {
  			"defaultValue": "",
  			"required": true
  		},
  		"id": {
  			"defaultValue": "",
  			"required": true
  		},
  		"details": {
  			"defaultValue": "",
  			"required": true
  		}
  	},
  	"BANK_ACCOUNT_CREATION_REQUEST": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"bankAccountClient": {
  			"defaultValue": {},
  			"required": true
  		},
  		"tin": {
  			"required": true
  		},
  		"name": {
  			"required": true
  		},
  		"propertyAddress": {
  			"defaultValue": "",
  			"required": true
  		}
  	},
  	"DIRTY_INVITE_NEW_EMPLOYEE_SMS": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"organizationName": {
  			"defaultValue": "ORGANIZATION",
  			"required": false
  		}
  	},
  	"DIRTY_INVITE_NEW_EMPLOYEE_EMAIL": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"organizationName": {
  			"defaultValue": "ORGANIZATION",
  			"required": false
  		}
  	},
  	"REGISTER_NEW_USER": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"userPhone": {
  			"defaultValue": "",
  			"required": false
  		},
  		"userPassword": {
  			"defaultValue": "",
  			"required": false
  		}
  	},
  	"RESET_PASSWORD": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"token": {
  			"defaultValue": "",
  			"required": true
  		},
  		"userName": {
  			"defaultValue": "USERNAME",
  			"required": false
  		},
  		"userEmail": {
  			"defaultValue": "",
  			"required": false
  		}
  	},
  	"SMS_VERIFY": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"smsCode": {
  			"defaultValue": "",
  			"required": true
  		}
  	},
  	"DEVELOPER_IMPORTANT_NOTE_TYPE": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"type": {
  			"defaultValue": "UNKNOWN",
  			"required": true
  		},
  		"data": {
  			"defaultValue": null,
  			"required": true
  		}
  	},
  	"CUSTOMER_IMPORTANT_NOTE_TYPE": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"type": {
  			"defaultValue": "UNKNOWN",
  			"required": true
  		},
  		"data": {
  			"defaultValue": null,
  			"required": true
  		}
  	},
  	"MESSAGE_FORWARDED_TO_SUPPORT": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"text": {
  			"defaultValue": null,
  			"required": true
  		},
  		"residentsExtraInfo": {
  			"defaultValue": null,
  			"required": true
  		},
  		"os": {
  			"defaultValue": null,
  			"required": true
  		},
  		"appVersion": {
  			"defaultValue": null,
  			"required": true
  		},
  		"attachments": {
  			"defaultValue": [],
  			"isRequired": false
  		}
  	},
  	"TICKET_ASSIGNEE_CONNECTED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_EXECUTOR_CONNECTED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TRACK_TICKET_IN_DOMA_APP": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"organization": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_STATUS_OPENED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_STATUS_IN_PROGRESS": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_STATUS_COMPLETED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_STATUS_RETURNED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_STATUS_DECLINED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"TICKET_COMMENT_ADDED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"ticketId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"ticketNumber": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"commentId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"METER_VERIFICATION_DATE_REMINDER": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"reminderDate": {
  				"required": true
  			},
  			"meterId": {
  				"required": true
  			},
  			"userId": {
  				"required": true
  			},
  			"residentId": {
  				"required": true
  			},
  			"url": {
  				"required": true
  			}
  		}
  	},
  	"RESIDENT_ADD_BILLING_ACCOUNT": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"userId": {
  				"required": true
  			},
  			"url": {
  				"required": true
  			},
  			"residentId": {
  				"required": true
  			},
  			"residentIds": {
  				"required": true
  			}
  		}
  	},
  	"BILLING_RECEIPT_AVAILABLE": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"receiptId": {
  				"required": true
  			},
  			"userId": {
  				"required": true
  			},
  			"accountId": {
  				"required": true
  			},
  			"url": {
  				"required": true
  			},
  			"residentId": {
  				"required": true
  			},
  			"period": {
  				"required": true
  			}
  		}
  	},
  	"BILLING_RECEIPT_AVAILABLE_NO_ACCOUNT": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"userId": {
  				"required": true
  			},
  			"url": {
  				"required": true
  			},
  			"residentId": {
  				"required": true
  			},
  			"residentIds": {
  				"required": true
  			},
  			"propertyId": {
  				"required": true
  			},
  			"period": {
  				"required": true
  			}
  		}
  	},
  	"BILLING_RECEIPT_ADDED": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingReceiptId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingAccountId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingPropertyId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"period": {
  				"required": true
  			}
  		}
  	},
  	"BILLING_RECEIPT_ADDED_WITH_DEBT": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingReceiptId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingAccountId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingPropertyId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"period": {
  				"required": true
  			},
  			"category": {
  				"required": true
  			},
  			"toPay": {
  				"required": true
  			},
  			"currencyCode": {
  				"required": true
  			}
  		}
  	},
  	"BILLING_RECEIPT_ADDED_WITH_NO_DEBT": {
  		"dv": {
  			"defaultValue": "",
  			"required": true
  		},
  		"data": {
  			"residentId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"userId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingReceiptId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingAccountId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"billingPropertyId": {
  				"defaultValue": "",
  				"required": true
  			},
  			"period": {
  				"required": true
  			}
  		}
  	},
  	"METER_SUBMIT_READINGS_REMINDER": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"meterId": {
  				"required": true
  			},
  			"userId": {
  				"required": true
  			},
  			"residentId": {
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"METER_VERIFICATION_DATE_EXPIRED": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"meterId": {
  				"required": true
  			},
  			"resource": {
  				"required": true
  			},
  			"userId": {
  				"required": true
  			},
  			"residentId": {
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"RESIDENT_UPGRADE_APP": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"userId": {
  				"required": true
  			},
  			"userType": {
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"STAFF_UPGRADE_APP": {
  		"dv": {
  			"required": true
  		},
  		"data": {
  			"userId": {
  				"required": true
  			},
  			"userType": {
  				"required": true
  			},
  			"url": {
  				"defaultValue": "",
  				"required": true
  			}
  		}
  	},
  	"CUSTOM_CONTENT_MESSAGE_PUSH": {
  		"dv": {
  			"required": true
  		},
  		"title": {
  			"required": false
  		},
  		"body": {
  			"required": true
  		},
  		"data": {
  			"userId": {
  				"required": false
  			},
  			"remoteClient": {
  				"required": false
  			},
  			"url": {
  				"defaultValue": "",
  				"required": false
  			},
  			"messageBatchId": {
  				"required": false
  			}
  		}
  	},
  	"CUSTOM_CONTENT_MESSAGE_EMAIL": {
  		"dv": {
  			"required": true
  		},
  		"title": {
  			"required": false
  		},
  		"subject": {
  			"required": false
  		},
  		"body": {
  			"required": true
  		},
  		"data": {
  			"email": {
  				"required": false
  			},
  			"messageBatchId": {
  				"required": false
  			}
  		}
  	},
  	"CUSTOM_CONTENT_MESSAGE_SMS": {
  		"dv": {
  			"required": true
  		},
  		"title": {
  			"required": false
  		},
  		"body": {
  			"required": true
  		},
  		"data": {
  			"phone": {
  				"required": false
  			},
  			"messageBatchId": {
  				"required": false
  			}
  		}
  	},
  	"VOIP_INCOMING_CALL_MESSAGE": {
  		"dv": {
  			"required": true
  		},
  		"title": {
  			"required": false
  		},
  		"body": {
  			"required": true
  		},
  		"data": {
  			"B2CAppId": {
  				"required": true
  			},
  			"callId": {
  				"required": true
  			}
  		}
  	}
  }`
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "sendMessage",
    "variable": [
      "data",
      "to",
      "email"
    ],
    "code": "BAD_USER_INPUT",
    "type": "REQUIRED",
    "message": "You can not use emailFrom without to.email"
  }`
  
  `{
    "mutation": "sendMessage",
    "variable": [
      "data"
    ],
    "code": "BAD_USER_INPUT",
    "type": "REQUIRED",
    "message": "You should provide either \"user\", \"email\", \"phone\" or \"remoteClient\" attribute"
  }`
  
  `{
    "mutation": "sendMessage",
    "variable": [
      "data",
      "meta"
    ],
    "code": "BAD_USER_INPUT",
    "type": "UNKNOWN_ATTRIBUTE",
    "message": "Unknown attribute \"{attr}\" provided to \"meta\" variable"
  }`
  
  `{
    "mutation": "sendMessage",
    "variable": [
      "data",
      "meta"
    ],
    "code": "BAD_USER_INPUT",
    "type": "REQUIRED",
    "message": "Missing value for required \"meta.{attr}\" attribute"
  }`
  
  `{
    "mutation": "sendMessage",
    "variable": [
      "data",
      "meta"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_VALUE",
    "message": "Unknown value \"{type}\" provided for message type"
  }`
  
  `{
    "mutation": "sendMessage",
    "variable": [
      "data",
      "meta",
      "dv"
    ],
    "code": "BAD_USER_INPUT",
    "type": "DV_VERSION_MISMATCH",
    "message": "Wrong value for data version number"
  }`
  """
  sendMessage(data: SendMessageInput!): SendMessageOutput
  resendMessage(data: ResendMessageInput!): ResendMessageOutput
  syncRemoteClient(data: SyncRemoteClientInput!): RemoteClient
  disconnectUserFromRemoteClient(data: DisconnectUserFromRemoteClientInput!): DisconnectUserFromRemoteClientOutput
  setMessageStatus(data: SetMessageStatusInput!): SetMessageStatusOutput
  registerResident(data: RegisterResidentInput!): Resident

  """
  Creates service consumer with default data, and automatically populates the optional data fields, such as `billingAccount
  
  To be successfully created accountNumber and unitName should at least have billingAccount with same data or Meter with same data
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "registerServiceConsumer",
    "variable": [
      "data",
      "residentId"
    ],
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "message": "Cannot find Resident for current user"
  }`
  
  `{
    "mutation": "registerServiceConsumer",
    "variable": [
      "data",
      "organizationId"
    ],
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "message": "Cannot find Organization for current user"
  }`
  
  `{
    "mutation": "registerServiceConsumer",
    "variable": [
      "data",
      "accountNumber"
    ],
    "code": "BAD_USER_INPUT",
    "type": "NOT_FOUND",
    "message": "Can't find billingAccount and any meters with this accountNumber, unitName and organization combination"
  }`
  
  `{
    "mutation": "registerServiceConsumer",
    "variable": [
      "data",
      "accountNumber"
    ],
    "code": "BAD_USER_INPUT",
    "type": "WRONG_FORMAT",
    "message": "Argument \"accountNumber\" is null or empty"
  }`
  """
  registerServiceConsumer(data: RegisterServiceConsumerInput!): ServiceConsumer

  """
  Creates OnBoarding and set of OnBoardingStep records for specified role and user
  
  
  
  **Errors**
  
  Following objects will be presented in `extensions` property of thrown error
  
  `{
    "mutation": "createOnBoardingByType",
    "variable": [
      "data",
      "type"
    ],
    "code": "BAD_USER_INPUT",
    "type": "ROLE_IS_NOT_SUPPORTED",
    "message": "Role \"{type}\" is not supported to create OnBoarding for"
  }`
  
  `{
    "mutation": "createOnBoardingByType",
    "variable": [
      "data",
      "type"
    ],
    "code": "BAD_USER_INPUT",
    "type": "ROLE_IS_NOT_SUPPORTED",
    "message": "Step transitions are not defined for role \"{type}\""
  }`
  """
  createOnBoardingByType(data: CreateOnBoardingInput!): OnBoarding
  registerMultiPayment(data: RegisterMultiPaymentInput!): RegisterMultiPaymentOutput
  registerMultiPaymentForOneReceipt(data: RegisterMultiPaymentForOneReceiptInput!): RegisterMultiPaymentForOneReceiptOutput
  registerMultiPaymentForVirtualReceipt(data: RegisterMultiPaymentForVirtualReceiptInput!): RegisterMultiPaymentForOneReceiptOutput

  """ Authenticate and generate a token for a User with the Password Authentication Strategy. 
  """
  authenticateUserWithPassword(email: String, password: String): authenticateUserOutput
  unauthenticateUser: unauthenticateUserOutput
  updateAuthenticatedUser(data: UserUpdateInput): User
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

enum CacheControlScope {
  PUBLIC
  PRIVATE
}
