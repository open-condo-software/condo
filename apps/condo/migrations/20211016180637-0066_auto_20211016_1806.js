// auto generated by kmigrator
// KMIGRATOR:0066_auto_20211016_1806:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDMuMi43IG9uIDIwMjEtMTAtMTYgMTg6MDYKCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zLCBtb2RlbHMKaW1wb3J0IGRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24KCgpjbGFzcyBNaWdyYXRpb24obWlncmF0aW9ucy5NaWdyYXRpb24pOgoKICAgIGRlcGVuZGVuY2llcyA9IFsKICAgICAgICAoJ19kamFuZ29fc2NoZW1hJywgJzAwNjVfYXV0b18yMDIxMTAwMV8wMzM0JyksCiAgICBdCgogICAgb3BlcmF0aW9ucyA9IFsKICAgICAgICBtaWdyYXRpb25zLkNyZWF0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdzZXJ2aWNlc3Vic2NyaXB0aW9ucGF5bWVudGhpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCdkdicsIG1vZGVscy5JbnRlZ2VyRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3NlbmRlcicsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3R5cGUnLCBtb2RlbHMuVGV4dEZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdzdGF0dXMnLCBtb2RlbHMuVGV4dEZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdleHRlcm5hbElkJywgbW9kZWxzLlRleHRGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnYW1vdW50JywgbW9kZWxzLkRlY2ltYWxGaWVsZChibGFuaz1UcnVlLCBkZWNpbWFsX3BsYWNlcz00LCBtYXhfZGlnaXRzPTE4LCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnY3VycmVuY3knLCBtb2RlbHMuVGV4dEZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdvcmdhbml6YXRpb24nLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdzdWJzY3JpcHRpb24nLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdtZXRhJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc3RhdHVzTWV0YScsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2lkJywgbW9kZWxzLlVVSURGaWVsZChwcmltYXJ5X2tleT1UcnVlLCBzZXJpYWxpemU9RmFsc2UpKSwKICAgICAgICAgICAgICAgICgndicsIG1vZGVscy5JbnRlZ2VyRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEJ5JywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEJ5JywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZGVsZXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ25ld0lkJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9kYXRlJywgbW9kZWxzLkRhdGVUaW1lRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfYWN0aW9uJywgbW9kZWxzLkNoYXJGaWVsZChjaG9pY2VzPVsoJ2MnLCAnYycpLCAoJ3UnLCAndScpLCAoJ2QnLCAnZCcpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2lkJywgbW9kZWxzLlVVSURGaWVsZChkYl9pbmRleD1UcnVlKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ1NlcnZpY2VTdWJzY3JpcHRpb25QYXltZW50SGlzdG9yeVJlY29yZCcsCiAgICAgICAgICAgIH0sCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkNyZWF0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdzZXJ2aWNlc3Vic2NyaXB0aW9ucGF5bWVudCcsCiAgICAgICAgICAgIGZpZWxkcz1bCiAgICAgICAgICAgICAgICAoJ2R2JywgbW9kZWxzLkludGVnZXJGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnc2VuZGVyJywgbW9kZWxzLkpTT05GaWVsZCgpKSwKICAgICAgICAgICAgICAgICgndHlwZScsIG1vZGVscy5DaGFyRmllbGQoY2hvaWNlcz1bKCdkZWZhdWx0JywgJ2RlZmF1bHQnKSwgKCdzYmJvbCcsICdzYmJvbCcpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdzdGF0dXMnLCBtb2RlbHMuQ2hhckZpZWxkKGNob2ljZXM9WygnY3JlYXRlZCcsICdjcmVhdGVkJyksICgncHJvY2Vzc2luZycsICdwcm9jZXNzaW5nJyksICgnZG9uZScsICdkb25lJyksICgnZXJyb3InLCAnZXJyb3InKSwgKCdzdG9wcGVkJywgJ3N0b3BwZWQnKSwgKCdjYW5jZWxsZWQnLCAnY2FuY2VsbGVkJyldLCBtYXhfbGVuZ3RoPTUwKSksCiAgICAgICAgICAgICAgICAoJ2V4dGVybmFsSWQnLCBtb2RlbHMuVGV4dEZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdhbW91bnQnLCBtb2RlbHMuRGVjaW1hbEZpZWxkKGRlY2ltYWxfcGxhY2VzPTIsIG1heF9kaWdpdHM9MTgpKSwKICAgICAgICAgICAgICAgICgnY3VycmVuY3knLCBtb2RlbHMuQ2hhckZpZWxkKGNob2ljZXM9WygnUlVCJywgJ1JVQicpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdtZXRhJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc3RhdHVzTWV0YScsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2lkJywgbW9kZWxzLlVVSURGaWVsZChwcmltYXJ5X2tleT1UcnVlLCBzZXJpYWxpemU9RmFsc2UpKSwKICAgICAgICAgICAgICAgICgndicsIG1vZGVscy5JbnRlZ2VyRmllbGQoZGVmYXVsdD0xKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZGVsZXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ25ld0lkJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEJ5JywgbW9kZWxzLkZvcmVpZ25LZXkoYmxhbms9VHJ1ZSwgZGJfY29sdW1uPSdjcmVhdGVkQnknLCBudWxsPVRydWUsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLlNFVF9OVUxMLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpKSwKICAgICAgICAgICAgICAgICgnb3JnYW5pemF0aW9uJywgbW9kZWxzLkZvcmVpZ25LZXkoZGJfY29sdW1uPSdvcmdhbml6YXRpb24nLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEub3JnYW5pemF0aW9uJykpLAogICAgICAgICAgICAgICAgKCdzdWJzY3JpcHRpb24nLCBtb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J3N1YnNjcmlwdGlvbicsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLkNBU0NBREUsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS5zZXJ2aWNlc3Vic2NyaXB0aW9uJykpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQnknLCBtb2RlbHMuRm9yZWlnbktleShibGFuaz1UcnVlLCBkYl9jb2x1bW49J3VwZGF0ZWRCeScsIG51bGw9VHJ1ZSwgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uU0VUX05VTEwsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJykpLAogICAgICAgICAgICBdLAogICAgICAgICAgICBvcHRpb25zPXsKICAgICAgICAgICAgICAgICdkYl90YWJsZSc6ICdTZXJ2aWNlU3Vic2NyaXB0aW9uUGF5bWVudCcsCiAgICAgICAgICAgIH0sCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3NlcnZpY2VzdWJzY3JpcHRpb25wYXltZW50JywKICAgICAgICAgICAgY29uc3RyYWludD1tb2RlbHMuQ2hlY2tDb25zdHJhaW50KGNoZWNrPW1vZGVscy5RKCgndHlwZV9faW4nLCBbJ2RlZmF1bHQnLCAnc2Jib2wnXSkpLCBuYW1lPSdzZXJ2aWNlX3N1YnNjcmlwdGlvbl9wYXltZW50X3R5cGVfY2hlY2snKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkQ29uc3RyYWludCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nc2VydmljZXN1YnNjcmlwdGlvbnBheW1lbnQnLAogICAgICAgICAgICBjb25zdHJhaW50PW1vZGVscy5DaGVja0NvbnN0cmFpbnQoY2hlY2s9bW9kZWxzLlEoKCdzdGF0dXNfX2luJywgWydjcmVhdGVkJywgJ3Byb2Nlc3NpbmcnLCAnZG9uZScsICdlcnJvcicsICdzdG9wcGVkJywgJ2NhbmNlbGxlZCddKSksIG5hbWU9J3NlcnZpY2Vfc3Vic2NyaXB0aW9uX3BheW1lbnRfc3RhdHVzX2NoZWNrJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3NlcnZpY2VzdWJzY3JpcHRpb25wYXltZW50JywKICAgICAgICAgICAgY29uc3RyYWludD1tb2RlbHMuQ2hlY2tDb25zdHJhaW50KGNoZWNrPW1vZGVscy5RKCgnY3VycmVuY3lfX2luJywgWydSVUInXSkpLCBuYW1lPSdzZXJ2aWNlX3N1YnNjcmlwdGlvbl9wYXltZW50X2N1cnJlbmN5X2NoZWNrJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3NlcnZpY2VzdWJzY3JpcHRpb25wYXltZW50JywKICAgICAgICAgICAgY29uc3RyYWludD1tb2RlbHMuQ2hlY2tDb25zdHJhaW50KGNoZWNrPW1vZGVscy5RKCgnYW1vdW50X19ndCcsIDApKSwgbmFtZT0nc2VydmljZV9zdWJzY3JpcHRpb25fcGF5bWVudF9wb3NpdGl2ZV9hbW91bnRfY2hlY2snKSwKICAgICAgICApLAogICAgXQo=

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model servicesubscriptionpaymenthistoryrecord
--
CREATE TABLE "ServiceSubscriptionPaymentHistoryRecord" ("dv" integer NULL, "sender" jsonb NULL, "type" text NULL, "status" text NULL, "externalId" text NULL, "amount" numeric(18, 4) NULL, "currency" text NULL, "organization" uuid NULL, "subscription" uuid NULL, "meta" jsonb NULL, "statusMeta" jsonb NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Create model servicesubscriptionpayment
--
CREATE TABLE "ServiceSubscriptionPayment" ("dv" integer NOT NULL, "sender" jsonb NOT NULL, "type" varchar(50) NOT NULL, "status" varchar(50) NOT NULL, "externalId" text NULL, "amount" numeric(18, 2) NOT NULL, "currency" varchar(50) NOT NULL, "meta" jsonb NULL, "statusMeta" jsonb NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "createdBy" uuid NULL, "organization" uuid NOT NULL, "subscription" uuid NOT NULL, "updatedBy" uuid NULL);
--
-- Create constraint service_subscription_payment_type_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "service_subscription_payment_type_check" CHECK ("type" IN ('default', 'sbbol'));
--
-- Create constraint service_subscription_payment_status_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "service_subscription_payment_status_check" CHECK ("status" IN ('created', 'processing', 'done', 'error', 'stopped', 'cancelled'));
--
-- Create constraint service_subscription_payment_currency_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "service_subscription_payment_currency_check" CHECK ("currency" IN ('RUB'));
--
-- Create constraint service_subscription_payment_positive_amount_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "service_subscription_payment_positive_amount_check" CHECK ("amount" > 0);
CREATE INDEX "ServiceSubscriptionPaymentHistoryRecord_history_id_123e9bce" ON "ServiceSubscriptionPaymentHistoryRecord" ("history_id");
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "ServiceSubscriptionPayment_createdBy_6355d454_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "ServiceSubscriptionP_organization_b2bce42a_fk_Organizat" FOREIGN KEY ("organization") REFERENCES "Organization" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "ServiceSubscriptionP_subscription_a62a2787_fk_ServiceSu" FOREIGN KEY ("subscription") REFERENCES "ServiceSubscription" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ServiceSubscriptionPayment" ADD CONSTRAINT "ServiceSubscriptionPayment_updatedBy_0af71a32_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "ServiceSubscriptionPayment_externalId_bfd8bb49" ON "ServiceSubscriptionPayment" ("externalId");
CREATE INDEX "ServiceSubscriptionPayment_externalId_bfd8bb49_like" ON "ServiceSubscriptionPayment" ("externalId" text_pattern_ops);
CREATE INDEX "ServiceSubscriptionPayment_createdAt_ea103fea" ON "ServiceSubscriptionPayment" ("createdAt");
CREATE INDEX "ServiceSubscriptionPayment_updatedAt_5e358a21" ON "ServiceSubscriptionPayment" ("updatedAt");
CREATE INDEX "ServiceSubscriptionPayment_deletedAt_e2584920" ON "ServiceSubscriptionPayment" ("deletedAt");
CREATE INDEX "ServiceSubscriptionPayment_createdBy_6355d454" ON "ServiceSubscriptionPayment" ("createdBy");
CREATE INDEX "ServiceSubscriptionPayment_organization_b2bce42a" ON "ServiceSubscriptionPayment" ("organization");
CREATE INDEX "ServiceSubscriptionPayment_subscription_a62a2787" ON "ServiceSubscriptionPayment" ("subscription");
CREATE INDEX "ServiceSubscriptionPayment_updatedBy_0af71a32" ON "ServiceSubscriptionPayment" ("updatedBy");
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create constraint service_subscription_payment_positive_amount_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" DROP CONSTRAINT "service_subscription_payment_positive_amount_check";
--
-- Create constraint service_subscription_payment_currency_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" DROP CONSTRAINT "service_subscription_payment_currency_check";
--
-- Create constraint service_subscription_payment_status_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" DROP CONSTRAINT "service_subscription_payment_status_check";
--
-- Create constraint service_subscription_payment_type_check on model servicesubscriptionpayment
--
ALTER TABLE "ServiceSubscriptionPayment" DROP CONSTRAINT "service_subscription_payment_type_check";
--
-- Create model servicesubscriptionpayment
--
DROP TABLE "ServiceSubscriptionPayment" CASCADE;
--
-- Create model servicesubscriptionpaymenthistoryrecord
--
DROP TABLE "ServiceSubscriptionPaymentHistoryRecord" CASCADE;
COMMIT;

    `)
}
