// auto generated by kmigrator
// KMIGRATOR:0292_alter_notificationusersetting_messagetype:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMC40IG9uIDIwMjMtMDYtMjkgMDk6MzUKCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zLCBtb2RlbHMKCgpjbGFzcyBNaWdyYXRpb24obWlncmF0aW9ucy5NaWdyYXRpb24pOgoKICAgIGRlcGVuZGVuY2llcyA9IFsKICAgICAgICAoJ19kamFuZ29fc2NoZW1hJywgJzAyOTFfYXV0b18yMDIzMDYyOF8wNjAyJyksCiAgICBdCgogICAgb3BlcmF0aW9ucyA9IFsKICAgICAgICBtaWdyYXRpb25zLkFsdGVyRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J25vdGlmaWNhdGlvbnVzZXJzZXR0aW5nJywKICAgICAgICAgICAgbmFtZT0nbWVzc2FnZVR5cGUnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuQ2hhckZpZWxkKGJsYW5rPVRydWUsIGNob2ljZXM9WygnSU5WSVRFX05FV19FTVBMT1lFRScsICdJTlZJVEVfTkVXX0VNUExPWUVFJyksICgnU0hBUkVfVElDS0VUJywgJ1NIQVJFX1RJQ0tFVCcpLCAoJ0JBTktfQUNDT1VOVF9DUkVBVElPTl9SRVFVRVNUJywgJ0JBTktfQUNDT1VOVF9DUkVBVElPTl9SRVFVRVNUJyksICgnRElSVFlfSU5WSVRFX05FV19FTVBMT1lFRV9TTVMnLCAnRElSVFlfSU5WSVRFX05FV19FTVBMT1lFRV9TTVMnKSwgKCdESVJUWV9JTlZJVEVfTkVXX0VNUExPWUVFX0VNQUlMJywgJ0RJUlRZX0lOVklURV9ORVdfRU1QTE9ZRUVfRU1BSUwnKSwgKCdSRUdJU1RFUl9ORVdfVVNFUicsICdSRUdJU1RFUl9ORVdfVVNFUicpLCAoJ1JFU0VUX1BBU1NXT1JEJywgJ1JFU0VUX1BBU1NXT1JEJyksICgnU01TX1ZFUklGWScsICdTTVNfVkVSSUZZJyksICgnREVWRUxPUEVSX0lNUE9SVEFOVF9OT1RFX1RZUEUnLCAnREVWRUxPUEVSX0lNUE9SVEFOVF9OT1RFX1RZUEUnKSwgKCdDVVNUT01FUl9JTVBPUlRBTlRfTk9URV9UWVBFJywgJ0NVU1RPTUVSX0lNUE9SVEFOVF9OT1RFX1RZUEUnKSwgKCdNRVNTQUdFX0ZPUldBUkRFRF9UT19TVVBQT1JUJywgJ01FU1NBR0VfRk9SV0FSREVEX1RPX1NVUFBPUlQnKSwgKCdUSUNLRVRfQVNTSUdORUVfQ09OTkVDVEVEJywgJ1RJQ0tFVF9BU1NJR05FRV9DT05ORUNURUQnKSwgKCdUSUNLRVRfRVhFQ1VUT1JfQ09OTkVDVEVEJywgJ1RJQ0tFVF9FWEVDVVRPUl9DT05ORUNURUQnKSwgKCdUUkFDS19USUNLRVRfSU5fRE9NQV9BUFAnLCAnVFJBQ0tfVElDS0VUX0lOX0RPTUFfQVBQJyksICgnVElDS0VUX1NUQVRVU19PUEVORUQnLCAnVElDS0VUX1NUQVRVU19PUEVORUQnKSwgKCdUSUNLRVRfU1RBVFVTX0lOX1BST0dSRVNTJywgJ1RJQ0tFVF9TVEFUVVNfSU5fUFJPR1JFU1MnKSwgKCdUSUNLRVRfU1RBVFVTX0NPTVBMRVRFRCcsICdUSUNLRVRfU1RBVFVTX0NPTVBMRVRFRCcpLCAoJ1RJQ0tFVF9TVEFUVVNfUkVUVVJORUQnLCAnVElDS0VUX1NUQVRVU19SRVRVUk5FRCcpLCAoJ1RJQ0tFVF9TVEFUVVNfREVDTElORUQnLCAnVElDS0VUX1NUQVRVU19ERUNMSU5FRCcpLCAoJ1RJQ0tFVF9DT01NRU5UX0FEREVEJywgJ1RJQ0tFVF9DT01NRU5UX0FEREVEJyksICgnTUVURVJfVkVSSUZJQ0FUSU9OX0RBVEVfUkVNSU5ERVInLCAnTUVURVJfVkVSSUZJQ0FUSU9OX0RBVEVfUkVNSU5ERVInKSwgKCdSRVNJREVOVF9BRERfQklMTElOR19BQ0NPVU5UJywgJ1JFU0lERU5UX0FERF9CSUxMSU5HX0FDQ09VTlQnKSwgKCdCSUxMSU5HX1JFQ0VJUFRfQVZBSUxBQkxFJywgJ0JJTExJTkdfUkVDRUlQVF9BVkFJTEFCTEUnKSwgKCdCSUxMSU5HX1JFQ0VJUFRfQVZBSUxBQkxFX05PX0FDQ09VTlQnLCAnQklMTElOR19SRUNFSVBUX0FWQUlMQUJMRV9OT19BQ0NPVU5UJyksICgnQklMTElOR19SRUNFSVBUX0NBVEVHT1JZX0FWQUlMQUJMRScsICdCSUxMSU5HX1JFQ0VJUFRfQ0FURUdPUllfQVZBSUxBQkxFJyksICgnQklMTElOR19SRUNFSVBUX0FEREVEJywgJ0JJTExJTkdfUkVDRUlQVF9BRERFRCcpLCAoJ0JJTExJTkdfUkVDRUlQVF9BRERFRF9XSVRIX0RFQlQnLCAnQklMTElOR19SRUNFSVBUX0FEREVEX1dJVEhfREVCVCcpLCAoJ0JJTExJTkdfUkVDRUlQVF9BRERFRF9XSVRIX05PX0RFQlQnLCAnQklMTElOR19SRUNFSVBUX0FEREVEX1dJVEhfTk9fREVCVCcpLCAoJ01FVEVSX1NVQk1JVF9SRUFESU5HU19SRU1JTkRFUicsICdNRVRFUl9TVUJNSVRfUkVBRElOR1NfUkVNSU5ERVInKSwgKCdNRVRFUl9WRVJJRklDQVRJT05fREFURV9FWFBJUkVEJywgJ01FVEVSX1ZFUklGSUNBVElPTl9EQVRFX0VYUElSRUQnKSwgKCdSRVNJREVOVF9VUEdSQURFX0FQUCcsICdSRVNJREVOVF9VUEdSQURFX0FQUCcpLCAoJ1NUQUZGX1VQR1JBREVfQVBQJywgJ1NUQUZGX1VQR1JBREVfQVBQJyksICgnQ1VTVE9NX0NPTlRFTlRfTUVTU0FHRV9QVVNIJywgJ0NVU1RPTV9DT05URU5UX01FU1NBR0VfUFVTSCcpLCAoJ0NVU1RPTV9DT05URU5UX01FU1NBR0VfRU1BSUwnLCAnQ1VTVE9NX0NPTlRFTlRfTUVTU0FHRV9FTUFJTCcpLCAoJ0NVU1RPTV9DT05URU5UX01FU1NBR0VfU01TJywgJ0NVU1RPTV9DT05URU5UX01FU1NBR0VfU01TJyksICgnVk9JUF9JTkNPTUlOR19DQUxMX01FU1NBR0UnLCAnVk9JUF9JTkNPTUlOR19DQUxMX01FU1NBR0UnKSwgKCdCMkNfQVBQX01FU1NBR0VfUFVTSCcsICdCMkNfQVBQX01FU1NBR0VfUFVTSCcpLCAoJ1JFQ1VSUkVOVF9QQVlNRU5UX1BST0NFRURJTkdfU1VDQ0VTU19SRVNVTFRfTUVTU0FHRScsICdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX1NVQ0NFU1NfUkVTVUxUX01FU1NBR0UnKSwgKCdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX1VOS05PV05fRVJST1JfTUVTU0FHRScsICdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX1VOS05PV05fRVJST1JfTUVTU0FHRScpLCAoJ1JFQ1VSUkVOVF9QQVlNRU5UX1BST0NFRURJTkdfQUNRVUlSSU5HX1BBWU1FTlRfUFJPQ0VFRF9FUlJPUl9NRVNTQUdFJywgJ1JFQ1VSUkVOVF9QQVlNRU5UX1BST0NFRURJTkdfQUNRVUlSSU5HX1BBWU1FTlRfUFJPQ0VFRF9FUlJPUl9NRVNTQUdFJyksICgnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19TRVJWSUNFX0NPTlNVTUVSX05PVF9GT1VORF9FUlJPUl9NRVNTQUdFJywgJ1JFQ1VSUkVOVF9QQVlNRU5UX1BST0NFRURJTkdfU0VSVklDRV9DT05TVU1FUl9OT1RfRk9VTkRfRVJST1JfTUVTU0FHRScpLCAoJ1JFQ1VSUkVOVF9QQVlNRU5UX1BST0NFRURJTkdfTElNSVRfRVhDRUVERURfRVJST1JfTUVTU0FHRScsICdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX0xJTUlUX0VYQ0VFREVEX0VSUk9SX01FU1NBR0UnKSwgKCdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX0NPTlRFWFRfTk9UX0ZPVU5EX0VSUk9SX01FU1NBR0UnLCAnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19DT05URVhUX05PVF9GT1VORF9FUlJPUl9NRVNTQUdFJyksICgnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19DT05URVhUX0RJU0FCTEVEX0VSUk9SX01FU1NBR0UnLCAnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19DT05URVhUX0RJU0FCTEVEX0VSUk9SX01FU1NBR0UnKSwgKCdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX0NBUkRfVE9LRU5fTk9UX1ZBTElEX0VSUk9SX01FU1NBR0UnLCAnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19DQVJEX1RPS0VOX05PVF9WQUxJRF9FUlJPUl9NRVNTQUdFJyksICgnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19DQU5fTk9UX1JFR0lTVEVSX01VTFRJX1BBWU1FTlRfRVJST1JfTUVTU0FHRScsICdSRUNVUlJFTlRfUEFZTUVOVF9QUk9DRUVESU5HX0NBTl9OT1RfUkVHSVNURVJfTVVMVElfUEFZTUVOVF9FUlJPUl9NRVNTQUdFJyksICgnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19OT19SRUNFSVBUU19UT19QUk9DRUVEX0VSUk9SX01FU1NBR0UnLCAnUkVDVVJSRU5UX1BBWU1FTlRfUFJPQ0VFRElOR19OT19SRUNFSVBUU19UT19QUk9DRUVEX0VSUk9SX01FU1NBR0UnKSwgKCdSRUNVUlJFTlRfUEFZTUVOVF9UT01PUlJPV19QQVlNRU5UX01FU1NBR0UnLCAnUkVDVVJSRU5UX1BBWU1FTlRfVE9NT1JST1dfUEFZTUVOVF9NRVNTQUdFJyksICgnUkVDVVJSRU5UX1BBWU1FTlRfVE9NT1JST1dfUEFZTUVOVF9OT19SRUNFSVBUU19NRVNTQUdFJywgJ1JFQ1VSUkVOVF9QQVlNRU5UX1RPTU9SUk9XX1BBWU1FTlRfTk9fUkVDRUlQVFNfTUVTU0FHRScpLCAoJ1JFQ1VSUkVOVF9QQVlNRU5UX1RPTU9SUk9XX1BBWU1FTlRfTElNSVRfRVhDRUVEX01FU1NBR0UnLCAnUkVDVVJSRU5UX1BBWU1FTlRfVE9NT1JST1dfUEFZTUVOVF9MSU1JVF9FWENFRURfTUVTU0FHRScpLCAoJ05FV1NfSVRFTV9DT01NT05fTUVTU0FHRV9UWVBFJywgJ05FV1NfSVRFTV9DT01NT05fTUVTU0FHRV9UWVBFJyksICgnTkVXU19JVEVNX0VNRVJHRU5DWV9NRVNTQUdFX1RZUEUnLCAnTkVXU19JVEVNX0VNRVJHRU5DWV9NRVNTQUdFX1RZUEUnKV0sIG1heF9sZW5ndGg9MTAwLCBudWxsPVRydWUpLAogICAgICAgICksCiAgICBdCg==

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Alter field messageType on notificationusersetting
--
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Alter field messageType on notificationusersetting
--
COMMIT;

    `)
}
