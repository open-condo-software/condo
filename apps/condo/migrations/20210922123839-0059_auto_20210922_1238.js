// auto generated by kmigrator
// KMIGRATOR:0059_auto_20210922_1238:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDMuMi42IG9uIDIwMjEtMDktMjIgMTI6MzgKCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zLCBtb2RlbHMKaW1wb3J0IGRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24KaW1wb3J0IGRqYW5nby5kYi5tb2RlbHMuZXhwcmVzc2lvbnMKCgpjbGFzcyBNaWdyYXRpb24obWlncmF0aW9ucy5NaWdyYXRpb24pOgoKICAgIGRlcGVuZGVuY2llcyA9IFsKICAgICAgICAoJ19kamFuZ29fc2NoZW1hJywgJzAwNThfYWx0ZXJfbWV0ZXJyZWFkaW5nX3ZhbHVlMScpLAogICAgXQoKICAgIG9wZXJhdGlvbnMgPSBbCiAgICAgICAgbWlncmF0aW9ucy5DcmVhdGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0nc2VydmljZXN1YnNjcmlwdGlvbmhpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCdkdicsIG1vZGVscy5JbnRlZ2VyRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3NlbmRlcicsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3R5cGUnLCBtb2RlbHMuVGV4dEZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdpc1RyaWFsJywgbW9kZWxzLkJvb2xlYW5GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnb3JnYW5pemF0aW9uJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc3RhcnRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdmaW5pc2hBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1bml0c0NvdW50JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndW5pdFByaWNlJywgbW9kZWxzLkRlY2ltYWxGaWVsZChibGFuaz1UcnVlLCBkZWNpbWFsX3BsYWNlcz00LCBtYXhfZGlnaXRzPTE4LCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndG90YWxQcmljZScsIG1vZGVscy5EZWNpbWFsRmllbGQoYmxhbms9VHJ1ZSwgZGVjaW1hbF9wbGFjZXM9NCwgbWF4X2RpZ2l0cz0xOCwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2N1cnJlbmN5JywgbW9kZWxzLlRleHRGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaWQnLCBtb2RlbHMuVVVJREZpZWxkKHByaW1hcnlfa2V5PVRydWUsIHNlcmlhbGl6ZT1GYWxzZSkpLAogICAgICAgICAgICAgICAgKCd2JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQnknLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQnknLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdkZWxldGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnbmV3SWQnLCBtb2RlbHMuSlNPTkZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2RhdGUnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9hY3Rpb24nLCBtb2RlbHMuQ2hhckZpZWxkKGNob2ljZXM9WygnYycsICdjJyksICgndScsICd1JyksICgnZCcsICdkJyldLCBtYXhfbGVuZ3RoPTUwKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfaWQnLCBtb2RlbHMuVVVJREZpZWxkKGRiX2luZGV4PVRydWUpKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgb3B0aW9ucz17CiAgICAgICAgICAgICAgICAnZGJfdGFibGUnOiAnU2VydmljZVN1YnNjcmlwdGlvbkhpc3RvcnlSZWNvcmQnLAogICAgICAgICAgICB9LAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5DcmVhdGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0nc2VydmljZXN1YnNjcmlwdGlvbicsCiAgICAgICAgICAgIGZpZWxkcz1bCiAgICAgICAgICAgICAgICAoJ2R2JywgbW9kZWxzLkludGVnZXJGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnc2VuZGVyJywgbW9kZWxzLkpTT05GaWVsZCgpKSwKICAgICAgICAgICAgICAgICgndHlwZScsIG1vZGVscy5DaGFyRmllbGQoY2hvaWNlcz1bKCdkZWZhdWx0JywgJ2RlZmF1bHQnKSwgKCdzYmJvbCcsICdzYmJvbCcpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdpc1RyaWFsJywgbW9kZWxzLkJvb2xlYW5GaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnc3RhcnRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdmaW5pc2hBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCd1bml0c0NvdW50JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndW5pdFByaWNlJywgbW9kZWxzLkRlY2ltYWxGaWVsZChibGFuaz1UcnVlLCBkZWNpbWFsX3BsYWNlcz0yLCBtYXhfZGlnaXRzPTE4LCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndG90YWxQcmljZScsIG1vZGVscy5EZWNpbWFsRmllbGQoYmxhbms9VHJ1ZSwgZGVjaW1hbF9wbGFjZXM9MiwgbWF4X2RpZ2l0cz0xOCwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2N1cnJlbmN5JywgbW9kZWxzLlRleHRGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnaWQnLCBtb2RlbHMuVVVJREZpZWxkKHByaW1hcnlfa2V5PVRydWUsIHNlcmlhbGl6ZT1GYWxzZSkpLAogICAgICAgICAgICAgICAgKCd2JywgbW9kZWxzLkludGVnZXJGaWVsZChkZWZhdWx0PTEpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdkZWxldGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnbmV3SWQnLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQnknLCBtb2RlbHMuRm9yZWlnbktleShibGFuaz1UcnVlLCBkYl9jb2x1bW49J2NyZWF0ZWRCeScsIG51bGw9VHJ1ZSwgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uU0VUX05VTEwsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJykpLAogICAgICAgICAgICAgICAgKCdvcmdhbml6YXRpb24nLCBtb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J29yZ2FuaXphdGlvbicsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLkNBU0NBREUsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS5vcmdhbml6YXRpb24nKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRCeScsIG1vZGVscy5Gb3JlaWduS2V5KGJsYW5rPVRydWUsIGRiX2NvbHVtbj0ndXBkYXRlZEJ5JywgbnVsbD1UcnVlLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5TRVRfTlVMTCwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLnVzZXInKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ1NlcnZpY2VTdWJzY3JpcHRpb24nLAogICAgICAgICAgICB9LAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRDb25zdHJhaW50KAogICAgICAgICAgICBtb2RlbF9uYW1lPSdzZXJ2aWNlc3Vic2NyaXB0aW9uJywKICAgICAgICAgICAgY29uc3RyYWludD1tb2RlbHMuQ2hlY2tDb25zdHJhaW50KGNoZWNrPW1vZGVscy5RKCgndHlwZV9faW4nLCBbJ2RlZmF1bHQnLCAnc2Jib2wnXSkpLCBuYW1lPSd0eXBlX2NoZWNrJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3NlcnZpY2VzdWJzY3JpcHRpb24nLAogICAgICAgICAgICBjb25zdHJhaW50PW1vZGVscy5DaGVja0NvbnN0cmFpbnQoY2hlY2s9bW9kZWxzLlEoKCdzdGFydEF0X19sdCcsIGRqYW5nby5kYi5tb2RlbHMuZXhwcmVzc2lvbnMuRignZmluaXNoQXQnKSkpLCBuYW1lPSdzdGFydEF0X2lzX2JlZm9yZV9maW5pc2hBdCcpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRDb25zdHJhaW50KAogICAgICAgICAgICBtb2RlbF9uYW1lPSdzZXJ2aWNlc3Vic2NyaXB0aW9uJywKICAgICAgICAgICAgY29uc3RyYWludD1tb2RlbHMuQ2hlY2tDb25zdHJhaW50KGNoZWNrPW1vZGVscy5RKCgnY3VycmVuY3lfX2luJywgWydSVUInXSkpLCBuYW1lPSdjdXJyZW5jeV9jaGVjaycpLAogICAgICAgICksCiAgICBdCg==

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create model servicesubscriptionhistoryrecord
--
CREATE TABLE "ServiceSubscriptionHistoryRecord" ("dv" integer NULL, "sender" jsonb NULL, "type" text NULL, "isTrial" boolean NULL, "organization" uuid NULL, "startAt" timestamp with time zone NULL, "finishAt" timestamp with time zone NULL, "unitsCount" integer NULL, "unitPrice" numeric(18, 4) NULL, "totalPrice" numeric(18, 4) NULL, "currency" text NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Create model servicesubscription
--
CREATE TABLE "ServiceSubscription" ("dv" integer NOT NULL, "sender" jsonb NOT NULL, "type" varchar(50) NOT NULL, "isTrial" boolean NOT NULL, "startAt" timestamp with time zone NOT NULL, "finishAt" timestamp with time zone NOT NULL, "unitsCount" integer NULL, "unitPrice" numeric(18, 2) NULL, "totalPrice" numeric(18, 2) NULL, "currency" text NOT NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "createdBy" uuid NULL, "organization" uuid NOT NULL, "updatedBy" uuid NULL);
--
-- Create constraint type_check on model servicesubscription
--
ALTER TABLE "ServiceSubscription" ADD CONSTRAINT "type_check" CHECK ("type" IN ('default', 'sbbol'));
--
-- Create constraint startAt_is_before_finishAt on model servicesubscription
--
ALTER TABLE "ServiceSubscription" ADD CONSTRAINT "startAt_is_before_finishAt" CHECK ("startAt" < "finishAt");
--
-- Create constraint currency_check on model servicesubscription
--
ALTER TABLE "ServiceSubscription" ADD CONSTRAINT "currency_check" CHECK ("currency" IN ('RUB'));
CREATE INDEX "ServiceSubscriptionHistoryRecord_history_id_5cf08e21" ON "ServiceSubscriptionHistoryRecord" ("history_id");
ALTER TABLE "ServiceSubscription" ADD CONSTRAINT "ServiceSubscription_createdBy_97d97499_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ServiceSubscription" ADD CONSTRAINT "ServiceSubscription_organization_55ad024a_fk_Organization_id" FOREIGN KEY ("organization") REFERENCES "Organization" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ServiceSubscription" ADD CONSTRAINT "ServiceSubscription_updatedBy_68e94269_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "ServiceSubscription_createdAt_2d47bf7a" ON "ServiceSubscription" ("createdAt");
CREATE INDEX "ServiceSubscription_updatedAt_c9ccb80f" ON "ServiceSubscription" ("updatedAt");
CREATE INDEX "ServiceSubscription_deletedAt_f115b997" ON "ServiceSubscription" ("deletedAt");
CREATE INDEX "ServiceSubscription_createdBy_97d97499" ON "ServiceSubscription" ("createdBy");
CREATE INDEX "ServiceSubscription_organization_55ad024a" ON "ServiceSubscription" ("organization");
CREATE INDEX "ServiceSubscription_updatedBy_68e94269" ON "ServiceSubscription" ("updatedBy");
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create constraint currency_check on model servicesubscription
--
ALTER TABLE "ServiceSubscription" DROP CONSTRAINT "currency_check";
--
-- Create constraint startAt_is_before_finishAt on model servicesubscription
--
ALTER TABLE "ServiceSubscription" DROP CONSTRAINT "startAt_is_before_finishAt";
--
-- Create constraint type_check on model servicesubscription
--
ALTER TABLE "ServiceSubscription" DROP CONSTRAINT "type_check";
--
-- Create model servicesubscription
--
DROP TABLE "ServiceSubscription" CASCADE;
--
-- Create model servicesubscriptionhistoryrecord
--
DROP TABLE "ServiceSubscriptionHistoryRecord" CASCADE;
COMMIT;

    `)
}
