// auto generated by kmigrator
// KMIGRATOR:0026_auto_20210705_1610:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDMuMi41IG9uIDIwMjEtMDctMDUgMTY6MTAKCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zCgoKY2xhc3MgTWlncmF0aW9uKG1pZ3JhdGlvbnMuTWlncmF0aW9uKToKCiAgICBkZXBlbmRlbmNpZXMgPSBbCiAgICAgICAgKCdfZGphbmdvX3NjaGVtYScsICcwMDI1X2F1dG9fMjAyMTA2MjlfMTcwNycpLAogICAgXQoKICAgIG9wZXJhdGlvbnMgPSBbCiAgICAgICAgbWlncmF0aW9ucy5SZW5hbWVGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgb2xkX25hbWU9J2VudHJhbmNlTmFtZScsCiAgICAgICAgICAgIG5ld19uYW1lPSdzZWN0aW9uTmFtZScsCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLlJlbmFtZUZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXRjaGFuZ2UnLAogICAgICAgICAgICBvbGRfbmFtZT0nZW50cmFuY2VOYW1lRnJvbScsCiAgICAgICAgICAgIG5ld19uYW1lPSdzZWN0aW9uTmFtZUZyb20nLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5SZW5hbWVGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0Y2hhbmdlJywKICAgICAgICAgICAgb2xkX25hbWU9J2VudHJhbmNlTmFtZVRvJywKICAgICAgICAgICAgbmV3X25hbWU9J3NlY3Rpb25OYW1lVG8nLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5SZW5hbWVGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0aGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIG9sZF9uYW1lPSdlbnRyYW5jZU5hbWUnLAogICAgICAgICAgICBuZXdfbmFtZT0nc2VjdGlvbk5hbWUnLAogICAgICAgICksCiAgICBdCg==

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
    
    -- Dispatcher
    INSERT INTO "OrganizationEmployeeRole" (
        id, dv, v, sender, organization, "createdAt", "updatedAt",
        name,
        "canManageOrganization",
        "canManageEmployees",
        "canManageRoles",
        "canManageIntegrations",
        "canManageProperties",
        "canManageTickets",
        "canManageContacts",
        "canManageTicketComments"
    )
    SELECT
        gen_random_uuid(), 1, v, '{"dv": 1, "fingerprint": "migration", "timestamp": "20210707112100"}'::json, org.id, now(), now(),
        case when org.country = 'ru' then 'Диспетчер'
             when org.country = 'en' then 'Dispatcher'
        end,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        true
    FROM "Organization" AS org;
    
    -- Manager
    INSERT INTO "OrganizationEmployeeRole" (
        id, dv, v, sender, organization, "createdAt", "updatedAt",
        name,
        "canManageOrganization",
        "canManageEmployees",
        "canManageRoles",
        "canManageIntegrations",
        "canManageProperties",
        "canManageTickets",
        "canManageContacts",
        "canManageTicketComments"
    )
    SELECT
        gen_random_uuid(), 1, v, '{"dv": 1, "fingerprint": "migration", "timestamp": "20210707112100"}'::json, org.id, now(), now(),
        case when org.country = 'ru' then 'Управляющий'
             when org.country = 'en' then 'Manager'
        end,
        false,
        false,
        false,
        false,
        true,
        true,
        true,
        false
    FROM "Organization" AS org;
    
    -- Foreman
    INSERT INTO "OrganizationEmployeeRole" (
        id, dv, v, sender, organization, "createdAt", "updatedAt",
        name,
        "canManageOrganization",
        "canManageEmployees",
        "canManageRoles",
        "canManageIntegrations",
        "canManageProperties",
        "canManageTickets",
        "canManageContacts",
        "canManageTicketComments"
    )
    SELECT
        gen_random_uuid(), 1, v, '{"dv": 1, "fingerprint": "migration", "timestamp": "20210707112100"}'::json, org.id, now(), now(),
        case when org.country = 'ru' then 'Мастер участка'
             when org.country = 'en' then 'Foreman'
        end,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
    FROM "Organization" AS org;
    
    -- Technician
    INSERT INTO "OrganizationEmployeeRole" (
        id, dv, v, sender, organization, "createdAt", "updatedAt",
        name,
        "canManageOrganization",
        "canManageEmployees",
        "canManageRoles",
        "canManageIntegrations",
        "canManageProperties",
        "canManageTickets",
        "canManageContacts",
        "canManageTicketComments"
    )
    SELECT
        gen_random_uuid(), 1, v, '{"dv": 1, "fingerprint": "migration", "timestamp": "20210707112100"}'::json, org.id, now(), now(),
        case when org.country = 'ru' then 'Техник'
             when org.country = 'en' then 'Technician'
        end,
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
    FROM "Organization" AS org;
    
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
    
    DELETE FROM
        "OrganizationEmployeeRole"
    WHERE
        sender::json->>'fingerprint' = 'migration' AND
        sender::json->>'timestamp' = '20210707112100';
    
COMMIT;

    `)
}
