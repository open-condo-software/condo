// auto generated by kmigrator
// KMIGRATOR:0418_ticket_ticket_unitname_ticket_ticket_ispayable_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMi4xMyBvbiAyMDI0LTA5LTAyIDE5OjAzCgppbXBvcnQgZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcwpmcm9tIGRqYW5nby5kYiBpbXBvcnQgbWlncmF0aW9ucwoKCmNsYXNzIE1pZ3JhdGlvbihtaWdyYXRpb25zLk1pZ3JhdGlvbik6CgogICAgZGVwZW5kZW5jaWVzID0gWwogICAgICAgICgnX2RqYW5nb19zY2hlbWEnLCAnMDQxN19iaWxsaW5ncmVjZWlwdF9iaWxsaW5ncmVjZWlwdF9wZXJpb2RfY29udGV4dCcpLAogICAgXQoKICAgIG9wZXJhdGlvbnMgPSBbCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ3VuaXROYW1lJ10sIG5hbWU9J3RpY2tldF91bml0TmFtZScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ2lzUGF5YWJsZSddLCBuYW1lPSd0aWNrZXRfaXNQYXlhYmxlJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsnaXNFbWVyZ2VuY3knXSwgbmFtZT0ndGlja2V0X2lzRW1lcmdlbmN5JyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsnaXNXYXJyYW50eSddLCBuYW1lPSd0aWNrZXRfaXNXYXJyYW50eScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ3N0YXR1c1Jlb3BlbmVkQ291bnRlciddLCBuYW1lPSd0aWNrZXRfc3RhdHVzUmVvcGVuZWRDb3VudGVyJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsnYXNzaWduZWUnLCAnZXhlY3V0b3InLCAnb3JnYW5pemF0aW9uJ10sIG5hbWU9J3RpY2tldF9hc3NpZ25lZV9leGVjX29yZycpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ29yZ2FuaXphdGlvbicsICdzdGF0dXMnXSwgbmFtZT0ndGlja2V0X29yZ2FuaXphdGlvbl9zdGF0dXMnKSwKICAgICAgICApLAogICAgXQo=

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create index ticket_unitName on field(s) unitName of model ticket
--
CREATE INDEX "ticket_unitName" ON "Ticket" USING btree ("unitName");
--
-- Create index ticket_isPayable on field(s) isPayable of model ticket
--
CREATE INDEX "ticket_isPayable" ON "Ticket" USING btree ("isPayable");
--
-- Create index ticket_isEmergency on field(s) isEmergency of model ticket
--
CREATE INDEX "ticket_isEmergency" ON "Ticket" USING btree ("isEmergency");
--
-- Create index ticket_isWarranty on field(s) isWarranty of model ticket
--
CREATE INDEX "ticket_isWarranty" ON "Ticket" USING btree ("isWarranty");
--
-- Create index ticket_statusReopenedCounter on field(s) statusReopenedCounter of model ticket
--
CREATE INDEX "ticket_statusReopenedCounter" ON "Ticket" USING btree ("statusReopenedCounter");
--
-- Create index ticket_assignee_exec_org on field(s) assignee, executor, organization of model ticket
--
CREATE INDEX "ticket_assignee_exec_org" ON "Ticket" USING btree ("assignee", "executor", "organization");
--
-- Create index ticket_organization_status on field(s) organization, status of model ticket
--
CREATE INDEX "ticket_organization_status" ON "Ticket" USING btree ("organization", "status");
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create index ticket_organization_status on field(s) organization, status of model ticket
--
DROP INDEX IF EXISTS "ticket_organization_status";
--
-- Create index ticket_assignee_exec_org on field(s) assignee, executor, organization of model ticket
--
DROP INDEX IF EXISTS "ticket_assignee_exec_org";
--
-- Create index ticket_statusReopenedCounter on field(s) statusReopenedCounter of model ticket
--
DROP INDEX IF EXISTS "ticket_statusReopenedCounter";
--
-- Create index ticket_isWarranty on field(s) isWarranty of model ticket
--
DROP INDEX IF EXISTS "ticket_isWarranty";
--
-- Create index ticket_isEmergency on field(s) isEmergency of model ticket
--
DROP INDEX IF EXISTS "ticket_isEmergency";
--
-- Create index ticket_isPayable on field(s) isPayable of model ticket
--
DROP INDEX IF EXISTS "ticket_isPayable";
--
-- Create index ticket_unitName on field(s) unitName of model ticket
--
DROP INDEX IF EXISTS "ticket_unitName";
COMMIT;

    `)
}
