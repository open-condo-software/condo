// auto generated by kmigrator
// KMIGRATOR:0418_ticket_ticket_property_ticket_ticket_number_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMi4xMyBvbiAyMDI0LTA5LTAxIDEyOjU2CgppbXBvcnQgZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcwpmcm9tIGRqYW5nby5kYiBpbXBvcnQgbWlncmF0aW9ucwoKCmNsYXNzIE1pZ3JhdGlvbihtaWdyYXRpb25zLk1pZ3JhdGlvbik6CgogICAgZGVwZW5kZW5jaWVzID0gWwogICAgICAgICgnX2RqYW5nb19zY2hlbWEnLCAnMDQxN19iaWxsaW5ncmVjZWlwdF9iaWxsaW5ncmVjZWlwdF9wZXJpb2RfY29udGV4dCcpLAogICAgXQoKICAgIG9wZXJhdGlvbnMgPSBbCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ3Byb3BlcnR5J10sIG5hbWU9J3RpY2tldF9wcm9wZXJ0eScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ251bWJlciddLCBuYW1lPSd0aWNrZXRfbnVtYmVyJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsndW5pdE5hbWUnXSwgbmFtZT0ndGlja2V0X3VuaXROYW1lJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsncHJvYmxlbUNsYXNzaWZpZXInXSwgbmFtZT0ndGlja2V0X3Byb2JsZW1DbGFzc2lmaWVyJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsnY3JlYXRlZEJ5J10sIG5hbWU9J3RpY2tldF9jcmVhdGVkQnknKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkSW5kZXgoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3RpY2tldCcsCiAgICAgICAgICAgIGluZGV4PWRqYW5nby5jb250cmliLnBvc3RncmVzLmluZGV4ZXMuQlRyZWVJbmRleChmaWVsZHM9Wydpc1BheWFibGUnXSwgbmFtZT0ndGlja2V0X2lzUGF5YWJsZScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ2lzRW1lcmdlbmN5J10sIG5hbWU9J3RpY2tldF9pc0VtZXJnZW5jeScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ2lzV2FycmFudHknXSwgbmFtZT0ndGlja2V0X2lzV2FycmFudHknKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkSW5kZXgoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3RpY2tldCcsCiAgICAgICAgICAgIGluZGV4PWRqYW5nby5jb250cmliLnBvc3RncmVzLmluZGV4ZXMuQlRyZWVJbmRleChmaWVsZHM9WydzdGF0dXNSZW9wZW5lZENvdW50ZXInXSwgbmFtZT0ndGlja2V0X3N0YXR1c1Jlb3BlbmVkQ291bnRlcicpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ3NvdXJjZSddLCBuYW1lPSd0aWNrZXRfc291cmNlJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEluZGV4KAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBpbmRleD1kamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzLkJUcmVlSW5kZXgoZmllbGRzPVsnc3RhdHVzJ10sIG5hbWU9J3RpY2tldF9zdGF0dXMnKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkSW5kZXgoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3RpY2tldCcsCiAgICAgICAgICAgIGluZGV4PWRqYW5nby5jb250cmliLnBvc3RncmVzLmluZGV4ZXMuQlRyZWVJbmRleChmaWVsZHM9WydjcmVhdGVkQXQnXSwgbmFtZT0ndGlja2V0X2NyZWF0ZWRBdCcpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ2Fzc2lnbmVlJ10sIG5hbWU9J3RpY2tldF9hc3NpZ25lZScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5CVHJlZUluZGV4KGZpZWxkcz1bJ2V4ZWN1dG9yJ10sIG5hbWU9J3RpY2tldF9leGVjdXRvcicpLAogICAgICAgICksCiAgICBdCg==

exports.up = async (knex) => {
    await knex.raw(`
BEGIN;
SET statement_timeout = '1500s';
--
-- Create index ticket_property on field(s) property of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_property" ON "Ticket" USING btree ("property");
--
-- Create index ticket_number on field(s) number of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_number" ON "Ticket" USING btree ("number");
--
-- Create index ticket_unitName on field(s) unitName of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_unitName" ON "Ticket" USING btree ("unitName");
--
-- Create index ticket_problemClassifier on field(s) problemClassifier of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_problemClassifier" ON "Ticket" USING btree ("problemClassifier");
--
-- Create index ticket_createdBy on field(s) createdBy of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_createdBy" ON "Ticket" USING btree ("createdBy");
--
-- Create index ticket_isPayable on field(s) isPayable of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_isPayable" ON "Ticket" USING btree ("isPayable");
--
-- Create index ticket_isEmergency on field(s) isEmergency of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_isEmergency" ON "Ticket" USING btree ("isEmergency");
--
-- Create index ticket_isWarranty on field(s) isWarranty of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_isWarranty" ON "Ticket" USING btree ("isWarranty");
--
-- Create index ticket_statusReopenedCounter on field(s) statusReopenedCounter of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_statusReopenedCounter" ON "Ticket" USING btree ("statusReopenedCounter");
--
-- Create index ticket_source on field(s) source of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_source" ON "Ticket" USING btree ("source");
--
-- Create index ticket_status on field(s) status of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_status" ON "Ticket" USING btree ("status");
--
-- Create index ticket_createdAt on field(s) createdAt of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_createdAt" ON "Ticket" USING btree ("createdAt");
--
-- Create index ticket_assignee on field(s) assignee of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_assignee" ON "Ticket" USING btree ("assignee");
--
-- Create index ticket_executor on field(s) executor of model ticket
--
CREATE INDEX IF NOT EXISTS "ticket_executor" ON "Ticket" USING btree ("executor");
SET statement_timeout = '10s';
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
BEGIN;
SET statement_timeout = '1500s';
--
-- Create index ticket_executor on field(s) executor of model ticket
--
DROP INDEX IF EXISTS "ticket_executor";
--
-- Create index ticket_assignee on field(s) assignee of model ticket
--
DROP INDEX IF EXISTS "ticket_assignee";
--
-- Create index ticket_createdAt on field(s) createdAt of model ticket
--
DROP INDEX IF EXISTS "ticket_createdAt";
--
-- Create index ticket_status on field(s) status of model ticket
--
DROP INDEX IF EXISTS "ticket_status";
--
-- Create index ticket_source on field(s) source of model ticket
--
DROP INDEX IF EXISTS "ticket_source";
--
-- Create index ticket_statusReopenedCounter on field(s) statusReopenedCounter of model ticket
--
DROP INDEX IF EXISTS "ticket_statusReopenedCounter";
--
-- Create index ticket_isWarranty on field(s) isWarranty of model ticket
--
DROP INDEX IF EXISTS "ticket_isWarranty";
--
-- Create index ticket_isEmergency on field(s) isEmergency of model ticket
--
DROP INDEX IF EXISTS "ticket_isEmergency";
--
-- Create index ticket_isPayable on field(s) isPayable of model ticket
--
DROP INDEX IF EXISTS "ticket_isPayable";
--
-- Create index ticket_createdBy on field(s) createdBy of model ticket
--
DROP INDEX IF EXISTS "ticket_createdBy";
--
-- Create index ticket_problemClassifier on field(s) problemClassifier of model ticket
--
DROP INDEX IF EXISTS "ticket_problemClassifier";
--
-- Create index ticket_unitName on field(s) unitName of model ticket
--
DROP INDEX IF EXISTS "ticket_unitName";
--
-- Create index ticket_number on field(s) number of model ticket
--
DROP INDEX IF EXISTS "ticket_number";
--
-- Create index ticket_property on field(s) property of model ticket
--
DROP INDEX IF EXISTS "ticket_property";
SET statement_timeout = '10s';
COMMIT;

    `)
}
