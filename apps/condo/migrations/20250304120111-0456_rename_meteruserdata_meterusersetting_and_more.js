// auto generated by kmigrator
// KMIGRATOR:0456_rename_meteruserdata_meterusersetting_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMi4xMyBvbiAyMDI1LTAzLTA0IDA5OjAxCgpmcm9tIGRqYW5nby5kYiBpbXBvcnQgbWlncmF0aW9ucywgbW9kZWxzCgoKY2xhc3MgTWlncmF0aW9uKG1pZ3JhdGlvbnMuTWlncmF0aW9uKToKCiAgICBkZXBlbmRlbmNpZXMgPSBbCiAgICAgICAgKCdfZGphbmdvX3NjaGVtYScsICcwNDU1X2IyYmFwcGFjY2Vzc3JpZ2h0c2V0X2NhbmV4ZWN1dGVyZWdpc3RlcnByb3BlcnR5bWV0ZXJzcmVhZGluZ3NfYW5kX21vcmUnKSwKICAgIF0KCiAgICBvcGVyYXRpb25zID0gWwogICAgICAgIG1pZ3JhdGlvbnMuUmVuYW1lTW9kZWwoCiAgICAgICAgICAgIG9sZF9uYW1lPSdtZXRlcnVzZXJkYXRhJywKICAgICAgICAgICAgbmV3X25hbWU9J21ldGVydXNlcnNldHRpbmcnLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5SZW5hbWVNb2RlbCgKICAgICAgICAgICAgb2xkX25hbWU9J21ldGVydXNlcmRhdGFoaXN0b3J5cmVjb3JkJywKICAgICAgICAgICAgbmV3X25hbWU9J21ldGVydXNlcnNldHRpbmdoaXN0b3J5cmVjb3JkJywKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuUmVtb3ZlQ29uc3RyYWludCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nbWV0ZXJ1c2Vyc2V0dGluZycsCiAgICAgICAgICAgIG5hbWU9J01ldGVyX3VzZXJfZGF0YV91bmlxdWVfdXNlcl9tZXRlcicsCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J21ldGVydXNlcnNldHRpbmcnLAogICAgICAgICAgICBjb25zdHJhaW50PW1vZGVscy5VbmlxdWVDb25zdHJhaW50KGNvbmRpdGlvbj1tb2RlbHMuUSgoJ2RlbGV0ZWRBdF9faXNudWxsJywgVHJ1ZSkpLCBmaWVsZHM9KCd1c2VyJywgJ21ldGVyJyksIG5hbWU9J01ldGVyX3VzZXJfc2V0dGluZ191bmlxdWVfdXNlcl9tZXRlcicpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BbHRlck1vZGVsVGFibGUoCiAgICAgICAgICAgIG5hbWU9J21ldGVydXNlcnNldHRpbmcnLAogICAgICAgICAgICB0YWJsZT0nTWV0ZXJVc2VyU2V0dGluZycsCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFsdGVyTW9kZWxUYWJsZSgKICAgICAgICAgICAgbmFtZT0nbWV0ZXJ1c2Vyc2V0dGluZ2hpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICB0YWJsZT0nTWV0ZXJVc2VyU2V0dGluZ0hpc3RvcnlSZWNvcmQnLAogICAgICAgICksCiAgICBdCg==

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Rename model meteruserdata to meterusersetting
--
-- (no-op)
--
-- Rename model meteruserdatahistoryrecord to meterusersettinghistoryrecord
--
-- (no-op)
--
-- Remove constraint Meter_user_data_unique_user_meter from model meterusersetting
--
DROP INDEX IF EXISTS "Meter_user_data_unique_user_meter";
--
-- Create constraint Meter_user_setting_unique_user_meter on model meterusersetting
--
CREATE UNIQUE INDEX "Meter_user_setting_unique_user_meter" ON "MeterUserData" ("user", "meter") WHERE "deletedAt" IS NULL;
--
-- Rename table for meterusersetting to MeterUserSetting
--
ALTER TABLE "MeterUserData" RENAME TO "MeterUserSetting";
--
-- Rename table for meterusersettinghistoryrecord to MeterUserSettingHistoryRecord
--
ALTER TABLE "MeterUserDataHistoryRecord" RENAME TO "MeterUserSettingHistoryRecord";
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Rename table for meterusersettinghistoryrecord to MeterUserSettingHistoryRecord
--
ALTER TABLE "MeterUserSettingHistoryRecord" RENAME TO "MeterUserDataHistoryRecord";
--
-- Rename table for meterusersetting to MeterUserSetting
--
ALTER TABLE "MeterUserSetting" RENAME TO "MeterUserData";
--
-- Create constraint Meter_user_setting_unique_user_meter on model meterusersetting
--
DROP INDEX IF EXISTS "Meter_user_setting_unique_user_meter";
--
-- Remove constraint Meter_user_data_unique_user_meter from model meterusersetting
--
CREATE UNIQUE INDEX "Meter_user_data_unique_user_meter" ON "MeterUserData" ("user", "meter") WHERE "deletedAt" IS NULL;
--
-- Rename model meteruserdatahistoryrecord to meterusersettinghistoryrecord
--
-- (no-op)
--
-- Rename model meteruserdata to meterusersetting
--
-- (no-op)
COMMIT;

    `)
}
