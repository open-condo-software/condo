// auto generated by kmigrator
// KMIGRATOR:0221_meter_importid_meter_importremotesystem_meter_meta_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMS4zIG9uIDIwMjMtMDItMTkgMTg6MjAKCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zLCBtb2RlbHMKCgpjbGFzcyBNaWdyYXRpb24obWlncmF0aW9ucy5NaWdyYXRpb24pOgoKICAgIGRlcGVuZGVuY2llcyA9IFsKICAgICAgICAoJ19kamFuZ29fc2NoZW1hJywgJzAyMjBfYXV0b18yMDIzMDIxM18xMDU1JyksCiAgICBdCgogICAgb3BlcmF0aW9ucyA9IFsKICAgICAgICBtaWdyYXRpb25zLkFkZEZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSdtZXRlcicsCiAgICAgICAgICAgIG5hbWU9J2ltcG9ydElkJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLlRleHRGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nbWV0ZXInLAogICAgICAgICAgICBuYW1lPSdpbXBvcnRSZW1vdGVTeXN0ZW0nLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuVGV4dEZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSdtZXRlcicsCiAgICAgICAgICAgIG5hbWU9J21ldGEnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuSlNPTkZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSdtZXRlcmhpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICBuYW1lPSdpbXBvcnRJZCcsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5UZXh0RmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J21ldGVyaGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIG5hbWU9J2ltcG9ydFJlbW90ZVN5c3RlbScsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5UZXh0RmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J21ldGVyaGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIG5hbWU9J21ldGEnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuSlNPTkZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J21ldGVyJywKICAgICAgICAgICAgY29uc3RyYWludD1tb2RlbHMuVW5pcXVlQ29uc3RyYWludChjb25kaXRpb249bW9kZWxzLlEoKCdkZWxldGVkQXRfX2lzbnVsbCcsIFRydWUpKSwgZmllbGRzPSgnaW1wb3J0SWQnLCAnaW1wb3J0UmVtb3RlU3lzdGVtJyksIG5hbWU9J21ldGVyX3VuaXF1ZV9pbXBvcnRpZF9hbmRfaW1wb3J0cmVtb3Rlc3lzdGVtJyksCiAgICAgICAgKSwKICAgIF0K

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Add field importId to meter
--
ALTER TABLE "Meter" ADD COLUMN "importId" text NULL;
--
-- Add field importRemoteSystem to meter
--
ALTER TABLE "Meter" ADD COLUMN "importRemoteSystem" text NULL;
--
-- Add field meta to meter
--
ALTER TABLE "Meter" ADD COLUMN "meta" jsonb NULL;
--
-- Add field importId to meterhistoryrecord
--
ALTER TABLE "MeterHistoryRecord" ADD COLUMN "importId" text NULL;
--
-- Add field importRemoteSystem to meterhistoryrecord
--
ALTER TABLE "MeterHistoryRecord" ADD COLUMN "importRemoteSystem" text NULL;
--
-- Add field meta to meterhistoryrecord
--
ALTER TABLE "MeterHistoryRecord" ADD COLUMN "meta" jsonb NULL;
--
-- Create constraint meter_unique_importid_and_importremotesystem on model meter
--
CREATE UNIQUE INDEX "meter_unique_importid_and_importremotesystem" ON "Meter" ("importId", "importRemoteSystem") WHERE "deletedAt" IS NULL;
COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create constraint meter_unique_importid_and_importremotesystem on model meter
--
DROP INDEX IF EXISTS "meter_unique_importid_and_importremotesystem";
--
-- Add field meta to meterhistoryrecord
--
ALTER TABLE "MeterHistoryRecord" DROP COLUMN "meta" CASCADE;
--
-- Add field importRemoteSystem to meterhistoryrecord
--
ALTER TABLE "MeterHistoryRecord" DROP COLUMN "importRemoteSystem" CASCADE;
--
-- Add field importId to meterhistoryrecord
--
ALTER TABLE "MeterHistoryRecord" DROP COLUMN "importId" CASCADE;
--
-- Add field meta to meter
--
ALTER TABLE "Meter" DROP COLUMN "meta" CASCADE;
--
-- Add field importRemoteSystem to meter
--
ALTER TABLE "Meter" DROP COLUMN "importRemoteSystem" CASCADE;
--
-- Add field importId to meter
--
ALTER TABLE "Meter" DROP COLUMN "importId" CASCADE;
COMMIT;

    `)
}
