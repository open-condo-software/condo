// auto generated by kmigrator
// KMIGRATOR:0186_assigneescope_assigneescopehistoryrecord_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMSBvbiAyMDIyLTExLTE0IDA3OjMxCgpmcm9tIGRqYW5nby5kYiBpbXBvcnQgbWlncmF0aW9ucywgbW9kZWxzCmltcG9ydCBkamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uCgoKY2xhc3MgTWlncmF0aW9uKG1pZ3JhdGlvbnMuTWlncmF0aW9uKToKCiAgICBkZXBlbmRlbmNpZXMgPSBbCiAgICAgICAgKCdfZGphbmdvX3NjaGVtYScsICcwMTg1X3dlYmhvb2tzdWJzY3JpcHRpb25fZmFpbHVyZXNjb3VudF9hbmRfbW9yZScpLAogICAgXQoKICAgIG9wZXJhdGlvbnMgPSBbCiAgICAgICAgbWlncmF0aW9ucy5DcmVhdGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0nYXNzaWduZWVzY29wZScsCiAgICAgICAgICAgIGZpZWxkcz1bCiAgICAgICAgICAgICAgICAoJ2lkJywgbW9kZWxzLlVVSURGaWVsZChwcmltYXJ5X2tleT1UcnVlLCBzZXJpYWxpemU9RmFsc2UpKSwKICAgICAgICAgICAgICAgICgndicsIG1vZGVscy5JbnRlZ2VyRmllbGQoZGVmYXVsdD0xKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZGVsZXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ25ld0lkJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZHYnLCBtb2RlbHMuSW50ZWdlckZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdzZW5kZXInLCBtb2RlbHMuSlNPTkZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQnknLCBtb2RlbHMuRm9yZWlnbktleShibGFuaz1UcnVlLCBkYl9jb2x1bW49J2NyZWF0ZWRCeScsIG51bGw9VHJ1ZSwgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uU0VUX05VTEwsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJykpLAogICAgICAgICAgICAgICAgKCd0aWNrZXQnLCBtb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J3RpY2tldCcsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLkNBU0NBREUsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS50aWNrZXQnKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRCeScsIG1vZGVscy5Gb3JlaWduS2V5KGJsYW5rPVRydWUsIGRiX2NvbHVtbj0ndXBkYXRlZEJ5JywgbnVsbD1UcnVlLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5TRVRfTlVMTCwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLnVzZXInKSksCiAgICAgICAgICAgICAgICAoJ3VzZXInLCBtb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J3VzZXInLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgb3B0aW9ucz17CiAgICAgICAgICAgICAgICAnZGJfdGFibGUnOiAnQXNzaWduZWVTY29wZScsCiAgICAgICAgICAgIH0sCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkNyZWF0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdhc3NpZ25lZXNjb3BlaGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIGZpZWxkcz1bCiAgICAgICAgICAgICAgICAoJ3VzZXInLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd0aWNrZXQnLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdpZCcsIG1vZGVscy5VVUlERmllbGQocHJpbWFyeV9rZXk9VHJ1ZSwgc2VyaWFsaXplPUZhbHNlKSksCiAgICAgICAgICAgICAgICAoJ3YnLCBtb2RlbHMuSW50ZWdlckZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRCeScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRCeScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2RlbGV0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCduZXdJZCcsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2R2JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc2VuZGVyJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9kYXRlJywgbW9kZWxzLkRhdGVUaW1lRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfYWN0aW9uJywgbW9kZWxzLkNoYXJGaWVsZChjaG9pY2VzPVsoJ2MnLCAnYycpLCAoJ3UnLCAndScpLCAoJ2QnLCAnZCcpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2lkJywgbW9kZWxzLlVVSURGaWVsZChkYl9pbmRleD1UcnVlKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ0Fzc2lnbmVlU2NvcGVIaXN0b3J5UmVjb3JkJywKICAgICAgICAgICAgfSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQ3JlYXRlTW9kZWwoCiAgICAgICAgICAgIG5hbWU9J29yZ2FuaXphdGlvbmVtcGxveWVlc3BlY2lhbGl6YXRpb24nLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCdpZCcsIG1vZGVscy5VVUlERmllbGQocHJpbWFyeV9rZXk9VHJ1ZSwgc2VyaWFsaXplPUZhbHNlKSksCiAgICAgICAgICAgICAgICAoJ3YnLCBtb2RlbHMuSW50ZWdlckZpZWxkKGRlZmF1bHQ9MSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2RlbGV0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCduZXdJZCcsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2R2JywgbW9kZWxzLkludGVnZXJGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnc2VuZGVyJywgbW9kZWxzLkpTT05GaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEJ5JywgbW9kZWxzLkZvcmVpZ25LZXkoYmxhbms9VHJ1ZSwgZGJfY29sdW1uPSdjcmVhdGVkQnknLCBudWxsPVRydWUsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLlNFVF9OVUxMLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgb3B0aW9ucz17CiAgICAgICAgICAgICAgICAnZGJfdGFibGUnOiAnT3JnYW5pemF0aW9uRW1wbG95ZWVTcGVjaWFsaXphdGlvbicsCiAgICAgICAgICAgIH0sCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkNyZWF0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdvcmdhbml6YXRpb25lbXBsb3llZXNwZWNpYWxpemF0aW9uaGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIGZpZWxkcz1bCiAgICAgICAgICAgICAgICAoJ2VtcGxveWVlJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc3BlY2lhbGl6YXRpb24nLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdpZCcsIG1vZGVscy5VVUlERmllbGQocHJpbWFyeV9rZXk9VHJ1ZSwgc2VyaWFsaXplPUZhbHNlKSksCiAgICAgICAgICAgICAgICAoJ3YnLCBtb2RlbHMuSW50ZWdlckZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRCeScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRCeScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2RlbGV0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCduZXdJZCcsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2R2JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc2VuZGVyJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9kYXRlJywgbW9kZWxzLkRhdGVUaW1lRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfYWN0aW9uJywgbW9kZWxzLkNoYXJGaWVsZChjaG9pY2VzPVsoJ2MnLCAnYycpLCAoJ3UnLCAndScpLCAoJ2QnLCAnZCcpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2lkJywgbW9kZWxzLlVVSURGaWVsZChkYl9pbmRleD1UcnVlKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ09yZ2FuaXphdGlvbkVtcGxveWVlU3BlY2lhbGl6YXRpb25IaXN0b3J5UmVjb3JkJywKICAgICAgICAgICAgfSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQ3JlYXRlTW9kZWwoCiAgICAgICAgICAgIG5hbWU9J3Byb3BlcnR5c2NvcGUnLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCduYW1lJywgbW9kZWxzLlRleHRGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnaGFzQWxsUHJvcGVydGllcycsIG1vZGVscy5Cb29sZWFuRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2hhc0FsbEVtcGxveWVlcycsIG1vZGVscy5Cb29sZWFuRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2lkJywgbW9kZWxzLlVVSURGaWVsZChwcmltYXJ5X2tleT1UcnVlLCBzZXJpYWxpemU9RmFsc2UpKSwKICAgICAgICAgICAgICAgICgndicsIG1vZGVscy5JbnRlZ2VyRmllbGQoZGVmYXVsdD0xKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZGVsZXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ25ld0lkJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZHYnLCBtb2RlbHMuSW50ZWdlckZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdzZW5kZXInLCBtb2RlbHMuSlNPTkZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQnknLCBtb2RlbHMuRm9yZWlnbktleShibGFuaz1UcnVlLCBkYl9jb2x1bW49J2NyZWF0ZWRCeScsIG51bGw9VHJ1ZSwgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uU0VUX05VTEwsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJykpLAogICAgICAgICAgICAgICAgKCdvcmdhbml6YXRpb24nLCBtb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J29yZ2FuaXphdGlvbicsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLkNBU0NBREUsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS5vcmdhbml6YXRpb24nKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRCeScsIG1vZGVscy5Gb3JlaWduS2V5KGJsYW5rPVRydWUsIGRiX2NvbHVtbj0ndXBkYXRlZEJ5JywgbnVsbD1UcnVlLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5TRVRfTlVMTCwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLnVzZXInKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ1Byb3BlcnR5U2NvcGUnLAogICAgICAgICAgICB9LAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5DcmVhdGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0ncHJvcGVydHlzY29wZWhpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCduYW1lJywgbW9kZWxzLlRleHRGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnb3JnYW5pemF0aW9uJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaGFzQWxsUHJvcGVydGllcycsIG1vZGVscy5Cb29sZWFuRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2hhc0FsbEVtcGxveWVlcycsIG1vZGVscy5Cb29sZWFuRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2lkJywgbW9kZWxzLlVVSURGaWVsZChwcmltYXJ5X2tleT1UcnVlLCBzZXJpYWxpemU9RmFsc2UpKSwKICAgICAgICAgICAgICAgICgndicsIG1vZGVscy5JbnRlZ2VyRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEJ5JywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEJ5JywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZGVsZXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ25ld0lkJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZHYnLCBtb2RlbHMuSW50ZWdlckZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdzZW5kZXInLCBtb2RlbHMuSlNPTkZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2RhdGUnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZCgpKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9hY3Rpb24nLCBtb2RlbHMuQ2hhckZpZWxkKGNob2ljZXM9WygnYycsICdjJyksICgndScsICd1JyksICgnZCcsICdkJyldLCBtYXhfbGVuZ3RoPTUwKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfaWQnLCBtb2RlbHMuVVVJREZpZWxkKGRiX2luZGV4PVRydWUpKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgb3B0aW9ucz17CiAgICAgICAgICAgICAgICAnZGJfdGFibGUnOiAnUHJvcGVydHlTY29wZUhpc3RvcnlSZWNvcmQnLAogICAgICAgICAgICB9LAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5DcmVhdGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0ncHJvcGVydHlzY29wZW9yZ2FuaXphdGlvbmVtcGxveWVlJywKICAgICAgICAgICAgZmllbGRzPVsKICAgICAgICAgICAgICAgICgnaWQnLCBtb2RlbHMuVVVJREZpZWxkKHByaW1hcnlfa2V5PVRydWUsIHNlcmlhbGl6ZT1GYWxzZSkpLAogICAgICAgICAgICAgICAgKCd2JywgbW9kZWxzLkludGVnZXJGaWVsZChkZWZhdWx0PTEpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdkZWxldGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnbmV3SWQnLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdkdicsIG1vZGVscy5JbnRlZ2VyRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ3NlbmRlcicsIG1vZGVscy5KU09ORmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRCeScsIG1vZGVscy5Gb3JlaWduS2V5KGJsYW5rPVRydWUsIGRiX2NvbHVtbj0nY3JlYXRlZEJ5JywgbnVsbD1UcnVlLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5TRVRfTlVMTCwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLnVzZXInKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ1Byb3BlcnR5U2NvcGVPcmdhbml6YXRpb25FbXBsb3llZScsCiAgICAgICAgICAgIH0sCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkNyZWF0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdwcm9wZXJ0eXNjb3Blb3JnYW5pemF0aW9uZW1wbG95ZWVoaXN0b3J5cmVjb3JkJywKICAgICAgICAgICAgZmllbGRzPVsKICAgICAgICAgICAgICAgICgncHJvcGVydHlTY29wZScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2VtcGxveWVlJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaWQnLCBtb2RlbHMuVVVJREZpZWxkKHByaW1hcnlfa2V5PVRydWUsIHNlcmlhbGl6ZT1GYWxzZSkpLAogICAgICAgICAgICAgICAgKCd2JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnY3JlYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQnknLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQnknLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdkZWxldGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnbmV3SWQnLCBtb2RlbHMuSlNPTkZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdkdicsIG1vZGVscy5JbnRlZ2VyRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3NlbmRlcicsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfZGF0ZScsIG1vZGVscy5EYXRlVGltZUZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2FjdGlvbicsIG1vZGVscy5DaGFyRmllbGQoY2hvaWNlcz1bKCdjJywgJ2MnKSwgKCd1JywgJ3UnKSwgKCdkJywgJ2QnKV0sIG1heF9sZW5ndGg9NTApKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9pZCcsIG1vZGVscy5VVUlERmllbGQoZGJfaW5kZXg9VHJ1ZSkpLAogICAgICAgICAgICBdLAogICAgICAgICAgICBvcHRpb25zPXsKICAgICAgICAgICAgICAgICdkYl90YWJsZSc6ICdQcm9wZXJ0eVNjb3BlT3JnYW5pemF0aW9uRW1wbG95ZWVIaXN0b3J5UmVjb3JkJywKICAgICAgICAgICAgfSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQ3JlYXRlTW9kZWwoCiAgICAgICAgICAgIG5hbWU9J3Byb3BlcnR5c2NvcGVwcm9wZXJ0eScsCiAgICAgICAgICAgIGZpZWxkcz1bCiAgICAgICAgICAgICAgICAoJ2lkJywgbW9kZWxzLlVVSURGaWVsZChwcmltYXJ5X2tleT1UcnVlLCBzZXJpYWxpemU9RmFsc2UpKSwKICAgICAgICAgICAgICAgICgndicsIG1vZGVscy5JbnRlZ2VyRmllbGQoZGVmYXVsdD0xKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIGRiX2luZGV4PVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCd1cGRhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBkYl9pbmRleD1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZGVsZXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgZGJfaW5kZXg9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ25ld0lkJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnZHYnLCBtb2RlbHMuSW50ZWdlckZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdzZW5kZXInLCBtb2RlbHMuSlNPTkZpZWxkKCkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQnknLCBtb2RlbHMuRm9yZWlnbktleShibGFuaz1UcnVlLCBkYl9jb2x1bW49J2NyZWF0ZWRCeScsIG51bGw9VHJ1ZSwgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uU0VUX05VTEwsIHJlbGF0ZWRfbmFtZT0nKycsIHRvPSdfZGphbmdvX3NjaGVtYS51c2VyJykpLAogICAgICAgICAgICAgICAgKCdwcm9wZXJ0eScsIG1vZGVscy5Gb3JlaWduS2V5KGRiX2NvbHVtbj0ncHJvcGVydHknLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEucHJvcGVydHknKSksCiAgICAgICAgICAgICAgICAoJ3Byb3BlcnR5U2NvcGUnLCBtb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J3Byb3BlcnR5U2NvcGUnLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEucHJvcGVydHlzY29wZScpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEJ5JywgbW9kZWxzLkZvcmVpZ25LZXkoYmxhbms9VHJ1ZSwgZGJfY29sdW1uPSd1cGRhdGVkQnknLCBudWxsPVRydWUsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLlNFVF9OVUxMLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgb3B0aW9ucz17CiAgICAgICAgICAgICAgICAnZGJfdGFibGUnOiAnUHJvcGVydHlTY29wZVByb3BlcnR5JywKICAgICAgICAgICAgfSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQ3JlYXRlTW9kZWwoCiAgICAgICAgICAgIG5hbWU9J3Byb3BlcnR5c2NvcGVwcm9wZXJ0eWhpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICBmaWVsZHM9WwogICAgICAgICAgICAgICAgKCdwcm9wZXJ0eVNjb3BlJywgbW9kZWxzLlVVSURGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgncHJvcGVydHknLCBtb2RlbHMuVVVJREZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdpZCcsIG1vZGVscy5VVUlERmllbGQocHJpbWFyeV9rZXk9VHJ1ZSwgc2VyaWFsaXplPUZhbHNlKSksCiAgICAgICAgICAgICAgICAoJ3YnLCBtb2RlbHMuSW50ZWdlckZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCdjcmVhdGVkQXQnLCBtb2RlbHMuRGF0ZVRpbWVGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgndXBkYXRlZEF0JywgbW9kZWxzLkRhdGVUaW1lRmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2NyZWF0ZWRCeScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ3VwZGF0ZWRCeScsIG1vZGVscy5VVUlERmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2RlbGV0ZWRBdCcsIG1vZGVscy5EYXRlVGltZUZpZWxkKGJsYW5rPVRydWUsIG51bGw9VHJ1ZSkpLAogICAgICAgICAgICAgICAgKCduZXdJZCcsIG1vZGVscy5KU09ORmllbGQoYmxhbms9VHJ1ZSwgbnVsbD1UcnVlKSksCiAgICAgICAgICAgICAgICAoJ2R2JywgbW9kZWxzLkludGVnZXJGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnc2VuZGVyJywgbW9kZWxzLkpTT05GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpKSwKICAgICAgICAgICAgICAgICgnaGlzdG9yeV9kYXRlJywgbW9kZWxzLkRhdGVUaW1lRmllbGQoKSksCiAgICAgICAgICAgICAgICAoJ2hpc3RvcnlfYWN0aW9uJywgbW9kZWxzLkNoYXJGaWVsZChjaG9pY2VzPVsoJ2MnLCAnYycpLCAoJ3UnLCAndScpLCAoJ2QnLCAnZCcpXSwgbWF4X2xlbmd0aD01MCkpLAogICAgICAgICAgICAgICAgKCdoaXN0b3J5X2lkJywgbW9kZWxzLlVVSURGaWVsZChkYl9pbmRleD1UcnVlKSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG9wdGlvbnM9ewogICAgICAgICAgICAgICAgJ2RiX3RhYmxlJzogJ1Byb3BlcnR5U2NvcGVQcm9wZXJ0eUhpc3RvcnlSZWNvcmQnLAogICAgICAgICAgICB9LAogICAgICAgICksCiMgICAgICAgIG1pZ3JhdGlvbnMuUmVtb3ZlRmllbGQoCiMgICAgICAgICAgICBtb2RlbF9uYW1lPSdkaXZpc2lvbicsCiMgICAgICAgICAgICBuYW1lPSdjcmVhdGVkQnknLAojICAgICAgICApLAojICAgICAgICBtaWdyYXRpb25zLlJlbW92ZUZpZWxkKAojICAgICAgICAgICAgbW9kZWxfbmFtZT0nZGl2aXNpb24nLAojICAgICAgICAgICAgbmFtZT0nb3JnYW5pemF0aW9uJywKIyAgICAgICAgKSwKIyAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKIyAgICAgICAgICAgIG1vZGVsX25hbWU9J2RpdmlzaW9uJywKIyAgICAgICAgICAgIG5hbWU9J3Jlc3BvbnNpYmxlJywKIyAgICAgICAgKSwKIyAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKIyAgICAgICAgICAgIG1vZGVsX25hbWU9J2RpdmlzaW9uJywKIyAgICAgICAgICAgIG5hbWU9J3VwZGF0ZWRCeScsCiMgICAgICAgICksCiMgICAgICAgIG1pZ3JhdGlvbnMuUmVtb3ZlRmllbGQoCiMgICAgICAgICAgICBtb2RlbF9uYW1lPSdkaXZpc2lvbl9leGVjdXRvcnNfbWFueScsCiMgICAgICAgICAgICBuYW1lPSdEaXZpc2lvbl9sZWZ0X2lkJywKIyAgICAgICAgKSwKIyAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKIyAgICAgICAgICAgIG1vZGVsX25hbWU9J2RpdmlzaW9uX2V4ZWN1dG9yc19tYW55JywKIyAgICAgICAgICAgIG5hbWU9J09yZ2FuaXphdGlvbkVtcGxveWVlX3JpZ2h0X2lkJywKIyAgICAgICAgKSwKIyAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKIyAgICAgICAgICAgIG1vZGVsX25hbWU9J2RpdmlzaW9uX3Byb3BlcnRpZXNfbWFueScsCiMgICAgICAgICAgICBuYW1lPSdEaXZpc2lvbl9sZWZ0X2lkJywKIyAgICAgICAgKSwKIyAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKIyAgICAgICAgICAgIG1vZGVsX25hbWU9J2RpdmlzaW9uX3Byb3BlcnRpZXNfbWFueScsCiMgICAgICAgICAgICBuYW1lPSdQcm9wZXJ0eV9yaWdodF9pZCcsCiMgICAgICAgICksCiMgICAgICAgIG1pZ3JhdGlvbnMuUmVtb3ZlRmllbGQoCiMgICAgICAgICAgICBtb2RlbF9uYW1lPSdvcmdhbml6YXRpb25lbXBsb3llZV9zcGVjaWFsaXphdGlvbnNfbWFueScsCiMgICAgICAgICAgICBuYW1lPSdPcmdhbml6YXRpb25FbXBsb3llZV9sZWZ0X2lkJywKIyAgICAgICAgKSwKIyAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKIyAgICAgICAgICAgIG1vZGVsX25hbWU9J29yZ2FuaXphdGlvbmVtcGxveWVlX3NwZWNpYWxpemF0aW9uc19tYW55JywKIyAgICAgICAgICAgIG5hbWU9J1RpY2tldENhdGVnb3J5Q2xhc3NpZmllcl9yaWdodF9pZCcsCiMgICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5SZW1vdmVGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVyb2xlJywKICAgICAgICAgICAgbmFtZT0nY2FuTWFuYWdlRGl2aXNpb25zJywKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuUmVtb3ZlRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J29yZ2FuaXphdGlvbmVtcGxveWVlcm9sZScsCiAgICAgICAgICAgIG5hbWU9J2NhblJlYWRFbnRpdGllc09ubHlJblNjb3BlT2ZEaXZpc2lvbicsCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLlJlbW92ZUZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSdvcmdhbml6YXRpb25lbXBsb3llZXJvbGVoaXN0b3J5cmVjb3JkJywKICAgICAgICAgICAgbmFtZT0nY2FuTWFuYWdlRGl2aXNpb25zJywKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuUmVtb3ZlRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J29yZ2FuaXphdGlvbmVtcGxveWVlcm9sZWhpc3RvcnlyZWNvcmQnLAogICAgICAgICAgICBuYW1lPSdjYW5SZWFkRW50aXRpZXNPbmx5SW5TY29wZU9mRGl2aXNpb24nLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWUnLAogICAgICAgICAgICBuYW1lPSdoYXNBbGxTcGVjaWFsaXphdGlvbnMnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuQm9vbGVhbkZpZWxkKGRlZmF1bHQ9RmFsc2UpLAogICAgICAgICAgICBwcmVzZXJ2ZV9kZWZhdWx0PUZhbHNlLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVoaXN0b3J5cmVjb3JkJywKICAgICAgICAgICAgbmFtZT0naGFzQWxsU3BlY2lhbGl6YXRpb25zJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLkJvb2xlYW5GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVyb2xlJywKICAgICAgICAgICAgbmFtZT0nY2FuTWFuYWdlUHJvcGVydHlTY29wZXMnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuQm9vbGVhbkZpZWxkKGRlZmF1bHQ9RmFsc2UpLAogICAgICAgICAgICBwcmVzZXJ2ZV9kZWZhdWx0PUZhbHNlLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVyb2xlJywKICAgICAgICAgICAgbmFtZT0ndGlja2V0VmlzaWJpbGl0eVR5cGUnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuVGV4dEZpZWxkKGRlZmF1bHQ9J29yZ2FuaXphdGlvbicpLAogICAgICAgICAgICBwcmVzZXJ2ZV9kZWZhdWx0PUZhbHNlLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVyb2xlaGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIG5hbWU9J2Nhbk1hbmFnZVByb3BlcnR5U2NvcGVzJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLkJvb2xlYW5GaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVyb2xlaGlzdG9yeXJlY29yZCcsCiAgICAgICAgICAgIG5hbWU9J3RpY2tldFZpc2liaWxpdHlUeXBlJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLlRleHRGaWVsZChibGFuaz1UcnVlLCBudWxsPVRydWUpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRGaWVsZCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ncHJvcGVydHlzY29wZW9yZ2FuaXphdGlvbmVtcGxveWVlJywKICAgICAgICAgICAgbmFtZT0nZW1wbG95ZWUnLAogICAgICAgICAgICBmaWVsZD1tb2RlbHMuRm9yZWlnbktleShkYl9jb2x1bW49J2VtcGxveWVlJywgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uQ0FTQ0FERSwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLm9yZ2FuaXphdGlvbmVtcGxveWVlJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSdwcm9wZXJ0eXNjb3Blb3JnYW5pemF0aW9uZW1wbG95ZWUnLAogICAgICAgICAgICBuYW1lPSdwcm9wZXJ0eVNjb3BlJywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLkZvcmVpZ25LZXkoZGJfY29sdW1uPSdwcm9wZXJ0eVNjb3BlJywgb25fZGVsZXRlPWRqYW5nby5kYi5tb2RlbHMuZGVsZXRpb24uQ0FTQ0FERSwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLnByb3BlcnR5c2NvcGUnKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3Byb3BlcnR5c2NvcGVvcmdhbml6YXRpb25lbXBsb3llZScsCiAgICAgICAgICAgIG5hbWU9J3VwZGF0ZWRCeScsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5Gb3JlaWduS2V5KGJsYW5rPVRydWUsIGRiX2NvbHVtbj0ndXBkYXRlZEJ5JywgbnVsbD1UcnVlLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5TRVRfTlVMTCwgcmVsYXRlZF9uYW1lPScrJywgdG89J19kamFuZ29fc2NoZW1hLnVzZXInKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J29yZ2FuaXphdGlvbmVtcGxveWVlc3BlY2lhbGl6YXRpb24nLAogICAgICAgICAgICBuYW1lPSdlbXBsb3llZScsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5Gb3JlaWduS2V5KGRiX2NvbHVtbj0nZW1wbG95ZWUnLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEub3JnYW5pemF0aW9uZW1wbG95ZWUnKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J29yZ2FuaXphdGlvbmVtcGxveWVlc3BlY2lhbGl6YXRpb24nLAogICAgICAgICAgICBuYW1lPSdzcGVjaWFsaXphdGlvbicsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5Gb3JlaWduS2V5KGRiX2NvbHVtbj0nc3BlY2lhbGl6YXRpb24nLCBvbl9kZWxldGU9ZGphbmdvLmRiLm1vZGVscy5kZWxldGlvbi5DQVNDQURFLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudGlja2V0Y2F0ZWdvcnljbGFzc2lmaWVyJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSdvcmdhbml6YXRpb25lbXBsb3llZXNwZWNpYWxpemF0aW9uJywKICAgICAgICAgICAgbmFtZT0ndXBkYXRlZEJ5JywKICAgICAgICAgICAgZmllbGQ9bW9kZWxzLkZvcmVpZ25LZXkoYmxhbms9VHJ1ZSwgZGJfY29sdW1uPSd1cGRhdGVkQnknLCBudWxsPVRydWUsIG9uX2RlbGV0ZT1kamFuZ28uZGIubW9kZWxzLmRlbGV0aW9uLlNFVF9OVUxMLCByZWxhdGVkX25hbWU9JysnLCB0bz0nX2RqYW5nb19zY2hlbWEudXNlcicpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRDb25zdHJhaW50KAogICAgICAgICAgICBtb2RlbF9uYW1lPSdwcm9wZXJ0eXNjb3BlcHJvcGVydHknLAogICAgICAgICAgICBjb25zdHJhaW50PW1vZGVscy5VbmlxdWVDb25zdHJhaW50KGNvbmRpdGlvbj1tb2RlbHMuUSgoJ2RlbGV0ZWRBdF9faXNudWxsJywgVHJ1ZSkpLCBmaWVsZHM9KCdwcm9wZXJ0eVNjb3BlJywgJ3Byb3BlcnR5JyksIG5hbWU9J3Byb3BlcnR5X3Njb3BlX3Byb3BlcnR5X3VuaXF1ZV9wcm9wZXJ0eVNjb3BlX2FuZF9wcm9wZXJ0eScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRDb25zdHJhaW50KAogICAgICAgICAgICBtb2RlbF9uYW1lPSdwcm9wZXJ0eXNjb3Blb3JnYW5pemF0aW9uZW1wbG95ZWUnLAogICAgICAgICAgICBjb25zdHJhaW50PW1vZGVscy5VbmlxdWVDb25zdHJhaW50KGNvbmRpdGlvbj1tb2RlbHMuUSgoJ2RlbGV0ZWRBdF9faXNudWxsJywgVHJ1ZSkpLCBmaWVsZHM9KCdwcm9wZXJ0eVNjb3BlJywgJ2VtcGxveWVlJyksIG5hbWU9J3Byb3BlcnR5X3Njb3BlX29yZ2FuaXphdGlvbl9lbXBsb3llZV91bmlxdWVfcHJvcGVydHlTY29wZV9hbmRfZW1wbG95ZWUnKSwKICAgICAgICApLAogICAgICAgIG1pZ3JhdGlvbnMuQWRkQ29uc3RyYWludCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0nb3JnYW5pemF0aW9uZW1wbG95ZWVzcGVjaWFsaXphdGlvbicsCiAgICAgICAgICAgIGNvbnN0cmFpbnQ9bW9kZWxzLlVuaXF1ZUNvbnN0cmFpbnQoY29uZGl0aW9uPW1vZGVscy5RKCgnZGVsZXRlZEF0X19pc251bGwnLCBUcnVlKSksIGZpZWxkcz0oJ2VtcGxveWVlJywgJ3NwZWNpYWxpemF0aW9uJyksIG5hbWU9J29yZ2FuaXphdGlvbl9lbXBsb3llZV9zcGVjaWFsaXphdGlvbl91bmlxdWVfZW1wbG95ZWVfYW5kX3NwZWNpYWxpemF0aW9uJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZENvbnN0cmFpbnQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J2Fzc2lnbmVlc2NvcGUnLAogICAgICAgICAgICBjb25zdHJhaW50PW1vZGVscy5VbmlxdWVDb25zdHJhaW50KGNvbmRpdGlvbj1tb2RlbHMuUSgoJ2RlbGV0ZWRBdF9faXNudWxsJywgVHJ1ZSkpLCBmaWVsZHM9KCd1c2VyJywgJ3RpY2tldCcpLCBuYW1lPSdhc3NpZ25lZV9zY29wZV91bmlxdWVfdXNlcl9hbmRfdGlja2V0JyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkRlbGV0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdvcmdhbml6YXRpb25lbXBsb3llZV9zcGVjaWFsaXphdGlvbnNfbWFueScsCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkRlbGV0ZU1vZGVsKAogICAgICAgICAgICBuYW1lPSdkaXZpc2lvbl9wcm9wZXJ0aWVzX21hbnknLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5EZWxldGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0nZGl2aXNpb25fZXhlY3V0b3JzX21hbnknLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5EZWxldGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0nZGl2aXNpb24nLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5EZWxldGVNb2RlbCgKICAgICAgICAgICAgbmFtZT0nZGl2aXNpb25oaXN0b3J5cmVjb3JkJywKICAgICAgICApLAogICAgXQo=

exports.up = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- [CUSTOM] Set Statement Timeout to some large amount - 25 min (25 * 60 => 1500 sec)
--
SET statement_timeout = '1500s';

--
-- Create model assigneescope
--
CREATE TABLE "AssigneeScope" ("id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "dv" integer NOT NULL, "sender" jsonb NOT NULL, "createdBy" uuid NULL, "ticket" uuid NOT NULL, "updatedBy" uuid NULL, "user" uuid NOT NULL);
--
-- Create model assigneescopehistoryrecord
--
CREATE TABLE "AssigneeScopeHistoryRecord" ("user" uuid NULL, "ticket" uuid NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "dv" integer NULL, "sender" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Create model organizationemployeespecialization
--
CREATE TABLE "OrganizationEmployeeSpecialization" ("id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "dv" integer NOT NULL, "sender" jsonb NOT NULL, "createdBy" uuid NULL);
--
-- Create model organizationemployeespecializationhistoryrecord
--
CREATE TABLE "OrganizationEmployeeSpecializationHistoryRecord" ("employee" uuid NULL, "specialization" uuid NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "dv" integer NULL, "sender" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Create model propertyscope
--
CREATE TABLE "PropertyScope" ("name" text NOT NULL, "hasAllProperties" boolean NOT NULL, "hasAllEmployees" boolean NOT NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "dv" integer NOT NULL, "sender" jsonb NOT NULL, "createdBy" uuid NULL, "organization" uuid NOT NULL, "updatedBy" uuid NULL);
--
-- Create model propertyscopehistoryrecord
--
CREATE TABLE "PropertyScopeHistoryRecord" ("name" text NULL, "organization" uuid NULL, "hasAllProperties" boolean NULL, "hasAllEmployees" boolean NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "dv" integer NULL, "sender" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Create model propertyscopeorganizationemployee
--
CREATE TABLE "PropertyScopeOrganizationEmployee" ("id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "dv" integer NOT NULL, "sender" jsonb NOT NULL, "createdBy" uuid NULL);
--
-- Create model propertyscopeorganizationemployeehistoryrecord
--
CREATE TABLE "PropertyScopeOrganizationEmployeeHistoryRecord" ("propertyScope" uuid NULL, "employee" uuid NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "dv" integer NULL, "sender" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Create model propertyscopeproperty
--
CREATE TABLE "PropertyScopeProperty" ("id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "dv" integer NOT NULL, "sender" jsonb NOT NULL, "createdBy" uuid NULL, "property" uuid NOT NULL, "propertyScope" uuid NOT NULL, "updatedBy" uuid NULL);
--
-- Create model propertyscopepropertyhistoryrecord
--
CREATE TABLE "PropertyScopePropertyHistoryRecord" ("propertyScope" uuid NULL, "property" uuid NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "dv" integer NULL, "sender" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Remove field canManageDivisions from organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" DROP COLUMN "canManageDivisions" CASCADE;
--
-- Remove field canReadEntitiesOnlyInScopeOfDivision from organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" DROP COLUMN "canReadEntitiesOnlyInScopeOfDivision" CASCADE;
--
-- Remove field canManageDivisions from organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" DROP COLUMN "canManageDivisions" CASCADE;
--
-- Remove field canReadEntitiesOnlyInScopeOfDivision from organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" DROP COLUMN "canReadEntitiesOnlyInScopeOfDivision" CASCADE;
--
-- Add field hasAllSpecializations to organizationemployee
--
ALTER TABLE "OrganizationEmployee" ADD COLUMN "hasAllSpecializations" boolean DEFAULT false NOT NULL;
ALTER TABLE "OrganizationEmployee" ALTER COLUMN "hasAllSpecializations" DROP DEFAULT;
--
-- Add field hasAllSpecializations to organizationemployeehistoryrecord
--
ALTER TABLE "OrganizationEmployeeHistoryRecord" ADD COLUMN "hasAllSpecializations" boolean NULL;
--
-- Add field canManagePropertyScopes to organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" ADD COLUMN "canManagePropertyScopes" boolean DEFAULT false NOT NULL;
ALTER TABLE "OrganizationEmployeeRole" ALTER COLUMN "canManagePropertyScopes" DROP DEFAULT;
--
-- Add field ticketVisibilityType to organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" ADD COLUMN "ticketVisibilityType" text DEFAULT 'organization' NOT NULL;
ALTER TABLE "OrganizationEmployeeRole" ALTER COLUMN "ticketVisibilityType" DROP DEFAULT;
--
-- Add field canManagePropertyScopes to organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" ADD COLUMN "canManagePropertyScopes" boolean NULL;
--
-- Add field ticketVisibilityType to organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" ADD COLUMN "ticketVisibilityType" text NULL;
--
-- Add field employee to propertyscopeorganizationemployee
--
ALTER TABLE "PropertyScopeOrganizationEmployee" ADD COLUMN "employee" uuid NOT NULL CONSTRAINT "PropertyScopeOrganiz_employee_118907dc_fk_Organizat" REFERENCES "OrganizationEmployee"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "PropertyScopeOrganiz_employee_118907dc_fk_Organizat" IMMEDIATE;
--
-- Add field propertyScope to propertyscopeorganizationemployee
--
ALTER TABLE "PropertyScopeOrganizationEmployee" ADD COLUMN "propertyScope" uuid NOT NULL CONSTRAINT "PropertyScopeOrganiz_propertyScope_076ec80d_fk_PropertyS" REFERENCES "PropertyScope"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "PropertyScopeOrganiz_propertyScope_076ec80d_fk_PropertyS" IMMEDIATE;
--
-- Add field updatedBy to propertyscopeorganizationemployee
--
ALTER TABLE "PropertyScopeOrganizationEmployee" ADD COLUMN "updatedBy" uuid NULL CONSTRAINT "PropertyScopeOrganizationEmployee_updatedBy_6914815c_fk_User_id" REFERENCES "User"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "PropertyScopeOrganizationEmployee_updatedBy_6914815c_fk_User_id" IMMEDIATE;
--
-- Add field employee to organizationemployeespecialization
--
ALTER TABLE "OrganizationEmployeeSpecialization" ADD COLUMN "employee" uuid NOT NULL CONSTRAINT "OrganizationEmployee_employee_28b84077_fk_Organizat" REFERENCES "OrganizationEmployee"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "OrganizationEmployee_employee_28b84077_fk_Organizat" IMMEDIATE;
--
-- Add field specialization to organizationemployeespecialization
--
ALTER TABLE "OrganizationEmployeeSpecialization" ADD COLUMN "specialization" uuid NOT NULL CONSTRAINT "OrganizationEmployee_specialization_9be30a04_fk_TicketCat" REFERENCES "TicketCategoryClassifier"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "OrganizationEmployee_specialization_9be30a04_fk_TicketCat" IMMEDIATE;
--
-- Add field updatedBy to organizationemployeespecialization
--
ALTER TABLE "OrganizationEmployeeSpecialization" ADD COLUMN "updatedBy" uuid NULL CONSTRAINT "OrganizationEmployeeS_updatedBy_273238b6_fk_User_id" REFERENCES "User"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "OrganizationEmployeeS_updatedBy_273238b6_fk_User_id" IMMEDIATE;
--
-- Create constraint property_scope_property_unique_propertyScope_and_property on model propertyscopeproperty
--
CREATE UNIQUE INDEX "property_scope_property_unique_propertyScope_and_property" ON "PropertyScopeProperty" ("propertyScope", "property") WHERE "deletedAt" IS NULL;
--
-- Create constraint property_scope_organization_employee_unique_propertyScope_and_employee on model propertyscopeorganizationemployee
--
CREATE UNIQUE INDEX "property_scope_organization_employee_unique_propertyScope_and_employee" ON "PropertyScopeOrganizationEmployee" ("propertyScope", "employee") WHERE "deletedAt" IS NULL;
--
-- Create constraint organization_employee_specialization_unique_employee_and_specialization on model organizationemployeespecialization
--
CREATE UNIQUE INDEX "organization_employee_specialization_unique_employee_and_specialization" ON "OrganizationEmployeeSpecialization" ("employee", "specialization") WHERE "deletedAt" IS NULL;
--
-- Create constraint assignee_scope_unique_user_and_ticket on model assigneescope
--
CREATE UNIQUE INDEX "assignee_scope_unique_user_and_ticket" ON "AssigneeScope" ("user", "ticket") WHERE "deletedAt" IS NULL;

--
-- [CUSTOM] Move data from "OrganizationEmployee_specializations_many" to "OrganizationEmployeeSpecialization"
--
INSERT INTO "OrganizationEmployeeSpecialization" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "employee", "specialization")
SELECT gen_random_uuid(), 1, 1, '{"dv": 1, "fingerprint": "migration"}'::json, now(), now(), specs."OrganizationEmployee_left_id", specs."TicketCategoryClassifier_right_id"
FROM "OrganizationEmployee_specializations_many" as specs
JOIN "OrganizationEmployee" ON "specs"."OrganizationEmployee_left_id" = "OrganizationEmployee".id
JOIN "TicketCategoryClassifier" ON "specs"."TicketCategoryClassifier_right_id" = "TicketCategoryClassifier".id
WHERE "OrganizationEmployee"."deletedAt" IS NULL
AND "TicketCategoryClassifier"."deletedAt"IS NULL;

--
-- [CUSTOM] Move data from Division to PropertyScope
--
INSERT INTO "PropertyScope" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "createdBy", "updatedBy", "deletedAt", "name", "organization", "hasAllProperties", "hasAllEmployees")
SELECT "id", "dv", "v", "sender", "createdAt", "updatedAt", "createdBy", "updatedBy", "deletedAt", "name", "organization", false, false
FROM "Division" 
WHERE "deletedAt" IS NULL 
AND id NOT IN (SELECT id FROM "PropertyScope");

--
-- [CUSTOM] Move data from Division_properties_many to PropertyScopeProperty
--
INSERT INTO "PropertyScopeProperty" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "propertyScope", "property")
SELECT gen_random_uuid(), 1, 1, '{"dv": 1, "fingerprint": "migration"}'::json, now(), now(), "Division_left_id", "Property_right_id"
FROM "Division_properties_many"
JOIN "Division" ON "Division_properties_many"."Division_left_id" = "Division".id
JOIN "Property" ON "Division_properties_many"."Property_right_id" = "Property".id
WHERE "Division"."deletedAt" IS NULL
AND "Property"."deletedAt" IS NULL
AND (SELECT count(*) FROM "PropertyScopeProperty" WHERE "propertyScope" = "Division_left_id" AND "property" = "Property_right_id") = 0;

--
-- [CUSTOM] Move data from Division_executors_many (not responsible employees) to PropertyScopeOrganizationEmployee
--
INSERT INTO "PropertyScopeOrganizationEmployee" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "propertyScope", "employee")
SELECT gen_random_uuid(), 1, 1, '{"dv": 1, "fingerprint": "migration"}'::json, now(), now(), t."Division_left_id", t."OrganizationEmployee_right_id"
FROM (
    SELECT * FROM "Division_executors_many"
    JOIN "Division" ON "Division_executors_many"."Division_left_id" = "Division".id
    JOIN "OrganizationEmployee" ON "Division_executors_many"."OrganizationEmployee_right_id" = "OrganizationEmployee".id
    WHERE "Division"."deletedAt" IS NULL
    AND "OrganizationEmployee"."deletedAt" IS NULL
    AND "OrganizationEmployee_right_id" NOT IN (SELECT "responsible" FROM "Division" WHERE "Division".id = "Division_left_id")
    AND (SELECT count(*) FROM "PropertyScopeOrganizationEmployee" WHERE "propertyScope" = "Division_left_id" AND "employee" = "OrganizationEmployee_right_id") = 0
    ) as t;

--
-- [CUSTOM] Move data from Division.responsible to PropertyScopeOrganizationEmployee
--
INSERT INTO "PropertyScopeOrganizationEmployee" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "propertyScope", "employee")
SELECT gen_random_uuid(), 1, 1, '{"dv": 1, "fingerprint": "migration"}'::json, now(), now(), "Division"."id",  "Division"."responsible"
FROM "Division"
    JOIN "OrganizationEmployee" ON "Division"."responsible" = "OrganizationEmployee".id
    WHERE "Division"."deletedAt" IS NULL
    AND "OrganizationEmployee"."deletedAt" IS NULL
    AND (SELECT count(*) FROM "PropertyScopeOrganizationEmployee" WHERE "propertyScope" = "Division".id AND "employee" = "responsible") = 0;

--
-- Delete model organizationemployee_specializations_many
--
-- DROP TABLE "OrganizationEmployee_specializations_many" CASCADE;
--
-- Delete model division_properties_many
--
-- DROP TABLE "Division_properties_many" CASCADE;
--
-- Delete model division_executors_many
--
-- DROP TABLE "Division_executors_many" CASCADE;
--
-- Delete model division
--
-- DROP TABLE "Division" CASCADE;
--
-- Delete model divisionhistoryrecord
--
-- DROP TABLE "DivisionHistoryRecord" CASCADE;
ALTER TABLE "AssigneeScope" ADD CONSTRAINT "AssigneeScope_createdBy_4605faa4_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AssigneeScope" ADD CONSTRAINT "AssigneeScope_ticket_e8a38c15_fk_Ticket_id" FOREIGN KEY ("ticket") REFERENCES "Ticket" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AssigneeScope" ADD CONSTRAINT "AssigneeScope_updatedBy_3e164999_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AssigneeScope" ADD CONSTRAINT "AssigneeScope_user_30b38706_fk_User_id" FOREIGN KEY ("user") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "AssigneeScope_createdAt_f0087a85" ON "AssigneeScope" ("createdAt");
CREATE INDEX "AssigneeScope_updatedAt_fd0fda5f" ON "AssigneeScope" ("updatedAt");
CREATE INDEX "AssigneeScope_deletedAt_521af26a" ON "AssigneeScope" ("deletedAt");
CREATE INDEX "AssigneeScope_createdBy_4605faa4" ON "AssigneeScope" ("createdBy");
CREATE INDEX "AssigneeScope_ticket_e8a38c15" ON "AssigneeScope" ("ticket");
CREATE INDEX "AssigneeScope_updatedBy_3e164999" ON "AssigneeScope" ("updatedBy");
CREATE INDEX "AssigneeScope_user_30b38706" ON "AssigneeScope" ("user");
CREATE INDEX "AssigneeScopeHistoryRecord_history_id_f722994a" ON "AssigneeScopeHistoryRecord" ("history_id");
ALTER TABLE "OrganizationEmployeeSpecialization" ADD CONSTRAINT "OrganizationEmployeeS_createdBy_cffba65e_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "OrganizationEmployeeSpecialization_createdAt_2ae20681" ON "OrganizationEmployeeSpecialization" ("createdAt");
CREATE INDEX "OrganizationEmployeeSpecialization_updatedAt_89f07260" ON "OrganizationEmployeeSpecialization" ("updatedAt");
CREATE INDEX "OrganizationEmployeeSpecialization_deletedAt_54693db7" ON "OrganizationEmployeeSpecialization" ("deletedAt");
CREATE INDEX "OrganizationEmployeeSpecialization_createdBy_cffba65e" ON "OrganizationEmployeeSpecialization" ("createdBy");
CREATE INDEX "OrganizationEmployeeSpecia_history_id_2c49c804" ON "OrganizationEmployeeSpecializationHistoryRecord" ("history_id");
ALTER TABLE "PropertyScope" ADD CONSTRAINT "PropertyScope_createdBy_3fb69231_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PropertyScope" ADD CONSTRAINT "PropertyScope_organization_329d9730_fk_Organization_id" FOREIGN KEY ("organization") REFERENCES "Organization" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PropertyScope" ADD CONSTRAINT "PropertyScope_updatedBy_1b952ecf_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "PropertyScope_createdAt_16cb5372" ON "PropertyScope" ("createdAt");
CREATE INDEX "PropertyScope_updatedAt_56f8ae59" ON "PropertyScope" ("updatedAt");
CREATE INDEX "PropertyScope_deletedAt_a961c518" ON "PropertyScope" ("deletedAt");
CREATE INDEX "PropertyScope_createdBy_3fb69231" ON "PropertyScope" ("createdBy");
CREATE INDEX "PropertyScope_organization_329d9730" ON "PropertyScope" ("organization");
CREATE INDEX "PropertyScope_updatedBy_1b952ecf" ON "PropertyScope" ("updatedBy");
CREATE INDEX "PropertyScopeHistoryRecord_history_id_ed94ad04" ON "PropertyScopeHistoryRecord" ("history_id");
ALTER TABLE "PropertyScopeOrganizationEmployee" ADD CONSTRAINT "PropertyScopeOrganizationEmployee_createdBy_c1b8bfe8_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "PropertyScopeOrganizationEmployee_createdAt_c7985f5b" ON "PropertyScopeOrganizationEmployee" ("createdAt");
CREATE INDEX "PropertyScopeOrganizationEmployee_updatedAt_e953bf13" ON "PropertyScopeOrganizationEmployee" ("updatedAt");
CREATE INDEX "PropertyScopeOrganizationEmployee_deletedAt_4276a425" ON "PropertyScopeOrganizationEmployee" ("deletedAt");
CREATE INDEX "PropertyScopeOrganizationEmployee_createdBy_c1b8bfe8" ON "PropertyScopeOrganizationEmployee" ("createdBy");
CREATE INDEX "PropertyScopeOrganizationE_history_id_16e45b61" ON "PropertyScopeOrganizationEmployeeHistoryRecord" ("history_id");
ALTER TABLE "PropertyScopeProperty" ADD CONSTRAINT "PropertyScopeProperty_createdBy_ce29b95a_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PropertyScopeProperty" ADD CONSTRAINT "PropertyScopeProperty_property_74dbfc06_fk_Property_id" FOREIGN KEY ("property") REFERENCES "Property" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PropertyScopeProperty" ADD CONSTRAINT "PropertyScopePropert_propertyScope_0938a3e1_fk_PropertyS" FOREIGN KEY ("propertyScope") REFERENCES "PropertyScope" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PropertyScopeProperty" ADD CONSTRAINT "PropertyScopeProperty_updatedBy_91fcf616_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "PropertyScopeProperty_createdAt_bbb39a06" ON "PropertyScopeProperty" ("createdAt");
CREATE INDEX "PropertyScopeProperty_updatedAt_904a0d96" ON "PropertyScopeProperty" ("updatedAt");
CREATE INDEX "PropertyScopeProperty_deletedAt_07315922" ON "PropertyScopeProperty" ("deletedAt");
CREATE INDEX "PropertyScopeProperty_createdBy_ce29b95a" ON "PropertyScopeProperty" ("createdBy");
CREATE INDEX "PropertyScopeProperty_property_74dbfc06" ON "PropertyScopeProperty" ("property");
CREATE INDEX "PropertyScopeProperty_propertyScope_0938a3e1" ON "PropertyScopeProperty" ("propertyScope");
CREATE INDEX "PropertyScopeProperty_updatedBy_91fcf616" ON "PropertyScopeProperty" ("updatedBy");
CREATE INDEX "PropertyScopePropertyHistoryRecord_history_id_cdae15fe" ON "PropertyScopePropertyHistoryRecord" ("history_id");
CREATE INDEX "PropertyScopeOrganizationEmployee_employee_118907dc" ON "PropertyScopeOrganizationEmployee" ("employee");
CREATE INDEX "PropertyScopeOrganizationEmployee_propertyScope_076ec80d" ON "PropertyScopeOrganizationEmployee" ("propertyScope");
CREATE INDEX "PropertyScopeOrganizationEmployee_updatedBy_6914815c" ON "PropertyScopeOrganizationEmployee" ("updatedBy");
CREATE INDEX "OrganizationEmployeeSpecialization_employee_28b84077" ON "OrganizationEmployeeSpecialization" ("employee");
CREATE INDEX "OrganizationEmployeeSpecialization_specialization_9be30a04" ON "OrganizationEmployeeSpecialization" ("specialization");
CREATE INDEX "OrganizationEmployeeSpecialization_updatedBy_273238b6" ON "OrganizationEmployeeSpecialization" ("updatedBy");

-- 
-- [CUSTOM] Set all specializations to employees who has not any specialization 
--
UPDATE "OrganizationEmployee" as e
SET "hasAllSpecializations" = true
WHERE "hasAllSpecializations" = false AND
      e."deletedAt" is null AND
      (SELECT count(*) FROM "OrganizationEmployeeSpecialization" WHERE "employee" = e."id" AND "OrganizationEmployeeSpecialization"."deletedAt" is null) = 0;

--
-- [CUSTOM] Create default PropertyScope for all organizations
--
INSERT INTO "PropertyScope" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "createdBy", "updatedBy", "deletedAt", "name", "organization", "hasAllProperties", "hasAllEmployees")
SELECT "id", "dv", "v", "sender", "createdAt", "updatedAt", "createdBy", "updatedBy", "deletedAt", 'pages.condo.settings.propertyScope.default.name', "id", true, true
FROM "Organization"
WHERE "deletedAt" is null;

--
-- [CUSTOM] Create AssigneeScope for already assigned as assignee users
--
INSERT INTO "AssigneeScope" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "user", "ticket")
SELECT gen_random_uuid(), "dv", "v", "sender", "createdAt", "updatedAt", "assignee", "id"
FROM "Ticket" as t
WHERE "assignee" is not null AND
      (SELECT count(*) FROM "AssigneeScope" as s WHERE s."user" = t.assignee AND s."ticket" = t."id" AND s."deletedAt" is null) = 0
;

--
-- [CUSTOM] Create AssigneeScope for already assigned as executor users
--
INSERT INTO "AssigneeScope" ("id", "dv", "v", "sender", "createdAt", "updatedAt", "user", "ticket")
SELECT gen_random_uuid(), "dv", "v", "sender", "createdAt", "updatedAt", "executor", "id"
FROM "Ticket" as t
WHERE "executor" is not null AND
      (SELECT count(*) FROM "AssigneeScope" as s WHERE s."user" = t."executor" AND s."ticket" = t."id" AND s."deletedAt" is null) = 0
;

--
-- [CUSTOM] Added Contractor role
--
INSERT INTO "OrganizationEmployeeRole" (
    id, dv, v, sender, organization, "createdAt", "updatedAt",
    name,
    description,
    "canManageTickets",
    "canManageTicketComments",
    "canShareTickets",
    "canBeAssignedAsExecutor",
    "canBeAssignedAsResponsible",
    "canInviteNewOrganizationEmployees",
    "canManageContacts",
    "canManageEmployees",
    "canManageRoles",
    "canManageIntegrations",
    "canManageProperties",
    "canManageContactRoles",
    "canManageMeters",
    "canManageMeterReadings",
    "canReadPayments",
    "canReadBillingReceipts",
    "canManageTicketPropertyHints",
    "canManagePropertyScopes",
    "canManageOrganization",
    "ticketVisibilityType"
)
SELECT
    gen_random_uuid(), 1, v, '{"dv": 1, "fingerprint": "migration"}'::json, org.id, now(), now(),
    'employee.role.Contractor.name',
    'employee.role.Contractor.description',
    true,
    true,
    true,
    true,
    true,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    false,
    'assigned'
FROM "Organization" AS org;

--
-- [CUSTOM] Added canManagePropertyScopes to administrator role
--
UPDATE "OrganizationEmployeeRole"
SET "canManagePropertyScopes" = true
WHERE "name" = 'employee.role.Administrator.name';

--
-- [CUSTOM] Set ticketVisibilityType to existing roles
--
UPDATE "OrganizationEmployeeRole" 
SET "ticketVisibilityType" = 'organization' 
WHERE "name" = 'employee.role.Administrator';
        
UPDATE "OrganizationEmployeeRole" 
SET "ticketVisibilityType" = 'property'
WHERE "name" = ANY(ARRAY['employee.role.Dispatcher.name', 'employee.role.Manager.name']);

UPDATE "OrganizationEmployeeRole" 
SET "ticketVisibilityType" = 'propertyAndSpecialization'
WHERE "name" = ANY(ARRAY['employee.role.Foreman.name', 'employee.role.Technician.name']);


--
-- [CUSTOM] Remove division from onboarding steps
--
UPDATE "OnBoarding"
SET "stepsTransitions" = (SELECT "stepsTransitions" - 'create.Division' #- '{create.OrganizationEmployee,0}' FROM "OnBoarding" limit 1)
WHERE "stepsTransitions" is not null;

--
-- [CUSTOM] Revert Statement Timeout to default amount - 10 secs
--
SET statement_timeout = '10s';

COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Delete model divisionhistoryrecord
--
CREATE TABLE IF NOT EXISTS "DivisionHistoryRecord" ("dv" integer NULL, "sender" jsonb NULL, "name" text NULL, "organization" uuid NULL, "responsible" uuid NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "createdBy" uuid NULL, "updatedBy" uuid NULL, "deletedAt" timestamp with time zone NULL, "newId" jsonb NULL, "history_date" timestamp with time zone NOT NULL, "history_action" varchar(50) NOT NULL, "history_id" uuid NOT NULL);
--
-- Delete model division
--
CREATE TABLE IF NOT EXISTS "Division" ("dv" integer NOT NULL, "sender" jsonb NOT NULL, "name" text NOT NULL, "id" uuid NOT NULL PRIMARY KEY, "v" integer NOT NULL, "createdAt" timestamp with time zone NULL, "updatedAt" timestamp with time zone NULL, "deletedAt" timestamp with time zone NULL, "newId" uuid NULL, "createdBy" uuid NULL, "organization" uuid NOT NULL, "responsible" uuid NOT NULL, "updatedBy" uuid NULL);
--
-- Delete model division_executors_many
--
CREATE TABLE IF NOT EXISTS "Division_executors_many" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "Division_left_id" uuid NOT NULL, "OrganizationEmployee_right_id" uuid NOT NULL);
--
-- Delete model division_properties_many
--
CREATE TABLE IF NOT EXISTS "Division_properties_many" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "Division_left_id" uuid NOT NULL, "Property_right_id" uuid NOT NULL);
--
-- Delete model organizationemployee_specializations_many
--
CREATE TABLE IF NOT EXISTS "OrganizationEmployee_specializations_many" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "OrganizationEmployee_left_id" uuid NOT NULL, "TicketCategoryClassifier_right_id" uuid NOT NULL);
--
-- Create constraint assignee_scope_unique_user_and_ticket on model assigneescope
--
DROP INDEX IF EXISTS "assignee_scope_unique_user_and_ticket";
--
-- Create constraint organization_employee_specialization_unique_employee_and_specialization on model organizationemployeespecialization
--
DROP INDEX IF EXISTS "organization_employee_specialization_unique_employee_and_specialization";
--
-- Create constraint property_scope_organization_employee_unique_propertyScope_and_employee on model propertyscopeorganizationemployee
--
DROP INDEX IF EXISTS "property_scope_organization_employee_unique_propertyScope_and_employee";
--
-- Create constraint property_scope_property_unique_propertyScope_and_property on model propertyscopeproperty
--
DROP INDEX IF EXISTS "property_scope_property_unique_propertyScope_and_property";
--
-- Add field updatedBy to organizationemployeespecialization
--
ALTER TABLE "OrganizationEmployeeSpecialization" DROP COLUMN "updatedBy" CASCADE;
--
-- Add field specialization to organizationemployeespecialization
--
ALTER TABLE "OrganizationEmployeeSpecialization" DROP COLUMN "specialization" CASCADE;
--
-- Add field employee to organizationemployeespecialization
--
ALTER TABLE "OrganizationEmployeeSpecialization" DROP COLUMN "employee" CASCADE;
--
-- Add field updatedBy to propertyscopeorganizationemployee
--
ALTER TABLE "PropertyScopeOrganizationEmployee" DROP COLUMN "updatedBy" CASCADE;
--
-- Add field propertyScope to propertyscopeorganizationemployee
--
ALTER TABLE "PropertyScopeOrganizationEmployee" DROP COLUMN "propertyScope" CASCADE;
--
-- Add field employee to propertyscopeorganizationemployee
--
ALTER TABLE "PropertyScopeOrganizationEmployee" DROP COLUMN "employee" CASCADE;
--
-- Add field ticketVisibilityType to organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" DROP COLUMN "ticketVisibilityType" CASCADE;
--
-- Add field canManagePropertyScopes to organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" DROP COLUMN "canManagePropertyScopes" CASCADE;
--
-- Add field ticketVisibilityType to organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" DROP COLUMN "ticketVisibilityType" CASCADE;
--
-- Add field canManagePropertyScopes to organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" DROP COLUMN "canManagePropertyScopes" CASCADE;
--
-- Add field hasAllSpecializations to organizationemployeehistoryrecord
--
ALTER TABLE "OrganizationEmployeeHistoryRecord" DROP COLUMN "hasAllSpecializations" CASCADE;
--
-- Add field hasAllSpecializations to organizationemployee
--
ALTER TABLE "OrganizationEmployee" DROP COLUMN "hasAllSpecializations" CASCADE;
--
-- Remove field canReadEntitiesOnlyInScopeOfDivision from organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" ADD COLUMN "canReadEntitiesOnlyInScopeOfDivision" boolean NULL;
--
-- Remove field canManageDivisions from organizationemployeerolehistoryrecord
--
ALTER TABLE "OrganizationEmployeeRoleHistoryRecord" ADD COLUMN "canManageDivisions" boolean NULL;
--
-- Remove field canReadEntitiesOnlyInScopeOfDivision from organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" ADD COLUMN "canReadEntitiesOnlyInScopeOfDivision" boolean NULL;
--
-- Remove field canManageDivisions from organizationemployeerole
--
ALTER TABLE "OrganizationEmployeeRole" ADD COLUMN "canManageDivisions" boolean NULL;
--
-- Create model propertyscopepropertyhistoryrecord
--
DROP TABLE "PropertyScopePropertyHistoryRecord" CASCADE;
--
-- Create model propertyscopeproperty
--
DROP TABLE "PropertyScopeProperty" CASCADE;
--
-- Create model propertyscopeorganizationemployeehistoryrecord
--
DROP TABLE "PropertyScopeOrganizationEmployeeHistoryRecord" CASCADE;
--
-- Create model propertyscopeorganizationemployee
--
DROP TABLE "PropertyScopeOrganizationEmployee" CASCADE;
--
-- Create model propertyscopehistoryrecord
--
DROP TABLE "PropertyScopeHistoryRecord" CASCADE;
--
-- Create model propertyscope
--
DROP TABLE "PropertyScope" CASCADE;
--
-- Create model organizationemployeespecializationhistoryrecord
--
DROP TABLE "OrganizationEmployeeSpecializationHistoryRecord" CASCADE;
--
-- Create model organizationemployeespecialization
--
DROP TABLE "OrganizationEmployeeSpecialization" CASCADE;
--
-- Create model assigneescopehistoryrecord
--
DROP TABLE "AssigneeScopeHistoryRecord" CASCADE;
--
-- Create model assigneescope
--
DROP TABLE "AssigneeScope" CASCADE;
CREATE INDEX IF NOT EXISTS "DivisionHistoryRecord_history_id_1aa20471" ON "DivisionHistoryRecord" ("history_id");
ALTER TABLE "Division" DROP CONSTRAINT IF EXISTS "Division_createdBy_1de184f0_fk_User_id";
ALTER TABLE "Division" ADD CONSTRAINT "Division_createdBy_1de184f0_fk_User_id" FOREIGN KEY ("createdBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Division" DROP CONSTRAINT IF EXISTS "Division_organization_12c63234_fk_Organization_id";
ALTER TABLE "Division" ADD CONSTRAINT "Division_organization_12c63234_fk_Organization_id" FOREIGN KEY ("organization") REFERENCES "Organization" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Division" DROP CONSTRAINT IF EXISTS "Division_responsible_eed68a68_fk_OrganizationEmployee_id";
ALTER TABLE "Division" ADD CONSTRAINT "Division_responsible_eed68a68_fk_OrganizationEmployee_id" FOREIGN KEY ("responsible") REFERENCES "OrganizationEmployee" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Division" DROP CONSTRAINT IF EXISTS "Division_updatedBy_6ebd4c94_fk_User_id";
ALTER TABLE "Division" ADD CONSTRAINT "Division_updatedBy_6ebd4c94_fk_User_id" FOREIGN KEY ("updatedBy") REFERENCES "User" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS "Division_createdAt_e7ed3456" ON "Division" ("createdAt");
CREATE INDEX IF NOT EXISTS "Division_updatedAt_2af80235" ON "Division" ("updatedAt");
CREATE INDEX IF NOT EXISTS "Division_deletedAt_a5c80e2a" ON "Division" ("deletedAt");
CREATE INDEX IF NOT EXISTS "Division_createdBy_1de184f0" ON "Division" ("createdBy");
CREATE INDEX IF NOT EXISTS "Division_organization_12c63234" ON "Division" ("organization");
CREATE INDEX IF NOT EXISTS "Division_responsible_eed68a68" ON "Division" ("responsible");
CREATE INDEX IF NOT EXISTS "Division_updatedBy_6ebd4c94" ON "Division" ("updatedBy");
ALTER TABLE "Division_executors_many" DROP CONSTRAINT IF EXISTS "Division_executors_m_Division_left_id_b50a2677_fk_Division_";
ALTER TABLE "Division_executors_many" ADD CONSTRAINT "Division_executors_m_Division_left_id_b50a2677_fk_Division_" FOREIGN KEY ("Division_left_id") REFERENCES "Division" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Division_executors_many" DROP CONSTRAINT IF EXISTS "Division_executors_m_OrganizationEmployee_67cbc5c6_fk_Organizat";
ALTER TABLE "Division_executors_many" ADD CONSTRAINT "Division_executors_m_OrganizationEmployee_67cbc5c6_fk_Organizat" FOREIGN KEY ("OrganizationEmployee_right_id") REFERENCES "OrganizationEmployee" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS "Division_executors_many_Division_left_id_b50a2677" ON "Division_executors_many" ("Division_left_id");
CREATE INDEX IF NOT EXISTS "Division_executors_many_OrganizationEmployee_right_id_67cbc5c6" ON "Division_executors_many" ("OrganizationEmployee_right_id");
ALTER TABLE "Division_properties_many" DROP CONSTRAINT IF EXISTS "Division_properties__Division_left_id_32c0aab5_fk_Division_";
ALTER TABLE "Division_properties_many" ADD CONSTRAINT "Division_properties__Division_left_id_32c0aab5_fk_Division_" FOREIGN KEY ("Division_left_id") REFERENCES "Division" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Division_properties_many" DROP CONSTRAINT IF EXISTS "Division_properties__Property_right_id_9e298cb9_fk_Property_";
ALTER TABLE "Division_properties_many" ADD CONSTRAINT "Division_properties__Property_right_id_9e298cb9_fk_Property_" FOREIGN KEY ("Property_right_id") REFERENCES "Property" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS "Division_properties_many_Division_left_id_32c0aab5" ON "Division_properties_many" ("Division_left_id");
CREATE INDEX IF NOT EXISTS "Division_properties_many_Property_right_id_9e298cb9" ON "Division_properties_many" ("Property_right_id");
ALTER TABLE "OrganizationEmployee_specializations_many" DROP CONSTRAINT IF EXISTS "OrganizationEmployee_OrganizationEmployee_cb80e37b_fk_Organizat";
ALTER TABLE "OrganizationEmployee_specializations_many" ADD CONSTRAINT "OrganizationEmployee_OrganizationEmployee_cb80e37b_fk_Organizat" FOREIGN KEY ("OrganizationEmployee_left_id") REFERENCES "OrganizationEmployee" ("id") DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "OrganizationEmployee_specializations_many" DROP CONSTRAINT IF EXISTS "OrganizationEmployee_TicketCategoryClassi_ee1eb7bd_fk_TicketCat";
ALTER TABLE "OrganizationEmployee_specializations_many" ADD CONSTRAINT "OrganizationEmployee_TicketCategoryClassi_ee1eb7bd_fk_TicketCat" FOREIGN KEY ("TicketCategoryClassifier_right_id") REFERENCES "TicketCategoryClassifier" ("id") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS "OrganizationEmployee_speci_OrganizationEmployee_left__cb80e37b" ON "OrganizationEmployee_specializations_many" ("OrganizationEmployee_left_id");
CREATE INDEX IF NOT EXISTS "OrganizationEmployee_speci_TicketCategoryClassifier_r_ee1eb7bd" ON "OrganizationEmployee_specializations_many" ("TicketCategoryClassifier_right_id");
COMMIT;

    `)
}