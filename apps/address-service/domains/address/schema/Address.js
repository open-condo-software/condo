/**
 * Generated by `createschema address.Address 'source:Text; address:Text; key:Text; meta:Json'`
 */

const { Text } = require('@keystonejs/fields')
const { Json } = require('@condo/keystone/fields')
const { GQLListSchema } = require('@condo/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted } = require('@condo/keystone/plugins')
const { dvAndSender } = require('@address-service/domains/common/schema/plugins/dvAndSender')
const access = require('@address-service/domains/address/access/Address')

const Address = new GQLListSchema('Address', {
    schemaDoc: 'Some specific building',
    fields: {

        source: {
            schemaDoc: 'The origin which used to detect the address',
            type: Text,
            isRequired: true,
        },

        address: {
            schemaDoc: 'The address itself in one string',
            type: Text,
            isRequired: true,
        },

        key: {
            schemaDoc: 'The unique key of the address',
            type: Text,
            isRequired: true,
            isUnique: true,
        },

        meta: {
            schemaDoc: 'Some additional data for building',
            type: Json,
            isRequired: true,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadAddresses,
        create: access.canManageAddresses,
        update: access.canManageAddresses,
        delete: false,
        auth: true,
    },
})

module.exports = {
    Address,
}
