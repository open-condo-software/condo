/**
 * Generated by `createschema address.AddressSource 'source:Text;'`
 */

const { Text, Relationship } = require('@keystonejs/fields')
const { GQLListSchema } = require('@open-condo/keystone/schema')
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const access = require('@address-service/domains/address/access/AddressSource')


const AddressSource = new GQLListSchema('AddressSource', {
    schemaDoc: 'The source for the address',
    labelResolver: ({ source }) => source,
    fields: {

        source: {
            schemaDoc: 'Source string itself',
            type: Text,
            isRequired: true,
        },

        address: {
            schemaDoc: 'The address which was found by the source address',
            isRequired: true,
            type: Relationship,
            ref: 'Address.sources',
            many: false,
        },

    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        read: access.canReadAddressSources,
        create: access.canManageAddressSources,
        update: access.canManageAddressSources,
        delete: false,
        auth: true,
    },
})

module.exports = {
    AddressSource,
}
