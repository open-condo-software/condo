/**
 * Generated by `createschema address.Address 'source:Text; address:Text; key:Text; meta:Json'`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */
const faker = require('faker')

const {
    generateGQLTestUtils,
} = require('@condo/codegen/generate.test.utils')

const { Address: AddressGQL } = require('@address-service/domains/address/gql')
/* AUTOGENERATE MARKER <IMPORT> */

const Address = generateGQLTestUtils(AddressGQL)
/* AUTOGENERATE MARKER <CONST> */

async function createTestAddress (client, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    const address = `${faker.address.city()}, ${faker.address.streetName(true)}`

    const attrs = {
        dv: 1,
        sender,
        source: address,
        address,
        key: faker.random.alpha(10),
        meta: {},
        ...extraAttrs,
    }
    const obj = await Address.create(client, attrs)
    return [obj, attrs]
}

async function updateTestAddress (client, id, extraAttrs = {}) {
    if (!client) throw new Error('no client')
    if (!id) throw new Error('no id')
    const sender = { dv: 1, fingerprint: faker.random.alphaNumeric(8) }

    const attrs = {
        dv: 1,
        sender,
        ...extraAttrs,
    }
    const obj = await Address.update(client, id, attrs)
    return [obj, attrs]
}

/* AUTOGENERATE MARKER <FACTORY> */

module.exports = {
    Address, createTestAddress, updateTestAddress,
/* AUTOGENERATE MARKER <EXPORTS> */
}
