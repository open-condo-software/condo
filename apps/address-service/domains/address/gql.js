/**
 * Generated by `createschema address.Address 'source:Text; address:Text; key:Text; meta:Json'`
 * In most cases you should not change it by hands
 * Please, don't remove `AUTOGENERATE MARKER`s
 */

const gql = require('graphql-tag')

const { generateGqlQueries } = require('@open-condo/codegen/generate.gql')

const COMMON_FIELDS = 'id dv sender { dv fingerprint } v deletedAt newId createdBy { id name } updatedBy { id name } createdAt updatedAt'

const ADDRESS_FIELDS = `{ address key meta overrides ${COMMON_FIELDS} }`
const Address = generateGqlQueries('Address', ADDRESS_FIELDS)

const ADDRESS_INJECTION_FIELDS = `{ country region area city cityDistrict settlement street house block keywords meta ${COMMON_FIELDS} }`
const AddressInjection = generateGqlQueries('AddressInjection', ADDRESS_INJECTION_FIELDS)

const ADDRESS_SOURCE_FIELDS = `{ source address { id key address } ${COMMON_FIELDS} }`
const AddressSource = generateGqlQueries('AddressSource', ADDRESS_SOURCE_FIELDS)

const ACTUALIZE_ADDRESSES_MUTATION = gql`
    mutation actualizeAddresses ($data: ActualizeAddressesInput!) {
        result: actualizeAddresses(data: $data) { successIds failures { addressId errorMessage } }
    }
`

/* AUTOGENERATE MARKER <CONST> */

module.exports = {
    Address,
    AddressInjection,
    AddressSource,
    ACTUALIZE_ADDRESSES_MUTATION,
/* AUTOGENERATE MARKER <EXPORTS> */
}
