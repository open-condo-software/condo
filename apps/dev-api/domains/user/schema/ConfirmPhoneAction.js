/**
 * Generated by `createschema user.ConfirmPhoneAction 'code:Text; isVerified:Checkbox; expiresAt:DateTimeUtc'`
 */
const userAccess = require('@open-condo/keystone/access')
const { historical, versioned, uuided, tracked, softDeleted, dvAndSender } = require('@open-condo/keystone/plugins')
const { GQLListSchema } = require('@open-condo/keystone/schema')

const { CONFIRM_ACTION_MAX_ATTEMPTS } = require('@dev-api/domains/user/constants')

// NOTE: Static false will remove field from Create/Update inputs, but we need it in serverSchema,
// so we're using false-resolving functions instead
const readonlyField = {
    read: true,
    create: () => false,
    update: () => false,
    delete: false,
}

const ConfirmPhoneAction = new GQLListSchema('ConfirmPhoneAction', {
    schemaDoc:
        'Internal schema used for user phone confirmation. ' +
        'It\'s impossible to work with it via API.',
    fields: {
        phone: {
            schemaDoc: 'Phone number to be verified',
            type: 'Text',
            isRequired: true,
            access: readonlyField,
        },
        code: {
            schemaDoc: 'Confirmation code. Generated inside one of action-creators, such as startConfirmPhoneAction',
            type: 'Text',
            isRequired: true,
            access: readonlyField,
        },
        isVerified: {
            schemaDoc:
                'Verifies number verification. ' +
                'If the number has been recently verified (before ConfirmPhoneAction expired), ' +
                'then knowing the ID ConfirmPhoneAction allows to register the user.',
            type: 'Checkbox',
            isRequired: true,
            defaultValue: false,
            access: readonlyField,
        },
        expiresAt: {
            schemaDoc:
                'Action expiration time. After the expiration time, ' +
                'it will not be possible to register a user using this action.',
            type: 'DateTimeUtc',
            isRequired: true,
        },
        attempts: {
            schemaDoc: 'Number of attempts to enter the code. ' +
                `When ${CONFIRM_ACTION_MAX_ATTEMPTS} attempts are reached, this action becomes invalid.`,
            type: 'Integer',
            isRequired: true,
            defaultValue: 0,
            access: readonlyField,
        },
    },
    plugins: [uuided(), versioned(), tracked(), softDeleted(), dvAndSender(), historical()],
    access: {
        // NOTE: needed only to read codes in tests without TEST_FAKE_CLIENT_MODE .env,
        // (and also modify actions to simulate real-life situations like expiration / deletion)
        read: userAccess.userIsAdmin,
        create: false,
        update: userAccess.userIsAdmin,
        delete: false,
        auth: false,
    },
})

module.exports = {
    ConfirmPhoneAction,
}
