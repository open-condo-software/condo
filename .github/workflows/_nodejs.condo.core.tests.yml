on:
  workflow_call:
    inputs:
      domain_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      runs-on:
        required: false
        type: string
        default: ubuntu-latest

jobs:
  tests:
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: install docker-compose plugin
        uses: open-condo-software/actions-setup-docker-compose@v1
        with:
          version: v2.28.1
      - name: install deps
        run: |
          sudo apt update && sudo apt install -y git

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.SBERCLOUD_CR_USERNAME }}
          password: ${{ secrets.SBERCLOUD_CR_PASSWORD }}

      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.SSH_DOCK_SERVER_PRIVATE_KEY }}
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: run dbs
        env:
          REGISTRY: ${{ secrets.DOCKER_REGISTRY }}/doma/utils/
        run: |
          docker-compose --profile dbs up -d

      - name: run tests
        run: |
          mkdir test_logs
          chmod -R a+rw ./test_logs
          docker run \
          -e PROMETHEUS_RW_SERVER_URL=$PROMETHEUS_RW_SERVER_URL \
          -e PROMETHEUS_USER=$PROMETHEUS_USER \
          -e PROMETHEUS_PASSWORD=$PROMETHEUS_PASSWORD \
          -e GH_REF_NAME=$GH_REF_NAME \
          -v ./test_logs:/app/test_logs --network="host" \
          ${{ secrets.DOCKER_REGISTRY }}/${{ inputs.image_name }} \
          bash -c "./bin/run_condo_domain_tests.sh -d ${{ inputs.domain_name }}"
        env:
          PROMETHEUS_RW_SERVER_URL: ${{ secrets.K6_PROMETHEUS_RW_SERVER_URL }}
          PROMETHEUS_USER: ${{ secrets.K6_PROMETHEUS_USER }}
          PROMETHEUS_PASSWORD: ${{ secrets.K6_PROMETHEUS_PASSWORD }}
          GH_REF_NAME: ${{ github.event.pull_request.head.ref || github.ref_name }}

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: './docker-logs'

      - name: Upload log artifact
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs-${{ inputs.domain_name }}-${{ env.GITHUB_RUN_ID }}-${{ env.GITHUB_RUN_NUMBER }}
          path: |
            ./test_logs/*
            *.log
            ./docker-logs
          retention-days: 2
