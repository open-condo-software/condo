on:
  workflow_call:
    inputs:
      domain_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      runs-on:
        required: false
        type: string
        default: ubuntu-latest

jobs:
  tests:
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl git 
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-compose-plugin

      - name: login to sbercloud registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.SBERCLOUD_CR_USERNAME }}
          password: ${{ secrets.SBERCLOUD_CR_PASSWORD }}

      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.SSH_DOCK_SERVER_PRIVATE_KEY }}

      - name: run dbs
        run: |
          cat << EOF > .env
          POSTGRES_IMAGE=${{ secrets.DOCKER_REGISTRY }}/doma/utils/postgres:13.2
          REDIS_IMAGE=${{ secrets.DOCKER_REGISTRY }}/doma/utils/redis:6.2
          EOF

          docker compose up -d redis postgresdb-master postgresdb-replica

      - name: run tests
        run: |
          mkdir test_logs
          chmod -R a+rw ./test_logs
          docker run -v ./test_logs:/app/test_logs --network="host" ${{ secrets.DOCKER_REGISTRY }}/${{ inputs.image_name }} bash -c "/app/run_condo_domain_tests.sh -d ${{ inputs.domain_name }}"

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: './docker-logs'

      - name: Upload log artifact
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs
          path: |
            ./test_logs/*
            *.log
            ./docker-logs
          retention-days: 2
