name: "⚠️💥💀⚡💢❗ [production] Deploy"

concurrency: deploy_backup_production.yaml

on:
  workflow_dispatch:
    branches:
      - '*'

jobs:
  converge:
    name: "[production] Deploy"
    runs-on: self-hosted
    env:
      WERF_SECRET_KEY: ${{ secrets.WERF_SECRET_KEY }}
      PULL_USER: ${{ secrets.PULL_USER }}
      PULL_PERSONAL_ACCESS_KEY: ${{ secrets.PULL_PERSONAL_ACCESS_KEY }}
    steps:
      - name: Check tag
        id: 'check-tag'
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs\/tags\/release-v[0-9]+\.[0-9]+\.[0-9]+$ ]]
          then
              echo "match=true" >> $GITHUB_OUTPUT
              exit 0
          else
              echo "Wrong tag name was provided. Tag should be created with pattern 'release-vXX.XX.XX'"
              exit 1
          fi
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.SBERCLOUD_CR_USERNAME }}
          password: ${{ secrets.SBERCLOUD_CR_PASSWORD }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.SSH_DOCK_SERVER_PRIVATE_KEY }}
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_DOCK_SERVER_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.SSH_DOCK_SERVER_KNOWN_HOSTS }}
          if_key_exists: replace
      - name: Converge
        uses: werf/actions/converge@v1.2
        with:
          channel: beta
          env: production
          kube-config-base64-data: ${{ secrets.KUBECONFIG_BASE64_PROD_BACKUP_CLUSTER }}
          github-token: ${{secrets.GITHUB_TOKEN}}
        env:
          WERF_SET_CI_CONDO_URL: "global.ci_condo_url=v1.doma.ai"
          WERF_SET_CI_CALLCENTER_URL: "global.ci_callcenter_url=cc.doma.ai"
          WERF_SET_CI_EPS_URL: "global.ci_eps_url=eps.doma.ai"
          WERF_SET_CI_RB_URL: "global.ci_rb_url=rb.doma.ai"
          WERF_SET_CI_INSURANCE_URL: "global.ci_insurance_url=insurance.doma.ai"
          WERF_SET_CI_REGISTRY_IMPORTER_URL: "global.ci_registry_importer_url=registry.doma.ai"
          WERF_SET_CI_MINIAPP_URL: "global.ci_miniapp_url=miniapp.doma.ai"
          WERF_SET_CI_PROPERTY_IMPORTER_URL: "global.ci_property_importer_url=property-importer.doma.ai"
          WERF_SET_CI_CLASSIFIERS_API_URL: "global.ci_classifiers_api_url=ml.doma.ai"
          WERF_SET_CI_ADDRESS_SERVICE_URL: "global.ci_address_service_url=address-service.doma.ai"
          WERF_SET_CI_TELEPHONY_URL: "global.ci_telephony_url=telephony.doma.ai"
          WERF_SET_CI_DEV_PORTAL_WEB_URL: "global.ci_dev_portal_web_url=developers.doma.ai"
          WERF_SET_CI_PASS_URL: "global.ci_pass_url=miniapp-pass.doma.ai"
          WERF_SET_CI_DEV_PORTAL_API_URL: "global.ci_dev_portal_api_url=developers-api.doma.ai"
          WERF_SET_CI_EMPLOYEE_BOT_URL: "global.ci_employee_bot_url=telegram-employee-bot.doma.ai"
          WERF_SET_CI_TICKET_IMPORTER_URL: "global.ci_ticket_importer_url=eds-integration.doma.ai"
          WERF_SET_CI_EXTERNAL_API_URL: "global.ci_external_api_url=bank-rest-api.doma.ai"
          WERF_SET_CI_ANNOUNCEMENT_GENERATOR_URL: "global.ci_announcement_url=announcement-generator.doma.ai"
          WERF_SET_CI_NEWS_GREENHOUSE_URL: "global.ci_news_greenhouse_url=news-sharing-greendom.doma.ai"
          WERF_SET_CI_METER_IMPORTER_URL: "global.ci_meter_importer_url=meters-billing-integration.doma.ai"
          WERF_SET_CI_NAMESPACE: "global.ci_namespace=production"
          WERF_NAMESPACE: "production"
          WERF_VIRTUAL_MERGE_FROM_COMMIT: "true"
          WERF_SET_CI_REF: "ci.werf.io/ref=${GITHUB_REF_NAME}"
          WERF_REPO: ${{ secrets.DOCKER_REGISTRY }}/condo/condo
          WERF_REPO_CONTAINER_REGISTRY: default
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_RELEASE: "production-${{ github.sha }}"
          SENTRY_ENVIRONMENT: "production"
