# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: RUN CONDO TESTS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]
        database: [ "postgresql://postgres:postgres@127.0.0.1/main" ]

    steps:
      - uses: actions/checkout@v2

      - name: Docker compose up databases
        run: |
          cp .env.example .env
          docker-compose up -d postgresdb redis

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: install packages
        run: |
          yarn
          pip3 install django
          pip3 install psycopg2-binary

      - name: test front build
        run: |
          set -x
          echo '# Build time .env config!' > .env
          echo 'COOKIE_SECRET=undefined' >> .env
          echo 'DATABASE_URL=undefined' >> .env
          echo 'WORKER_REDIS_URL=undefined' >> .env
          echo 'NODE_ENV=production' >> .env

          yarn workspace @app/condo build

      - name: run tests for ${{ matrix.database }}
        run: |
          set -x
          cp .env.example .env
          export NODE_ENV=test
          export NOTIFICATION__SEND_ALL_MESSAGES_TO_CONSOLE=true
          export WORKER_CONCURRENCY=50

          [[ $DATABASE_URL == postgresql* ]] && yarn workspace @app/condo migrate

          yarn workspace @app/condo dev &
          bash ./.github/workflows/waitForLocalhostApiReady.sh

          # check migrations
          yarn workspace @app/condo makemigrations --check

          yarn workspace @app/condo worker &
          sleep 3

          # And check background processes!
          [[ $(jobs | wc -l | tr -d ' ') != '2' ]] && exit 2
          sleep 3

          yarn workspace @app/condo test --silent --coverage --testTimeout=15000 --forceExit --detectOpenHandles

          # Note: we need to stop background worker! because packages tests use the same redis queue
          kill $(jobs -p) || echo 'background worker and dev server is already killed!'
          killall node || echo 'no node processes'

          yarn jest ./packages/@core.keystone

        env:
          DATABASE_URL: ${{ matrix.database }}
          NODE_ENV: development
          DISABLE_LOGGING: true
