diff --git a/dist/utils/schemaHash.js b/dist/utils/schemaHash.js
index bf1658921e500887fbe934b0081912594e02abd4..a6fe328694af63c23e8639507b4a203b016ac2c5 100644
--- a/dist/utils/schemaHash.js
+++ b/dist/utils/schemaHash.js
@@ -10,9 +10,12 @@ const utilities_1 = require("graphql/utilities");
 const fast_json_stable_stringify_1 = __importDefault(require("fast-json-stable-stringify"));
 const createSHA_1 = __importDefault(require("./createSHA"));
 function generateSchemaHash(schema) {
-    const introspectionQuery = utilities_1.getIntrospectionQuery();
-    const documentAST = language_1.parse(introspectionQuery);
-    const result = execution_1.execute(schema, documentAST);
+    const introspectionQuery = (0, utilities_1.getIntrospectionQuery)();
+    const document = (0, language_1.parse)(introspectionQuery);
+    const result = (0, execution_1.execute)({
+        schema,
+        document,
+    });
     if (result &&
         typeof result.then === 'function') {
         throw new Error([
@@ -25,8 +28,8 @@ function generateSchemaHash(schema) {
         throw new Error('Unable to generate server introspection document.');
     }
     const introspectionSchema = result.data.__schema;
-    const stringifiedSchema = fast_json_stable_stringify_1.default(introspectionSchema);
-    return createSHA_1.default('sha512')
+    const stringifiedSchema = (0, fast_json_stable_stringify_1.default)(introspectionSchema);
+    return (0, createSHA_1.default)('sha512')
         .update(stringifiedSchema)
         .digest('hex');
 }
diff --git a/package.json b/package.json
index ce4b59ba615b1af2dfbfc786b16115b47d9d5025..409db2944f092f1b26cab993d5903c84b6f85d4a 100644
--- a/package.json
+++ b/package.json
@@ -52,7 +52,7 @@
     "uuid": "^8.0.0"
   },
   "peerDependencies": {
-    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0"
+    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"
   },
   "gitHead": "91de501bb389c07ccfc5e684811153267b91e9ac"
 }
diff --git a/src/utils/schemaHash.ts b/src/utils/schemaHash.ts
index 7137b9dac6c66851ecc52a574eca61a35e065369..ac674bc615059c97d99a1219bdd0dc37fb40e128 100644
--- a/src/utils/schemaHash.ts
+++ b/src/utils/schemaHash.ts
@@ -1,6 +1,6 @@
 import { parse } from 'graphql/language';
 import { execute, ExecutionResult } from 'graphql/execution';
-import { getIntrospectionQuery, IntrospectionSchema } from 'graphql/utilities';
+import { getIntrospectionQuery, IntrospectionQuery } from 'graphql/utilities';
 import stableStringify from 'fast-json-stable-stringify';
 import { GraphQLSchema } from 'graphql/type';
 import createSHA from './createSHA';
@@ -8,8 +8,11 @@ import { SchemaHash } from "apollo-server-types";
 
 export function generateSchemaHash(schema: GraphQLSchema): SchemaHash {
   const introspectionQuery = getIntrospectionQuery();
-  const documentAST = parse(introspectionQuery);
-  const result = execute(schema, documentAST) as ExecutionResult;
+  const document = parse(introspectionQuery);
+  const result = execute({
+    schema,
+    document,
+  }) as ExecutionResult<IntrospectionQuery>;
 
   // If the execution of an introspection query results in a then-able, it
   // indicates that one or more of its resolvers is behaving in an asynchronous
@@ -32,7 +35,7 @@ export function generateSchemaHash(schema: GraphQLSchema): SchemaHash {
     throw new Error('Unable to generate server introspection document.');
   }
 
-  const introspectionSchema: IntrospectionSchema = result.data.__schema;
+  const introspectionSchema = result.data.__schema;
 
   // It's important that we perform a deterministic stringification here
   // since, depending on changes in the underlying `graphql-js` execution
