project: condo
configVersion: 1
---
image: condo
from: ubuntu:20.04

git:
- add: /
  to: /app
  stageDependencies:
    setup:
    - "apps/**"
    - "packages/**"
    - "bin/**/*"
  excludePaths:
  - .github
  - .helm
  - werf.yaml
  - werf-giterminism.yaml
  owner: app
  group: app

shell:
  beforeInstall:
  - "export DEBIAN_FRONTEND=noninteractive"
  - "groupadd -r app --gid=999"
  - "useradd --system --create-home --home /app --gid 999 --uid=999 --shell /bin/bash app"
  - "apt update -qq"
  - "apt install -qq -y curl"
  - "curl -fsL https://deb.nodesource.com/setup_14.x | bash"
  - "apt install -qq -y --no-install-recommends
      g++
      automake
      libtool
      make
      nodejs
      python3-pip"
  - "pip3 install django>=3.0.6 psycopg2-binary>=2.8.5"
  - "npm install --global yarn"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'WORKER_REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "yarn install"
  - "yarn workspace @app/condo build"
  - "yarn cache clean"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"
  - "rm -rf /app/.yarn"
  - "rm -rf /app/.cache"

docker:
  ENV:
    LANG: C.UTF-8
---
image: callcenter
from: ubuntu:20.04
git:
- add: /
  to: /app
  stageDependencies:
    setup:
    - apps/**
    - packages/**
    - bin/**
  excludePaths:
  - .github
  - .helm
  - werf.yaml
  - werf-giterminism.yaml
  owner: app
  group: app

shell:
  beforeInstall:
  - "export DEBIAN_FRONTEND=noninteractive"
  - "groupadd -r app --gid=999"
  - "useradd --system --create-home --home /app --gid 999 --uid=999 --shell /bin/bash app"
  - "apt update -qq"
  - "apt install -qq -y curl"
  - "curl -fsL https://deb.nodesource.com/setup_14.x | bash"
  - "apt install -qq -y --no-install-recommends
      g++
      automake
      libtool
      make
      nodejs
      python3-pip"
  - "pip3 install django>=3.0.6 psycopg2-binary>=2.8.5"
  - "npm install --global yarn"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'WORKER_REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "yarn install"
  - "yarn workspace @app/callcenter build"
  - "yarn cache clean"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"
  - "rm -rf /app/.yarn"
  - "rm -rf /app/.cache"

docker:
  ENV:
    LANG: C.UTF-8