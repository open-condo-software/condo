project: condo
configVersion: 1
---
image: base
from: ubuntu:20.04
shell:
  beforeInstall:
  - "export DEBIAN_FRONTEND=noninteractive"
  - "groupadd -r app --gid=999"
  - "useradd --system --create-home --home /app --gid 999 --uid=999 --shell /bin/bash app"
  - "apt update -qq"
  - "apt install -qq -y curl"
  - "curl -fsL https://deb.nodesource.com/setup_16.x | bash"
  - "apt install -qq -y --no-install-recommends
      g++
      automake
      libtool
      make
      nodejs
      python3-pip"
  - "pip3 install django>=3.0.6 psycopg2-binary>=2.8.5"
  - "npm install --global yarn"

docker:
  ENV:
    LANG: C.UTF-8
---
image: condo
fromImage: base
fromCacheVersion: "1"
git:
- add: /
  to: /app
  stageDependencies:
    install:
    - "yarn.lock"
    - "package.json"
    - "**/yarn.lock"
    - "**/package.json"
    setup:
    - "apps/**"
    - "packages/**"
    - "bin/**/*"
  excludePaths:
  - .github
  - .helm
  - werf.yaml
  - werf-giterminism.yaml
  owner: app
  group: app

shell:
  install:
  - "cd /app"
  - "npm i -g turbo"
  - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "echo 'FAKE_ADDRESS_SUGGESTIONS=true' >> /app/.env"
  - "yarn workspace @app/condo next telemetry disable"
  - "yarn workspace @app/condo build:deps"
  - "yarn workspace @app/condo build:static"
  - "yarn workspace @app/condo build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: callcenter
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "echo 'SERVER_URL=http://build.example.com' >> /app/.env"
  - "yarn workspace @app/callcenter next telemetry disable"
  - "yarn workspace @app/callcenter build:deps"
  - "yarn workspace @app/callcenter build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: eps
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/eps next telemetry disable"
  - "yarn workspace @app/eps build:deps"
  - "yarn workspace @app/eps build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: rb
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/condorb next telemetry disable"
  - "yarn workspace @app/condorb build:deps"
  - "yarn workspace @app/condorb build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: insurance
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/insurance next telemetry disable"
  - "yarn workspace @app/insurance build:deps"
  - "yarn workspace @app/insurance build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: registryma
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - >
    echo 'OIDC_CONDO_CLIENT_CONFIG={"serverUrl":"https://test.doma.ai","clientId":"test","clientSecret":"test"}' >> /app/.env
  - "yarn workspace @app/registry next telemetry disable"
  - "yarn workspace @app/registry build:deps"
  - "yarn workspace @app/registry build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: miniapp
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/miniapp next telemetry disable"
  - "yarn workspace @app/miniapp build:deps"
  - "yarn workspace @app/miniapp build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: postgresreview
from: postgres:13.2
---
image: redisreview
from: redis:6.2
---
image: preparepostgresreview
from: postgres:13.2
shell:
  install:
  - "apt update -qq"
  - "apt install -qq -y wget"
  - "wget https://obs-community-intl.obs.ap-southeast-1.myhuaweicloud.com/obsutil/current/obsutil_linux_amd64.tar.gz"
  - "mkdir obsutil_linux_amd64 && tar -xf obsutil_linux_amd64.tar.gz -C obsutil_linux_amd64 --strip-components 1"
  - "cd obsutil_linux_amd64"
  - "chmod 755 obsutil"

docker:
  ENV:
    LANG: C.UTF-8
---
image: property_importer
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/property-importer next telemetry disable"
  - "yarn workspace @app/property-importer build:deps"
  - "yarn workspace @app/property-importer build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

---
image: python-base
from: python:3.9-slim
shell:
  beforeInstall:
  - "export DEBIAN_FRONTEND=noninteractive"
  - "groupadd -r app --gid=999"
  - "useradd --system --create-home --home /app --gid 999 --uid=999 --shell /bin/bash app"
  - "apt update -qq"
  - "apt install -qq -y --no-install-recommends
      python3-pip
      python3-dev"

docker:
  ENV:
    LANG: C.UTF-8
---
image: classifier
fromImage: python-base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
  - "cd /app/apps/classifiers-api"
  - "pip install -r requirements.txt"

docker:
  ENV:
    LANG: C.UTF-8
---
image: addressservice
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/address-service next telemetry disable"
  - "yarn workspace @app/address-service build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"


docker:
  ENV:
    LANG: C.UTF-8
---
image: telephony
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/telephony next telemetry disable"
  - "yarn workspace @app/telephony build:deps"
  - "yarn workspace @app/telephony build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: devportal
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
    - "cd /app"
    #NOTE: Next.js is picking .env only from package-level envs during build time
    - "echo '# Build time .env config!' >> /app/apps/dev-portal/.env"
    - "echo 'NODE_ENV=production' >> /app/apps/dev-portal/.env"
    - "yarn workspace @app/dev-portal next telemetry disable"
    - "yarn workspace @app/dev-portal build:deps"
    - "yarn workspace @app/dev-portal build"
    - "rm -rf /app/apps/dev-portal/.env"
    - "rm -rf /app/.config"


docker:
  ENV:
    LANG: C.UTF-8
---
image: passapp
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/pass next telemetry disable"
  - "yarn workspace @app/pass build:deps"
  - "yarn workspace @app/pass build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: documents
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/documents-next next telemetry disable"
  - "yarn workspace @app/documents-next build:deps"
  - "yarn workspace @app/documents-next build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: devportalapi
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "npm i -g turbo"
    - "yarn install --immutable"
  setup:
  - "cd /app"
  - "echo '# Build time .env config!' >> /app/.env"
  - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
  - "echo 'DATABASE_URL=undefined' >> /app/.env"
  - "echo 'REDIS_URL=undefined' >> /app/.env"
  - "echo 'NODE_ENV=production' >> /app/.env"
  - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
  - "yarn workspace @app/dev-api build:deps"
  - "yarn workspace @app/dev-api build"
  - "rm -rf /app/.env"
  - "rm -rf /app/.config"

docker:
  ENV:
    LANG: C.UTF-8
---
image: telegramemployeebot
fromImage: base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    stageDependencies:
      install:
        - "yarn.lock"
        - "package.json"
        - "**/yarn.lock"
        - "**/package.json"
      setup:
        - "apps/**"
        - "packages/**"
        - "bin/**/*"
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
    - "cd /app"
    - "yarn install --immutable"
  setup:
    - "cd /app"
    - "echo '# Build time .env config!' >> /app/.env"
    - "echo 'COOKIE_SECRET=undefined' >> /app/.env"
    - "echo 'DATABASE_URL=undefined' >> /app/.env"
    - "echo 'REDIS_URL=undefined' >> /app/.env"
    - "echo 'NODE_ENV=production' >> /app/.env"
    - "echo 'FILE_FIELD_ADAPTER=local' >> /app/.env"
    - "yarn workspace @app/telegram-employee-bot build"
    - "rm -rf /app/.env"
    - "rm -rf /app/.config"
