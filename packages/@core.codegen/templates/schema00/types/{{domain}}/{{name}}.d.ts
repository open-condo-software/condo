{%- macro fieldtype(field) %}
{%- if field[1] === 'Integer' or field[1] === 'Decimal' %}Number{% else %}String{% endif %}
{%- endmacro %}
/**
 * Generated by `{{ command }}`
 * GQL -> IModel --toUIState=> IModelUIState
 * GQL <- IModelInput <=toGQLInput-- UIState
 */

import { ISenderField, IRelationshipField, IConnectData } from "../_common"

export interface I{{ name }}GQLItem {
    id: String | Number
    dv: Number
    sender: ISenderField
    v: Number
    createdBy: IRelationshipField
    updatedBy: IRelationshipField
    createdAt: String
    updatedAt: String
    deletedAt: String
    newId: String
{%- for field in signature %}
    {{ field[0] }}: {% if field[1] === 'Relationship' %}I{{ field[2] }}{% else %}{{ fieldtype(field) }}{% endif %}
{%- endfor %}
}

export interface I{{ name }}UIState {
    id: String | Number
    deletedAt: String
{%- for field in signature %}
    {{ field[0] }}: {% if field[1] === 'Relationship' %}I{{ field[2] }}UIState{% else %}{{ fieldtype(field) }}{% endif %}
{%- endfor %}
}
export interface I{{ name }}UIFormState {
    id?: String | Number
    deletedAt?: String
{%- for field in signature %}
    {{ field[0].replace('?', '') }}?: {% if field[1] === 'Relationship' %}String | Number{% else %}{{ fieldtype(field) }}{% endif %}
{%- endfor %}
}

export interface I{{ name }}GQLInput {
    dv: Number
    sender: ISenderField
    deletedAt?: String
{%- for field in signature %}
    {{ field[0].replace('?', '') }}?: {% if field[1] === 'Relationship' %}IConnectData{% else %}{{ fieldtype(field) }}{% endif %}
{%- endfor %}
}
