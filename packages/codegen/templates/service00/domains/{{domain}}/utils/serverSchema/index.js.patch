/* AUTOGENERATE MARKER <IMPORT> */
const { {{ convertSnakeCaseToUpperCase(name.replace("Service", "")) }}_MUTATION } = require('@{{app}}/domains/{{ domain }}/gql')
/**/

/* AUTOGENERATE MARKER <CONST> */
async function {{ convertFirstLetterToLower(name.replace("Service", "")) }} (context, data) {
    if (!context) throw new Error('no context')
    if (!data) throw new Error('no data')
    if (!data.sender) throw new Error('no data.sender')
    // TODO(codegen): write {{ convertFirstLetterToLower(name.replace("Service", "")) }} serverSchema guards

    return await execGqlWithoutAccess(context, {
        query: {{ convertSnakeCaseToUpperCase(name.replace("Service", "")) }}_MUTATION,
        variables: { data: { dv: 1, ...data } },
        errorMessage: '[error] Unable to {{ convertFirstLetterToLower(name.replace("Service", "")) }}',
        dataPath: 'obj',
    })
}

/**/

/* AUTOGENERATE MARKER <EXPORTS> */
    {{ convertFirstLetterToLower(name.replace("Service", "")) }},
/**/
