/**
 * Generated by `{{ command }}`
 */

const { makeLoggedInAdminClient, makeClient, UUID_RE, DATETIME_RE, waitFor, expectValuesOfCommonFields } = require('@open-condo/keystone/test.utils')

const {
    expectToThrowAuthenticationErrorToObj, expectToThrowAuthenticationErrorToObjects,
    expectToThrowAccessDeniedErrorToObj, expectToThrowAccessDeniedErrorToObjects,
} = require('@open-condo/keystone/test.utils')

const { makeClientWithNewRegisteredAndLoggedInUser, makeClientWithSupportUser } = require('@{{app}}/domains/user/utils/testSchema')

const { {{name}}, createTest{{name}}, updateTest{{name}} } = require('@{{app}}/domains/{{domain}}/utils/testSchema')

describe('{{name}}', () => {
    beforeAll(async () => {
        // TODO(codegen): Generate main tests actors here
    })
    afterAll(() => {
        if (global.gc) {
            global.gc()
        }
    })
    describe('CRUD tests', () => {
        describe('Create', () => {
            // TODO(codegen): Write your create access tests here
        })
        describe('Update', () => {
            beforeAll(async () => {
                // TODO(codegen): Generate an entity to update
            })
            // TODO(codegen): Write your update access tests here
        })
        describe('Read', () => {
            beforeAll(async () => {
                // TODO(codegen): Generate an entity/entities to read
            })
            // TODO(codegen): Write your read access tests here
        })
        describe('Soft-delete', () => {
            beforeEach(async () => {
                // TODO(codegen): Generate an entity to be soft-deleted
            })
            // TODO(codegen): Write your soft-delete tests here
        })
        test('Hard-delete', async () => {
            // TODO(codegen): try to hard delete from all actors here
        })
    })
    describe('Validation tests', () => {
        // TODO(codegen): Put your validateInput, resolveInput, tasks side-effects tests here
    })
    describe('Constraints', () => {
        // TODO(codegen): Put your constraints tests here
    })
    describe('Real-life cases', () => {
        // TODO(codegen): Place for specific complex behaviours / flows, which you want to fix
    })
    describe('notifications', () => {
        // TODO(codegen): write notifications tests if you have any sendMessage calls or drop this block!
    })
})
